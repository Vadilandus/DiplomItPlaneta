<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intermech.Interfaces.Client</name>
    </assembly>
    <members>
        <member name="T:Intermech.Interfaces.Client.AdditionalDataAuthFilesSettings">
            <summary>
            Настройки сервиса генерации дополнительной информации
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AdditionalDataAuthFilesSettings.AdditionalDataScriptObjectId">
            <summary>
            Идентификатор объекта скрипта генерации дополнительной информации
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AdditionalDataAuthFilesSettings.EnableAdditionalData">
            <summary>
            Вызов скрипта генерации 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AdditionalDataAuthFilesSettings.EnabledAdditionalData">
            <summary>
            Включен и настроен скрипт генерации дополнительной информации
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AdditionalDataAuthFilesSettings.AdditionalDataInsertMode">
            <summary>
            Режим вставки дополнительной информации
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AdditionalDataAuthFilesSettings.LoadSetting">
            <summary>
            Загрузить настройки
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.AdditionalDataInsertMode">
            <summary>
            Режим вставки дополнительной информации
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AdditionalDataInsertMode.Before">
            <summary>
            Вставить перед
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AdditionalDataInsertMode.After">
            <summary>
            Вставить после
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IAdditionalDataAuthFilesService">
            <summary>
            Сервис дополнительных данных в аутентичном файле
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IAdditionalDataAuthFilesService.Settings">
            <summary>
            Настройки сервиса
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAdditionalDataAuthFilesService.InsertAdditionalData(Intermech.Interfaces.IUserSession,System.Int64,System.Int32)">
            <summary>
            Сгенерировать и добавить информацию в аутентичный файл объекта (аутентичный файл уже должен быть сформирован в объекте)
            </summary>
            <param name="session">Пользовательская сессия</param>
            <param name="objectId">Идентификатор версии объекта, аутентичный файл которого необходимо дополнить</param>
            <param name="attrAuthFileId">Идентификатор атрибута, содержащего аутентичный файл</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.AppCommandLineArguments.Arguments">
            <summary>
            Возвращает список аргументов приложения (в том виде, в котором они получены)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientCacheReloadedEventArgs">
            <summary>
            Аргументы для события перезагрузки клиентского кэша.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheReloadedEventArgs.#ctor(Intermech.Interfaces.IUserSession)">
            <summary>
            Создает объект.
            </summary>
            <param name="userSession">Пользовательская сессия сервера приложений</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientCacheReloadedEventArgs.UserSession">
            <summary>
            Пользовательская сессия сервера приложений
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientCacheNinjectModule">
            <summary>
            Модуль привязок для IOC-контейнера, обеспечивающий создание сервиса <see cref="T:Intermech.Interfaces.Client.IClientCache"/>
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.AttributesLockArgs">
            <summary>
            Реализует аргументы события, используемого для построения списка блокируемых атрибутов.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AttributesLockArgs.#ctor(Intermech.AttributableElements,System.Int64,System.Int32)">
            <summary>
            Создает объект.
            </summary>
            <param name="elementKind">Указывает, к чему относятся атрибуты - к объекту или связи</param>
            <param name="elementId">Идентификатор версии объекта или связи</param>
            <param name="elementType">Идентификатор типа объекта или типа связи</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributesLockArgs.ElementKind">
            <summary>
            Указывает, к чему относятся атрибуты - к объекту или связи.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributesLockArgs.ElementId">
            <summary>
            Возвращает идентификатор версии объекта или связи.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributesLockArgs.ElementType">
            <summary>
            Возвращает идентификатор типа объекта или типа связи.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributesLockArgs.LockedAttributes">
            <summary>
            Возвращает коллекцию идентификаторов атрибутов, заблокированных от изменения.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributesLockArgs.UnlockedAttributes">
            <summary>
            Возвращает коллекцию идентификаторов атрибутов, разблокированных для изменения.
            Значение этого свойства имеет приоритет перед <see cref="P:Intermech.Interfaces.Client.AttributesLockArgs.LockedAttributes"/> при построении окончательного блокируемых атрибутов.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributesLockArgs.Tags">
            <summary>
            Возвращает коллекцию тегов.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AuthFilesHolder.ParamAlgorithm">
            <summary>
            Параметр алгоритма расчета контрольных сумм для аутентичных файлов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AuthFilesHolder.DefaultAlgorithm">
            <summary>
            Алгоритм расчета контрольных сумм для аутентичных файлов по умолчанию
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AuthFilesHolder.ParamEnableChecksumAlternatives">
            <summary>
            Разрешать расчет контрольных сумм по алгоритмам, отличающимся от алгоритма по умолчанию ParamAlgorithm
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AuthFilesHolder.DefaultEnableChecksumAlternatives">
            <summary>
            Разрешение по умолчанию
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AuthFilesHolder.AdditionalDataScriptId">
            <summary>
            Скрипт генерации дополнительных данных для аутентичного файла.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AuthFilesHolder.AdditionalDataEnable">
            <summary>
            Включить формирование дополнительных данных для аутентичного файла
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Intermech.Interfaces.Client.AuthFilesHolder.AdditionalDataInsertMode" -->
        <member name="M:Intermech.Interfaces.Client.AuthFilesHolder.GetAddObjectVersionToAuthFilenamesWhenSave">
            <summary>
            Читаем настройку AddObjectVersionToAuthFilenamesWhenSave - добавлять ли к именам аутентичных файлов версии объектов при сохранении на диск
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.AuthFilesHolder.GetSuffixAttributeForAuthFilenamesWhenSave(Intermech.Interfaces.IMSAttributeType@)">
            <summary>
            Читаем настройку ParamAuthFilesSuffixAttributeGuid - атрибут суффикса для аутентичных файлов, сохраняемых на диск
            </summary>
            <param name="imsAT"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.AuthFilesHolder.GetAuthFilenamesWithVersion(System.String,System.Int32)">
            <summary>
            из c:\000\file.pdf сделает c:\000\file[versionId].pdf
            </summary>
            <param name="fname"></param>
            <param name="versionId"></param>
            <returns></returns>
        </member>
        <member name="E:Intermech.Interfaces.Client.IAuthFilesService.AuthFileAssignEvent">
            <summary>
            Событие назначения аутентичных файлов на версию объекта 
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IAuthFilesService.AuthFileNeedGenerate">
            <summary>
            Событие определения необходимости назначения аутентичных файлов на версию объекта 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAuthFilesService.FireEventAuthFileAssign(Intermech.Interfaces.Client.AuthFileAssignEventArgs)">
            <summary>
            Запустить событие AuthFileAssignEvent
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAuthFilesService.FireAuthFileNeedGenerate(Intermech.Interfaces.Client.AuthFileNeedGenerateEventArgs)">
            <summary>
            Запустить событие AuthFileNeedGenerate
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAuthFilesService.CheckAuthFiles(Intermech.Navigator.Interfaces.ISelectedItems,System.Boolean,System.Boolean)">
            <summary>
            Проверить аутентичные файлы и при необходимости перегенерировать
            </summary>
            <param name="items">Список объектов</param>
            <param name="askForNotInternals">Задавать ли вопросы в режиме обновления, надо ли обновлять аутентичные файлы для не внутренних документов IPS. Вопросы не задаются для внутренних документов в любом режиме, а также для не внутренних в режиме создания)</param>
            <param name="updateMode">Режим: false: перегенерировать в любом случае (режим создания), или true: проверять необходимость создания файлов (режим обновления)</param>
            <returns>true - проверка выполнена; false - результаты проверки не гарантируют актуальности аутентичных файлов (напр, пользователь не подтвердил необходимость перегенерации аутентичных файлов)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAuthFilesService.SaveAuthFiles(Intermech.Navigator.Interfaces.ISelectedItems,System.String,Intermech.Interfaces.Client.AuthFileSaveNameResolveHandler)">
            <summary>
            Сохранить аутентичные файлы в папку. 
            Проверка на актуальность не производится. 
            Для проверки на актуальность вызывать CheckAuthFiles
            </summary>
            <param name="items">Список объектов</param>
            <param name="folderPath">Папка для сохранения, должна существовать</param>
            <param name="onAuthFileReplace">При null возможны коллизии, если папка была не пуста</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intermech.Interfaces.Client.IAuthFilesService.GetPossibleAuthFileTypes" -->
        <member name="M:Intermech.Interfaces.Client.IAuthFilesService.AssignFileWithFilenames(System.Int64,System.String[],Intermech.Interfaces.Client.AuthFileReplaceEventHandler)">
            <summary>
            Назначить в версию объекта аутентичные файлы явно
            </summary>
            <param name="objectId">идент. версии объекта</param>
            <param name="authFiles">список аутентичных файлов для назначения</param>
            <param name="onAuthFileReplace">событие при необходимости запроса на перезапись, при null перезаписывать</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileNeedGenerateEventArgs.NeedGenerate">
            <summary>
            Требуется перегенерация документа, если null то подписчик не знает и это решает сервис
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AuthFileNeedGenerateEventArgs.#ctor(System.Int32,System.Int64)">
            <summary>
            
            </summary>
            <param name="objectType">Тип объекта</param>
            <param name="objectId">Версия объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.AuthFileNeedGenerateEventArgs.#ctor(System.Int32,System.Int64,System.Boolean)">
            <summary>
            
            </summary>
            <param name="objectType">Тип объекта</param>
            <param name="objectId">Версия объекта</param>
            <param name="pdfOnly">Формировать аутентичные файлы только в формате pdf</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileAssignEventArgs.IsHandled">
            <summary>
            Если true, то уже обработан другими обработчиками
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileAssignEventArgs.ObjectType">
            <summary>
            Тип объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileAssignEventArgs.ObjectId">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileAssignEventArgs.PDFOnly">
            <summary>
            Формировать аутентичные файлы только в формате pdf.
            Если можно создать аутентичный файл и PDFOnly = true, но создание в формате PDF не поддерживается, то isHandled = false 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileAssignEventArgs.InternalDocument">
            <summary>
            Внутренний документ IPS
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AuthFileAssignEventArgs.#ctor(System.Int32,System.Int64,System.String)">
            <summary>
            
            </summary>
            <param name="objectType">Тип объекта</param>
            <param name="objectId">Версия объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.AuthFileAssignEventArgs.#ctor(System.Int32,System.Int64,System.Boolean)">
            <summary>
            
            </summary>
            <param name="objectType">Тип объекта</param>
            <param name="objectId">Версия объекта</param>
            <param name="pdfOnly">Формировать аутентичные файлы только в формате pdf</param>
        </member>
        <member name="F:Intermech.Interfaces.Client.AuthFileReplaceEventArgs.WhatDo">
            <summary>
            Yes = DialogResult.Yes
            YesForAll = DialogResult.OK
            No = DialogResult.No
            Cancel = DialogResult.Cancel
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.AuthFileReplaceEventHandler">
            <summary>
            обработчик запроса на перезапись файлов при пакетной обработке
            </summary>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileSaveNameResolveArgs.FolderName">
            <summary>
            Папка сохранения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileSaveNameResolveArgs.FileName">
            <summary>
            Конфликтующее имя файла, требует изменения 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileSaveNameResolveArgs.ObjectId">
            <summary>
            идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileSaveNameResolveArgs.ObjectCaption">
            <summary>
            наименование объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileSaveNameResolveArgs.BlobId">
            <summary>
            идентификатор блоба в атрибуте Файл
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AuthFileSaveNameResolveArgs.AutoAssign">
            <summary>
            При изменении в true - отказ от обработки конфликта, переименованием занимается вызывающая служба - самостоятельно
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AuthFileSaveNameResolveArgs.#ctor(System.String,System.String,System.Int64,System.String,System.Int64)">
            <summary>
            
            </summary>
            <param name="fileNameToResolve">конфликтное имя файла</param>
            <param name="folderName">папка сохранения</param>
            <param name="objectId">идентификатор версии объекта</param>
            <param name="objectCaption">наименование объекта</param>
            <param name="blobId">идентификатор блоба в атрибуте Файл</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.AuthFileSaveNameResolveHandler">
            <summary>
            обработчик запроса на разрешение конфликта имен файлов
            </summary>
            <param name="sender"></param>
            <param name="eventArgs"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientMetadataCacheNinjectModule">
            <summary>
            Модуль привязок для IOC-контейнера, обеспечивающий создание сервиса <see cref="T:Intermech.Interfaces.Client.IClientMetadataCache"/>
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientSessionContext">
            <summary>
            Контекст выполнения для <see cref="T:Intermech.Interfaces.Client.ClientSession"/>. Он помогает получить доступ к необходимым общим объектам и сервисам клиента без 
            необходимости напрямую обращаться к контейнеру сервисов.
            </summary>
            <remarks>
            Использование данного класса позволяет явно контролировать, какие сервисы доступны в <see cref="T:Intermech.Interfaces.Client.ClientSession"/>. Это важно при
            разработке клиентов IPS на базе разных технлогий - Winform, Web и др.
            Реализация является thread safe.
            </remarks>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSessionContext.ClientCache">
            <summary>
            Сервис клиентского кэша.
            Значение должно быть задано.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSessionContext.CustomServicesSpeedupService">
            <summary>
            Ускоряющий клиентский сервис для получения сервисов сервера приложений.
            Значение может быть не задано и равно null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSessionContext.DBConfigurationsSpeedupService">
            <summary>
            Ускоряющий клиентский сервис для работы с конфигурацией текущего пользователя.
            Значение может быть не задано и равно null.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IDBConfigurationsSpeedupService">
            <summary>
            Интерфейс клиентского сервиса, ускоряющего работу с конфигурацией пользователя.
            Реализация должна быть thread safe.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientSessionSpeedupServicesNinjectModule">
            <summary>
            Модуль привязок для IOC-контейнера, обеспечивающий создание ускоряющий клиентских сервисов.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DocumentLocalFileEventArgs">
            <summary>
            Аргументы события для локально извлеченных файлов документов IPS.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DocumentLocalFileEventArgs.#ctor(System.Int64,System.Int32,System.String,System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="objectId">Идентификатор версии объекта IPS</param>
            <param name="objectTypeId">Идентификатор типа объекта IPS</param>
            <param name="fileName">Имя файла, как оно записано в файловом атрибуте объекта IPS</param>
            <param name="filePath">Абсолютный путь к файлу документа на локальном диске</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DocumentLocalFileEventArgs.ObjectId">
            <summary>
            Идентификатор версии объекта IPS
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DocumentLocalFileEventArgs.ObjectTypeId">
            <summary>
            Идентификатор типа объекта IPS
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DocumentLocalFileEventArgs.FileName">
            <summary>
            Имя файла, как оно записано в файловом атрибуте объекта IPS
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DocumentLocalFileEventArgs.FilePath">
            <summary>
            Абсолютный путь к файлу документа на локальном диске
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IImRtfViewService">
            <summary>интерфейс для просмотра формул</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IImRtfViewService.CreateFormulaImages(System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Collections.Generic.Dictionary{System.String,System.Drawing.Image}@,System.Collections.Generic.Dictionary{System.String,System.Drawing.SizeF}@)">
            <summary>получить коллекцию формула -- изображение формулы</summary>
            <param name="font">используемый фонт</param>
            <param name="textColor">цвет формулы</param>
            <param name="backgroundColor">цвет подложки</param>
            <param name="dictImage">коллекция формула--> изображение формулы </param>
            <param name="dictImageSize">коллекция формула--> реальный размер изображения</param>
            <returns>есть ли формулы</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.FileExtensionsInfo">
            <summary>
            Класс для описания  настроек просмотра файлов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.Style">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.Enabled">
            <summary>
            использовать для просмотра
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.Name">
            <summary>
            наименование
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.ProgId">
            <summary>
            Программный идентификатор ProgID
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.Extensions">
            <summary>
            Маски для расширений файлов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.IsAllUser">
            <summary>
            использовать для всех пользователей
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.CommandLine">
            <summary>
            строка комманды просмотра
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.IsUnknown">
            <summary>
            неизвестен
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.ShellCommandLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.ID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileExtensionsInfo.NotPersist">
            <summary>
            Признак указывающий, что данная настройка не пишется в базу
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.#ctor(System.Boolean,System.String,System.String,System.String,System.Guid)">
            <summary>Заполнить поля класса</summary>
            <param name="used">использовать для просмотра</param>
            <param name="name">наименование</param>
            <param name="progID">Программный идентификатор ProgID</param>
            <param name="extensions">Маски для расширений файлов</param>
            <param name="id"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.#ctor(System.Boolean,System.String,System.String,System.String,System.String)">
            <summary>Заполнить поля класса</summary>
            <param name="used">использовать для просмотра</param>
            <param name="name">наименование</param>
            <param name="progID">Программный идентификатор ProgID</param>
            <param name="extensions">Маски для расширений файлов</param>
            <param name="commandline"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.#ctor(System.String)">
            <summary>Заполнить поля класса на основе строки из настроек</summary>
            <param name="settingsString">строка из настроек</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.CheckStyle">
            <summary>
            Проверка стиля
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.CheckStyleHandler">
            <summary>
            проверка стиля на предпросмотр
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.CheckStyleCommandLine">
            <summary>проверка стиля </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.CheckStyleActiveX">
            <summary>
            проверка стиля на ActiveX
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.WildcardToRegex(System.String)">
            <summary>Converts a wildcard to a regex.</summary>
            <param name="pattern">The wildcard pattern to convert.</param>
            <returns>A regex equivalent of the given wildcard.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileExtensionsInfo.IsMatch(System.String)">
            <summary>найти соответствие маске расширений</summary>
            <param name="input">расширение файла</param>
            <returns>true - расширение файла соответствует маске</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.FileExtensionsStyle">
            <summary>
            Имена стилей просмотрщиков
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileExtensionsStyle.NativeHandler">
            <summary>
            
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileExtensionsStyle.InternalHandler">
            <summary>
            
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileExtensionsStyle.InternalExtractView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileExtensionsStyle.PreviewHandler">
            <summary>
            
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileExtensionsStyle.ExtractImageHandler">
            <summary>
            
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileExtensionsStyle.PrevThumbnailHandler">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ColorFileTypesAttribute.Color">
            <summary>цвет имени файла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ColorFileTypesAttribute.Obsolete">
            <summary>цвет имени устаревшего файла</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IClientMetadataCache">
            <summary>
            Интерфейс для получения классов с информацией о метаданных на клиенте
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetObjectType(System.Int32)">
            <summary>
            Возвращает интерфейс с информацией о типе объектов
            </summary>
            <param name="objectTypeID">Ид. типа объектов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetAttributeType(System.Int32)">
            <summary>
            Возвращает интерфейс с информацией об атрибуте
            </summary>
            <param name="attributeTypeID">Ид. атрибута</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetRelationType(System.Int32)">
            <summary>
            Возвращает интерфейс с информацией о типе связей
            </summary>
            <param name="relationTypeID">Ид. типа связей</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetLifecycleLevel(System.Int32)">
            <summary>
            Возвращает интерфейс с информацией об уровне продвижения
            </summary>
            <param name="levelID">Ид. уровня продвижения</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetLCStep(System.Int32)">
            <summary>
            Возвращает интерфейс с информацией о шаге жизненного цикла
            </summary>
            <param name="stepID">Ид. шага</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetObjectType(System.Int32,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией о типе объектов
            </summary>
            <param name="objectTypeID">Ид. типа объектов</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetAttributeType(System.Int32,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией об атрибуте
            </summary>
            <param name="attributeTypeID">Ид. атрибута</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetAttributeType(System.Guid,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией об атрибуте
            </summary>
            <param name="attributeGUID">Глобальный ид. атрибута</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetAttributeType(System.String,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией об атрибуте
            </summary>
            <param name="attributeName">Наименование атрибута</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetRelationType(System.Int32,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией о типе связей
            </summary>
            <param name="relationTypeID">Ид. типа связей</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetRelationType(System.Guid,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией о типе связей
            </summary>
            <param name="relationGUID">Глобальный ид. типа связей</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetLifecycleLevel(System.Int32,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией об уровне продвижения
            </summary>
            <param name="levelID">Ид. уровня продвижения</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetLifecycleLevelCollection">
            <summary>
            Получить нефильтрованную коллекцию уровней продвижения
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetAttributesGroupCollection(System.Int32,System.Boolean)">
            <summary>
            Возвращает коллекцию групп атрибутов
            </summary>
            <param name="groupID">Ид. родительской группы атрибутов (-1 если получаем первый уровень)</param>
            <param name="filterRecs">Фильтровать ли результат по видимости</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetAttributeTypeCollection(System.Int32,System.Boolean)">
            <summary>
            Получить список атрибутов в группе groupID. Если groupID = -1, то получается
            список всех атрибутов, зарегистрированных в системе.
            </summary>
            <param name="groupID">Идентификатор группы атрибутов.</param>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetObjectType(System.Guid,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией о типе объектов
            </summary>
            <param name="anObjectTypeGuid">Гуид типа объектов</param>
            <param name="throwException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetObjectType(System.String,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией о типе объектов
            </summary>
            <param name="anObjectTypeName">Наименование типа объектов</param>
            <param name="throwException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetObjectTypeCollection(System.Int32)">
            <summary>
            Возвращает коллекцию типов объектов, входящих в состав типа parentTypeID.
            </summary>
            <param name="parentTypeID">Идентификатор родительского типа объектов. Если == -1,
            то возвращает корневые типы объектво. Если == -2, то возвращает ВСЕ типы объектов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetObjectTypeCollection(System.Int32,System.Boolean)">
            <summary>
            Возвращает коллекцию типов объектов, входящих в состав типа parentTypeID.
            </summary>
            <param name="parentTypeID">Идентификатор родительского типа объектов. Если == -1,
            то возвращает корневые типы объектво. Если == -2, то возвращает ВСЕ типы объектов</param>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetRelationTypeCollection">
            <summary>
            Возвращает полный список типов связей.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetRelationTypeCollection(System.Boolean)">
            <summary>
            Возвращает список типов связей.
            </summary>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetAttributesGroup(System.Int32)">
            <summary>
            Получить группу атрибутов номер aGroupID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetLCSchema(System.Int32)">
            <summary>
            Возвращает схему ЖЦ
            </summary>
            <param name="schemaID">Ид. схемы</param>
            <returns>Класс с инфой о схеме ЖЦ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetLCSchema(System.Int32,System.Boolean)">
            <summary>
            Возвращает схему ЖЦ
            </summary>
            <param name="schemaID">Ид. схемы</param>
            <param name="throwException">Генерить ли исключение если такой схемы нет</param>
            <returns>Класс с инфой о схеме ЖЦ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetLCSchema(System.Guid)">
            <summary>
            Возвращает схему ЖЦ
            </summary>
            <param name="schemaGuid">Гуид схемы</param>
            <returns>Класс с инфой о схеме ЖЦ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientMetadataCache.GetLCSchema(System.Guid,System.Boolean)">
            <summary>
            Возвращает схему ЖЦ
            </summary>
            <param name="schemaGuid">Гуид схемы</param>
            <param name="throwException">Генерить ли исключение если такой схемы нет</param>
            <returns>Класс с инфой о схеме ЖЦ</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientMetadataCache.FileAttributeID">
            <summary>
            Ид. атрибута Файл
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientMetadataCache.GroupsTypeID">
            <summary>
            Группы пользователей
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientMetadataCache.UsersTypeID">
            <summary>
            Пользователи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientMetadataCache.RolesTypeID">
            <summary>
            Роли
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientMetadataCache.PluginTypeID">
            <summary>
            Загружаемые модули
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBConfigurationsSpeedupService">
            <summary>
            Клиентский прокси-класс сервиса для чтения и записи настроек.
            Реализация является thread safe.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBConfigurationsSpeedupService._Save2AllUsersMode">
            <summary>
            Режим записи настроек сразу всем юзерам
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.#ctor(Intermech.Interfaces.Client.IClientCache)">
            <summary>
            Создает объект
            </summary>
            <param name="clientCache">Сервис клиентского кэша метаданных</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="clientCache"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.DoClear">
            <summary>
            Очищает сервис после очистки клиентского кэша метаданных.
            Реализация является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.DoInitialize(Intermech.Interfaces.IUserSession)">
            <summary>
            Инициализирует сервис после заполнения клиентского кэша метаданных.
            Реализация является thread safe.
            </summary>
            <param name="userSession">Пользовательская сессия</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.Save2AllUsersMode">
            <summary>
            Режим записи настроек сразу всем юзерам
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.ReadBool(System.String,System.String,System.String,System.Boolean,Intermech.DBConfigMode)">
            <summary>
            Прочитать логический параметр
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.ReadDateTime(System.String,System.String,System.String,System.DateTime,Intermech.DBConfigMode)">
            <summary>
            Прочитать дату
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.ReadInteger(System.String,System.String,System.String,System.Int64,Intermech.DBConfigMode)">
            <summary>
            Прочитать целочисленный параметр
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.ReadDouble(System.String,System.String,System.String,System.Double,Intermech.DBConfigMode)">
            <summary>
            Прочитать вещественный параметр
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.ReadString(System.String,System.String,System.String,System.String,Intermech.DBConfigMode)">
            <summary>
            Прочитать строковый параметр
            </summary>
            <param name="ModuleName">Имя модуля, который сохраняет конфигурации</param>
            <param name="SectionID">Имя секции</param>
            <param name="ParamName">Имя параметра</param>
            <param name="DefaultValue">Значение параметра по умолчанию.</param>
            <param name="configMode"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.ReadSection(System.String,System.String,System.Int64)">
            <summary>
            Прочитать содержимое секции SectionID для текущего пользователя. F_PARAM_NAME - имя параметра,
            F_VALUE - значение параметра (строка).
            </summary>
            <param name="ModuleName">Имя модуля</param>
            <param name="SectionID">Имя секции</param>
            <param name="userID">Идентификатор пользователя</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBConfigurationsSpeedupService.DeleteSectionFromCache(System.String,System.String,System.Int64)">
            <summary>
            Удаляет из кэша значений секцию
            </summary>
            <param name="moduleName">Модуль</param>
            <param name="sectionID">Секция</param>
            <param name="userID">ид. юзера, чье это настройки</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientSessionSpeedupServiceBase">
            <summary>
            Базовый класс для прокси-классов сервисов, являющихся кэшированными вариантами серверных сервисов.
            Реализация должна быть thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSessionSpeedupServiceBase.#ctor(Intermech.Interfaces.Client.IClientCache)">
            <summary>
            Создает объект
            </summary>
            <param name="clientCache">Сервис клиентского кэша метаданных</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="clientCache"/> содержит null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSessionSpeedupServiceBase.ClientCache">
            <summary>
            Возвращает сервис клиентского кэша
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSessionSpeedupServiceBase.IsInitialized">
            <summary>
            Возвращает признак, что инициализация уже была выполнена.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSessionSpeedupServiceBase.DoClear">
            <summary>
            Очищает сервис после очистки клиентского кэша метаданных.
            Реализация является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSessionSpeedupServiceBase.DoInitialize(Intermech.Interfaces.IUserSession)">
            <summary>
            Инициализирует сервис после заполнения клиентского кэша метаданных.
            Реализация является thread safe.
            </summary>
            <param name="userSession">Пользовательская сессия</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSessionSpeedupServiceBase.CheckInitialized">
            <summary>
            Проверяет, инициализирован ли сервис.
            </summary>
            <exception cref="T:System.InvalidOperationException">Сервис не был инициализирован</exception>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributableTypeInfo">
            <summary>
            Базовый класс для метаданных с атрибутами
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttribute4TypeInfoCollection">
            <summary>
            Базовый класс для описания коллекций атрибутов у типов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CAttribute4TypeInfoCollection.CreateAttributeTypeInfo4(System.Data.DataRow,System.Data.DataRow)">
            <summary>
            Создает обработчик атрибута применительно к типу
            </summary>
            <param name="attr_row">Запись из IMS_ATTRIBUTES</param>
            <param name="attr4type_row">Запись из таблицы применения атрибута к типу</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CAttribute4TypeInfoCollection.ThrowNotFoundException(System.Int32)">
            <summary>
            Выдает ошибку о том, что атрибут не найден
            </summary>
            <param name="attributeID"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CAttribute4TypeInfoCollection.FindRow(System.Int32)">
            <summary>
            Ищет в кэше строку с описанием атрибута применительно к типу
            </summary>
            <param name="attributeID">Ид. атрибута</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributesGroupInfoCollection">
            <summary>
            Обработчик списка групп атрибутов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributeTypeInfo">
            <summary>
            Получатель инфы о типе атрибута
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributeTypeInfo4">
            <summary>
            Базовый класс для атрибута применительно к типу
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CAttributeTypeInfo4.TypeID">
            <summary>
            Тип объекта/связи
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributeTypeInfo4Object">
            <summary>
            Класс для атрибута применительно к типу объектов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributeTypeInfo4Relation">
            <summary>
            Класс для атрибута применительно к типу связей
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributeTypeInfoCollection">
            <summary>
            Коллекция со списком типов атрибутов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CLCSchemaInfo">
            <summary>
            Класс с инфой о схеме ЖЦ
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CLifecycleLevelInfo">
            <summary>
            Получатель инфы об уровне продвижения
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CLifecycleLevelInfoCollection">
            <summary>
            Коллекция с информацией об уровнях продвижения
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientMeasureRuleHelper">
            <summary>
            Серверный класс для работы со строкой настроек ввода значений атрибутов, выраженных в единицах измерения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientMeasureRuleHelper.ObjectName">
            <summary>
            Имя атрибута для сообщений об ошибках и логов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientMeasureRuleHelper.SizeType">
            <summary>
            Свойство атрибута Размер
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMeasureRuleHelper.GetPhysicalValuesCaption(System.Int64[])">
            <summary>
            Возвращает список наименований допустимых физических величин по их гуидам
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMeasureRuleHelper.ValidateMuID(Intermech.Interfaces.IDBMeasureAttributeType,System.Int64)">
            <summary>
            Проверяет допустимость присвоения данному атрибуту единицы измерения muID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMeasureRuleHelper.IsCompatible(Intermech.Interfaces.IDBMeasureAttributeType,System.Int64)">
            <summary>
            Проверяет единицы измерения на совместимость.
            </summary>
            <param name="aMeasureID">Идентификатор объекта-единицы измерения, который
            проверяется на совместимость с данным параметром (например, единица массы не
            совместима с единицей объема и т.п.). </param>
        </member>
        <member name="T:Intermech.Interfaces.Client.CMeasuredAttributeTypeInfo4Object">
            <summary>
            Обработчик описателя атрибута применительно к типу объектов, выраженного в единицах измерения
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CMeasuredAttributeTypeInfo4Relation">
            <summary>
            Обработчик описателя атрибута применительно к типу объектов, выраженного в единицах измерения
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CObjectTypeInfo">
            <summary>
            Получение инфы о типе объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectTypeInfo.FillPossibleChildren(System.Boolean)">
            <summary>
            Возвращает словарь тип_объектов=тип_связей, который характеризует какие объекты можно включать в состав данного типа объектов и каким типом связей
            </summary>
            <param name="getAll">Возвращать ли весь список или первый попавшийся элемент</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.CObjectTypeInfoCollection">
            <summary>
            Коллекция с информацией о типе объектов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectTypeInfoCollection.CanViewObjects">
            <summary>
            Метод проверяет имеет ли право данный юзер просматривать список объектов того типа, для которого создана данная коллекция.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CRelationTypeInfo">
            <summary>
            Получение инфы о типе связей
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CRelationTypeInfoCollection">
            <summary>
            Коллекция с информацией о типе связей
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CDBLifecycleStepInfo">
            <summary>
            Получатель инфы о шаге ЖЦ
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.MetadataInfoCollection">
            <summary>
            Базовый класс для наследования получателей инфы о коллекции метаданных определенной категории в режиме чтения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoCollection.ServiceContext">
            <summary>
            Клиентский кэш таблиц метаданных
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoCollection.ParentID">
            <summary>
            Ид. родительского метаданного (например, ид. типа, для которого собирается коллекция атрибутов)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoCollection.Filtering">
            <summary>
            Нужно ли фильтровать коллекцию по видимости
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoCollection.DBTableName">
            <summary>
            Имя таблицы в базе
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoCollection.DBKeyField">
            <summary>
            Имя поля для фильтрации таблицы по родителю
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.MetadataInfoCollection.GetParentSQL">
            <summary>
            Возвращает SQL-условие, при необходимости отсеивающее только объекты, входящие в состав parentID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.MetadataInfoCollection.Select(System.String,System.Object[])">
            <summary>
            Возвращает таблицу с объектами входящими в состав parentID и отсортированными по orderBy
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.MetadataInfoCollection.FillCaptions(System.Data.DataTable)">
            <summary>
            Порожденные классы заполняют заголовки таблицы, возвращаемой селектом
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.MetadataInfoParentContext">
            <summary>
            Вспомогательный объект, связывающий родительский сервис <see cref="T:Intermech.Interfaces.Client.ClientMetadataCacheService"/> и его внутренние объекты.
            Реализация является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.MetadataInfoParentContext.#ctor(Intermech.Interfaces.Client.ClientMetadataCacheService,Intermech.Interfaces.Client.IClientCache)">
            <summary>
            Создает объект
            </summary>
            <param name="parent">родительский сервис</param>
            <param name="clientCache">сервис кэша метаданных</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="parent"/> содержит null; параметр <paramref name="clientCache"/> содержит null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoParentContext.Parent">
            <summary>
            Возвращает родительский сервис
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoParentContext.ClientCache">
            <summary>
            Возвращает сервис кэша метаданных
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.MetadataInfoObject">
            <summary>
            Базовый класс для наследования получателей инфы о метаданных в режиме чтения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoObject.ServiceContext">
            <summary>
            Клиентский кэш таблиц метаданных
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoObject.MetadataID">
            <summary>
            Ид. метаданного (AttributeID например)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MetadataInfoObject.paramsTable">
            <summary>
            Таблица с параметрами, которые могут храниться в данных объектах.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MetadataInfoObject._AttributeTypeID">
            <summary>
            Ид. атрибута для работы с расширенными метаданными
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MetadataInfoObject._ObjectTypeID">
            <summary>
            Ид. типа объектов для работы с расширенными метаданными
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MetadataInfoObject._RelationTypeID">
            <summary>
            Ид. типа связей для работы с расширенными метаданными
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoObject.DBTableName">
            <summary>
            Имя таблицы в базе
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoObject.MetadataNotFoundMessage">
            <summary>
            Сообщение об ошибке о том, что метаданное с таким ид. не найдено
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MetadataInfoObject.ObjectName">
            <summary>
            Наименование метаданного
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.MetadataInfoObject.GetSourceDataRowFromCache">
            <summary>
            Возвращает строку таблицы из клиентского кэша, описывающая текущий элемент метаданных.
            </summary>
            <returns>Строка таблицы из клиентского кэша, описывающая текущий элемент метаданных. Может быть null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.MetadataInfoObject.GetMDValues(System.String)">
            <summary>
            Возвращает строковый список значений для параметра valueName
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.MetadataInfoObject.GetMDValuesInt64(System.String)">
            <summary>
            Возвращает целочисленный список значений для параметра valueName
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientMetadataCacheService">
            <summary>
            Служба для получения классов с инфой о метаданных
            Реализация является thread safe.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientMetadataCacheService._serviceContext">
            <summary>
            Общий контекст для всех дочерних элементов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.#ctor(Intermech.Interfaces.Client.IClientCache)">
            <summary>
            Создает объект
            </summary>
            <param name="clientCache">Сервис клиентского кэша метаданных</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="clientCache"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.GetLCStep(System.Int32)">
            <summary>
            Возвращает интерфейс с информацией о шаге жизненного цикла
            </summary>
            <param name="stepID">Ид. шага</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.GetAttributeType(System.Guid,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией об атрибуте
            </summary>
            <param name="attributeGUID">Глобальный ид. атрибута</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.GetAttributeType(System.String,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией об атрибуте
            </summary>
            <param name="attributeName">Наименование атрибута</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.GetRelationType(System.Guid,System.Boolean)">
            <summary>
            Возвращает интерфейс с информацией о типе связей
            </summary>
            <param name="relationGUID">Глобальный ид. типа связей</param>
            <param name="notFoundException">Выдавать ли эксепшен если такой тип не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.GetObjectTypeCollection(System.Int32)">
            <summary>
            Возвращает коллекцию типов объектов, входящих в состав типа parentTypeID.
            </summary>
            <param name="parentTypeID">Идентификатор родительского типа объектов. Если == -1,
            то возвращает корневые типы объектво. Если == -2, то возвращает ВСЕ типы объектов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.GetObjectTypeCollection(System.Int32,System.Boolean)">
            <summary>
            Возвращает коллекцию типов объектов, входящих в состав типа parentTypeID.
            </summary>
            <param name="parentTypeID">Идентификатор родительского типа объектов. Если == -1,
            то возвращает корневые типы объектво. Если == -2, то возвращает ВСЕ типы объектов</param>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.GetRelationTypeCollection">
            <summary>
            Возвращает полный список типов связей.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.GetRelationTypeCollection(System.Boolean)">
            <summary>
            Возвращает список типов связей.
            </summary>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientMetadataCacheService.GetAttributesGroup(System.Int32)">
            <summary>
            Получить группу атрибутов номер aGroupID
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientMetadataCacheService.GroupsTypeID">
            <summary>
            Группы пользователей
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientMetadataCacheService.UsersTypeID">
            <summary>
            Пользователи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientMetadataCacheService.RolesTypeID">
            <summary>
            Роли
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.СAttributesGroupInfo">
            <summary>
            Получатель инфы о группе атрибутов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICustomServicesSpeedupService">
            <summary>
            Интерфейс клиентского сервиса, ускоряющего получение сервисов сервера приложений.
            Реализация должна быть thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICustomServicesSpeedupService.GetCustomService(System.Type)">
            <summary>
            Возвращает сервис сервера приложений
            </summary>
            <param name="serviceType">Тип сервиса</param>
            <returns>Объект сервиса или null</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IIconReader">
            <summary>
            Чтение икон (из registry) для типов файлов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ImageHelper.BitmapToIcon(System.Drawing.Bitmap)">
            <summary>
            Получить Icon по Bitmap
            </summary>
            <param name="bmp"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.MapiFileDesc">
            <summary>
            Информация о приаттаченном объекте.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiFileDesc.reserved">
            <summary>
            зарезервировано
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiFileDesc.flags">
            <summary>
            маска флагов приложения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiFileDesc.position">
            <summary>
            показывающее положение файлов-приложений в сообщении
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiFileDesc.path">
            <summary>
            путь к файлу. Включает в себя имя диска и директории
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiFileDesc.name">
            <summary>
            имя приаттаченного файла приложения (под таким именем его увидит получатель).
            Если значение не заданно или установленно как NULL, то используется имя path 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiFileDesc.type">
            <summary>
            указывает тип файла 
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.MapiMessage">
            <summary>
            Информация о посылаемом/принимаемом сообщении
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.reserved">
            <summary>
            зарезервировано
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.subject">
            <summary>
            тема сообщения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.noteText">
            <summary>
            тест сообщения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.messageType">
            <summary>
            тип сообщения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.dateReceived">
            <summary>
            дату получения в формате YYYY/MM/DD HH(0-24):MM
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.conversationID">
            <summary>
            идентификатор  потока, в который поступило сообщение
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.flags">
            <summary>
            маска флагов сообщений
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.originator">
            <summary>
            информация об отправителе сообщения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.recipCount">
            <summary>
            количество получателей, записанных в массиве recips
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.recips">
            <summary>
            указатель на структуры MapiRecipDesc,  содержащие информацию о получателях сообщения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.fileCount">
            <summary>
            количество файлов-приложений в массиве lpFiles.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiMessage.files">
            <summary>
            указатель на структуру, содержащую информацию о всех файлах, приложенных к сообщению
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.MapiRecipDesc">
            <summary>
            Содержит информацию о получателе или отправителе сообщения.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiRecipDesc.reserved">
            <summary>
            зарезервировано, всегда 0
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiRecipDesc.recipClass">
            <summary>
            тип получателя
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiRecipDesc.name">
            <summary>
             имя получателя или отправителя
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiRecipDesc.address">
            <summary>
            адресс получателя или отправителя
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiRecipDesc.eIDSize">
            <summary>
            размер в байтах указателя lpEntryID
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MapiRecipDesc.entryID">
            <summary>
            указатель на идентификатор, используемый системой сообщений, 
            чтобы установить получателя сообщения
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.Mapi.Logon(System.IntPtr)">
            <summary>
             начать новую сессию
            </summary>
            <param name="hwnd"></param>
            <returns>true - если всё прошло успешно, иначе false. описание ошибки - см. св-во  Error</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Mapi.MAPILogon(System.IntPtr,System.String,System.String,System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            Начать новую сессию, загрузить адресную книгу и список сообщений
            </summary>
            <param name="hwnd">handle диалогового окна созданного MAPILogon или 0. Если  0 , то  этот параметр игнорируется</param>
            <param name="prf">указатель на строку, содержащую путь к файлу настроек</param>
            <param name="pw">указатель на строку, содержащую пароль для доступа</param>
            <param name="flg">флаги опций</param>
            <param name="rsv">зарезервировано</param>
            <param name="sess">указатель на сессию Simple MAPI</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Mapi.MAPILogoff(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Завершает сессию с почтовой системой
            </summary>
            <param name="sess">указатель на сессию, которую нужно завершить</param>
            <param name="hwnd">handle диалогового окна созданного MAPILogon или 0</param>
            <param name="flg">зарезервировано</param>
            <param name="rsv">зарезервировано</param>
            <returns></returns>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.MapiLogonUI">
            <summary>
            показывает диалог для идентификации,  если  это  потребуется
            (парметр flg в MAPILogon)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.MapiNewSession">
            <summary>
             если флаг установлен,  функция  попытается  создать  новую сессию перед тем, как использовать существующую
            (парметр flg в MAPILogon)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.MapiForceDownload">
            <summary>
            если флаг установлен, то функция пытается загрузить все сообщения,  перед  ее   завершением
            (парметр flg в MAPILogon)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.IPS_SUPPORT_ADRRESS">
            <summary>
            адрес нашей техподдержки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.Mapi.Send(System.String,System.String)">
            <summary>
             отправить письмо
            </summary>
            <param name="sub">тема</param>
            <param name="txt">текст письма</param>
            <returns>true - если всё прошло успешно, иначе false. описание ошибки - см. св-во  Error</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Mapi.SendReport(System.String,System.String,System.String)">
            <summary>
            отправить письмо в нашу техподдрежку, приложить отчёт, располженный по пути reportPath
            </summary>
            <param name="reportPath">путь к отчёту</param>
            <param name="reportTopic">тема письма</param>
            <param name="reportText">текст письма</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Mapi.AddRecip(System.String,System.String,System.Boolean)">
            <summary>
             добавить получателя
            </summary>
            <param name="name">имя получателя</param>
            <param name="addr">адрес поулчателя</param>
            <param name="cc">копия?</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.Mapi.Attach(System.String)">
            <summary>
             добавить файл 
            </summary>
            <param name="filepath">путь к файлу</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.Mapi.AllocOrigin">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.MapiORIG">
            <summary>
            Основной получатель сообщения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.MapiTO">
            <summary>
            Первый получатель сообщения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.MapiCC">
            <summary>
            Получатель копии сообщения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.MapiBCC">
            <summary>
            Получатель копии blind copy
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.Mapi.MAPISendMail(System.IntPtr,System.IntPtr,Intermech.Interfaces.Client.MapiMessage,System.Int32,System.Int32)">
            <summary>
            Отправка сообщения
            </summary>
            <param name="sess">handle сессии</param>
            <param name="hwnd">handle диалогового окна созданного MAPILogon или 0</param>
            <param name="message">указатель на строку, содержащую сообщение для посылки</param>
            <param name="flg">флаги опций</param>
            <param name="rsv">зарезервировано</param>
            <returns></returns>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.origin">
            <summary>
            информация об отправителе
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.recpts">
            <summary>
            массив получателей 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.Mapi.attachs">
            <summary>
            массив прикреплённых файлов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPortalMetadata">
            <summary>
            Кэш метананных опубликованных на портале
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetChildObjectTypes(Intermech.Interfaces.IUserSession,System.Int32,System.Boolean)">
            <summary>
            Получить дерево типов, дочерних от parentType
            </summary>
            <param name="session">Сессия</param>
            <param name="parentType">Родительский тип или -1 если корневые</param>
            <param name="recursive">Рекурсивно</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetPublishObjectTypes(Intermech.Interfaces.IUserSession)">
            <summary>
            Получить все публикуемые типы объектов
            </summary>
            <param name="session">Сессия</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetPublishObjectTypeID(System.String)">
            <summary>
            Получить идентификатор типа публикуемого объекта по его имени
            </summary>
            <param name="name">Имя</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetPublishObjectTypeName(System.Int32)">
            <summary>
            Получить имя типа публикуемого объекта по его идентификатору
            </summary>
            <param name="typeID">Идентификатор</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetPublishObjectType(System.Int32)">
            <summary>
            Получить тип публикуемого объекта по его идентификатору
            </summary>
            <param name="typeID">Идентификатор</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetPublishObjectType(System.Guid)">
            <summary>
            Получить тип публикуемого объекта по его глобальному идентификатору
            </summary>
            <param name="typeGuid">Идентификатор</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetPublishRelationAttributes">
            <summary>
            Получить атрибуты типа связей "Состав опубликованного объекта" из базы данных портала
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetAttribute(System.Guid)">
            <summary>
            Получить атрибут
            </summary>
            <param name="attributeGuid"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetAttribute(System.Int32)">
            <summary>
            Получить атрибут
            </summary>
            <param name="attributeID">Идентифкатор атрибута в базе портала</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPortalMetadata.GetPossibleValues(System.Int32)">
            <summary>
            Получить допустимые значения для атрибута
            </summary>
            <param name="attributeID"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPrepareForViewDocumentFilesService">
            <summary>
            Интерфейс сервиса для подготовки файлов документов IPS к просмотру или печати во внешнем приложении.
            Реализация должна быть thread safe.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IPrepareForViewDocumentFilesService.PrepareDocumentFile">
            <summary>
            Готовит файл документа к просмотру или печати.
            Обработчик события может дописать в файл документа необходимую информацию, или 
            проверить корректность информации, уже имеющейся в файле документа.
            </summary>
            <remarks>
            Событие вызывается для документов, которые находятся на шагах ЖЦ, не допускающих редактирования (на согласовании, выпущен и др.),
            непосредственно перед открытием файла документа во внешнем приложении.
            </remarks>
        </member>
        <member name="T:Intermech.Interfaces.Client.EventArgs`1">
            <summary>объет содержащий данные события</summary>
            <typeparam name="T">тип данных события</typeparam>
        </member>
        <member name="M:Intermech.Interfaces.Client.EventArgs`1.#ctor(`0)">
            <summary>конструктор</summary>
            <param name="value">данные события</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.EventArgs`1.Value">
            <summary>данные события</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.Rclass`1">
            <summary>объект с реакцией на изменение свойства Value</summary>
            <typeparam name="T">тип объекта</typeparam>
        </member>
        <member name="M:Intermech.Interfaces.Client.Rclass`1.#ctor(`0)">
            <summary>конструктор</summary>
            <param name="value"></param>
        </member>
        <member name="P:Intermech.Interfaces.Client.Rclass`1.Value">
            <summary>свойство с реакцией на изменение</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.Rclass`1.op_Implicit(Intermech.Interfaces.Client.Rclass{`0})~`0">
            <summary>Преобразует указанный val в Объект <see cref="T:Intermech.Interfaces.Client.Rclass`1"/> </summary>
            <param name="val">Преобразуемый <see cref="T:Intermech.Interfaces.Client.Rclass`1"/> </param>
            <returns>Объект T, который является результатом преобразований этого метода.</returns>
        </member>
        <member name="E:Intermech.Interfaces.Client.Rclass`1.ValueChanged">
            <summary>реакция при изменении значения свойства Value</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.Rclass`1.OnValueChanged">
            <summary>реакция при изменении значения свойства Value</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.Enums.Convert``1(System.String)">
            <summary>преобразовать строку в обьект</summary>
            <typeparam name="T">тип обьекта</typeparam>
            <param name="value">строка с обьектом</param>
            <returns>обьект</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Enums.Name(System.Enum)">
            <summary>получить имя перечислителя</summary>
            <param name="value">Перечислитель</param>
            <returns>Имя перечислителя</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Enums.Description(System.Enum)">
            <summary>
            Gets the string of an DescriptionAttribute of an Enum.
            </summary>
            <param name="enumValue">The Enum value for which the description is needed.</param>
            <returns>If a DescriptionAttribute is set it return the content of it.
            Otherwise just the raw name as string.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Enums.ToList``1">
            <summary>
            Creates an List with all keys and values of a given Enum class
            </summary>
            <typeparam name="TEnum">Must be derived from class Enum!</typeparam>
            <returns>A list of KeyValuePair&lt;Enum, string&gt; with all available
            names and values of the given Enum.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Enums.PixelsToMm(System.Drawing.RectangleF,System.Drawing.PointF)">
            <summary>Преобразовать пиксели в миллиметры для прямоугольника</summary>
            <param name="pixels">Прямоугольник в пикселях</param>
            <param name="dpi">Точек на дюйм</param>
            <returns>Прямоугольник в миллиметрах</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Enums.PixelsToMm(System.Drawing.Point,System.Drawing.PointF)">
            <summary>Преобразовать пиксели в миллиметры для точки</summary>
            <param name="pixels">Точка в пикселях</param>
            <param name="dpi">Точек на дюйм</param>
            <returns>Точка в миллиметрах</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.Enums.TryParse(System.String,System.Single@)">
            <summary>преобразование строки</summary>
            <param name="value">строка с числом</param>
            <param name="result">число</param>
            <returns>true - преобразование успешно</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IRedService">
            <summary>служба для работы с настройками замечаний на закладке Просмотр</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IRedService.ChangeSettings(Intermech.Interfaces.Client.IRedProperty)">
            <summary>Изменить настройки для замечаний на закладке Просмотр</summary>
            <param name="data">новые данные</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IRedProperty">
            <summary>настройки пометок</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.TypeTool">
            <summary>тип работающего MapTool</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.BrushColor">
            <summary>цвет заливки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.BrushAlpha">
            <summary>прозрачность заливки= 0-255(0 - нет заливки)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.BrushColorAlpha">
            <summary>цвет заливки с прозрачностью</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.PenColor">
            <summary>цвет кривой</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.PenAlpha">
            <summary>прозрачность= 0-255(0 - нет заливки)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.PenThickness">
            <summary>толщина(мм)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.PenColorAlpha">
            <summary>цвет кривой с прозрачностью</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.TextColor">
            <summary>цвет текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.TextAlpha">
            <summary>прозрачность= 0-255(0 - нет заливки)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.TextColorAlpha">
            <summary>цвет заливки с прозрачностью</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.FontName">
            <summary>имя фонта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.FontSize">
            <summary>высота текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.NoteStyle">
            <summary>стиль фаски</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.Facet">
            <summary>размер фаски</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.NoteArrow">
            <summary>стиль стрелки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRedProperty.ArrowSize">
            <summary>размер стрелки</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IRedArrowStyle">
            <summary>стили стрелки</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IRedNoteStyle">
            <summary>стили коментариев</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.IRedNoteStyle.None">
            <summary>без рамки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.IRedNoteStyle.Box">
            <summary>рамка без фасок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.IRedNoteStyle.BoxFacet">
            <summary>рамка с фаской</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.IRedNoteStyle.BoxBluntPoint">
            <summary>рамка с закруглением</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.IRedNoteStyle.OldStyle">
            <summary>старый стиль</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.RedProperty">
            <summary>настройки пометок</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.TypeTool">
            <summary>тип работающего MapTool</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.PenColor">
            <summary>цвет кривой</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#PenColor">
            <summary>цвет кривой</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.PenAlpha">
            <summary>прозрачность= 0-255(0 - нет заливки)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#PenAlpha">
            <summary>прозрачность= 0-255(0 - нет заливки)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.PenColorAlpha">
            <summary>цвет кривой с прозрачностью</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.PenThickness">
            <summary>толщина линий(мм)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#PenThickness">
            <summary>толщина(мм)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.BrushColor">
            <summary>цвет заливки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#BrushColor">
            <summary>цвет заливки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.BrushAlpha">
            <summary>прозрачность заливки= 0-255(0 - нет заливки)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#BrushAlpha">
            <summary>прозрачность заливки= 0-255(0 - нет заливки)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.BrushColorAlpha">
            <summary>цвет заливки с прозрачностью</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.FontName">
            <summary>имя фонта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#FontName">
            <summary>имя фонта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.FontSize">
            <summary>высота текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#FontSize">
            <summary>высота текста</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.TextColor">
            <summary>цвет текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#TextColor">
            <summary>цвет текста</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.TextAlpha">
            <summary>прозрачность= 0-255(0 - нет заливки)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#TextAlpha">
            <summary>прозрачность= 0-255(0 - нет заливки)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.TextColorAlpha">
            <summary>цвет заливки с прозрачностью</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.NoteStyle">
            <summary>стиль фаски</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#NoteStyle">
            <summary>стиль фаски</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.Facet">
            <summary>размер фаски</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#Facet">
            <summary>размер фаски</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.NoteArrow">
            <summary>стиль стрелки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#NoteArrow">
            <summary>стиль стрелки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RedProperty.ArrowSize">
            <summary>размер стрелки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.RedProperty.Intermech#Interfaces#Client#IRedProperty#ArrowSize">
            <summary>размер стрелки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.RedProperty.#ctor">
            <summary>конструктор по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.RedProperty.#ctor(Intermech.Interfaces.Client.IRedProperty)">
            <summary>конструктор по интерфейсу</summary>
            <param name="var">образец для копии</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.RedProperty.Copy(Intermech.Interfaces.Client.IRedProperty)">
            <summary>копирование по интерфейсу</summary>
            <param name="var">образец для копии</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.HelperTypes.SearchResultIDs">
            <summary>
            Результат поиска ID в коллекциях
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.HelperTypes.SearchResultIDs.NoIdInformation">
            <summary>
            Нет информации об ID
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.HelperTypes.SearchResultIDs.ExistsIDs_UndefinedNotFound">
            <summary>
            Искомые ID присутствуют. Неопределенные ID отсутствуют
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.HelperTypes.SearchResultIDs.ExistsIDs_UndefinedExists">
            <summary>
            Искомые ID присутствуют. Также есть ID неопределенного типа
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.HelperTypes.SearchResultIDs.NotFoundIDs_UndefinedNotFound">
            <summary>
            Искомые ID отсутствуют. Неопределенные ID отсутствуют
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.HelperTypes.SearchResultIDs.NotFoundIDs_UndefinedExists">
            <summary>
            Искомые ID отсутствуют. Но обнаружены ID неопределенного типа
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NotificationService.Interfaces.ICheckObjectTypesEventArgs">
            <summary>
            Дополнительные проверки для типов объектов ObjectsEventArgs
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationService.Interfaces.ICheckObjectTypesEventArgs.AreAllTypesKnown">
            <summary>
            Типы всех объектов известны
            </summary>
            <returns>
                true - если коллекция ID типов объектов не пуста и нет неизвестных типов объектов
            </returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationService.Interfaces.ICheckObjectTypesEventArgs.CheckForObjectTypeIDs(System.Int32)">
            <summary>
            Проверить наличие ID типа объектов
            </summary>
            <param name="objTypeId">Искомый ObjectTypeID</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationService.Interfaces.ICheckObjectTypesEventArgs.CheckForObjectTypeIDs(System.Collections.Generic.List{System.Int32})">
            <summary>
            Проверить наличие ID типов объектов
            </summary>
            <param name="objTypeIds">Коллекция искомых ObjectTypeID</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationService.Interfaces.ICheckObjectTypesEventArgs.CheckForObjectTypeIDs(Intermech.Interfaces.Client.NotificationService.Interfaces.CheckTypeIdDelegate)">
            <summary>
            Проверить ID типов объектов на соответствие условию делегата
            </summary>
            <param name="checkDelegate">Делегат метода в который будут передаваться ID типов для проверки</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.NotificationService.INotificationWindowService">
            <summary>
            INotificationWindowService - расширение окна навигатора для получения доступа 
            к ТОЛЬКО его службе уведомлений. (Используется для отправки событий в конкретное окно навигатора)
            Для получения доступа к расширению - приводим окно навигатора к данному интерфейсу.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationService.INotificationWindowService.FireEvent(System.Object,Intermech.Interfaces.Client.NotificationEventArgs)">
            <summary>
            Извещает подписчика/подписчиков о произошедшем событии.
            </summary>
            <param name="sender">Объект, рассылающий событие обновления.</param>
            <param name="e">Данные для события обновления.</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IElementStatusesClientService">
            <summary>
            Клиентская служба, которая позволяет считывать статусы для элементов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IElementStatusesClientService.SyncWithServerSide(Intermech.Interfaces.IElementStatusesService,Intermech.Interfaces.IPluginStatusesTable)">
            <summary>
            Синхронизировать информацию клиентской службы с серверной частью
            </summary>
            <param name="serverSide">Интерфейс серверной службы</param>
            <param name="statuses">Интерфейс серверной службы</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IElementStatusesClientService.LoadUserSettings(Intermech.Interfaces.IUserSession)">
            <summary>
            Загрузить настройки пользователя (например, список отключенных статусов)
            </summary>
            <param name="session">Сессия</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IElementStatusesClientService.SaveUserSettings(Intermech.Interfaces.IUserSession)">
            <summary>
            Сохранить настройки пользователя (например, список отключенных статусов)
            </summary>
            <param name="session">Сессия</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.IElementStatusesClientService.Capacity">
            <summary>
            Текущая емкость массива бит, который требуется для всех зарегистрированных плагинов (в байтах)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IElementStatusesClientService.CapacityInBits">
            <summary>
            Текущая емкость массива бит, который требуется для всех зарегистрированных плагинов (в битах)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IElementStatusesClientService.Plugins">
            <summary>
            Коллекция пар значений [(string)Guid плагина] = [(ElementStatusesPluginDescription)Описание плагина]
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IElementStatusesClientService.DisabledPlugins">
            <summary>
            Список Guid плагинов, которым надо запретить добавлять свои статусы в столбец "Статусы элементов"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IElementStatusesClientService.GetStatusIcon(System.Guid,System.Int32)">
            <summary>
            Получить значок для статуса указанного плагина
            </summary>
            <param name="pluginGuid">Guid плагина</param>
            <param name="status">Статус</param>
            <returns>Значок или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IElementStatusesClientService.GetElementStatuses16(System.String,System.Byte[])">
            <summary>
            Считать статусы указанного элемента из подмножества бит указанного плагина 
            с учётом того, что суммарная длина статусов не превышает 16 бит
            </summary>
            <param name="pluginGuid">Guid плагина, который в данный момент выполняет чтение статусов указанного элемента</param>
            <param name="elementStatuses">Битовый массив всех статусов обрабатываемого элемента в виде массива байт.
            Часть битов принадлежит указанному плагину и должна быть считана в виде 16-битного числа</param>
            <returns>Статусы текущего элемента, принадлежащие указанному плагину (не больше 16 бит)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IElementStatusesClientService.GetElementStatuses32(System.String,System.Byte[])">
            <summary>
            Считать статусы указанного элемента из подмножества бит указанного плагина 
            с учётом того, что суммарная длина статусов не превышает 32 бита
            </summary>
            <param name="pluginGuid">Guid плагина, который в данный момент выполняет чтение статусов указанного элемента</param>
            <param name="elementStatuses">Битовый массив всех статусов обрабатываемого элемента в виде массива байт.
            Часть битов принадлежит указанному плагину и должна быть считана в виде 32-битного числа</param>
            <returns>Статусы текущего элемента, принадлежащие указанному плагину (не больше 32 бит)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IElementStatusesClientService.SetElementStatuses16(System.String,System.Byte[],System.Int16)">
            <summary>
            Записать статусы указанного элемента в подмножество бит указанного плагина 
            с учётом того, что суммарная длина статусов не превышает 16 бит
            </summary>
            <param name="pluginGuid">Guid плагина, который в данный момент выполняет запись статусов указанного элемента</param>
            <param name="elementStatuses">Битовый массив всех статусов обрабатываемого элемента в виде массива байт.
            Часть битов принадлежит указанному плагину и должна быть записана из 16-битного числа</param>
            <param name="value">Статусы текущего элемента, принадлежащие указанному плагину (не больше 16 бит)</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IElementStatusesClientService.SetElementStatuses32(System.String,System.Byte[],System.Int32)">
            <summary>
            Записать статусы указанного элемента в подмножество бит указанного плагина 
            с учётом того, что суммарная длина статусов не превышает 32 бита
            </summary>
            <param name="pluginGuid">Guid плагина, который в данный момент выполняет запись статусов указанного элемента</param>
            <param name="elementStatuses">Битовый массив всех статусов обрабатываемого элемента в виде массива байт.
            Часть битов принадлежит указанному плагину и должна быть записана из 32-битного числа</param>
            <param name="value">Статусы текущего элемента, принадлежащие указанному плагину (не больше 16 бит)</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.PropertyEditors.IEditorDialogStyle">
            <summary>
            Описывает поведение редактора
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.PropertyEditors.IEditorDialogStyle.MultiValues">
            <summary>
            Разрешать выбор нескольких значений
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IProcessFileService">
            <summary>
            Служба предварительной обработки значения файлового атрибута при просмотре или редактировании
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IProcessFileService.FileProcessEvent">
            <summary>
            Событие назначения аутентичных файлов на версию объекта 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IProcessFileService.FireFileProcessEvent(Intermech.Interfaces.Client.FileProcessEventArgs)">
            <summary>
            Запустить событие FileProcessEvent
            </summary>
            <param name="eventArgs"></param>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileProcessEventArgs.IsHandled">
            <summary>
            Если true, то уже обработан другими обработчиками
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileProcessEventArgs.ObjectType">
            <summary>
            Тип объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileProcessEventArgs.ObjectId">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileProcessEventArgs.attributableElement">
            <summary>
            объект-связь
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileProcessEventArgs.AttributeId">
            <summary>
            Идентификатор атрибута
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileProcessEventArgs.ValueIndex">
            <summary>
            Индекс в файловом атрибуте
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileProcessEventArgs.BlobInformation">
            <summary>
            BlobInformation значения файлового атрибута
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileProcessEventArgs.LaunchType">
            <summary>
            Тип запуска - просмотр или редактирование
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileProcessEventArgs.#ctor(System.Int64,Intermech.AttributableElements,System.Int32,System.Int32,System.Int32,Intermech.Interfaces.BlobInformation,Intermech.Tools.LaunchActions.LaunchType)">
            <summary>
            
            </summary>
            <param name="objectId">Версия объекта</param>
            <param name="attributableElement">объект-связь</param>
            <param name="objectType">Тип объекта</param>
            <param name="attributeId">Идентификатор атрибута</param>
            <param name="valueIndex">Индекс в файловом атрибуте</param>
            <param name="bi">BlobInformation значения файлового атрибута</param>
            <param name="launchType">Тип запуска - просмотр или редактирование</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IExtensionsService">
            <summary>служба для работы с настройками просмотра файлов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IExtensionsService.Methods">
            <summary>
            Методы для открытия просмотра
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IExtensionsService.Properties">
            <summary>
            Свойства для открытия просмотра
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IExtensionsService.DebugMode">
            <summary>
            Отладочный режим - включает/выключает запись отладочной информации при просмотре файлов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IExtensionsService.WriteSignsAndParams">
            <summary>
            Записывать подписи и параметры в файл перед просмотром
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IExtensionsService.GetStoredFileExtensionsInfo">
            <summary>
            Описания настроек открытия файлов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IExtensionsService.GetPriorityViewAuthenticFileObjTypes">
            <summary>
            Получить перечень типов объектов, для которых приоритетный порядок отображения аутентичных файлов 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IExtensionsService.ChangeSettings(System.Collections.Generic.IReadOnlyCollection{Intermech.Interfaces.Client.FileExtensionsInfo},System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IReadOnlyCollection{System.Int32})">
            <summary>Изменить настройки для просмотра файлов</summary>
            <param name="settings">новые настройки</param>
            <param name="methods">новое значение методы для открытия просмотра</param>
            <param name="properties">новое значние свойства для открытия просмотра</param>
            <param name="debugMode">отладочный режим</param>
            <param name="writeSignsAndParams"></param>
            <param name="priorViewAuthFilesObjTypes"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IExtensionsService.CheckDefaultFileExtensions">
            <summary>
            Обновить возможные настройки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IExtensionsService.ReloadParams">
            <summary>
            Перечитать настройки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IExtensionsService.GetFileExtensionsInfo(System.String)">
            <summary>
            Получить настройки просмотра для расширения
            </summary>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IExtensionsService.AddFileExtensionInfoToCache(System.String,Intermech.Interfaces.Client.FileExtensionsInfo)">
            <summary>
            Добавить настройку в кэш спешно просматриваемых, для данного расшиерния
            </summary>
            <param name="extension"></param>
            <param name="fileExtensionsInfo"></param>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.Native">
            <summary>
            Файлы открывающиеся через MapObject
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.Internal">
            <summary>
            Файлы типа txt, reg, cmd, bat
            которые не открываются через PreviewHandler
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.ActiveX">
            <summary>
            ActiveX
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.Shell">
            <summary>
            В новом процессе
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.Default">
            <summary>
            В новом процессе по умолчанию
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.CommandLine">
            <summary>
            В новом процессе по командной линии
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.PreView">
            <summary>
            Preview handler
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.ExtractImage">
            <summary>
            ExtractImage
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.InternalExtractView">
            <summary>
            Извлекает превьею непосредственно из файла, посредством специального сервиса IPS
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.PrevThumbnail">
            <summary>
            Thumbnail
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.StyleView.Unknown">
            <summary>
            Неизвестный
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ExtensionsConsts.ExactSpecificationExtension">
            <summary>
            Фейковое расширение точной спецификации
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ExtensionsConsts.LibraryImageExtension">
            <summary>
            Фейковое расширение файлов библиотечных изображений
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISelectionFormCustomCommandsService">
            <summary>
            Сервис для добавления команды в форму редактирования условия выборок SelectionForm
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISelectionFormCustomCommandsService.Register(Intermech.Interfaces.Client.ISelectionFormCustomCommandsSubscriber)">
            <summary>
            Регистрация подписчика
            </summary>
            <param name="subscriber"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISelectionFormCustomCommandsService.UnRegister(Intermech.Interfaces.Client.ISelectionFormCustomCommandsSubscriber)">
            <summary>
            Дерегистрация подписчика
            </summary>
            <param name="subscriber"></param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ISelectionFormCustomCommandsService.Subscribers">
            <summary>
            Список всех подписчиков
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISelectionFormCustomCommandsService.EnableButton(Intermech.Kernel.Search.ConditionStructure[],Intermech.Kernel.Search.ConditionStructure,System.String)">
            <summary>
            Проверка дступности элемента управления для команды в текущий момент.
            </summary>
            <param name="allConditions">Все условия выборки</param>
            <param name="current">Условие текущего нода в treeList</param>
            <param name="name">Название кнопки</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISelectionFormCustomCommandsSubscriber">
            <summary>
            Интерфейc, который должен реализовать подписчик формы редактировая условий выборки
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ISelectionFormCustomCommandsSubscriber.Buttons">
            <summary>
            Дополнительные кнопки в тулбар и контекстное меню
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISelectionFormCustomCommandsSubscriber.EnableButton(Intermech.Kernel.Search.ConditionStructure[],Intermech.Kernel.Search.ConditionStructure,System.String,System.Boolean@)">
            <summary>
            Доступность элемента управления для команды, дергается при перерисовке доступности элементов управления на форме.
            </summary>
            <param name="allConditions">Все условия выборки</param>
            <param name="current">Условие текущего нода в treeList</param>
            <param name="name">Название команды</param>
            <param name="handled">Флаг того, что подписчик обработал доступность элемента управления</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISelectionFormCustomCommandsSubscriber.Edit(Intermech.Kernel.Search.ConditionStructure,System.Boolean@)">
            <summary>
            Метод вызывается у подписчиков при нажатии кнопки Редактировать
            </summary>
            <param name="current">Условие текущего нода в treeList</param>
            <param name="handled">Флаг того, что подписчик обработал команду Редактировать</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.SelectionFormCommand">
            <summary>
            Команда формы редактирования условия выборок SelectionForm
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SelectionFormCommand.Name">
            <summary>
            Название команды. Должно быть уникально в пределах всего IPS
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SelectionFormCommand.Caption">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SelectionFormCommand.Index">
            <summary>
            Индекс
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SelectionFormCommand.Image">
            <summary>
            Изображение для кнопки на тулбаре
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SelectionFormCommand.OnClickHandler">
            <summary>
            Обработчик нажатия
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.SelectionFormCommandExecHandler">
            <summary>
            Делегат на событие, возникающие при вызове команды в диалоге редактирования условий выборки
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.SelectionFormCommandExecEventArgs">
            <summary>
            Аргументы на событие, возникающие  при вызове команды в диалоге редактирования условий выборки
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SelectionFormCommandExecEventArgs.SelectionForm">
            <summary>
            Ссылка на форму редактирования условий выборки в которой произошло событие
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SelectionFormCommandExecEventArgs.Condition">
            <summary>
            Текущее условие
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISelectionForm">
            <summary>
            Интерфейс на форму редактирования условий выборки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISelectionForm.Add(Intermech.Kernel.Search.ConditionStructure)">
            <summary>
            Добавить новые условия
            </summary>
            <param name="cs"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISelectionForm.Replace(Intermech.Kernel.Search.ConditionStructure)">
            <summary>
            Изменить текущее условие
            </summary>
            <param name="cs"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ITemporaryConditions.DisableConditionStructures(System.Int64,System.Collections.Generic.List{System.Int32})">
            <summary>
            Установить в кэше массив с индексами отключенных условий для выборки
            </summary>
            <param name="selectionID">ID выборки</param>
            <param name="conditionIndexes">Массив с индексами отключенных условий</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ITemporaryConditions.SetTemporaryValues(System.Int64,System.Collections.Generic.List{System.Object[]})">
            <summary>
            Установить в кэше массив с индексами условий и временными значениями для них
            </summary>
            <param name="selectionID">ID выборки</param>
            <param name="values">Временные значения</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ITemporaryConditions.RemoveTemporaryValues(System.Int64)">
            <summary>
            Удалить из кэша массив с временными значениями для выборки
            </summary>
            <param name="selectionID">ID выборки</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ITemporaryConditions.GetTemporaryValues(System.Int64)">
            <summary>
            Получить временные значения для выборки
            </summary>
            <param name="selectionID">ID выборки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ITemporaryConditions.IsTemporaryValuesPresent(System.Int64)">
            <summary>
            Флаг того, что выборке установлены временные значение
            </summary>
            <param name="selectionID">ID выборки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ITemporaryConditions.IsEnabledConditionStructure(System.Int64,System.Int32)">
            <summary>
            Проверить, включено ли условие выборки с индексом conditionIndex
            </summary>
            <param name="selectionID">ID выборки</param>
            <param name="conditionIndex">Индекс условия в массиве условий выборки</param>
            <returns>true - указанное условие включено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ITemporaryConditions.GetValue(System.Int64)">
            <summary>
            ПОлучить временные значения для выборки
            </summary>
            <param name="selectionID">ID выборки</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.TimePatrol">
            <summary>
            Содержит утилиты для контроля за расхождением времени клиента и сервера IPS.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.TimePatrol.GetInstantClientTimeDelay(Intermech.Interfaces.IUserSession)">
            <summary>
            Возвращает мгновенную задержку клиентского времени относительно серверного. Если эту задержку добавить к системному времени клиента, то время клиента и сервера будет
            синхронизировано.
            </summary>
            <param name="session">Сессия подключения к серверу приложений</param>
            <returns>Результы измерения задержки клиентского времени относительно серверного</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.TimePatrol.GetMeanClientTimeDelay(Intermech.Interfaces.IUserSession)">
            <summary>
            Возвращает усредненную задержку клиентского времени относительно серверного. Если эту задержку добавить к системному времени клиента, то время клиента и сервера будет
            синхронизировано.
            </summary>
            <param name="session">Сессия подключения к серверу приложений</param>
            <returns>Результы измерения задержки клиентского времени относительно серверного</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.TimePatrol.CheckClientTime(System.TimeSpan)">
            <summary>
            Проверяет соответствие клиентского и серверного времени. Если время расходится более, чем на допустимую величину, то метод сбрасывает FaultException.
            </summary>
            <param name="offsetLimit">Величина предельно допустимого расхождения времени клиента и сервера</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.TimePatrol.SetSystemTime(System.DateTime)">
            <summary>
            Устанавливает системное время. Метод требует наличия у пользователя прав администратора (SE_SYSTEMTIME_NAME privilege).
            </summary>
            <param name="utcTime">Новое системное время в формате UTC</param>
        </member>
        <member name="F:Intermech.Interfaces.Client.TimePatrol.GeneralLimit">
            <summary>
            Возвращает предельно допустимую разницу между клиентским и серверным временем в самом общем случае.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.TimePatrol.MinimalLimit">
            <summary>
            Возвращает допустимую разницу между клиентским и серверным временем, при превышении которой выполняется
            автоматическая синхронизация системного времени клиента с сервером.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.FindCompositionCopyingHandlerEventArgs">
            <summary>
            Аргументы события для выбора метод клонирования структуры объекта.
            </summary>
            <remarks>
            Обработчик события должен заполнить свойство <see cref="P:Intermech.Interfaces.Client.FindCompositionCopyingHandlerEventArgs.Handler"/>,
            если может клонировать структуру выбранного объекта, и если
            свойство еще не было заполнено другим обработчиком.
            </remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.FindCompositionCopyingHandlerEventArgs.#ctor(Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider)">
            <summary>
            Создает объект.
            </summary>
            <param name="items">Выбранные элементы интерфейса пользователя</param>
            <param name="viewServices">Контекстные сервисы интерфейса пользователя. Параметр может быть не задан</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="items"/> содержит null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.FindCompositionCopyingHandlerEventArgs.Items">
            <summary>
            Возвращает выбранные элементы интерфейса пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FindCompositionCopyingHandlerEventArgs.ViewServices">
            <summary>
            Возвращает контекстные сервисы интерфейса пользователя.
            Значение свойства может быть не задано и равно null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FindCompositionCopyingHandlerEventArgs.Handler">
            <summary>
            Возвращает или задает метод клонирования структуры объекта.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeValidationScriptParameters.ObjectAttributeValues">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeValidationScriptParameters.RelationAttributeValues">
            <summary>
            
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IAttributeChangingEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAttributeChangingEventHandler.AttributeChanging(Intermech.Interfaces.Client.AttributeChangingEventArgs)">
            <summary>
            Изменение значения атрибута.
            </summary>
            <param name="args">Параметр</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.AttributeChangingEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeChangingEventArgs.FormID">
            <summary>
            Идентификатор формы.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeChangingEventArgs.ObjectID">
            <summary>
            Идентификатор основного объекта/связи.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeChangingEventArgs.ObjectTypeID">
            <summary>
            Тип основного объекта/связи.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeChangingEventArgs.OldObjectAttributes">
            <summary>
            Старые (до изменения) значения атрибутов основного объекта/связи.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeChangingEventArgs.NewObjectAttributes">
            <summary>
            Новые значения атрибутов основного объекта/связи.
            </summary>
            <remarks>
            Сюда подписчики записывают значения атрибутов, после их изменения.
            Измененные значения вернутся в форму и будут отображены в контролах.
            </remarks>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeChangingEventArgs.RelationID">
            <summary>
            Идентификатор дополнительной связи.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeChangingEventArgs.RelationTypeID">
            <summary>
            Тип дополнительной связи.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeChangingEventArgs.OldRelationAttributes">
            <summary>
            Старые (до изменения) значения атрибутов дополнительной связи.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AttributeChangingEventArgs.NewRelationAttributes">
            <summary>
            Новые значения атрибутов дополнительной связи.
            </summary>
            <remarks>
            Сюда подписчики записывают значения атрибутов, после их изменения.
            Измененные значения вернутся в форму и будут отображены в контролах.
            </remarks>
        </member>
        <member name="T:Intermech.Interfaces.Client.ParameterForScript">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ParameterForScript.ObjectAttributeValues">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ParameterForScript.RelationAttributeValues">
            <summary>
            
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICompositionCopyingDispatcherService">
            <summary>
            Интерфейс сервиса диспетчера для механизмов клонирования структуры объектов.
            Диспетчер позволяет выбрать подходящий метод клонирования в зависимости от головного объекта.
            </summary>
            <remarks>
            Реализация сервиса должна быть thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICompositionCopyingDispatcherService.FindHandler(Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider)">
            <summary>
            Выполняет поиск подходящего метода клонирования структуры объекта.
            </summary>
            <param name="items">Выбранные элементы интерфейса пользователя</param>
            <param name="viewServices">Контекстные сервисы интерфейса пользователя. Параметр может быть не задан</param>
            <returns>Найденный метод или null</returns>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="items"/> содержит null</exception>
        </member>
        <member name="E:Intermech.Interfaces.Client.ICompositionCopyingDispatcherService.FindBySelectedItems">
            <summary>
            Событие для выбора метода клонирования структуры объекта,
            используя выбранные элементы интерфейса пользователя.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICSharpScriptClientContext">
            <summary>
            Объект контекста для клиентских C#-сценариев, выполняемых в изолированном окружении.
            Через этот объект сценарии могут обращаться к API основного приложения.
            </summary>
            <remarks>
            Сервисы основного приложения доступны в виде свойств контекста.
            </remarks>
        </member>
        <member name="F:Intermech.Interfaces.Client.InformationRequest.PreviewForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.PreviewForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.PreviewForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.InformationRequest.ScreenshotSelector.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.ScreenshotSelector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.ScreenshotSelector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.InformationRequest.ThumbnailViewerControl.ImageList">
            <summary>
            Список для созданных скриншотов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.InformationRequest.NativeMethods.MonitorInfoEx.Size">
            <summary>
            The size, in bytes, of the structure. Set this member to sizeof(MONITORINFOEX) (72) before calling the GetMonitorInfo function.
            Doing so lets the function determine the type of structure you are passing to it.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.InformationRequest.NativeMethods.MonitorInfoEx.Monitor">
            <summary>
            A RECT structure that specifies the display monitor rectangle, expressed in virtual-screen coordinates.
            Note that if the monitor is not the primary display monitor, some of the rectangle's coordinates may be negative values.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.InformationRequest.NativeMethods.MonitorInfoEx.WorkArea">
            <summary>
            A RECT structure that specifies the work area rectangle of the display monitor that can be used by applications,
            expressed in virtual-screen coordinates. Windows uses this rectangle to maximize an application on the monitor.
            The rest of the area in rcMonitor contains system windows such as the task bar and side bars.
            Note that if the monitor is not the primary display monitor, some of the rectangle's coordinates may be negative values.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.InformationRequest.NativeMethods.MonitorInfoEx.Flags">
             <summary>
             The attributes of the display monitor.
            
             This member can be the following value:
               1 : MONITORINFOF_PRIMARY
             </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.InformationRequest.NativeMethods.MonitorInfoEx.DeviceName">
            <summary>
            A string that specifies the device name of the monitor being used. Most applications have no use for a display monitor name,
            and so can save some bytes by using a MONITORINFO structure.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.InformationRequest.InformationRequest">
            <summary>
             сформировать и отправить в техподдержку ошибку или вопрос
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.SaveReportToXml(System.Exception,System.String)">
            <summary>
            Собрать информацию об ошибки и сохранить её в файл, указанный пользователем 
            </summary>
            <param name="ex">ошибка</param>
            <param name="reportZipName">имя архива, в котором будет сохранён отчёт</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.CreateScreenshot(System.String,System.Collections.IDictionary)">
            <summary>
            Сделать скриншот экрана
            </summary>
            <param name="filePath">имя файла, в котором будет храниться скриншот</param>
            <param name="exceptionData">Доп. данные об обработке исключения</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.CreateDump(System.String)">
            <summary>
            Сделать дамп памяти клиента
            </summary>
            <param name="exceptionData"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.SaveToFile(Intermech.Interfaces.InformationNode,System.String)">
            <summary>
             сохранить отчёт в поток
            </summary>
            <param name="report"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.WriteIntoXml(Intermech.Interfaces.XMLSettingsStorage,System.Xml.XmlNode,Intermech.Interfaces.InformationNode)">
            <summary>
             добавляем узлы с информацией в xml
            </summary>
            <param name="sets"></param>
            <param name="parentNode"></param>
            <param name="currentInfoNode"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.SendReport(System.Exception,System.String,System.String)">
            <summary>
            сформировать отчёт об ошибке и отправить его в техподдержку
            </summary>
            <param name="ex">ошибка</param>
            <param name="reportTopic"> тема письма</param>
            <param name="reportText"> текст письма </param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.SendRequest(Intermech.Interfaces.InformationNode,System.String[])">
            <summary>
            отправить запрос  в техподдержку
            </summary>
            <param name="additionalInformation">Может быть информация оо исключении или информация от пользователя</param>
            <param name="attach">файлы, которые хочет отправить пользователь </param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.FormReport(Intermech.Interfaces.InformationNode,System.String,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="information"></param>
            <param name="reportFolderName"></param>
            <param name="exceptionData">Доп. данные об обработке исключения</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.InformationRequest.InformationRequest.FormReportDelegate">
            <summary>
            
            </summary>
            <param name="information"></param>
            <param name="reportFolderName"></param>
            <param name="exceptionData">Доп. данные об обработке исключения</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.InternalFormReport(Intermech.Interfaces.InformationNode,System.String,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="information"></param>
            <param name="reportFolderName"> папка, в которой будет храниться отчёт </param>
            <param name="exceptionData">Доп. данные об обработке исключения</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.GetClientLogFiles">
            <summary>
            Список файлов с логами клиента
            </summary>
            <param name="logSize"></param>
            <returns>Список файлов логов удовлетворяющий условиям что файл с логами не должен превышеть 1 мб</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.ClientInformation">
            <summary>
             собираем всё что можно о клиенте
            </summary>
            <returns></returns>        
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.ServerInformation">
            <summary>
            собираем информацию о сервере
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.ClientOutput">
            <summary>
            Получить информацию из окна Вывод
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.InformationRequest.InformationRequest.CreateMiniDump(System.String,System.Int32)">
            <summary>
            Создать мини-дамп
            </summary>
            <param name="logPath">По какому пути</param>
            <param name="dumpType">Какого типа</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IOpenAsObjectSupport">
            <summary>
            Интерфейс описывает поддержку команды окна "Открыть в новом окне как объект"
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientEventLog">
            <summary>
            Класс поддержки с клиентской стороны записи в журнал событий 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientEventLog.AddEvent4Attributable(System.Int64,Intermech.AttributableElements,System.Int32,System.String,System.String,Intermech.ActionType,Intermech.EventlogRecordType)">
            <summary>
            Записать в лог событие для объекта или связи  
            </summary>
            <param name="id">id версии объекта или связи</param>
            <param name="attributableElement">объект или связь</param>
            <param name="element">тип объекта или связи</param>
            <param name="objectName">для объектов "имя_объекта_IDBObjectType.ObjectInstanceName 'caption'"; для связи ?</param>
            <param name="note">комментарий; Environment.NewLine для перевода строк</param>
            <param name="actionType">тип действия</param>
            <param name="recordType">тип записи</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientEventLog.AddEvent4Attributable(System.Int64,Intermech.AttributableElements,System.String,Intermech.ActionType,Intermech.EventlogRecordType)">
            <summary>
            Записать в лог событие для объекта или связи с самостоятельным уточнением недостающей информации
            </summary>
            <param name="id">id версии объекта или связи</param>
            <param name="attributableElement">объект или связь</param>
            <param name="note">комментарий; Environment.NewLine для перевода строк</param>
            <param name="actionType">тип действия</param>
            <param name="recordType">тип записи</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.FileReplacedEventArgs">
            <summary>
            Аргументы для события замены файла в файловом атрибуте.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileReplacedEventArgs.ReplaceFileIndex">
            <summary>
            Индекс заменённого файла
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileReplacedEventArgs.AttributableElement">
            <summary>
            Вид элемента - объект IPS, связь и т.д.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileReplacedEventArgs.ElementID">
            <summary>
            Идентификатор объекта или связи, у которого произошла замена
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileReplacedEventArgs.ElementType">
            <summary>
            Идентификатор типа объекта или связи, у которого произошла замена
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileReplacedEventArgs.FileType">
            <summary>
            Тип файла где произошла замена
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FileReplacedEventArgs.AttributeID">
            <summary>
            Идентификатор атрибута в котором произошла замена файла
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IIMViewerClientService">
            <summary>
            Интерфейс клиентского сервиса интеграции с IMViewer.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IIMViewerClientService.Settings">
            <summary>
            Возвращает глобальные настройки интеграции с IMViewer.
            Настройки зачитываются при старте приложения и в дальнейшем не изменяются.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMViewerClientService.CanHaveViewerObject(System.Int32)">
            <summary>
            Проверяет, может ли у документа указанного типа быть связанный с ним объект IMViewer.
            </summary>
            <param name="documentTypeId">Идентификатор типа документа</param>
            <returns>Результат проверки</returns>
            <exception cref="T:System.ArgumentException">параметр <paramref name="documentTypeId"/> содержит некорректное значение</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMViewerClientService.HasViewerObject(System.Int64,System.Int32)">
            <summary>
            Проверяет, имеется ли у указанного документа связанный с ним объект IMViewer.
            </summary>
            <param name="documentId">Идентификатор версии документа</param>
            <param name="documentTypeId">Идентификатор типа документа</param>
            <returns>Результат проверки</returns>
            <exception cref="T:System.ArgumentException">параметр <paramref name="documentId"/> содержит некорректное значение; параметр <paramref name="documentTypeId"/> содержит некорректное значение</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMViewerClientService.FindViewerObjectId(System.Int64,System.Int32)">
            <summary>
            Находит для указанного документа связанный с ним объект IMViewer.
            </summary>
            <param name="documentId">Идентификатор версии документа</param>
            <param name="documentTypeId">Идентификатор типа документа</param>
            <returns>Идентификатор версии объекта IMViewer</returns>
            <exception cref="T:System.ArgumentException">параметр <paramref name="documentId"/> содержит некорректное значение; параметр <paramref name="documentTypeId"/> содержит некорректное значение</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMViewerClientService.GetViewerDataForOpenFiles(System.Int64,System.Int32,Intermech.Interfaces.VersionsRulePackage)">
            <summary>
            Возвращает данные, необходимые для извлечения на локальный диск файлов IMViewer,
            связанных с указанным документом.
            </summary>
            <param name="documentId">Идентификатор версии документа</param>
            <param name="documentTypeId">Идентификатор типа документа</param>
            <param name="versionsRule">Правило подбора версий</param>
            <returns>Данные для извлечения на локальный диск файлов IMViewer</returns>
            <exception cref="T:System.ArgumentException">параметр <paramref name="documentId"/> содержит некорректное значение; параметр <paramref name="documentTypeId"/> содержит некорректное значение</exception>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="versionsRule"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMViewerClientService.GetViewerModelConfigurationName(System.Int64,System.Int32,System.String)">
            <summary>
            Возвращает имя конфигурации 3D-модели для IMViewer.
            </summary>
            <param name="documentId">Идентификатор версии документа</param>
            <param name="documentTypeId">Идентификатор типа документа</param>
            <param name="savedConfigurationName">Имя конфигурации, сохраненное в базе данных</param>
            <returns>Имя конфигурации 3D-модели для IMViewer</returns>
            <exception cref="T:System.ArgumentException">параметр <paramref name="documentId"/> содержит некорректное значение; параметр <paramref name="documentTypeId"/> содержит некорректное значение</exception>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="savedConfigurationName"/> содержит null</exception>
        </member>
        <member name="T:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams">
            <summary>
            Параметры выбора из каталогов / справочников Imbase
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.#ctor(System.String,System.String,System.Object,System.Boolean,System.Boolean,System.Int32[],System.Int32)">
            <summary>
            Выбирает один объект из указанного Каталога.
            </summary>
            <param name="caption">Заголовок окна при выборе</param>
            <param name="description"></param>
            <param name="catalogObject">Идентификатор Каталога ( Guid, Идентификатор версии(Int64) или имя (string))</param>
            <param name="rawObject">Указывает, создавать ли объект нового типа(false) или вернуть сам выбранный объект(true)</param>
            <param name="commitCreation">Указывает создавать ли объект в базе (true) или возвращать заготовку (возвращает отрицательный objectId)</param>
            <param name="allowedTypes">Список базовых объектов IMBASE, которые могут быть выбраны</param>
            <param name="needType">Тип создаваемого объекта или -1 для типа, определяемого по атрибутам</param>
            <returns>Идентификатор выбранного объекта или -1 при отмене выбора</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.Caption">
            <summary>
            Заголовок окна при выборе
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.CatalogObject">
            <summary>
            Идентификатор Каталога ( Guid, Идентификатор версии(Int64) или имя (string))
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.RawObject">
            <summary>
            Указывает, создавать ли объект нового типа(false) или вернуть сам выбранный объект(true)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.CommitCreation">
            <summary>
            Указывает создавать ли объект в базе (true) или возвращать заготовку (возвращает отрицательный objectId)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.AllowedTypes">
            <summary>
            Список базовых объектов IMBASE, которые могут быть выбраны
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.NeedType">
            <summary>
            Тип создаваемого объекта или -1 для типа, определяемого по атрибутам
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.ContextObjectId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.SelectedItemsAnalyzer">
            <summary>
             Кастомный анализатор, передается когда работа стандартного анализатора противоречит логике
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams.SelectionOptions">
            <summary>
            Флаги управления режимом выбора
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMViewerPublishItem">
            <summary>
            Описывает объект IMViewer в паре с исходным документом.
            Объекты этого типа используются при извлечение файлов объектов IMViewer на локальный диск 
            для открытия в приложении-просмотрщике.
            </summary>
            <remarks>
            Реализация является immutable и thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMViewerPublishItem.#ctor(Intermech.Files.DBObjectState,Intermech.Files.DBObjectState,Intermech.ObjectContentStatus)">
            <summary>
            Создает объект.
            </summary>
            <param name="sourceDocument">Исходный документ</param>
            <param name="sidecarObject">Объект IMViewer</param>
            <param name="sidecarContentStatus">Статус содержимого объекта IMViewer по отношению к исходному документу</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="sourceDocument"/> содержит null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMViewerPublishItem.SourceDocument">
            <summary>
            Возвращает исходный документ.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMViewerPublishItem.SidecarObject">
            <summary>
            Возвращает объект IMViewer.
            Если объект IMViewer еще не был сгенерирован для исходного документа,
            то значение свойства будет равно null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMViewerPublishItem.SidecarContentStatus">
            <summary>
            Возвращает статус содержимого объекта IMViewer по отношению к исходному документу.
            Если объект IMViewer еще не был сгенерирован для исходного документа,
            то значение свойства будет равно <see cref="F:Intermech.ObjectContentStatus.NotSet"/>.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPdfPrintCenterService">
            <summary>
            Интерфейс сервиса подключения к центру печати через remoting
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPdfPrintCenterService.CreateDocumentInfo(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Создаёт объект, реализующий интерфейс IPDMDocumentInfo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPdfPrintCenterService.LaunchPdfPrintCenter">
            <summary>
            Осуществляет подключение к центру печати pdf с помощью remoting
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPdfPrintCenterService.AddFilesToPrintCenter(System.Collections.Generic.List{Intermech.Interfaces.Client.IPDMDocumentInfo})">
            <summary>
            Добавляет pdf-документы из выбранных объектов в центр печати pdf
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPDMDocumentInfo">
            <summary>
            Интерфейс для изоляции класса PDMDocumentInfo, необходимого для передачи данных центру печати
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IPDMDocumentInfo.ObjectName">
            <summary>
            Возвращает заголовок документа в PDM-системе.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IPDMDocumentInfo.FilePaths">
            <summary>
            Возвращает путь к файлу документа на локальном диске.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPrintPDFCommandFactory">
            <summary>
            Фабрика для создания команды печати PDF "PrintPDFCommand"
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IThumbImageProvider">
            <summary>
            Интерфейс представления абстрактного изображения
            для просмотра эскизов страниц
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IThumbImageProvider.Image">
            <summary>
            Получить изображение
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IUndoService">
            <summary>
            Сервис отвечающий за выпадающие списки на кнопках отменить и вернуть
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IUndo">
            <summary>
            Данный интерфейс должно поддерживать окно, которое управляет кнопками отменить и вернуть
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IUndo.Undo(Intermech.Interfaces.Client.UndoItem)">
            <summary>
            Отменить все действия до указанного
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IUndo.Redo(Intermech.Interfaces.Client.UndoItem)">
            <summary>
            Вернуть все действия до указанного
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.UndoItem.Caption">
            <summary>
            Заголовок на кнопках
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UndoItem.Tag">
            <summary>
            Некий объект ко которому окно будет идентифицировать что отменять
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DataTableSortHelper">
            <summary>
            Набор статических методов для подготовки к сортировке таблицы с данными DataTable  
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IFavoritesWindow">
            <summary>
            Ссылка на окно "Избранное"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFavoritesWindow.Update">
            <summary>
            Принудительно обновить содержимое окна
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFavoritesWindow.IsVisible">
            <summary>
            Открыто ли окно в данный момент на экране
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IFavoritesUpdateClientService">
            <summary>
            Служба для обновления дерева Избранного
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IFavoritesUpdateClientService.OnFavoritesChanged">
            <summary>
            Событие "Изменился список Избранного"
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IFavoritesUpdateClientService.OnAddObjectTypeToFavorites">
            <summary>
            Событие "Добавлен новый тип объектов в Избранное"
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intermech.Interfaces.Client.IFavoritesUpdateClientService.Update" -->
        <member name="M:Intermech.Interfaces.Client.IFavoritesUpdateClientService.Notify">
            <summary>
            Принудительно обновить недавние объекты, разослав уведомление
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.RelInfo">
            <summary>
            Краткая информация по связи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RelInfo.ProjID">
            <summary>
            Идентификатор версии родительского объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RelInfo.ProjTypeID">
            <summary>
            Идентификатор типа родительского объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.RelInfo.RelType">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.RelInfo.#ctor(System.Int64,System.Int32,System.Int32)">
            <summary>
            Создать краткую информацию по связи
            </summary>
            <param name="projID">Идентификатор версии родительского объекта</param>
            <param name="projTypeID">Идентификатор типа родительского объекта</param>
            <param name="relType">Идентификатор типа связи</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.RelInfo.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.RelInfo.Equals(System.Object)">
            <summary>
            Выполнить сравнение с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true - объекты равны</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.RelInfo.ToString">
            <summary>
            Получить строковое представление экземпляра класса
            </summary>
            <returns>Строковое представление экземпляра класса</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.CDBObjectCollectionProxy">
            <summary>
            Реализует клиентскую обертку для серверной коллекции объектов IDBObjectCollection.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBObjectCollectionProxy.CheckAttributesValues(System.Collections.Generic.Dictionary{System.Int64,Intermech.Interfaces.AttributeValues[]})">
            <summary>
            Метод проверяет правильность новых значений атрибутов при создании объектов/связей по прототипу от других объектов/связей
            </summary>
            <param name="ckeckedValues">Словарь ид. версии объекта/связи=набор новых значений атрибутов</param>
            <returns>Массив ошибок при проверке (если ошибок нет массив пусто)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBObjectCollectionProxy.CreateVersionInternal(System.Int64)">
            <summary>
            Создает версию указанного объекта, учитывая возможность создания версий парных объектов.
            </summary>
            <param name="objectId">Идентификатор версии объекта, для которого нужно создать новую версию</param>
            <returns>
            Объект, содержащий результат создания версии объекта. ВНИМАНИЕ! Процесс создания версии объекта не является
            завершенным. Необходимо подтвердить или отменить создание версии методами Commit/Rollback.
            </returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBObjectCollectionProxy.CreateVersionEx(System.Int64)">
            <summary>
            Создает версию объекта с учетом создания совместных версий объектов.
            </summary>
            <param name="objectID">Идентификатор исходной версии объекта</param>
            <returns>Массив идентификаторов версий созданных объектов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBObjectCollectionProxy.CreateVersion(System.Int64)">
            <summary>
            Создает версию объекта с учетом создания парных версий объектов.
            </summary>
            <param name="objectID">Идентификатор исходной версии объекта</param>
            <returns>Созданная версия объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBObjectCollectionProxy.ActualDateObjectVersion(System.Int64,Intermech.Interfaces.VersionsRule)">
            <summary>
            Отыскать версию объекта, которая существована на указанную дату
            на указанном уровне продвижения или на указанном шаге ЖЦ
            (значения даты и уровня/шага ЖЦ находятся в правиле подбора версий).
            Если версия не найдена, вернётся значение -1
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="rule">Правило подбора версий, в которое включены:
            - дата актуального состава,
            - уровень продвижения или шаг жизненного цикла</param>
            <returns>Найденный идентификатор версии объекта или -1. Статус найденной версии</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBObjectCollectionProxy.GetObjectVersionFiltrationState(System.Int64,Intermech.Interfaces.VersionsRule)">
            <summary>
            Получить статус версии объекта согласно указанному правилу подбора версий
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="rule">Правило подбора версий</param>
            <returns>Статус версии объекта согласно указанному правилу подбора версий</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBObjectCollectionProxy.ShowAllModifications">
            <summary>
            Показывать версии из всех контекстов редактирования
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CreateVersionResult">
            <summary>
            Описывает результат создания версии объекта с учетом выпуска версий парных объектов.
            ВНИМАНИЕ! При получении объекта этого класса на сервере остается включенным режим
            регистрации создаваемых объектов и связей. Необходимо подтвердить или откатить
            операцию создания версии с помощью методов Commit/Rollback у этого класса.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CreateVersionResult.#ctor(System.Int64,Intermech.Interfaces.IDBObject)">
            <summary>
            Создает объект.
            </summary>
            <param name="objectId">Идентификатор исходной версии объекта</param>
            <param name="newObjectVersion">Новая версия объекта</param>
            <exception cref="T:System.ArgumentException">Идентификатор исходной версии объекта не задан</exception>
            <exception cref="T:System.ArgumentNullException">Ссылка на новую версию объекта не может быть null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.CreateVersionResult.Commit(Intermech.Interfaces.IUserSession)">
            <summary>
            Подтверждает создание версии исходного объекта и версий парных ему объектов.
            </summary>
            <param name="session">Пользовательская сессия</param>
            <exception cref="T:System.ArgumentNullException">Ссылка на пользовательскую сессию не может быть null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.CreateVersionResult.Rollback(Intermech.Interfaces.IUserSession)">
            <summary>
            Отменяет создание версии исходного объекта и версий парных ему объектов. Все созданные версии объектов
            будут удалены.
            </summary>
            <param name="session">Пользовательская сессия</param>
            <exception cref="T:System.ArgumentNullException">Ссылка на пользовательскую сессию не может быть null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.CreateVersionResult.ObjectId">
            <summary>
            Возвращает идентификатор исходной версии объекта.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CreateVersionResult.NewObjectVersion">
            <summary>
            Возвращает новую версию исходной версии объекта.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CreateVersionResult.SourceVersions">
            <summary>
            Возвращает список дескрипторов исходных версий объектов.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CreateVersionResult.TargetVersions">
            <summary>
            Возвращает список дескрипторов созданных версий объектов. Этот список попарно соответствует
            содержимому SourceVersions.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IClientDBObjectCollection">
            <summary>
            Дополнительные возможности в клиентской обертке над IDBObjectCollection.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CDBTransactionsProxy">
            <summary>
            Реализует клиентскую обертку для серверного сервиса IDBTransactions.
            </summary>
            <remarks>
            Создание обертки стало возможно благодаря тому, что IDBTransactions не является реальным серверным сервисом,
            а реализуется самой пользовательской сессией.
            </remarks>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBTransactionsProxy.ServerObject">
            <summary>
            Возвращает необернутый серверный объект.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CMetadataExtentions">
            <summary>
            Прокси-класс для работы с расширениями метаданных
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CMetadataExtentions._idxFldValue">
            <summary>
            Индекс поля F_VALUE
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.GetServerExtentions">
            <summary>
            Получение серверного объекта
            </summary>
            <returns></returns>
        </member>
        <member name="F:Intermech.Interfaces.Client.CMetadataExtentions._AttributeTypeID">
            <summary>
            Ид. атрибута для работы с расширенными метаданными
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CMetadataExtentions._ObjectTypeID">
            <summary>
            Ид. типа объектов для работы с расширенными метаданными
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CMetadataExtentions._RelationTypeID">
            <summary>
            Ид. типа связей для работы с расширенными метаданными
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.#ctor(Intermech.Interfaces.Client.ClientSession,System.Int32)">
            <summary>
            Создает объект.
            </summary>
            <param name="session">Клиентская сессия</param>
            <param name="id">Идентификатор элемента метаданных</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.CMetadataExtentions.ExtensionsTable">
            <summary>
            Ссылка на таблицу с расширениями метаданных IMS_MD_EXTENSIONS
            </summary>        
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.SetMDValues(System.String,System.Int32,System.String[])">
            <summary>
            Записывает в расширенные матаданные именованный набор значений строкового типа
            </summary>
            <param name="valueName"></param>
            <param name="categoryType"></param>
            <param name="valuesList"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.SetMDValues(System.String,System.Int32,System.Int32[])">
            <summary>
            Записывает в расширенные матаданные именованный набор значений типа int
            </summary>
            <param name="valueName"></param>
            <param name="categoryType"></param>
            <param name="valuesList"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.SetMDValues(System.String,System.Int32,System.Int64[])">
            <summary>
            Записывает в расширенные матаданные именованный набор значений типа long
            </summary>
            <param name="valueName"></param>
            <param name="categoryType"></param>
            <param name="valuesList"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.SetMDValues(System.String,System.Int32,System.Guid[])">
            <summary>
            Записывает в расширенные матаданные именованный набор значений типа Guid
            </summary>
            <param name="valueName"></param>
            <param name="categoryType"></param>
            <param name="valuesList"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.SetMDValues(System.String,System.String[])">
            <summary>
            Записывает в расширенные матаданные именованный набор значений
            </summary>
            <param name="valueName">Имя значений</param>
            <param name="valuesList">Список значений - будет записан в указанном порядке</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.SetMDValue(System.String,System.Int32,System.String)">
            <summary>
            
            </summary>
            <param name="valueName"></param>
            <param name="categoryType"></param>
            <param name="value"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.SetMDValue(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="valueName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.GetMDValue(System.String)">
            <summary>
            
            </summary>
            <param name="valueName"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.GetMDValues(System.String)">
            <summary>
            Возвращает строковый список значений для параметра valueName
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.GetMDValuesInt(System.String)">
            <summary>
            Возвращает целочисленный список значений для параметра valueName
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.GetMDValuesGuid(System.String)">
            <summary>
            Возвращает список значений для параметра valueName в виде гуидов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.GetMDValuesInt64(System.String)">
            <summary>
            Возвращает список значений для параметра valueName в виде Int64
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMetadataExtentions.ReloadClientCache">
            <summary>
            
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientSessionObjectProxy">
            <summary>
            Базовый класс для клиентских оберток для серверных объектов, принадлежащих одной конкретной пользовательской сессии сервера приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSessionObjectProxy.#ctor(Intermech.Interfaces.Client.ClientSession,System.Object)">
            <summary>
            Создает объект.
            </summary>
            <param name="clientSession">Обернутая пользовательская сессия сервера приложений, которой принадлежит текущий объект</param>
            <param name="serverObjectMbr">Серверный объект</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="clientSession"/> равен null; параметр <paramref name="serverObjectMbr"/> равен null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSessionObjectProxy.ClientSession">
            <summary>
            Возвращает обернутую пользовательскую сессию сервера приложений, которой принадлежит текущий объект.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSessionObjectProxy.Intermech#RemotingLite#IRemoteObjectProxyWrapper#Unwrap">
            <summary>
            Возвращает transparent proxy.
            Метод в случае, если экземпляр <see cref="T:Intermech.Interfaces.Client.ClientSessionObjectProxy"/> утекает через remoting на серверную сторону.
            </summary>
            <returns>transparent proxy</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientDiagnosticsConsts">
            <summary>
            Константы для систем диагностики клиентских приложений IPS.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientDiagnosticsConsts.EventLogSourceName">
            <summary>
            Имя источника событий для общесистемных журналов событий.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IDraftDocumentsIdCache">
            <summary>
            Интерфейс контейнера метаданных, относящихся к черновикам документов.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IDraftDocumentsIdCache.DraftDocuments">
            <summary>
            Тип объектов "Черновики документов".
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IDraftDocumentsIdCache.ExternalFilePath">
            <summary>
            Атрибут "Внешний файл черновика документа". Значение атрибута содержит путь к файлу, который необходимо импортировать в базу данных IPS,
            чтобы преобразовать черновик в полноценный документ.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IDraftDocumentsService">
            <summary>
            Интерфейс сервиса черновиков документов. Документы специального типа "Черновики документов" используются в базе данных IPS в качестве
            временных заменителей нормальных документов, если создание нормальных документов временно невозможно.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IDraftDocumentsService.IdCache">
            <summary>
            Возвращает контейнер метаданных, относящихся к черновикам документов.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IDraftDocumentsService.FindDraftDocumentByFilename(System.String)">
            <summary>
            Находит в базе данных IPS черновик документа по имени внешнего файла черновика документа.
            </summary>
            <param name="relativeFilename">Имя внешнего файла черновика документа в относительной форме</param>
            <returns>Идентификатор версии для найденного черновика документа или null</returns>
            <exception cref="T:ArgumentNullException">Параметр <paramref name="relativeFilename"/> не должен быть равен null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IDraftDocumentsService.GetCurrentUserDraftDocuments">
            <summary>
            Находит в базе данных IPS все черновики документов, принадлежащие текущему пользователю.
            </summary>
            <returns>Список пар вида (идентификатор версии черновика, имя файла черновика)</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClassWrapperForPropertyGrid">
            <summary>
            Summary description for ClassWrapperForPropertyGrid.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClassWrapperForPropertyGrid.LocalizedPropertyDescriptor">
            <summary>
            Настраиваемый PropertyDescriptor, 
            который является оболочкой для PropertyDescriptor выдаваемого 
            TypeDescriptor.GetProperties
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClassWrapperForPropertyGrid.LocalizedPropertyDescriptor._propDesc">
            <summary>Исходный PropertyDescriptor полученный TypeDescriptor.GetProperties</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClassWrapperForPropertyGrid.LocalizedPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>Конструктор</summary>
            <param name="propDesc">Исходный PropertyDescriptor полученный TypeDescriptor.GetProperties, 
            на основе которого работает класс</param>
            <param name="oldValue"></param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClassWrapperForPropertyGrid.LocalizedPropertyDescriptor.Category">
            <summary>Просто обращается к исходному объекту</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClassWrapperForPropertyGrid.LocalizedPropertyDescriptor.OldValue">
            <summary>
            Получает или устанавливает старое(неизмененное) значение для поля.
            При изменении в ProprtyGrid позволяет выделять жирным 
            шрифтом измененные значения при помощи метода ShouldSerializeValue.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClassWrapperForPropertyGrid.LocalizedPropertyDescriptor.SetDisplayName(System.String)">
            <summary>
            Устанавливает отображаемое имя свойства без использования атрибута.
            </summary>
            <param name="value">Отображаемое имя</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClassWrapperForPropertyGrid.LocalizedPropertyDescriptor.DisplayName">
            <summary>
            Это свойство возвращает название свойства, отображаемое в propertyGrid
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IElementListCreatorService">
            <summary>
            Сервис по созданию перечня элементов (ПЭ) для электрических CAD
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IElementListCreatorService.CreateElementList(Intermech.Interfaces.IUserSession,System.Int64,System.Int32,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{Intermech.Interfaces.Client.SimpleRecord},System.Object)">
            <summary>
            Создать перечень элементов
            </summary>
            <param name="session">Пользовательская сессия</param>
            <param name="documentID">Идентификатор версии документа ПЭ</param>
            <param name="documentTypeID">Идентификатор типа документа ПЭ</param>
            <param name="assemblyIDs">Список составообразующих сборок</param>
            <param name="records">Список элементов ПЭ, не связанных с объектами, например контактные площадки и т.п.</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.OutputViewMessageReporter">
            <summary>
            Реализует адаптер для вывода многострочных сообщений в окно "Вывод".
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.OutputViewMessageReporter.#ctor(Intermech.Interfaces.IOutputView,System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="outputView">Сервис окна "Вывод"</param>
            <param name="categoryName">Имя вкладки в окне, на которую будут выводиться сообщения</param>
            <exception cref="T:ArgumentNullException">outputView, categoryName</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.OutputViewMessageReporter.DoWriteLine(System.String)">
            <summary>
            Выводит строку текста текущего сообщения. Вывод текста может быть отложен до момента, пока сообщение не будет завершено с помощью метода <see cref="M:EndMessage"/>.
            </summary>
            <param name="text">Текст сообщения</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IControlServiceContainer">
            <summary>
            Контейнер сервисов, привязанный к контролу и связанной с ней иерархией вложенности контролов
              родительским провайдером для данного контейнера сервисов всегда выступает ближайший по иерархии вверх владелец связанного с интерфейсом контрола, поддерживающий IContextAware или IServiceProvider
            наследуется от IAdvancedServiceContainer, то есть может иметь дополнительный список сервисов, связанным с логическим контекстом
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IControlServiceContainer.Control">
            <summary>Ассоциированный с контейнером сервисов контрол</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IControlServiceContainer.ParentControlServices">
            <summary>Родительский сервис контейнеров</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IUINotificationService">
            <summary>
            Интерфейс сервиса UI уведомлений - показывает BaloonTooltip в системном трее и запоминает  
            их в специальном окне, если юзер на них не отреагировал в течении таймаута.
            Реализация должна быть thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IUINotificationService.ShowNotification(Intermech.Interfaces.Client.UINotification)">
            <summary>
            Отображает уведомление в интерфейсе пользователя в специальном окне и во всплывающей подсказке.
            </summary>
            <param name="notification">Уведомление</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="notification"/> содержит null</exception>
        </member>
        <member name="E:Intermech.Interfaces.Client.IUINotificationService.NotificationAction">
            <summary>
            Событие обработки действия, связанного с уведомлением.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IUINotificationService.GetUINotificationAction(Intermech.Interfaces.NotifySamples.NSDifferences,System.String)">
            <summary>
            Получить функцию обработки для Уведомления 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.UINotificationAction">
            <summary>
            Описатель действия, связанного с <see cref="T:Intermech.Interfaces.Client.UINotification"/>.
            Реализация является immutable.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.UINotificationAction.#ctor(System.String,System.Uri,System.String)">
            <summary>
            Создает объект.
            Вместо прямого вызова конструктора следует использовать класс <see cref="T:Intermech.Interfaces.Client.UINotificationActionBuilder"/>
            </summary>
            <param name="name">Имя действия</param>
            <param name="data">Данные действия (параметр может быть не задан)</param>
            <param name="anchorText">Текст для привязки к сообщению уведомления</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.UINotificationAction.Name">
            <summary>
            Возвращает имя действия.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UINotificationAction.Data">
            <summary>
            Возвращает данные действия.
            Значение может быть не задано и равно null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UINotificationAction.AnchorText">
            <summary>
            Возвращает текст привязки действия к сообщению уведомления.
            Значение может быть не задано и равно пустой строке.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.UINotificationActionEventArgs">
            <summary>
            Аргументы для события обработки действия, связанного с уведомлением.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.UINotificationActionEventArgs.#ctor(Intermech.Interfaces.Client.UINotification,Intermech.Interfaces.Client.UINotificationAction)">
            <summary>
            Создает объект
            </summary>
            <param name="notification">уведомление</param>
            <param name="action">выбранное пользователем действие, связанное с уведомлением</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="notification"/> содержит null; параметр <paramref name="action"/> содержит null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.UINotificationActionEventArgs.Notification">
            <summary>
            Уведомление
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UINotificationActionEventArgs.Action">
            <summary>
            Выбранное пользователем действие, связанное с уведомлением
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UINotificationActionEventArgs.Handled">
            <summary>
            Признак, что событие было обработано
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UINotificationBuilder.OldContentAction">
            <summary>
            Старый обработчик нажатия на тело уведомления (в форме делегата).
            Значение свойства может быть не задано, для изменения следует использовать метод <see cref="M:Intermech.Interfaces.Client.UINotificationBuilder.SetContentAction(System.Action)"/>.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UINotificationBuilder.ContentAction">
            <summary>
            Новый обработчик нажатия на тело уведомления
            Значение свойства может быть не задано, для изменения следует использовать метод <see cref="M:Intermech.Interfaces.Client.UINotificationBuilder.SetContentAction(Intermech.Interfaces.Client.UINotificationActionBuilder)"/>.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.UINotification">
            <summary>
            Уведомление для отображения в интерфейсе пользователя.
            Показывается в виде всплывающей подсказки и в виде элемента списка в окне "Уведомления".
            Реализация является immutable.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.UINotification.#ctor(System.DateTime,System.String,System.String,Intermech.Interfaces.Client.UINotificationIcon,System.Exception,System.Action,Intermech.Interfaces.Client.UINotificationAction,System.Collections.Generic.ICollection{Intermech.Interfaces.Client.UINotificationAction},Intermech.Interfaces.NotifySamples.NSDifferences)">
            <summary>
            Создает объект.
            Вместо прямого вызова конструктора следует использовать класс <see cref="T:Intermech.Interfaces.Client.UINotificationBuilder"/>
            </summary>
            <param name="dateTime"></param>
            <param name="message"></param>
            <param name="caption"></param>
            <param name="icon"></param>
            <param name="error"></param>
            <param name="oldContentAction"></param>
            <param name="contentAction"></param>
            <param name="actions"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.SimpleAttributableRecord">
            <summary>
            Простая запись набором произвольных атрибутов для ПЭ не связанная с объектом,
            например контактная площадка, капля припоя и т.п.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.SimpleRecord">
            <summary>
            Простая запись для ПЭ не связанная с объектом,
            например контактная площадка, капля припоя и т.п.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SimpleRecord.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SimpleRecord.PosDesignation">
            <summary>
            Позиционное обозначение
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ConnectionBrokerStrategy">
            <summary>
            Реализует стратегию подключения к серверу приложений через брокер подключений. Если через брокера подключение получить не удаётся - пытается подключиться по обычным настройкам.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ConnectionBrokerStrategy._ServerName">
            <summary>
            Имя сервера, на котором работает брокер
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ConnectionBrokerStrategy._ServerPort">
            <summary>
            Порт, на котором работает брокер
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ConnectionBrokerStrategy.DoConnect(Intermech.RemotingLite.RemotingClientConfiguration,Intermech.Interfaces.Client.IMServerConnectInfo,System.Collections.Generic.IList{Intermech.Interfaces.Client.IMServerConnectInfo},Intermech.Interfaces.Client.IMServerConnectInfo,System.String)">
            <summary>
            Выбирает подходящих сервер приложений и подключается к нему. Об ошибках подключения к серверу метод должен сообщать
            с помощью исключения типа <see cref="T:IMServerConnectionException"/>.
            </summary>
            <param name="remotingConfiguration">Конфигурация клиента remoting</param>
            <param name="mainServer">Адрес и параметры подключения для основного сервера приложений</param>
            <param name="knownServers">Адреса и параметры подключаения для всех доступных серверов приложений</param>
            <param name="lastConnectedServer">Адрес и параметры подключения для последнего успешно подключенного сервера. Может быть null</param>
            <param name="lastDBConnectionString">Строка подключения к базе для последнего успешно подключенного сервера. Может быть пустой</param>
            <returns>Кортеж с информацией о подключенном сервере приложений: (адрес сервера, объект сервера)</returns>
            <exception cref="T:IMServerConnectionException">Ошибка подключения к серверу приложений</exception>
        </member>
        <member name="T:Intermech.Interfaces.Client.CreateCustomServiceProxyEventArgs">
            <summary>
            Аргументы для события создания клиентского прокси-объекта для серверного сервиса.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CreateCustomServiceProxyEventArgs.#ctor(System.Type,System.Object)">
            <summary>
            Создает объект.
            </summary>
            <param name="serviceType">Тип серверного сервиса</param>
            <param name="serviceInstance">Экземпляр серверного сервиса</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.CreateCustomServiceProxyEventArgs.ServiceType">
            <summary>
            Тип серверного сервиса.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CreateCustomServiceProxyEventArgs.ServiceInstance">
            <summary>
            Экземпляр серверного сервиса.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CreateCustomServiceProxyEventArgs.ServiceProxy">
            <summary>
            Экземпляр клиентского прокси-объекта для серверного сервиса.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CreateCustomServiceProxyEventArgs.Handled">
            <summary>
            Признак, что событие было обработано.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CyclicServerConnectionStrategy">
            <summary>
            Реализует простейший алгоритм выбора сервера приложений из нескольких доступных - при обрыве подключения к текущему серверу
            приложений выполняется подключение к следующему доступному.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CyclicServerConnectionStrategy.DoConnect(Intermech.RemotingLite.RemotingClientConfiguration,Intermech.Interfaces.Client.IMServerConnectInfo,System.Collections.Generic.IList{Intermech.Interfaces.Client.IMServerConnectInfo},Intermech.Interfaces.Client.IMServerConnectInfo,System.String)">
            <summary>
            Выбирает подходящих сервер приложений и подключается к нему. Об ошибках подключения к серверу метод должен сообщать
            с помощью исключения типа <see cref="T:IMServerConnectionException"/>.
            </summary>
            <param name="remotingConfiguration">Конфигурация клиента remoting</param>
            <param name="mainServer">Адрес и параметры подключения для основного сервера приложений</param>
            <param name="knownServers">Адреса и параметры подключаения для всех доступных серверов приложений</param>
            <param name="lastConnectedServer">Адрес и параметры подключения для последнего успешно подключенного сервера. Может быть null</param>
            <param name="lastDBConnectionString">Строка подключения к базе для последнего успешно подключенного сервера. Может быть пустой</param>
            <returns>Кортеж с информацией о подключенном сервере приложений: (адрес сервера, объект сервера)</returns>
            <exception cref="T:IMServerConnectionException">Ошибка подключения к серверу приложений</exception>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerAppConfigurationProxy">
            <summary>
            Клиентский прокси-сервис для серверного сервиса IMServerAppConfiguration.
            Он получает все серверные значения опций и ключей трассировки за одно обращение к серверу приложений,
            а затем кэширует их на все время жизни клиента IPS.
            </summary>
            <remarks>
            Реализация является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerAppConfigurationProxy.#ctor(Intermech.Interfaces.IMServerAppConfiguration)">
            <summary>
            Создает объект.
            </summary>
            <param name="serverService">Серверный сервис</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="serverService"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerAppConfigurationProxy.GetOption(System.String)">
            <summary>
            Возвращает значение указанной опции из app.config сервера приложений из секции appSettings.
            </summary>
            <param name="optionName">Имя опции</param>
            <returns>Значение опции или null, если указанная опция не найдена, либо ее чтение запрещено по соображениям безопасности</returns>
            <exception cref="T:ArgumentNullException">optionName</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerAppConfigurationProxy.GetAllOptions">
            <summary>
            Возвращает все значения опций из app.config сервера приложений из секции appSettings.
            </summary>
            <returns>Словарь значений опций</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerConnectInfo">
            <summary>
            Информация об адресе и параметрах подключения к серверу приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectInfo.#ctor(System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="serverUrl">url для подключения к серверу приложений</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerConnectInfo.Url">
            <summary>
            Возвращает url для подключения к серверу приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectInfo.Equals(Intermech.Interfaces.Client.IMServerConnectInfo)">
            <summary>
            Проверяет равенство текущего и указанного объектов.
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>Признак равенства объектов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectInfo.Equals(System.Object)">
            <summary>
            Проверяет равенство текущего и указанного объектов.
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>Признак равенства объектов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectInfo.GetHashCode">
            <summary>
            Вычисляет хэш-код текущего объекта.
            </summary>
            <returns>Хэш-код текущего объекта</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerConnectionErrorInfo">
            <summary>
            Информация об ошибке подключения к <see cref="T:Intermech.Interfaces.IMServer"/> или о сбое создания сессии сервера приложений типа <see cref="T:Intermech.Interfaces.IUserSession"/>
            </summary>
            <remarks>
            Реализация является immutable и thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionErrorInfo.#ctor(System.String,System.String)">
            <summary>
            Создает объект
            </summary>
            <param name="exceptionType">Тип возникшей исключительной ситуации</param>
            <param name="exceptionText">Текст исключительной ситуации</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="exceptionType"/> не должен быть null; параметр <paramref name="exceptionText"/> не должен быть null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerConnectionErrorInfo.ExceptionType">
            <summary>
            Тип возникшей исключительной ситуации
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerConnectionErrorInfo.ExceptionText">
            <summary>
            Текст исключительной ситуации
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerConnectionErrorReporter">
            <summary>
            Базовый класс для вспомогательного объекта, отвечающего за вывод диагностических сообщений о подключении к <see cref="T:Intermech.Interfaces.IMServer"/>
            или о создании сессий сервера приложений <see cref="T:Intermech.Interfaces.IUserSession"/>.
            Реалзация должна быть thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionErrorReporter.#ctor">
            <summary>
            Создает объект
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionErrorReporter.ReportEvent(System.Boolean,System.String)">
            <summary>
            Выводит информацию о событии.
            </summary>
            <param name="isError">Признак сообщения об ошибке</param>
            <param name="eventMessage">Сообщение о наступлении события</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionErrorReporter.ReportException(System.Exception,System.String)">
            <summary>
            Выводит информацию о подавленном исключении.
            Метод используется в тех случаях, когда исключение не может быть обработано традиционным способом.
            </summary>
            <param name="exception">Объект исключения</param>
            <param name="errorMessage">Сообщение об ошибке</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionErrorReporter.TryGetEventLogService">
            <summary>
            Возвращает сервис доступа к журналам событий приложения.
            Метод может вернуть null.
            </summary>
            <returns>Экземпляр сервиса или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionErrorReporter.TryGetOutputView">
            <summary>
            Возвращает сервис доступа к окну "Вывод" приложения.
            Метод может вернуть null.
            </summary>
            <returns>Экземпляр сервиса или null</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerConnectionErrorStrategy">
            <summary>
            Базовый класс для алгоритмов обработки ошибок подключения к серверу приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionErrorStrategy.FormatConnectionException(Intermech.Interfaces.Client.IMServerConnectionException)">
            <summary>
            Возвращает описание ошибки подключения к серверу приложений,
            пригодное для вывода в журналы приложения или для показа пользователю.
            </summary>
            <param name="exception">Исключение, возникшее при попытке подключения к серверу приложений</param>
            <returns>Описание ошибки подключения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionErrorStrategy.GetMostInformativeException(Intermech.Interfaces.Client.IMServerConnectionException)">
            <summary>
            Находит и возвращает наиболее информативное исключение для показа пользователю
            </summary>
            <param name="exception">Исходное исключение</param>
            <returns>Наиболее информативное исключение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionErrorStrategy.HandleConnectionException(Intermech.Interfaces.Client.IMServerConnectionException)">
            <summary>
            Обрабатывает ошибку подключения к серверу приложений.
            </summary>
            <param name="exception">Исключение, возникшее при попытке подключения к серверу приложений</param>
            <returns>Способ переподключения к серверу приложений</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerConnectionException">
            <summary>
            Исключение, возникающее при попытке подключения к серверу приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionException.#ctor(System.String,System.Boolean)">
            <summary>
            Создает объект.
            </summary>
            <param name="message">Сообщение об ошибке</param>
            <param name="tryLater">Признак, что продолжать попытки подключения к серверу приложений</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionException.#ctor(System.String,System.Boolean,System.Exception)">
            <summary>
            Создает объект.
            </summary>
            <param name="message">Сообщение об ошибке</param>
            <param name="tryLater">Признак, что продолжать попытки подключения к серверу приложений</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerConnectionException.TryLater">
            <summary>
            Возвращает признак, указывающий, стоит ли продолжать попытки подключения к серверу приложений.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerConnectionStrategy">
            <summary>
            Базовый класс для алгоритмов выбора сервера приложений из нескольких доступных.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionStrategy.#ctor">
            <summary>
            Создает объект
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionStrategy.Connect(Intermech.RemotingLite.RemotingClientConfiguration,Intermech.Interfaces.Client.IMServerConnectInfo,System.Collections.Generic.IList{Intermech.Interfaces.Client.IMServerConnectInfo})">
            <summary>
            Выбирает подходящих сервер приложений и подключается к нему. Об ошибках подключения к серверу приложений метод сообщает
            с помощью исключения типа <see cref="T:IMServerConnectionException"/>.
            </summary>
            <param name="remotingConfiguration">Конфигурация клиента remoting</param>
            <param name="mainServer">Адрес и параметры подключения для основного сервера приложений</param>
            <param name="knownServers">Адреса и параметры подключаения для всех доступных серверов приложений</param>
            <returns>Кортеж с информацией о подключенном сервере приложений: (адрес сервера, объект сервера)</returns>
            <exception cref="T:IMServerConnectionException">Ошибка подключения к серверу приложений</exception>
            <exception cref="T:ArgumentNullException">remotingConfiguration || mainServer || knownServers</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionStrategy.DoConnect(Intermech.RemotingLite.RemotingClientConfiguration,Intermech.Interfaces.Client.IMServerConnectInfo,System.Collections.Generic.IList{Intermech.Interfaces.Client.IMServerConnectInfo},Intermech.Interfaces.Client.IMServerConnectInfo,System.String)">
            <summary>
            Выбирает подходящих сервер приложений и подключается к нему. Об ошибках подключения к серверу метод должен сообщать
            с помощью исключения типа <see cref="T:IMServerConnectionException"/>.
            </summary>
            <param name="mainServer">Адрес и параметры подключения для основного сервера приложений</param>
            <param name="knownServers">Адреса и параметры подключаения для всех доступных серверов приложений</param>
            <param name="lastConnectedServer">Адрес и параметры подключения для последнего успешно подключенного сервера. Может быть null</param>
            <param name="lastDBConnectionString">Строка подключения к базе для последнего успешно подключенного сервера. Может быть пустой</param>
            <returns>Кортеж с информацией о подключенном сервере приложений: (адрес сервера, объект сервера)</returns>
            <exception cref="T:IMServerConnectionException">Ошибка подключения к серверу приложений</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionStrategy.TestConnection(Intermech.RemotingLite.RemotingClient{Intermech.Interfaces.IMServer})">
            <summary>
            Позволяет убедиться, что сервер приложений отвечает.
            </summary>
            <param name="remotingClient">Объект сервера приложений</param>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerConnectionStrategy.IsRemotingException(System.Exception)">
            <summary>
            Проверяет, является ли указанный объект исключением Remoting.
            </summary>
            <param name="obj">Проверяемый объект</param>
            <returns>Признак, что это исключение Remoting</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerInteractiveConnectionErrorStrategy">
            <summary>
            Интерактивный алгоритм обработки ошибок подключения к серверу приложений, который
            в диалоговом режиме спрашивает у пользователя, что требуется делать дальше.
            Реализация является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerInteractiveConnectionErrorStrategy.#ctor(Intermech.UI.IUIDispatcherService)">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerInteractiveConnectionErrorStrategy.CanAbortConnection">
            <summary>
            Возвращает или задает флаг, разрешающий пользователю при обрыве подключения к серверу приложений отказаться от восстановления подключения.
            По умолчанию значение свойства равно true.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerInteractiveConnectionErrorStrategy.HandleConnectionException(Intermech.Interfaces.Client.IMServerConnectionException)">
            <summary>
            Обрабатывает ошибку подключения к серверу приложений, спрашивая у пользователя, что требуется делать дальше. 
            </summary>
            <param name="exception">Исключение, возникшее при попытке подключения к серверу приложений</param>
            <returns>Способ переподключения к серверу приложений</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerReconnectType">
            <summary>
            Способы переподключения к серверу приложений.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerService">
            <summary>
            Клиентский сервис, предоставляющий доступ к главному объекту сервера приложений (IMServer).
            Подключение к серверу приложений выполняется лениво при первом обращении к любому методу или свойству сервиса.
            Реализация сервиса является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerService.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerService.IsConnected">
            <summary>
            Возвращает признак, что подключение к серверу приложений уже установлено.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerService.ServerUrl">
            <summary>
            Возвращает Url объекта подключенного сервера приложений. 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerService.ServerObject">
            <summary>
            Возвращает объект подключенного сервера приложений.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerService.ConnectionErrorStrategy">
            <summary>
            Возвращает или задает стратегию обработки ошибок подключения к серверу приложений.
            Значение свойства не может быть null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerService.ConnectionErrorReporter">
            <summary>
            Возвращает или задает объект для вывода диагностических сообщений.
            Значение свойства не может быть null.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerService.TestConnection">
            <summary>
            Проверяет работоспособность подключения к серверу приложений.
            </summary>
            <returns>true - если подключение к серверу приложений было установлено, а сервер приложений отвечает; иначе - false</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerService.TestConnection(System.Object)">
            <summary>
            Проверяет работоспособность подключения к серверу приложений.
            Подключение считается работоспособным только в том случае, если через remoting 
            доступен не только сам сервер приложений, но и указанный серверный объект.
            </summary>
            <param name="serverObject">Дополнительный серверный объект для проверки подключения</param>
            <returns>true - если подключение к серверу приложений было установлено, а сервер приложений отвечает; иначе - false</returns>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="serverObject"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerService.TestConnection(System.Object[])">
            <summary>
            Проверяет работоспособность подключения к серверу приложений.
            Подключение считается работоспособным только в том случае, если через remoting 
            доступен не только сам сервер приложений, но и указанные серверные объекты.
            </summary>
            <param name="serverObjects">Дополнительные серверные объекты для проверки подключения</param>
            <returns>true - если подключение к серверу приложений было установлено, а сервер приложений отвечает; иначе - false</returns>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="serverObjects"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerService.ResetConnection">
            <summary>
            Разрывает подключение к серверу приложений и очищает все кэшированные сервисом данные, полученные от сервера приложений.
            Метод используется при обрыве подключения к серверу приложений, он обеспечивает возможность восстановления подключения.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IMServerService.Connected">
            <summary>
            Событие, срабатывающее после успешного подключения к серверу приложений.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IMServerService.ConnectionLost">
            <summary>
            Событие, срабатывающиее после обрыва подключения к серверу приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerService.GetLiveStatusService">
            <summary>
            Возвращает сервис для получения состояния сервера приложений.
            </summary>
            <returns>Объект сервиса</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerService.GetAppConfigurationService">
            <summary>
            Возвращает сервис для получения конфигурации сервера приложений из файла app.config.
            </summary>
            <returns>Объект сервиса</returns>
        </member>
        <member name="E:Intermech.Interfaces.Client.IMServerService.CreateCustomServiceProxy">
            <summary>
            Событие создания клиентского прокси-объекта для серверного сервиса.
            Обработчик события вызывается по мере необходимости однократно для каждого типа сервиса после каждого подключения и переподключения к серверу приложений.
            Реализация обработчика должна быть thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerService.GetCustomService(System.Type)">
            <summary>
            Получает интерфейс, зарегистрированный на сервере службой ICustomServices и доступный на стороне клиента
            </summary>
            <param name="serviceType">Тип зарегистрированного интерфейса</param>
            <returns>Требуемый интерфейс или null</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMServerService.AbortApplicationEventArgs">
            <summary>
            Содержит параметры для события аварийного завершения текущего приложения, 
            когда подключение к серверу приложений не представляется возможным.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMServerService.AbortApplicationEventArgs.#ctor(System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="message">Сообщение, отображаемое перед аварийным завершением приложения. Значение параметра может быть не задано</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMServerService.AbortApplicationEventArgs.Message">
            <summary>
            Возвращает или задает сообщение, отображаемое перед аварийным завершением приложения.
            Значение свойства может быть не задано.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.InactiveSessionsCollection">
            <summary>
            Коллекция неактивных пользовательских сессий (т.е. не используемых ни одним потоком и готовых к переиспользованию).
            Реализация не является thread safe.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IUserSessionLoginInfo">
            <summary>
            Интерфейс для чтения параметров входа пользователя на сервер приложений.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IUserSessionLoginInfo.LoginName">
            <summary>
            Возвращает логин пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IUserSessionLoginInfo.UserName">
            <summary>
            Возвращае полное имя пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IUserSessionLoginInfo.RoleName">
            <summary>
            Возвращает название роли пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IUserSessionLoginInfo.RoleId">
            <summary>
            Возвращает идентификатор роли пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IUserSessionLoginInfo.AccessLevel">
            <summary>
            Возвращает уровень доступа пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IUserSessionLoginInfo.ActingUserName">
            <summary>
            Возвращает полное имя пользователя, который исполняет обязанности текущего пользователя.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IUserSessionLoginService">
            <summary>
            Интерфейс сервиса, предоставляющего информацию о параметрах входа пользователя на сервер приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IUserSessionLoginService.GetLoginInfo">
            <summary>
            Возвращает основные параметры входа пользователя на сервер приложений.
            </summary>
            <returns>Объект с основными параметрами входа пользователя на сервер приложений</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IUserSessionPool">
            <summary>
            Интерфейс пула сессий клиента IPS. При получении сервиса следует учитывать, что он не является является необязательным,
            так как не все клиенты IPS используют пул сессий.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IUserSessionPool.TryGetMainSessionLoginInfo">
            <summary>
            Возвращает параметры входа пользователя на сервер приложений, использованные для создания основной сессии.
            </summary>
            <returns>Параметры входа пользователя или null, если основая сессия еще не создна или была закрыта</returns>
        </member>
        <member name="E:Intermech.Interfaces.Client.IUserSessionPool.MainSessionCreated">
            <summary>
            Событие, появляющееся после успешного создания основной сессии.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.MainServerOnlyConnectionStrategy">
            <summary>
            Реализует алгоритм выбора сервера приложений, который всегда подключается только к основному серверу приложений.
            Этот алгоритм используется для обратной совместимости с версиями IPS до 5.0, в которой реализован выбор сервера приложений из списка доступных.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.MainServerOnlyConnectionStrategy.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.MainServerOnlyConnectionStrategy.DoConnect(Intermech.RemotingLite.RemotingClientConfiguration,Intermech.Interfaces.Client.IMServerConnectInfo,System.Collections.Generic.IList{Intermech.Interfaces.Client.IMServerConnectInfo},Intermech.Interfaces.Client.IMServerConnectInfo,System.String)">
            <summary>
            Выбирает подходящих сервер приложений и подключается к нему. Об ошибках подключения к серверу метод должен сообщать
            с помощью исключения типа <see cref="T:IMServerConnectionException"/>.
            </summary>
            <param name="remotingConfiguration">Конфигурация клиента remoting</param>
            <param name="mainServer">Адрес и параметры подключения для основного сервера приложений</param>
            <param name="knownServers">Адреса и параметры подключаения для всех доступных серверов приложений</param>
            <param name="lastConnectedServer">Адрес и параметры подключения для последнего успешно подключенного сервера. Может быть null</param>
            <param name="lastDBConnectionString">Строка подключения к базе для последнего успешно подключенного сервера. Может быть пустой</param>
            <returns>Кортеж с информацией о подключенном сервере приложений: (адрес сервера, объект сервера)</returns>
            <exception cref="T:IMServerConnectionException">Ошибка подключения к серверу приложений</exception>
        </member>
        <member name="T:Intermech.Interfaces.Client.SessionPoolOptionalServices">
            <summary>
            Содержит необязательные сервисы для SessionPool.
            Реализация является thread safe.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.SessionPoolVars">
            <summary>
            Динамические переменные, управляющие работой пула сессий.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolVars.ControlFlowId">
            <summary>
            <para>
            Идентификатор логического подпотока управления в пределах текущего потока (thread). Он используется для 
            корректного выделения сессий из пула, если требуется несколько независимых сессий в пределах одного
            потока (thread): подпотоки управления с разными идентификаторами получат разные сессии из пула.</para>
            <para>
            Переменная ControlFlowId используется в тех случаях, когда у одного потока (thread) имеется несколько точек входа.
            Например, использование метода Control.Invoke создает новую точку входа и логический подпоток управления в UI-thread,
            так как в этом случае UI-thread используется для выполнения фрагмента кода из другого потока (thread).</para>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolVars.CreateControlFlowId">
            <summary>
            Создает и возвращает идентификатор для нового потока управления в пределах текущего thread.
            Метод используется совместно с переменной <see cref="P:Intermech.Interfaces.Client.SessionPoolVars.ControlFlowId"/>.
            </summary>
            <returns>Идентификатор потока управления</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.SaveChangesMode">
            <summary>
            Режимы сохранения изменений в объекте
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SaveChangesMode.Default">
            <summary>
            Обычный режим работы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SaveChangesMode.Checkin">
            <summary>
            Режим сохранения изменений перед завершением редактирования объекта
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.AttributeOptionsStatusHelper">
            <summary>
            Класс-кэш, хранящий состояние опций для атрибута, принадлежащего объекту-связи: 
            сначала определяется применительно к типу объекта-связи (если такое переназначение есть), 
            если не найден, то определяется непосредственно у самого типа атрибута.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AttributeOptionsStatusHelper.#ctor(Intermech.AttributableElements,System.Int32)">
            <summary>
            
            </summary>
            <param name="aAttributableElements">Объект-связь</param>
            <param name="aElementType">Идентификатор объекта-связи, для которых строить кэш опций атрибутов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.AttributeOptionsStatusHelper.CheckOptionStatus(System.Int32,Intermech.AttributeOptions)">
            <summary>
            Вернуть состояние опции для атрибута объекта/связи (инициализируется в конструкторе)
            </summary>
            <param name="aAttributeId"></param>
            <param name="option2check"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.AttributeOptionsStatusHelper.Clear">
            <summary>
            Очистить
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AttributeOptionsStatusHelper.Clear(Intermech.AttributableElements,System.Int32)">
            <summary>
            Очистить с переинициализацией новым объектом-связью
            </summary>
            <param name="aAttributableElements"></param>
            <param name="aElementType"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientSessionGuard">
            <summary>
            Защищает обращения к <see cref="T:Intermech.Interfaces.Client.ClientSession"/> от использования вне <see cref="T:Intermech.Interfaces.SessionKeeper"/>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSessionGuard.#ctor(Intermech.Interfaces.Client.ClientSession)">
            <summary>
            Создает объект.
            </summary>
            <param name="clientSession">Клиентская обертка для <see cref="T:Intermech.Interfaces.IUserSession"/></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSessionGuard.ValidateCall">
            <summary>
            Проверяет, выполняется ли обращение к сессии или сессионному объекту из SessionKeeper. Если это не так, то метод сбрасывает исключение.
            </summary>
            <exception cref="T:Intermech.Interfaces.SessionGuardException">Использование объектов сервера приложений вне SessionKeeper строжайше запрещено</exception>
        </member>
        <member name="T:Intermech.Interfaces.Client.IEntity`2">
            <summary>Оболочка над серверной сущностью</summary>
            <typeparam name="IdType">Тип идентификатора сущности</typeparam>
            <typeparam name="ServerEntityType">Тип серверного интерфейса сущности</typeparam>
        </member>
        <member name="P:Intermech.Interfaces.Client.IEntity`2.ID">
             <summary>Идентификатор сущности</summary>
             <value>The identifier</value>
            
        </member>
        <member name="P:Intermech.Interfaces.Client.IEntity`2.ExistanceStatus">
             <summary>Статус доступности сущности на сервере</summary>
             <value>The existance status</value>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IEntity`2.CheckActual(System.Boolean)">
             <summary>
             Проверить актуальность сущности (была ли изменена на сервере с момента последнего получения изменений и, если уже была изменена,
             вызвать Refresh)
               вызывается каждый раз когда объект данного класса (или потомок) достаётся из кэша репозитория с тем чтобы в том случае,
                 если закэшированные данные устарели вызвать их обновление с сервера.
             </summary>
             <param name="failIfNotFound">если true и проект отсутствует на сервере, то выбросит исключиельную ситуацию</param>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IEntity`2.Invoke(Intermech.Interfaces.Client.ServerEntityHandler{`1},System.Boolean)">
             <summary>Вызов метода у серверного интерфейса сущности (вернёт void)</summary>
             <param name="serverEntityHandler">Метод обработки серверного интерфейса сущности не возвращающий результата (void)</param>
             <param name="failIfNotFound">Если true то попытка вызова для несуществующего объекта выбросит исключительную ситуацию</param>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IEntity`2.TryInvoke(Intermech.Interfaces.Client.ServerEntityHandler{`1})">
             <summary>Вызов метода у серверного интерфейса сущности (вернёт void)</summary>
             <param name="serverEntityHandler">Метод обработки серверного интерфейса сущности не возвращающий результата (void)</param>
             <returns>True, если связь с соотв. сущностью на сервере была успешна установленна, то есть она не удалена и видна нам</returns>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IEntity`2.Invoke``1(Intermech.Interfaces.Client.ServerEntityHandler{`1,``0},System.Boolean)">
             <summary>Вызов метода у серверного интерфейса сущности (вернёт типизированный результат)</summary>
             <typeparam name="T">Тип результата возвращаемого вызовом значения</typeparam>
             <param name="serverEntityHandler">Метод обработки серверного интерфейса сущности и возвращающий типизированный результат</param>
             <param name="failIfNotFound">Если true то попытка вызова для несуществующего объекта выбросит исключительную ситуацию</param>
             <returns>Возвращаемое вызовом значение</returns>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IEntity`2.TryInvoke``1(Intermech.Interfaces.Client.ServerEntityHandler{`1,``0},``0@)">
             <summary>Вызов метода у серверного интерфейса сущности (вернёт типизированный результат)</summary>
             <typeparam name="T">Тип результата возвращаемого вызовом значения</typeparam>
             <param name="serverEntityHandler">Метод обработки серверного интерфейса сущности и возвращающий типизированный результат</param>
             <param name="returnValue">[out] Результат обработки сетевого интерфейса сущности</param>
             <returns>True, если связь с соотв. сущностью на сервере была успешна установленна, то есть она не удалена и видна нам</returns>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.ExistanceStatuses">
            <summary>Возможные статусы доступности сущности на сервере</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ExistanceStatuses.Unknown">
            <summary>
            Неизвестно существует ли сущность на сервере, проверка ещё не производилась
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ExistanceStatuses.Exist">
            <summary>
            По меньшей мере одно соединение с сущностью на сервере уже производилось, соотв. сущность там как минимум была доступна (скорее всего доступна до сих пор)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ExistanceStatuses.NotExistOnServer">
            <summary>
            Последняя попытка получения серверного интерфейса сущности завершилась неудачно, скорее всего сущность отсутствует на сервере, либо вне зоны видимости
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.GetServerInterfaceDelegate`2">
             <summary>Делегат метода получения серверного интерфейса сущности из пользовательской сессии по идентификатору сущности</summary>
             <typeparam name="IdType">Тип идентификатора сущности</typeparam>
             <typeparam name="ServerEntityType">Тип серверного интерфейса сущности</typeparam>
             <param name="session">Пользовательская сессия</param>
             <param name="id">Идентификатор сущности</param>
             <param name="failIfNotFound">Выбрасывать ли исключительную ситуацию если серверный интерфейс сущности не получилось получить (напр.
                                          сущность удалена, либо вышла из зоны видимости)</param>
             <returns>Серверный интерфейс сущности</returns>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.ServerEntityHandler`1">
             <summary>Обработчик серверного интерфейса сущности не возвращающий результата (void)</summary>
             <typeparam name="ServerEntityType">Тип серверного интерфейса сущности</typeparam>
             <param name="serverEntity">Cерверный интерфейс сущности</param>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.ServerEntityHandler`2">
             <summary>Обработчик серверного интерфейса сущности возвращающий типизированный результат</summary>
             <typeparam name="ServerEntityType">Тип серверного интерфейса сущности</typeparam>
             <typeparam name="T">Тип результата обработки серверного интерфейса сущности</typeparam>
             <param name="serverEntity">Серверный интерфейс сущности</param>
             <returns>Результат обработки серверного интерфейса сущности</returns>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.IObject">
            <summary>Интерфейс закэшированного объекта базы данных</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.VersionID">
            <summary>Уникальный идентификатор версии объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.ObjectID">
            <summary>Уникальный идентификатор объекта (НЕ ВЕРСИИ!!!)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.VersionGUID">
            <summary>GUID Версии</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.ObjectGUID">
            <summary>GUID объекта (НЕ ВЕРСИИ!!!)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.Caption">
            <summary>Cтроковое представление объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.CreateDate">
            <summary>Дата создания</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.ModifyDate">
            <summary>Дата последней модификации объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.LCStep">
            <summary>Этап жизненного цикла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.ObjectType">
            <summary>Тип объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.SiteID">
            <summary>Узлы информационной системы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.ParentVersionID">
             <summary>
             Идентификатор версии объекта, на основе которой была создана данная версия объекта. Если это самая первая версия (или родительская
             версия былу удалена), то возвращает -1.
             </summary>
            
        </member>
        <member name="P:Intermech.Interfaces.Client.IObject.ProjectID">
            <summary>Идентификатор проекта, к которому принадлежит объект. Если == 0, то объект создан вне контекста проекта.</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectAttributes">
            <summary>Список полей, для которых доступно авто-кэширование</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.None">
            <summary>Empty</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.ObjectID">
            <summary>Уникальный идентификатор объекта (НЕ ВЕРСИИ!!!)</summary>       
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.VersionGUID">
            <summary>GUID Версии</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.ObjectGUID">
            <summary>GUID объекта (НЕ ВЕРСИИ!!!)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.Caption">
            <summary>Cтроковое представление объекта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.CreateDate">
            <summary>Дата создания</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.ModifyDate">
            <summary>Дата последней модификации объекта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.LCStep">
            <summary>Этап жизненного цикла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.ObjectType">
            <summary>Тип объекта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.SiteID">
            <summary>Узлы информационной системы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.ParentVersionID">
            <summary>Идентификатор версии объекта, на основе которой была создана данная версия объекта.
            Если это самая первая версия (или родительская версия былу удалена), то возвращает -1.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.ProjectID">
            <summary>Идентификатор проекта, к которому принадлежит объект. Если == 0, то объект создан вне контекста проекта.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectAttributes.Default">
            <summary>Список флагов по-умолчанию</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IObjectsOrVersionsRepositoryBase">
            <summary>База для интерфейсов репозиторием версий объектов и объектов. Содержит методы, общие для обоих интерфейсов, общую функциональность для обоих</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectsOrVersionsRepositoryBase.Create(System.Int64,Intermech.Interfaces.Client.ObjectAttributes,System.Boolean)">
             <summary>
             Метод-фабрика объектов или версий объектов в зависимости от того, у которого репозитория (объектов или версий) вызывается.
             </summary>
             <param name="objectOrVersionID">Идентификатор объекта или версии объекта в зависимости от того, у которого репозитория (объектов или
                                             версий) вызывается</param>
             <param name="preLoadAttributes">Список флагов, показывающих какие наборы атрибутов должны быть закэшированы ещё при создании</param>
             <param name="failIfNotFound">Если Тrue, то в случае недоступности серверного интерфейса объекта выбросится исключительная ситуация</param>
             <returns>Созданный контейнер атрибутов объекта</returns>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectsOrVersionsRepositoryBase.TryCreate(System.Int64,Intermech.Interfaces.Client.IObject@,Intermech.Interfaces.Client.ObjectAttributes)">
             <summary>
             Метод-фабрика объектов или версий объектов в зависимости от того, у которого репозитория (объектов или версий) вызывается.
             </summary>
             <param name="objectOrVersionID">Идентификатор объекта или версии объекта в зависимости от того, у которого репозитория (объектов или версий)
                              вызывается</param>
             <param name="iObjectOrVersion">[out] Созданный контейнер атрибутов версии объекта или версии объекта в зависимости от того, у
                                            которого репозитория (объектов или версий) вызывается</param>
             <param name="preLoadAttributes">Список флагов, показывающих какие наборы атрибутов должны быть закэшированы ещё при создании</param>
             <returns>True, если создание прошло успешно</returns>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectsOrVersionsRepositoryBase.GetObjectType(System.Int64,System.Boolean)">
             <summary>
             Получить идентификатор типа объекта по идентификатору объекта или версии объекта в зависимости от того, у которого репозитория
             (объектов или версий) вызывается.
             </summary>
             <param name="objectOrVersionID">Идентификатор объекта или версии объекта в зависимости от того, у которого репозитория (объектов или
                                             версий) вызывается</param>
             <param name="failIfNotFound">Если Тrue, то в случае недоступности серверного интерфейса объекта выбросится исключительная ситуация</param>
             <returns>Идентификатор типа объекта</returns>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.IObjectVersionsRepository">
            <summary>Интерфейс репозитория версий объектов</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IObjectsRepository">
            <summary>Интерфейс репозитория объектов (!!! Не версий объектов !!!)</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISnapshot">
            <summary>Интерфейс итерации</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ISnapshot.Name">
            <summary>Имя</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ISnapshot.ModifyDate">
            <summary>Дата и время последней модификации</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ISnapshot.OwnerID">
            <summary>Владелец</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ISnapshot.RootObjectID">
            <summary>Идентификатор головного объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ISnapshot.RootObjectVersionID">
            <summary>Идентификатор версии головного объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ISnapshot.RootObjectAttributes">
            <summary>Таблица дополнительных атрибутов корневого объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISnapshot.ObjectInSnapshot(System.Int64)">
            <summary>Проверить входит ли версия объекта в итерацию.</summary>
            <param name="objectVerID">Идентификатор версии объекта</param>
            <returns>True если данный объект входит в итерацию</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISnapshot.GetObjectInSnapshotAttributes(System.Int64,System.Boolean)">
            <summary>Получить таблицу дополнительных атрибутов объекта, включённого в итерацию.</summary>
            <param name="objectVerID">Идентификатор версии объекта</param>
            <param name="failIfNotFound">Выбрасывать ли исключение если объект с переданным идентификатором не включён в итерацию</param>
            <returns>Таблица дополнительных атрибутов объекта, включённого в итерацию</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.SnapshotAttributes">
            <summary>Список полей итерации, для которых доступно авто-кэширование</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SnapshotAttributes.None">
            <summary>Пустое значение</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SnapshotAttributes.Name">
            <summary>Имя итерации</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SnapshotAttributes.ModifyDate">
            <summary>Дата и время последней модификации итерации</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SnapshotAttributes.Owner">
            <summary>Владелец итерации</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SnapshotAttributes.RootObject">
            <summary>Идентификатор версии объекта, по которому была создана итерация</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SnapshotAttributes.RootObjectAttributes">
            <summary>Таблица дополнительных атрибутов корневого объекта итерации</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SnapshotAttributes.ObjectsInSnapshot">
            <summary>Идентификаторы версий всех объектов, которые входят в данный снимок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SnapshotAttributes.Default">
            <summary>Список флагов по-умолчанию</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISnapshotsRepository">
            <summary>Интерфейс репозитория итераций объектов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISnapshotsRepository.Create(System.Int64,Intermech.Interfaces.Client.SnapshotAttributes,System.Boolean)">
            <summary>Конструктор экземляров итераций.</summary>
            <param name="snapshotID">Идентификатор итерации</param>
            <param name="preLoadAttributes">Список флагов, показывающих какие наборы атрибутов должны быть закэшированы ещё при создании</param>
            <param name="failIfNotFound">Если Тrue, то в случае недоступности серверного интерфейса итерации выбросится исключительная ситуация</param>
            <returns>Созданная итерация</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISnapshotsRepository.TryCreate(System.Int64,Intermech.Interfaces.Client.ISnapshot@,Intermech.Interfaces.Client.SnapshotAttributes)">
            <summary>Конструктор экземпляров итераций.</summary>
            <param name="snapshotID">Идентификатор итерации</param>
            <param name="snapshot">[out] Созданная итерация</param>
            <param name="preLoadAttributes">Список флагов, показывающих какие наборы атрибутов должны быть закэшированы ещё при создании</param>
            <returns>True, если создание прошло успешно</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IRepository`2">
            <summary>Интерфейс репозитория сущностей определённой категории</summary>
            <typeparam name="IdType">Тип идентификатор сущности в рамках её категории</typeparam>
            <typeparam name="ServerEntityType">Тип интерфейса, реализующего работу с сущностью на сервере</typeparam>
        </member>
        <member name="P:Intermech.Interfaces.Client.IRepository`2.Category">
             <summary>Категория</summary>
            
             <value>The category.</value>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IRepository`2.GetServerInterface(Intermech.Interfaces.IUserSession,`0,System.Boolean)">
             <summary>
             Метод получения серверного интерфейса из сессии
               !!! Использовать только внутри Session.Invoke !!!
             </summary>
             <param name="session">Пользовательская сессия</param>
             <param name="id">Идентификатор сущности</param>
             <param name="failIfNotFound">Выбрасывать ли исключительную ситуацию если серверный интерфейс сущности не получилось получить (напр.
                                          сущность удалена, либо вышла из зоны видимости)</param>
             <returns>Серверный интерфейс сущности</returns>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IRepository`2.Invoke(`0,Intermech.Interfaces.Client.ServerEntityHandler{`1},System.Boolean)">
             <summary>Получение серверного интерфейса сущности и вызов метода её обработки (обработка не возвращает резутата)</summary>
             <param name="id">Идентификатор сущности, метод которого требуется вызвать</param>
             <param name="serverEntityHandler">Метод обработки серверного интерфейса сущности и возвращающий типизированный результат</param>
             <param name="failIfNotFound">Если true то попытка вызова для несуществующего объекта выбросит исключительную ситуацию</param>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IRepository`2.TryInvoke(`0,Intermech.Interfaces.Client.ServerEntityHandler{`1})">
             <summary>Попытка получения серверного интерфейса сущности и вызова метода её обработки (обработка не возвращает резутата)</summary>
             <param name="id">Идентификатор сущности, метод которого требуется вызвать</param>
             <param name="serverEntityHandler">Метод обработки серверного интерфейса сущности и возвращающий типизированный результат</param>
             <returns>true if it succeeds, false if it fails</returns>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IRepository`2.Invoke``1(`0,Intermech.Interfaces.Client.ServerEntityHandler{`1,``0},System.Boolean)">
             <summary>Получение серверного интерфейса сущности и вызов метода её обработки (вернёт типизированный результат)</summary>
             <typeparam name="T">Тип результата возвращаемого вызовом значения</typeparam>
             <param name="id">Идентификатор сущности, метод которого требуется вызвать</param>
             <param name="serverEntityHandler">Метод обработки серверного интерфейса сущности и возвращающий типизированный результат</param>
             <param name="failIfNotFound">Если true то попытка вызова для несуществующего объекта выбросит исключительную ситуацию</param>
             <returns>Возвращаемое вызовом значение</returns>
            
        </member>
        <member name="M:Intermech.Interfaces.Client.IRepository`2.TryInvoke``1(`0,Intermech.Interfaces.Client.ServerEntityHandler{`1,``0},``0@)">
             <summary>Попытка получения серверного интерфейса сущности и вызова метода её обработки (вернёт типизированный результат)</summary>
             <typeparam name="T">Тип результата возвращаемого вызовом значения</typeparam>
             <param name="id">Идентификатор сущности, метод которого требуется вызвать</param>
             <param name="serverEntityHandler">Метод обработки серверного интерфейса сущности и возвращающий типизированный результат</param>
             <param name="returnValue">[out] Результат обработки сетевого интерфейса сущности</param>
             <returns>True, если связь с соотв. сущностью на сервере была успешна установленна, то есть она не удалена и видна нам</returns>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.RepositoryDelegates`3">
            <summary>
            Класс-хранилище делегатов. Выделено, чтобы 1) было public 2) generic-параметры с контрактами были в одном месте, а не в каждом
            делегате.
            </summary>
            <typeparam name="T">Тип создаваемой сущности</typeparam>
            <typeparam name="IdType">Тип идентификатора сущности в рамках категории</typeparam>
            <typeparam name="ServerEntityType">Тип интерфейса, реализующего работу с сущностью на сервере</typeparam>
        </member>
        <member name="T:Intermech.Interfaces.Client.RepositoryDelegates`3.CreateNewEntitySimpleDelegate">
             <summary>Упрощённый делегат метода, отвечающего за создание сущности в том случае, если она не был найден в кэше</summary>
             <returns>Объект-сущность</returns>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.RepositoryDelegates`3.CreateNewEntityDelegate">
             <summary>Упрощённый делегат метода, отвечающего за создание сущности в том случае, если она не был найден в кэше</summary>
             <param name="id">Идентификатор сущности в рамках её категории</param>
             <returns>Объект-сущность</returns>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.RepositoryDelegates`3.CreateNewEntityFullDelegate">
             <summary>Делегат метода, отвечающего за создание сущности в том случае, если она не был найден в кэше</summary>
             <param name="id">Идентификатор сущности в рамках её категории</param>
             <param name="failIfNotFound">Если Тrue, то в случае недоступности серверного интерфейса сущности выбросится исключительная ситуация</param>
             <returns>Объект-сущность</returns>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.CacheObjectBase`1">
            <summary>
            Базовый класс для прокси-классов (типов объектов) клиенской сессии.
            </summary>
            <typeparam name="TID">Тип идентификатора метаданного</typeparam>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectBase`1._id">
            <summary>
            Идентификатор элемента метаданных.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectBase`1._clientSession">
            <summary>
            Интерфейс на клиентскую сессию
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectBase`1.paramsTable">
            <summary>
            Таблица с параметрами, которые могут хранится в данных объектах.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectBase`1._CategoryType">
            <summary>
            Категория 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectBase`1._CategoryID">
            <summary>
            Идентификатор объекта данной категории
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectBase`1._DBTableName">
            <summary>
            Имя таблицы, в которой содержаться эти объекты
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObjectBase`1.#ctor(Intermech.Interfaces.Client.ClientSession,`0)">
            <summary>
            Создает объект.
            </summary>
            <param name="session">Клиентская сессия</param>
            <param name="id">Идентификатор элемента метаданных</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObjectBase`1.InitOptions(System.Int32,System.Int64,System.String,System.String)">
            <summary>
            Инициализация класса
            </summary>
            <param name="aCategoryType">Категория прав доступа</param>
            <param name="aCategoryID">Идентификатор объекта данной категории</param>
            <param name="tableName">Имя таблицы, в которой содержаться эти объекты</param>
            <param name="throwMessage">Сообщение об ошибке идентификатора объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObjectBase`1.GetSourceDataRowFromCache">
            <summary>
            Возвращает строку таблицы из клиентского кэша, описывающая текущий элемент метаданных.
            </summary>
            <returns>Строка таблицы из клиентского кэша, описывающая текущий элемент метаданных. Может быть null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObjectBase`1.GetSourceDataRowFromCache(System.Data.DataTable)">
            <summary>
            Возвращает строку таблицы из клиентского кэша, описывающая текущий элемент метаданных.
            </summary>
            <param name="dataTable">Таблица клиентского кэша, содержащая метаданные этого вида</param>
            <returns>Строка таблицы из клиентского кэша, описывающая текущий элемент метаданных. Может быть null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObjectBase`1.ReloadClientCache">
            <summary>
            Перечитывает клиентский кэш и paramsTable
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CacheObjectBase`1.IsSystemGUID">
            <summary>
            Если true, то это наш системный GUID, => удалять такой объект нельзя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CacheObjectBase`1.GUID">
            <summary>
            GUID
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttribute4ObjectTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttribute4RelationTypeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CAttributeType4Category.paramsTable">
            <summary>
            Таблица с параметрами, которые могут хранится в данных объектах.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBMeasureRuleHelper">
            <summary>
            Класс предназначен для работы со строкой настроек ввода значений атрибутов, выраженных в единицах измерения
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBMeasureRuleHelper.ValidateRuleString(System.String)">
            <summary>
            Проверяет строку настроек на возможность записи в базу и возвращает выделенную из строки настроек 
            формулу контроля правильности значения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBMeasureRuleHelper.RuleFormula">
            <summary>
            Формула контроля правильности значения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBMeasureRuleHelper.DefaultMeasureID">
            <summary>
            Идентификатор единицы измерения по умолчанию
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBMeasureRuleHelper.ShortNameInString">
            <summary>
            Нужно ли записывать ид. единиц измерения в строковую часть атрибута
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBMeasureRuleHelper.ConvertToDefaultMeasure">
            <summary>
            Приводить ли записываемые значения в единицу измерения по умолчанию
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBMeasureAttributeType4Object.ValidateMuID(System.Int64)">
            <summary>
            Проверяет допустимость присвоения данному атрибуту единицы измерения muID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBMeasureAttributeType4Object.GetValidPhysicalValues">
            <summary>
            Возвращает список глобальных идентификаторов физических величин, единицы измерения которых можно присваивать данному атрибуту.
            Возвращает массив нулевой длины, если атрибуту можно присвоить любую единицу измерения.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBMeasureAttributeType4Relation.ValidateMuID(System.Int64)">
            <summary>
            Проверяет допустимость присвоения данному атрибуту единицы измерения muID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBMeasureAttributeType4Relation.GetValidPhysicalValues">
            <summary>
            Возвращает список глобальных идентификаторов физических величин, единицы измерения которых можно присваивать данному атрибуту.
            Возвращает массив нулевой длины, если атрибуту можно присвоить любую единицу измерения.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CDBRelationsApplicabilityCache">
            <summary>
            Реализует кэш информации о взаимосвязях между типами объектов.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicabilityCache.Reset">
            <summary>
            Принудительно очищает кэш.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CDBRelationsApplicabilityCache._cacheItems">
            <summary>
            Коллекция пар значений [(MyCompositeKey)Составной ключ] = [(DataTable)таблица применимостей]
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientContext">
            <summary>
            Реализует паттерн окружающий контекст для клиентов IPS (ambient context).
            Класс предоставляет доступ доступ к глобальным, обязательно существующим сервисам клиента, которые используются в большом количестве клиентских классов. 
            Все свойства класса, используемые для доступа к экземплярам сервисов, никогда не возвращают null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientContext.OpenFiles">
            <summary>
            Возвращает сервис открытых файлов.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientContext.FileVault">
            <summary>
            Возвращает сервис файлового хранилища пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientContext.FileImporter">
            <summary>
            Возвращает сервис импорта файлов в IPS.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientContext.Integrators">
            <summary>
            Возвращает сервис, обслуживающий интеграторы с другими приложениями.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientContext.LaunchActions">
            <summary>
            Возвращает сервис, обслуживающий команды запуска приложений.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CacheFile">
            <summary>
            Файл с клиентским кэшем.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheFile._fileFullName">
            <summary>
            Имя файла на локальном диске
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheFile._fileBakFullName">
            <summary>
            Имя бэкапа кэша на локальном диске
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheFile._tempFileFullName">
            <summary>
            Имя временного файла (флага об правильной записи на диск кэша) на локальном диске
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheFile._temp2FileFullName">
            <summary>
            Имя временного файла (флага об правильной копировании бэкапа кэша на диск) на локальном диске
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheFile.SaveData(Intermech.Interfaces.ImDataSet)">
            <summary>
            Сохранение ImDataSet в файл.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheFile.LoadData">
            <summary>
            Извлечение данных из файла в ImDataSet
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientCacheService">
            <summary>
            Кэш клиента.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._cacheDataSet">
            <summary>
            ImDataSet с таблицами БД.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._cacheFile">
            <summary>
            Файл с кэшем
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._tablesNameList">
            <summary>
            Список кэшированных таблиц
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._visibleAttr">
            <summary>
            Список для фильтрации по типам атрибутов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._visibleRel">
            <summary>
            Список для фильтрации по типам связей
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._visibleObj">
            <summary>
            Список для фильтрации по типам объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._visibleAttrGroups">
            <summary>
            Список для фильтрации 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._visibleLCLevel">
            <summary>
            Список для фильтрации 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._cacheReloaded">
            <summary>
            Флаг изменения в кэше
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._categories">
            <summary>
            Соответствие категорий таблицам
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._lockReload">
            <summary>
            Блокирует обновление клиентского кэша
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientCacheService._loadCacheFromDiskTask">
            <summary>
            Фоновая задача зачитки кэша из файла
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientCacheService.CacheDataSet">
            <summary>
            ImDataSet с таблицами БД
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.ClearVisibleList(System.Int32[])">
            <summary>
            Очистить списки видимых объектов
            </summary>
            <param name="Categories">Категории обновляемых объектов, если -1, то очистятся все</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.GetVisibleValues(System.Int32[])">
            <summary>
            Загружает с сервера списки для фильтрации
            </summary>
            <param name="Session">Интерфейс на клиентскую сессию</param>
            <param name="Categories">Категория обновляемых объектов, если -1, то обновятся все</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.ClearCache">
            <summary>
            Выполняет очистку кэша.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.LoadCacheFromDisk">
            <summary>
            Первоначальная загрузка данных в кэш с диска отдельном потоке
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.LoadCache(Intermech.Interfaces.IUserSession)">
            <summary>
            Первоначальная загрузка данных в кэш (вторая фаза, изредка требующая сессию)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.SaveCache">
            <summary>
            Сохранение кэша в файл
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.ReloadCache(Intermech.Interfaces.IUserSession)">
            <summary>
            Синхронизация кэша с серверным кэшем.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.LoadTablesFromServer(Intermech.Interfaces.IUserSession,System.String[])">
            <summary>
            Загружает таблицы с серверного кэша
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.SetCacheTableMetadata(System.Collections.Hashtable)">
            <summary>
            Установка значений в таблице кэша IMS_METADATA
            </summary>
            <param name="serverTable"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.SetLastUpdate(System.Data.DataTable)">
            <summary>
            Заполняет коллекцию датами последнего обновления таблиц
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.CheckCache">
            <summary>
            Проверяет кэш
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.GetTable(System.String)">
            <summary>
            Возвращает таблицу кэша
            </summary>
            <param name="tableName">Имя таблицы</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.GetFilteredTable(System.String,System.String)">
            <summary>
            Возвращает отфильтрованную таблицу кэша
            </summary>
            <param name="tableName">Имя таблицы</param>
            <param name="fieldName">Имя идентификационного поля объекта данной категории</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.GetFilteredTable(System.String,System.String,System.Data.DataTable)">
            <summary>
            Возвращает отфильтрованную таблицу кэша
            </summary>
            <param name="tableName">Имя таблицы</param>
            <param name="fieldName">Имя идентификационного поля объекта данной категории</param>
            <param name="tbl">Таблица фильтруемых данных. Если null, то берется из кэша по tableName</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientCacheService.FilteringTable(System.Data.DataTable,System.String,System.Int32[])">
            <summary>
            Возвращает отфильтрованную таблицу кэша
            </summary>
            <param name="tableName">Имя таблицы</param>
            <param name="columnName">Имя идентификационного поля объекта данной категории</param>
            <param name="keys">Список для фильтрации</param>
            <returns></returns>
        </member>
        <member name="E:Intermech.Interfaces.Client.ClientCacheService.Cleared">
            <summary>
            Событие очистки клиентского кэша.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.ClientCacheService.Reloaded">
            <summary>
            Событие перезагрузки клиентского кэша.
            Новые данные были загружены в кэш с сервера приложений.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientSession">
            <summary>
            Summary description for ClientSession.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.AddToServerTrace(System.String,System.String)">
            <summary>
            Метод записывает сообщение в лог-файл сервера приложений.
            </summary>
            <param name="text">Текст клиентского сообщения</param>
            <param name="traceFileName">Имя файла трассировки</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.AddToTrace(System.String,System.Int32,System.String)">
            <summary>
            Метод записывает сообщение в лог-файл сервера приложений.
            </summary>
            <param name="text">Текст клиентского сообщения</param>
            <param name="traceLevel">Уровень трассировки, при котором сообщение будет записано в файл</param>
            <param name="traceFileName">Имя файла трассировки</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.Session">
            <summary>
            Возвращает необернутый объект пользовательской сессии.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.Intermech#RemotingLite#IRemoteObjectProxyWrapper#Unwrap">
            <summary>
            Возвращает transparent proxy.
            Метод в случае, если экземпляр <see cref="T:Intermech.Interfaces.Client.ClientSession"/> утекает через remoting на серверную сторону.
            </summary>
            <returns>transparent proxy</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ClientSessionContext">
            <summary>
            Контекст, в котором работает клиентская сессия.
            Контекст предназначен для изоляции <see cref="T:Intermech.Interfaces.Client.ClientSession"/> от контейнера сервисов,
            он содержит все необходимые сервисы и события.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ClientCache">
            <summary>
            Клиентский кэш
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.CacheDataSet">
            <summary>
            Таблицы кэша метаданных
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.Guard">
            <summary>
            Возвращает объект, который позволяет проверить корректность обращения к сессии и сессионным объектам.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.UserID">
            <summary>
            Идентификатор подключенного пользователя (только для чтения).
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ActingUserID">
            <summary>
            Идентификатор пользователя, который на самом деле работает от имени текущего пользователя (исполняет его обязанности)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ActingUserName">
            <summary>
            Имя пользователя, который на самом деле работает от имени текущего пользователя (исполняет его обязанности)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ComputerName">
            <summary>
            Сетевое имя клиентского компьютера (только для чтения).
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.SecurityLevel">
            <summary>
            Уровень допуска текущего пользователя
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.UserName">
            <summary>
            Имя залогиненного пользователя (только для чтения).
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.LastCallTime">
            <summary>
            Дата и время последнего обращения к интерфейсу (только для чтения).
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.AreaID">
            <summary>
            Идентификатор(ы) предметной области, в которой работает эта сессия. Если пусто,
            то доступ к объектам из всех областей.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.LanguageID">
            <summary>
            Идентификатор(ы) языков, в которых работает эта сессия. Если пусто,
            то доступ к атрибутам на всех языках.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.MaxRows">
            <summary>
            Количество строк с данными в одном пакете (режим пакетного чтения)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.MaxRetryReadPackets">
            <summary>
            Максимально допустимое количество попыток дочитать данные в пакет для его заполнения целиком при пакетном чтении,
            если включена фильтрация по атрибуту "Видимость", а процесс фильтрации оставляет меньше данных, чем было затребовано (режим пакетного чтения)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.TimeZoneOffset">
            <summary>
            Смещение времени текущей временнОй зоны рабочей 
            станции пользователя относительно универсального времени по Гринвичу 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.RoleID">
            <summary>
            Идентификатор роли, с которой пользователь подключился
            к системе
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.UTCTime">
            <summary>
            Время сервера
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ClientConnectionID">
            <summary>
            Уникальный идентификатор клиентского подключения к серверу приложений.
            Идентификатор присваивается сервером приложений при создании первой сессии клиента.
            Все сессии одного клиента будут иметь один и тот же идентификатор клиентского подключения;
            два разных клиента, вошедших под одним и тем же пользователем IPS, будут иметь разные идентификаторы.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.PathTransformationMode">
            <summary>
            Уникальный идентификатор клиентского подключения к серверу приложений.
            Настройка указывающая в каком виде должны возвращаться пути (например имена файлов в атрибуте Файл)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.Login(System.String,Intermech.Protection.PswPackage,System.String,System.TimeSpan,System.Int64)">
            <summary>
            Вход пользователя в систему
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.Login(System.String,Intermech.Protection.PswPackage,System.String,System.TimeSpan,System.Int64,System.Int32)">
            <summary>
            Вход пользователя в систему
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.Login(System.String,Intermech.Protection.PswPackage,System.String,System.TimeSpan,System.Int64,System.String)">
            <summary>
            Вход пользователя в систему
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.Login(System.String,Intermech.Protection.PswPackage,System.String,System.TimeSpan,System.Int64,System.Int32,System.String)">
            <summary>
            Вход пользователя в систему
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intermech.Interfaces.Client.ClientSession.LoginAsActingUser(Intermech.Interfaces.ActingUserLoginParameters)" -->
        <member name="M:Intermech.Interfaces.Client.ClientSession.Logout(System.String)">
            <summary>
            Выход пользователя из системы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.Clone(System.String)">
            <summary>
            Создает копию текущей сессии для фоновых операций и выполняет Login
            с текущими параметрами.
            </summary>
            <param name="sessionName">Имя сессии для защиты ее от других сессий</param>
            <returns>Копия сессии.</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EventLog">
            <summary>
            Получить интерфейс для записи в журнал событий
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EventLogArchive">
            <summary>
            Получить интерфейс для работы с архивным журналом событий
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.SessionID">
            <summary>
            Идентификатор сессии в списке сессий.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.SessionGUID">
            <summary>
            Глобальный идентификатор сессии в списке сессий.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.MasterSessionGUID">
            <summary>
            Глобальный идентификатор мастер-сессии в списке сессий
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ShowDeletedObjects">
            <summary>
            Включение данного режима позволяет включать в списки удаленные объекты. Требует
            админских прав.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObject(System.Int64)">
            <summary>
            Получить объект базы данных по его идентификатору objectID (F_OBJECT_ID)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObject(System.Int64,System.Boolean)">
            <summary>
            Получить объект базы данных по его идентификатору objectID (F_OBJECT_ID)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectBaseVersionByID(System.Int64,System.Boolean)">
            <summary>
            Получить базовую версию объекта по его идентификатору
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectActualCopy(System.Int64,System.Boolean)">
            <summary>
            Возвращает обработчик рабочей копии объекта для данного пользователя (если таковая в базе имеется). 
            Если рабочей копии у объекта нет (или объект взят на изменение другим пользователем), то метод
            возвращает обработчик архивной копии объекта. 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObject(System.Guid)">
            <summary>
            Получить объект базы данных по его идентификатору GUID-у
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObject(System.Guid,System.Boolean)">
            <summary>
            Получить объект базы данных по его идентификатору GUID-у
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleLevel(System.Int32)">
            <summary>
            Получить уровень продвижения номер aLevelID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleLevel(System.String)">
            <summary>
            Получить уровень продвижения с именем levelName
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleLevel(System.String,System.Boolean)">
            <summary>
            Получить уровень продвижения с именем levelName
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleLevel(System.Guid)">
            <summary>
            Получить уровень продвижения с глобальным ид. levelGuid
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleLevel(System.Guid,System.Boolean)">
            <summary>
            Получить уровень продвижения с глобальным ид. levelGuid
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleLevelCollection">
            <summary>
            Получить список всех уровеней продвижения
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleLevelCollection(System.Boolean)">
            <summary>
            Получить список всех уровеней продвижения
            </summary>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLanguage(System.String)">
            <summary>
            Получить языковой вариант (aLanguageID - буква-идентификатор)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLanguage(System.Guid)">
            <summary>
            Получить языковой вариант по guid-у
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLanguage(System.Guid,System.Boolean)">
            <summary>
            Получить языковой вариант по guid-у
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributesGroup(System.Int32)">
            <summary>
            Получить группу атрибутов номер aGroupID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributesGroup(System.Guid)">
            <summary>
            Получить группу атрибутов по guid-у
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributesGroup(System.Guid,System.Boolean)">
            <summary>
            Получить группу атрибутов по guid-у
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributesGroupCollection">
            <summary>
            Получить полный список групп атрибутов 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributesGroupCollection(System.Boolean)">
            <summary>
            Получить полный список групп атрибутов 
            </summary>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributesGroupCollection(System.Int32)">
            <summary>
            Получить список групп атрибутов, входящих в состав группы parentGroupID. Если parentGroupID == 0, то возвращается верний уровень иерархии групп атрибутов.
            Если parentGroupID меньше 0, то возвращается полный список групп.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributesGroupCollection(System.Int32,System.Boolean)">
            <summary>
            Получить список групп атрибутов, входящих в состав группы parentGroupID. Если parentGroupID == 0, то возвращается верний уровень иерархии групп атрибутов.
            Если parentGroupID меньше 0, то возвращается полный список всех групп атрибутов.
            </summary> 
            <param name="parentGroupID">Ид. родительской группы атрибутов. Если parentGroupID == 0, то возвращается верний уровень иерархии групп атрибутов. Если parentGroupID меньше 0, то возвращается полный список всех групп атрибутов.</param>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributeID(System.Object,System.Boolean)">
            <summary>
            Возвращает числовой ид. атрибута по его имени, Guidу или числовому ид. attributeID 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributeType(System.Int32)">
            <summary>
            Получить атрибут-тип номер anAttributeType
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributeType(System.String)">
            <summary>
            Получить атрибут-тип с именем anAttributeName
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributeType(System.Guid)">
            <summary>
            Получить атрибут-тип с гуидом anAttributeGuid
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.Configurations">
            <summary>
            Получить объект для работы с конфигурациями
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleStep(System.Int32)">
            <summary>
            Получить шаг жизненного цикла номер aLCStepID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleStep(System.Guid)">
            <summary>
            Получить шаг жизненного цикла с глобальным идентификатором anLCGuid
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleStep(System.Guid,System.Int32)">
            <summary>
            Получить шаг жизненного цикла с глобальным идентификатором anLCGuid
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleStep(System.Guid,System.Boolean)">
            <summary>
            Получить шаг жизненного цикла с глобальным идентификатором anLCGuid
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLifecycleStepCollection(System.Int32)">
            <summary>
            Получить коллекцию шагов жизненного цикла для объектов типа anObjectTypeID.
            Результатом может быть схема родительского типа в случае, если у объекта нет своей.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectType(System.Int32)">
            <summary>
            Получить тип объектов номер anObjectType
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectType(System.Int32,System.Boolean)">
            <summary>
            Получить тип объектов номер anObjectType. Если failIfNotFound == false, то возвращать null при отсутствии такого типа.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectTypeByObjectName(System.String,System.Boolean)">
            <summary>
            Получить тип объекта по имени объекта (например, "Деталь")
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectTypes(System.Collections.Generic.ICollection{System.Int64})">
            <summary>
            Получает список типов объектов, идентификаторы версий которых указаны в массиве objectIDs.
            В результате присутствуют только неудалённые объекты. Результат отсортирован по возрастанию идентификаторов версий объектов.
            </summary>
            <param name="objectIDs">Идентификаторы версий объектов.</param>
            <returns>Список элементов Tuple, в котором хранятся идентификаторы версий и типа объектов.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelation(System.Int64)">
            <summary>
            Получить связь между объектами по ее идентификатору aRelationID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelation(System.Int64,System.Boolean)">
            <summary>
            Получить связь между объектами по ее идентификатору aRelationID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelation(System.Guid,System.Int64)">
            <summary>
            Получить связь между объектами по ее глобальному идентификатору guid
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelation(System.Int64,System.Int64,System.Int32,System.Boolean)">
            <summary>
            Получить связь между, обозначающую вхождение объекта partID (если versionMode==true, то partID это ObjectID, иначе ID Объекта)
            в объект projectID связью типа 
            relationType
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelation(System.Int64,System.Int64,System.Boolean)">
            <summary>
            Получить связь между, обозначающую вхождение объекта partID (если versionMode==true, то partID это ObjectID, иначе ID Объекта)
            в объект projectID связью любого типа 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelation(System.Int64,System.Int64,System.Int32)">
            <summary>
            Получить связь между, обозначающую вхождение объекта partID (IDBObject.ID) в объект projectID (IDBObject.ObjectID) связью типа 
            relationType
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelation(System.Int64,System.Int64)">
            <summary>
            Получить связь между, обозначающую вхождение объекта partID (IDBObject.ID) в объект projectID (IDBObject.ObjectID) связью любого типа 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationType(System.Int32)">
            <summary>
            Получить тип связей номер aRelationTypeID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetSubjectAreaType(System.Char)">
            <summary>
            Получить предметную область с идентификатором aSubjectAreaTypeID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetSubjectAreaType(System.Guid)">
            <summary>
            Получить предметную область с guid 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetSubjectAreaType(System.Guid,System.Boolean)">
            <summary>
            Получить предметную область с guid 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetSubjectAreaCollection">
            <summary>
            Получить список предметных областей
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLanguageCollection">
            <summary>
            Получить список языковых вариантов
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectCollection(System.Int32)">
            <summary>
            Получить коллекцию объектов типа objectType. Если objectType=-1, то
            получается коллекция всех объектов. Под коллекцией объектов в данном 
            случае понимаем объект, управляющий списком объектов. Никаких данных
            с СУБД эта операция не получае.
            </summary>
            <param name="objectType">ID типа объекта</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributeTypeCollection(System.Int32,System.Boolean)">
            <summary>
            Получить список атрибутов в группе groupID. Если groupID = -1, то получается
            список всех атрибутов, зарегистрированных в системе.
            </summary>
            <param name="groupID">id группы атрибутов</param>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAttributeTypeCollection(System.Int32)">
            <summary>
            Получить список атрибутов в группе groupID. Если groupID = -1, то получается
            список всех атрибутов, зарегистрированных в системе.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectTypeCollection(System.Int32)">
            <summary>
            Возвращает коллекцию типов объектов, входящих в состав типа parentTypeID.
            </summary>
            <param name="parentTypeID">Идентификатор родительского типа объектов. Если == -1,
            то возвращает корневые типы объектво. Если == -2, то возвращает ВСЕ типы объектов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectTypeCollection(System.Int32,System.Boolean)">
            <summary>
            Возвращает коллекцию типов объектов, входящих в состав типа parentTypeID.
            </summary>
            <param name="parentTypeID">Идентификатор родительского типа объектов. Если == -1,
            то возвращает корневые типы объектво. Если == -2, то возвращает ВСЕ типы объектов</param>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationTypeCollection">
            <summary>
            Возвращает полный список типов связей.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationTypeCollection(System.Boolean)">
            <summary>
            Возвращает список типов связей.
            </summary>
            <param name="filterRecs">Если == true, то список фильтруется по предметным областям и правам доступа.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationsApplicabilityCollection">
            <summary>
            Возвращает интерфейс на объект, управляющий входимостями типов объектов друг в друга
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationCollection(System.Int32)">
            <summary>
            Возвращает объект-получатель списка связей типа relationType 
            (если relationType меньше 0, то связей всех типов).
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationCollection(System.Int32,System.String)">
            <summary>
            Возвращает объект-получатель списка связей типа relationType (если relationType меньше 0, то связей всех типов),
            при этом будет использоваться фильтрация состава на основе указанных настроек фильтрации.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationCollection(System.Int32,Intermech.Interfaces.VersionsRule)">
            <summary>
            Возвращает объект-получатель списка связей типа relationType (если relationType меньше 0, то связей всех типов),
            при этом будет использоваться фильтрация состава на основе указанных настроек фильтрации.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetBriefcase">
            <summary>
            Возвращает интерфейс серверной части портфеля
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetImporter(System.String)">
            <summary>
            Возвращает интерфейс на импортер
            </summary>
            <param name="logFileName">Имя лог-файла</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.IdentHelper">
            <summary>
            Интерфейс получателя идентификаторов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRolesList(System.Int64)">
            <summary>
            Возвращает список ролей, которыми обладает пользователь номер userID. Если userID = -1,
            то возвращает список всех ролей, зарегистрированных в системе. Если userID = 0,
            то возвращает список ролей, которые имеются у пользователя данной сессии.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRolesList(System.String)">
            <summary>
            Возвращает список ролей, которыми обладает пользователь с логином loginName.
            Если такого юзера в системе нет, то возвращает полный список ролей.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRoleId(System.String)">
            <summary>
            Возвращает идентификатор версии объекта роли по её названию
            </summary>
            <param name="roleName">Название роли</param>
            <returns>Идентификатор версии объекта роли</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetSecurityLevels(System.String)">
            <summary>
            Метод возвращает словарь с уровнями доступа, которые могут быть у юзера с логином loginName (либо все уровни, если такого логина в системе нет).
            Если пользователю уровень не назначен, то возвращает одну запись с минимальным уровнем доступа.
            </summary>
            <param name="loginName">Имя входа пользователя.</param>
            <returns>Возвращает структуру ид.уровня=наименование уровня доступа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetCustomService(System.Type)">
            <summary>
            Получает интерфейс, зарегистрированный не сервере службой ICustomServices
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.Test">
            <summary>
            Проверяет работоспособность подключения к сессии сервера приложений.
            </summary>
            <exception cref="T:System.Exception">Подключение к сессии сервера приложений нарушено</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.IsAdmin">
            <summary>
            Возвращает true, если это администратор
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.IsSystemSession">
            <summary>
            Если true, то это системная сессия
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ShowPersonalObjects">
            <summary>
            Показывать персональные объекты других пользователей
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.DeveloperMode">
            <summary>
            Если true, то режим разработчика
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.SilentSave">
            <summary>
            Если true, то разрешить тихое сохранение
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.BackgroundUpload">
            <summary>
            Если true, то разрешить тихое сохранение
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EtalonBase">
            <summary>
            Является ли база эталонной
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetExpirationDays">
            <summary>
            Возвращает количество дней, оставшихся до истечения срока действия пароля. Если 0, то
            пароль постоянный.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetClientPlugins">
            <summary>
            Возвращает список плагинов, которых нужно грузить на клиента
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ServerCache">
            <summary>
            Интерфейс, позволяющий получить инфу о кэше сервера
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetCacheTables(System.String[])">
            <summary>
            Считать из клиентского кэша таблицы
            </summary>
            <param name="tableNames">Имена таблицы</param>
            <returns>Таблицы или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectInfo(System.Int64)">
            <summary>
            Возвращает краткую информацию об объекте по идентификатору его версии
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectInfo(System.Guid)">
            <summary>
            Возвращает краткую информацию об объекте по глобальному идентификатору его версии
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectByVersionsRule(System.Int64,Intermech.Interfaces.VersionsRule,System.Boolean)">
            <summary>
            Возвращает версию объекта, соответствующую текущим правилам подбора версий.
            </summary>
            <param name="id">Идентификатор объекта (IDBObject.ID)</param>
            <param name="rule">Правила фильтрации</param>
            <param name="throwNotFoundException">Если throwNotFoundException == false, то при отсутствии такого объекта возвращает null</param>
            <returns>Ссылка на интерфейс указанного объекта или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectByVersionsRule(System.Int64,System.String,System.Boolean)">
            <summary>
            Возвращает версию объекта, соответствующую текущим правилам подбора версий.
            </summary>
            <param name="id">Идентификатор объекта (IDBObject.ID)</param>
            <param name="FiltrationSettings">Идентификатор настроек фильтрации состава</param>
            <param name="throwNotFoundException">Если throwNotFoundException == false, то при отсутствии такого объекта возвращает null</param>
            <returns>Ссылка на интерфейс указанного объекта или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectByVersionsRule(System.Guid,System.String,System.Boolean)">
            <summary>
            Возвращает версию объекта, соответствующую текущим правилам подбора версий.
            guid - GUID объекта (не версии !!!!)
            Если throwNotFoundException == false, то при отсутствии такого объекта возвращает null
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectVersionFiltrationState(System.Int64,Intermech.Interfaces.VersionsRule)">
            <summary>
            Получить статус версии объекта согласно указанному правилу подбора версий
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="rule">Правило подбора версий</param>
            <returns>Статус версии объекта согласно указанному правилу подбора версий</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectF_ID(System.Int64)">
            <summary>
            Получить идентификатор объекта (F_ID)
            </summary>
            <param name="objectID">Идентификатор версии объекта (F_OBJECT_ID)</param>
            <returns>Идентификатор объекта (F_ID)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetMeasuresList">
            <summary>
            Возвращает массив описателей единиц измерения, зарегистрированных в БД
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetHistoryCollection(System.Int32)">
            <summary>
            Возвращает обработчик истории значений атрибута attributeID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetHistoryCollection">
            <summary>
            Возвращает обработчик истории значений атрибутов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectLevel(System.Int64)">
            <summary>
            Возвращает уровень продвижения объекта номер objectID. Если объекта в базе нет, то возвращает -1.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetStringNormalizerSettings">
            <summary>
            Возвращает текущие настройки нормализатора строк
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetCheckAccessLog(Intermech.GetAccessModes)">
            <summary>
            Ф-ция возвращает текстовый отчет о проверках прав доступа, выполняемых в текущей сессии
            </summary>
            <param name="mode">Если mode == GetAccessModes.AllRecords, то возвращает отчет о всех проверках, 
            выполненных за время жизни этой сессии. Если mode == GetAccessModes.LastCheck, то возвращает отчет
            о последней проверке.</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.IsStartedLogHistory">
            <summary>
            Проверить, включен ли режим запоминания списка изменений, сделанных в БД сервером
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.StartLogHistory">
            <summary>
            Включает режим запоминания списка изменений, сделанных в БД сервером
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.StopLogHistory">
            <summary>
            Отключает режим запоминания списка изменений, сделанных в БД сервером
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetModificationsHistoryList">
            <summary>
            Возвращает список изменений, сделанных в БД сервером с момента вызова ф-ции StartLogHistory
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetModificationsHistoryArray">
            <summary>
            Возвращает массив изменений, сделанных в БД сервером с момента вызова ф-ции StartLogHistory
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetOperationInfo">
            <summary>
            Возвращает информацию о состоянии текущей операции, выполняемой на сервере 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.IsEditingContextFixed">
            <summary>
            Зафиксирован ли контекст редактирования в контексте вызова потока, в котором работает сессия
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EditingContextID">
            <summary>
            Идентификатор текущего контекста редактирования. Если в контексте вызова сессии есть
            информация о контексте редактирования, будет возвращена именно она, т.к. имеет наивысший приоритет
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EditingContextSource">
            <summary>
            Источник информации о текущем контексте редактирования (глобальный, оконный)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EditingContextModificationID">
            <summary>
            Номер группы изменений текущего контекста редактирования. Если в контексте вызова сессии есть
            информация о контексте редактирования, будет возвращена именно она, т.к. имеет наивысший приоритет
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EditingContextMode">
            <summary>
            Режим работы текущего контекста редактирования. Если в контексте вызова сессии есть
            информация о контексте редактирования, будет возвращена именно она, т.к. имеет наивысший приоритет
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetEditingContext(System.Boolean)">
            <summary>
            Содержимое текущего контекста редактирования.
            Свойство кэшируется!
            </summary>
            <param name="withDescriptions">true - загружать описания каждой версии и контекстов, иначе только содержимое контекста</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EnabledEditingContextsCache">
            <summary>
            Разрешено ли использовать кэш контекстов редактирования. Рекомендуется
            включать кэширование перед длительными операциями, которые работают с объектами, меняя их состояние,
            выпуском версий, т.п. Изменение данного флага попутно очищает старый кэш контекстов редактирования
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.EditingContextGetData(System.Guid)">
            <summary>
            Получить информацию о текущем контексте редактирования (включая режим его работы, номер группы изменений),
            привязанную к Guid мастер-сессии или другим уникальным Guid-ключам. Если в контексте вызова сессии есть
            информация о контексте редактирования, будет возвращена именно она, т.к. имеет наивысший приоритет
            </summary>
            <param name="key">Guid мастер-сессии или другой уникальный Guid-ключ</param>
            <returns>Информация о текущем контексте редактирования, режиме его работы, номеру группы изменений или null, если информации нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.EditingContextSetData(System.Guid,Intermech.Interfaces.Contexts.CurrentEditingContext)">
            <summary>
            Установить или очистить информацию о текущем контексте редактирования, режиме его работы, номеру группы изменений
            </summary>
            <param name="key">Guid мастер-сессии или другой уникальный Guid-ключ</param>
            <param name="data">Информация о текущем контексте редактирования, режиме его работы, номеру группы изменений.
            Если указать значение null, информация будет удалена из коллекции у сессии</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.ProjectFiltrationMode">
            <summary>
            Фильтровать объекты, принадлежащие другим проектам
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectVersions(System.Int64)">
            <summary>
            Получить список всех версий для указанного объекта (F_ID)
            </summary>
            <param name="ID">Идентификатор объекта (F_ID)</param>
            <returns>Cписок всех версий для указанного объекта или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectVersions(System.Int64,System.Boolean)">
            <summary>
            Получить список всех версий для указанного объекта (F_ID)
            </summary>
            <param name="ID">Идентификатор объекта (F_ID)</param>
            <param name="includeF_ID">Если указать true, то нулевым элементом в результирующий 
            список будет добавлено значение идентификатора объекта (F_ID)</param>
            <returns>Cписок всех версий для указанного объекта или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectIDVersions(System.Int64)">
            <summary>
            Получить список всех версий для указанной версии объекта (F_OBJECT_ID)
            </summary>
            <param name="objectID">Идентификатор любой из версий объекта (F_OBJECT_ID)</param>
            <returns>Cписок всех версий для указанной версии объекта или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectIDVersions(System.Int64,System.Boolean)">
            <summary>
            Получить список всех версий для указанной версии объекта (F_OBJECT_ID)
            </summary>
            <param name="objectID">Идентификатор любой из версий объекта (F_OBJECT_ID)</param>
            <param name="includeF_ID">Если указать true, то нулевым элементом в результирующий 
            список будет добавлено значение идентификатора объекта (F_ID)</param>
            <returns>Cписок всех версий для указанной версии объекта или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAllObjectVersions(System.Int64,System.Boolean,System.Boolean,System.Boolean,System.String[])">
            <summary>
            Получить версии объекта (фрагмент таблицы IMS_OBJECTS), без фильтрации по контекстам редактирования и т.п.
            </summary>
            <param name="id">Идентификатор объекта (F_ID) либо идентификатор версии объекта (в зависимости от флажка isF_ID)</param>
            <param name="isF_ID">false - параметр id содержит идентификатор любой версии объекта (F_OBJECT_ID), 
            true - параметр id содержит идентификатор объекта (F_ID)</param>
            <param name="showBlanks">true - показывать также заготовки версий</param>
            <param name="showDeleted">true - показывать также удалённые версии</param>
            <param name="columns">Список запрашиваемых колонок. Если значение пустое, будут возвращены все колонки</param>
            <returns>Найденные версии объектов (фрагмент таблицы IMS_OBJECTS) либо null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetAllObjectVersionsList(System.Int64,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Получить список версий объекта, без фильтрации по контекстам редактирования и т.п.
            </summary>
            <param name="id">Идентификатор объекта (F_ID) либо идентификатор версии объекта (в зависимости от флажка isF_ID)</param>
            <param name="isF_ID">false - параметр id содержит идентификатор любой версии объекта (F_OBJECT_ID), 
            true - параметр id содержит идентификатор объекта (F_ID)</param>
            <param name="showBlanks">true - показывать также заготовки версий</param>
            <param name="showDeleted">true - показывать также удалённые версии</param>
            <returns>Список версий объекта или пустой список</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetNotifySamplesProcessor">
            <summary>
            Метод возвращает интерфейс для работы с уведомляющими выборками данного пользователя
            </summary>
            <returns>Обработчик уведомляющих выборок пользователя</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetSystemSecurity">
            <summary>
            Возвращает интерфейс для проверки прав доступа к системе
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetCulture(System.String)">
            <summary>
            Устанавливаем культуру и возвращаем её
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.DBObjectsCacheStarted">
            <summary>
            Начато ли кэширование обработчиков объектов (IDBObject)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.DBObjectsCacheStart">
            <summary>
            Начать кэширование обработчиков объектов (IDBObject)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.DBObjectsCacheStop">
            <summary>
            Завершить кэширование обработчиков объектов (IDBObject)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.DBObjectsCacheClear">
            <summary>
            Очистить кэш обработчиков объектов (IDBObject)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.DBObjectsCacheRemoveVersion(System.Int64)">
            <summary>
            Удалить из кэша обработчиков объектов (IDBObject) объект с указанным идентификатором версии
            </summary>
            <param name="fObjectID">Идентификатор версии объекта, обработчик которой надо удалить из кэша</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.NewPassword">
            <summary>
            Свойство (только для записи), позволяющее выполнять замену пароля у пользователя,
            выполняющего подключение к системе. Если изменение пароля пользователю запрещено,
            будет сгенерировано исключение
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetUserLoginEvents">
            <summary>
            Ф-ция возвращает информацию из журнала событий о двух последних логинах текущего пользователя с компьютера, имя которого записано в данной сессии.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetActingUserLoginSettings(System.Int64)">
            <summary>
            Метод возвращает список объектов с информацией о пользователях, обязанности которых в данный момент может исполнять пользователь actingUserID.
            </summary>
            <param name="actingUserID">Ид. юзера, для которого нужно получить инфу о возможном исполнении обязанностей.</param>
            <returns>Если ничьи обязанности исполнять не может, то список пустой.</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EnabledPdmConfigurator">
            <summary>
            Режим, при включении которого разрешается работа конфигуратора составов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EnabledSeriesDates">
            <summary>
            Режим, при включении которого разрешается подбор версий по сериям/датам
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EnabledAutoSoftInstantiation">
            <summary>
            Режим Автоматическая мягкая конкретизация создаваемых связей
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.AllVersionsAnnulmentMode">
            <summary>
            Режим аннулирования всех версий объекта при аннулировании одной версии
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.SendAttrs2DelayedNotificationMode">
            <summary>
            Разрешена ли передача значений атрибутов в службу автоматических уведомлений
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.IsDelayedAttrHistory">
            <summary>
            Режим Отложенная запись истории значений атрибутов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.IsDelayedEventlog">
            <summary>
            Режим Отложенная запись событий в журнал аудита
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.EnabledVisibilityFiltration">
            <summary>
            Режим, при включении которого разрешается фильтрация списков и составов объектов по атрибуту "Видимость"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.MaxTaskThreadsCount">
            <summary>
            Максимальное количество одновременно работающих фоновых потоков, 
            которое может использоваться распараллеливаемыми заданиями
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.AlgorithmVersion">
            <summary>
            версия алгоритма подписания объектов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.MetaDataGeneration">
            <summary>
            Поколение метаданных для текущего сервера приложений
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetIDByObjectID(System.Int64)">
            <summary>
            Возвращает ид. объекта IDBObject.ID по ид. его версии IDBObject.ObjectID.
            Если такой версии объекта нет, то генерит исключение ObjectNotFoundException
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.SetSessionPluginsData(System.Object,System.Object)">
            <summary>
            Записывает в сессию информацию модуля расширения. Следует учитывать, что записанная этим методом информация копируется при клонировании сессии.
            Чтобы избежать копирования, записываемый объект должен реализовывать интерфейс ISessionInstanceData.
            </summary>
            <param name="key">Ключ</param>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.ActivateSessionGuard">
            <summary>
            Включает для сессии и всех ее объектов защиту от использования вне SessionKeeper. После выхода сессии за пределы SessionKeeper любые обращения к ней или
            ее объектам будут приводить к возникновению исключения. Выключить режим защиты нельзя. По умолчанию, режим защиты выключен.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientSession.IsSessionGuardActive">
            <summary>
            Возвращает true, если для сессии и всех ее объектов активирована защита от использования вне SessionKeeper.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetUserGroupsAndRoleID">
            <summary>
            Массив идентификаторов групп, в которые входит данный пользователь, а также его текущей роли и самого пользователя
            </summary>
            <returns>массив ObjectID</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.CheckClientBackwardConnectivity(Intermech.Interfaces.IMClientLiveStatus)">
            <summary>
            Проверяет возможность выполнения обратных вызовов от сервера приложений к клиенту.
            Метод используется для контроля работоспособности спонсоров Remoting.
            </summary>
            <param name="testObject">Клиентский объект, используемый для проверки</param>
            <exception cref="T:Intermech.KernelException">Обратные вызовы невозможны</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetLoginInformation(System.String)">
            <summary>
            Возвращает информацию о ролях и уровнях доступа юзера по его логину
            </summary>
            <param name="loginName">логин юзера</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectAttribute(System.Int64,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Возвращает обработчик атрибута для объекта
            </summary>
            <param name="objectID">Ид. версии объекта</param>
            <param name="attributeID">Ид. атрибута (локальный ид., глобальный ид. или наименование)</param>
            <param name="failIfNotFound">Сгенерить эксепшен если чего-то не нашлось</param>
            <param name="getActualCopy">Получить указанный объект или его актуальную копию</param>
            <returns>Обработчик атрибута</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectAttributeByID(System.Int64,System.Int32)">
            <summary>
            Возвращает обработчик атрибута для объекта
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="attributeID">Ид. атрибута</param>
            <returns>Обработчик атрибута или null, если что-то пошло не так</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectAttributeByGuid(System.Int64,System.Guid)">
            <summary>
            Возвращает обработчик атрибута для объекта
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="attributeGUID">Глобальный ид. атрибута</param>
            <returns>Обработчик атрибута или null, если что-то пошло не так</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectAttributesValues(System.Int64,Intermech.Interfaces.GetAttributeValuesModes,System.Boolean,System.Boolean)">
            <summary>
            Возвращает массив значений атрибутов объекта
            </summary>
            <param name="objectID">Ид. версии объекта</param>
            <param name="modes">Флаги управления</param>
            <param name="failIfNotFound">Сгенерить эксепшен если чего-то не нашлось</param>
            <param name="getActualCopy">Получить указанный объект или его актуальную копию</param>
            <returns>Массив значений (пустой, если объекта нет)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.ObjectsSelect(System.Guid,Intermech.Kernel.Search.DBRecordSetParams)">
            <summary>
            Получить таблицу со списком объектов
            </summary>
            <param name="objectTypeGuid">Гуид типа объектов</param>
            <param name="dbRecordSetParams">Параметры запроса</param>
            <returns>Таблица с объектами</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.ObjectsSelect(System.Int32,Intermech.Kernel.Search.DBRecordSetParams)">
            <summary>
            Получить таблицу со списком объектов
            </summary>
            <param name="objectTypeID">ид типа объектов</param>
            <param name="dbRecordSetParams">Параметры запроса</param>
            <returns>Таблица с объектами</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationAttribute(System.Int64,System.Object,System.Boolean)">
            <summary>
            Возвращает обработчик атрибута для связи
            </summary>
            <param name="relationID">Ид. связи</param>
            <param name="attributeID">Ид. атрибута (локальный ид., глобальный ид. или наименование)</param>
            <param name="failIfNotFound">Сгенерить эксепшен если чего-то не нашлось</param>
            <returns>Обработчик атрибута</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationAttributeByID(System.Int64,System.Int32)">
            <summary>
            Возвращает обработчик атрибута для связи
            </summary>
            <param name="relationID">Идентификатор связи</param>
            <param name="attributeID">Ид. атрибута</param>
            <returns>Обработчик атрибута или null, если что-то пошло не так</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationAttributeByGuid(System.Int64,System.Guid)">
            <summary>
            Возвращает обработчик атрибута для связи
            </summary>
            <param name="relationID">Идентификатор связи</param>
            <param name="attributeGUID">Глобальный ид. атрибута</param>
            <returns>Обработчик атрибута или null, если что-то пошло не так</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetRelationAttributesValues(System.Int64,Intermech.Interfaces.GetAttributeValuesModes,System.Boolean)">
            <summary>
            Возвращает массив значений атрибутов связи
            </summary>
            <param name="relationID">Ид. связи</param>
            <param name="modes">Флаги управления</param>
            <param name="failIfNotFound">Сгенерить эксепшен если чего-то не нашлось</param>
            <returns>Массив значений (пустой, если связи нет)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.RelationsSelect(System.Int32,Intermech.Kernel.Search.DBRecordSetParams)">
            <summary>
            Получить таблицу со списком связей
            </summary>
            <param name="relationTypeID">Ид. типа связей</param>
            <param name="dbRecordSetParams">Параметры запроса</param>
            <returns>Таблица связей</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectSystemProperties(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Получить системные свойства объекта
            </summary>
            <param name="objectID">Ид. версии объекта</param>
            <param name="failIfNotFound">Сбрасывать эксепшен если объект не найден</param>
            <param name="getActualCopy">Получать ли акутальную копию объекта</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectSystemProperties(System.Guid,System.Boolean)">
            <summary>
            Получить системные свойства объекта
            </summary>
            <param name="objectGuid">Гуид версии объекта</param>
            <param name="failIfNotFound">Сбрасывать эксепшен если объект не найден</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectAttributeValuesByGuid(System.Int64,System.Guid)">
            <summary>
            Возвращает значения атрибута для объекта
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="attributeGUID">Глобальный ид. атрибута</param>
            <returns>Массив значений атрибута или null, если что-то не нашлось</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.GetObjectAttributeValueByGuid(System.Int64,System.Guid)">
            <summary>
            Возвращает первое значение атрибута для объекта
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="attributeGUID">Глобальный ид. атрибута</param>
            <returns>Первое значение атрибута или null, если что-то не нашлось</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.AddObjectAttribute(System.Int64,System.Int32,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            Добавляет атрибут номер attributeID к объекту objectID и инициализирует его значениями initValues.
            </summary>
            <param name="objectID">Ид. версии объекта</param>
            <param name="attributeID">Ид. атрибута</param>
            <param name="failIfNotFound">Генерировать ли исключение если объекта нет</param>
            <param name="failIfExists">Если failIfExists==true и атрибут уже существует, то генерируется исключение. Иначе присваивает атрибуту значения nitValues</param>
            <param name="initValues">Значения, которыми нужно проинициализировать атрибут</param>
            <returns>Возвращает обработчик добавленного атрибута либо null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.AddRelationAttribute(System.Int64,System.Int32,System.Boolean,System.Boolean,System.Object[])">
            <summary>
            Добавляет атрибут номер attributeID к связи relationID и инициализирует его значениями initValues.
            </summary>
            <param name="relationID">Ид. связи</param>
            <param name="attributeID">Ид. атрибута</param>
            <param name="failIfNotFound">Генерировать ли исключение если связи нет</param>
            <param name="failIfExists">Если failIfExists==true и атрибут уже существует, то генерируется исключение. Иначе присваивает атрибуту значения nitValues</param>
            <param name="initValues">Значения, которыми нужно проинициализировать атрибут</param>
            <returns>Возвращает обработчик добавленного атрибута либо null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.SetObjectAttributesValues(System.Int64,System.Boolean,Intermech.Interfaces.AttributeValues[])">
            <summary>
            Присваивает объекту objectID атрибуты attributeValues 
            </summary>
            <param name="objectID">Ид. версии объекта</param>
            <param name="failIfNotFound">Генерировать ли исключение если объекта нет</param>
            <param name="attributeValues">Набор атрибутов и их значений, которые нужно присвоить объекту. Другие атрибуты у объекта не удаляются.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.SetRelationAttributesValues(System.Int64,System.Boolean,Intermech.Interfaces.AttributeValues[])">
            <summary>
            Присваивает связи relationID атрибуты attributeValues 
            </summary>
            <param name="relationID">Ид. связи</param>
            <param name="failIfNotFound">Генерировать ли исключение если связи нет</param>
            <param name="attributeValues">Набор атрибутов и их значений, которые нужно присвоить связи. Другие атрибуты у связи не удаляются.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.BeginDeleteObjects(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Указывает системе на начало процесса удаления указанных объектов
            </summary>
            <param name="objectIDs">Список ObjectID удаляемых объектов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientSession.EndDeleteObjects">
            <summary>
            Указывает системе на завершение процесса удаления объектов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CacheObject">
            <summary>
            Реализует базовый класс для метаданных, адресуемых с помощью идентификаторов типа int.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObject.#ctor(Intermech.Interfaces.Client.ClientSession,System.Int32)">
            <summary>
            Создает объект.
            </summary>
            <param name="session">Клиентская сессия</param>
            <param name="id">Идентификатор элемента метаданных</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.CacheObject.EnabledConditionAccess">
            <summary>
            Допускает ли данный объект условные проверки прав доступа
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CacheObjectsCollection">
            <summary>
            Базовый класс для прокси-классов (коллекций типов объектов) клиенской сессии.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectsCollection._DBTableName">
            <summary>
            Имя таблицы, в которой содержаться эти объекты
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectsCollection._DBKeyField">
            <summary>
            Имя идентификационного поля объекта данной категории
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectsCollection._Filtering">
            <summary>
            Если true, то фильтровать по предметным областям
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectsCollection._clientSession">
            <summary>
            Интерфейс клиентской сессии
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CacheObjectsCollection._ParentID">
            <summary>
            Идентификатор родителя
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObjectsCollection.InitOptions(System.String,System.String)">
            <summary>
            Инициализация класса
            </summary>
            <param name="tableName">Имя таблицы, в которой содержаться эти объекты</param>
            <param name="keyField">Имя идентификационного поля объекта данной категории</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.CacheObjectsCollection.ParentID">
            <summary>
            Идентификатор родителя
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObjectsCollection.GetParentSQL">
            <summary>
            Возвращает SQL-условие, отсеивающее только объекты, входящие в состав parentID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObjectsCollection.Select(System.String,System.Object[])">
            <summary>
            Возвращает таблицу с объектами входящими в состав parentID и отсортированными по orderBy
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CacheObjectsCollection.FillCaptions(System.Data.DataTable)">
            <summary>
            Порожденные классы заполняют заголовки таблицы, возвращаемой селектом
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CacheObjectsCollection.EnabledConditionAccess">
            <summary>
            Допускает ли данный объект условные проверки прав доступа
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributesGroup">
            <summary>
            Summary description for CAttributesGroup.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributesGroupCollection">
            <summary>
            Summary description for CAttributesGroupCollection.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributeTypeCreator">
            <summary>
            Класс создает клиентские обработчики типов атрибутов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributeType">
            <summary>
            Класс, реализующий работу с атрибутом как с типом.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CAttributeType.SetPossibleValues(System.Data.DataTable)">
            <summary>
            Присваивает атрибуту список допустимых значений
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CAttributeType.DoGetPropertiesStructure(Intermech.Interfaces.AttributeTypeProperties@)">
            <summary>
            Метод вызывается в момент чтения структуры свойств атрибута (сразу после отработки базового метода).
            Позволяет выполнить дополнительное заполнение свойств (например, расширенными метаданными)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CAttributeType.GetRelatedFormulaAttributes">
            <summary>
            Возвращает список идентификаторов атрибутов, использующихся в формуле для вычисления значения данного атрибута.
            Если атрибут не вычисляемый, то возвращает массив нулевой длины.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CAttributeType.Litera">
            <summary>
            Литера уровня продвижения.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMeasuredAttributeType.ValidateMuID(System.Int64)">
            <summary>
            Проверяет допустимость присвоения данному атрибуту единицы измерения muID
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMeasuredAttributeType.GetValidPhysicalValues">
            <summary>
            Возвращает список идентификаторов физических величин, единицы измерения которых можно присваивать данному атрибуту.
            Возвращает массив нулевой длины, если атрибуту можно присвоить любую единицу измерения.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMeasuredAttributeType.GetPhysicalValuesCaption(System.Int64[])">
            <summary>
            Возвращает список наименований допустимых физических величин по их идентификаторам
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CMeasuredAttributeType.IsCompatible(System.Int64)">
            <summary>
            Проверяет единицы измерения на совместимость.
            </summary>
            <param name="aMeasureID">Идентификатор объекта-единицы измерения, который
            проверяется на совместимость с данным параметром (например, единица массы не
            совместима с единицей объема и т.п.). </param>
        </member>
        <member name="T:Intermech.Interfaces.Client.CAttributeTypeCollection">
            <summary>
            Summary description for AttributeTypeCollection.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CAttributeTypeCollection.Create(Intermech.Interfaces.AttributeTypeProperties)">
            <summary>
            Создает атрибут и возвращает его идентификатор
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CAttributeTypeCollection.GetParentSQL">
            <summary>
            Возвращает SQL-условие, отсеивающее только объекты, входящие в состав parentID
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IIDBRelationsApplicabilityCollectionSSI">
            <summary>
            Интерфейс для прокси-класса, позволяющий получать ссылку на серверный интерфейс
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IIDBRelationsApplicabilityCollectionSSI.ServerSideIntf">
            <summary>
            Ссылка на серверный интерфейс IDBRelationsApplicabilityCollection
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CDBRelationsApplicability">
            <summary>
            Объект, описывающий контекст связи типа RelationType между объектами типа ObjectType (дочерний) и 
            InObjectType (родительский).
            Прокси-класс для реализации IDBRelationsApplicability на стороне клиента.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CDBRelationsApplicability._DBKeyField">
            <summary>
            Имя идентификационного поля объекта данной категории
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CDBRelationsApplicability._AreaSupport">
            <summary>
            Если true, то фильтровать по предметным областям
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CDBRelationsApplicability._LanguageSupport">
            <summary>
            Если true, то фильтровать по языковым вариантам
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicability.#ctor(Intermech.Interfaces.Client.ClientSession,System.Int32)">
            <summary>
            Создать экземпляр контекста связи
            </summary>
            <param name="uSession">Клиентская сессия</param>
            <param name="applicabilityID">Идентификатор контекста связи</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.ServerSideIntf">
            <summary>
            Интерфейс IDBRelationsApplicability с серверной стороны
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicability.InvalidateInCache">
            <summary>
            Удалить информацию о текущей применяемости из вспомогательного кэша
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.ApplicabilityID">
            <summary>
            Идентификатор контекста связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.ObjectType">
            <summary>
            Тип дочернего объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.InObjectType">
            <summary>
            Тип родительского объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.RelationType">
            <summary>
            Тип связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.CloneChildRelations">
            <summary>
            Если true, то при создании версии родительского объекта нужно создавать версии дочерних объектов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.MaximumLinks">
            <summary>
            Максимально допустимое количество таких связей. Если = Int32.MaximumValue, то бесконечное
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.ApplicabilityMode">
            <summary>
            Свойство обязательности связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.RelationConstraintMode">
            <summary>
            Способ обрабатки удаление объектов, связанных этой связью
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicability.Delete">
            <summary>
            Удалить контекст связи
            </summary>
            <returns>0, если удаление успешно</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.PropertiesStructure">
            <summary>
            Суммарные свойства контекста связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.IsContent">
            <summary>
            Влияет ли данная связь на содержимое родительского объекта. Если да, то при модификации
            атрибутов этой связи меняется дата модификации родительского объекта. Также при создании
            объекта по прототипу родительского объекта копируются все связи, у которых IsContent == true
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.Options">
            <summary>
            Опции связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicability.CheckoutFiles">
            <summary>
            Извлекать ли на диск файлы по таким связям
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicability.Delete(System.Int64)">
            <summary>
            Удалить контекст связи
            </summary>
            <param name="DeleteMode">Параметр для указания доп. информации по удалению.
            Если не нужен в конкретной реализации, то туда будут передавать 0.</param>
            <returns>Результаты удаления</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.CDBRelationsApplicabilityCollection">
            <summary>
            Коллекция допустимых связей объектов данного типа с объектами различных типов.
            Прокси-класс для реализации IDBRelationsApplicabilityCollection на стороне клиента.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CDBRelationsApplicabilityCollection._AreaSupport">
            <summary>
            Если true, то фильтровать по предметным областям
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CDBRelationsApplicabilityCollection._LanguageSupport">
            <summary>
            Если true, то фильтровать по языковым вариантам
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicabilityCollection.#ctor(Intermech.Interfaces.Client.ClientSession)">
            <summary>
            Создать экземпляр прокси-класса 
            </summary>
            <param name="uSession">Клиентская сессия</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.CDBRelationsApplicabilityCollection.ServerSideIntf">
            <summary>
            Интерфейс IDBRelationsApplicability с серверной стороны
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicabilityCollection.GetApplicabilitiesList(System.Int32,System.Int32,System.Int32)">
            <summary>
            Возвращает таблицу со списком допустимых применяемостей связями типа relationType
            объектов типа objectType в объектах типа inObjectType. 
            Если relationType меньше 0, то вернется список типов связей, которыми объекты типа objectType применяются в объектах типа inObjectType.
            Если objectType   меньше 0, то вернется спиcок всех применяемости всех типов в типе inObjectType. 
            Если inObjectType меньше 0, то вернется список входимостей объектов типа objectType.
            
            Если допустимых применяемостей нет, то возвращается DataTable с количеством записей 0 
            </summary>
            <returns>Таблица со списком допустимых применяемостей связями типа relationType</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicabilityCollection.GetApplicability(System.Int32,System.Int32,System.Int32)">
            <summary>
            Возвращает объект-описатель допустимости связи типа relationType между объектами
            типов objectType и inObjectType. Если таковая применяемость не настроена, то
            метод возвращает null.
            </summary>
            <param name="relationType">Тип связи</param>
            <param name="objectType">Дочерний тип объекта</param>
            <param name="inObjectType">Родительский тип объекта</param>
            <returns>Описание входимости одного типа в другой</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicabilityCollection.GetApplicability(System.Int32)">
            <summary>
            Возвращает объект-описатель допустимости связи номер applicabilityID
            </summary>
            <param name="applicabilityID">Идентификатор контекста связи</param>
            <returns>Описание входимости одного объекта в другой</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CDBRelationsApplicabilityCollection.Create(Intermech.Interfaces.RelationsApplicabilityProperties)">
            <summary>
            Создает новый контекст связи на основании структуры applicabilityProperties и
            возвращает его идентификатор.
            </summary>
            <param name="applicabilityProperties">Свойства входимости</param>
            <returns>Идентификатор нового контекста связи</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.CIDHelper">
            <summary>
            Summary description for IDHelperClient.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._CompositionVersionID">
            <summary>
            ID атрибута "Идентификатор версии в составе" 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._CompositionVersionBackup">
            <summary>
            ID атрибута "Сохранённый идентификатор версии в составе" 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._SettingsAttributeID">
            <summary>
            ID атрибута "Настройки" 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._SubstitutesGroupNoID">
            <summary>
            ID атрибута "Номер группы заменителей"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._DocRelationTypeID">
            <summary>
            RELATION_TYPE Документации на изделие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._SubstituteInGroup">
            <summary>
            ID атрибута "Номер заменителя в группе" 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._SubstituteGroupName">
            <summary>
            ID атрибута "Название группы заменителей" 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._SubstituteName">
            <summary>
            ID атрибута "Название заменителя" 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._SortedRelationTypeID">
            <summary>
            RELATION_TYPE простой связи с сортировкой
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._objtypeVersionRule">
            <summary>
            ID типа объекта "Правило подбора версий"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._objtypeVersionRuleCommon">
            <summary>
            ID типа объекта "Общее правило подбора версий"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._objtypeVersionRuleUser">
            <summary>
            ID типа объекта "Персональное правило подбора версий"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._objtypeVersionRuleSystem">
            <summary>
            ID типа объекта "Системное правило подбора версий"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._attributeSecurityLevelID">
            <summary>
            ID атрибута "Уровень безопасности"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._AnnulmentLevelID">
            <summary>
            LEVEL_ID Аннулирование
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._KeepingLevelID">
            <summary>
            LEVEL_ID Хранение
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._LiteraID">
            <summary>
            ATTRIBUTE_ID Литера
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._InternalRegNumber">
            <summary>
            ATTRIBUTE_ID Внутренний регистрационный номер
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._attributeVersionInRelation">
            <summary>
            ATTRIBUTE_ID "Идентификатор версии в составе"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._ActiveSnapshotID">
            <summary>
            ATTRIBUTE_ID "Идентификатор активной итерации"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._AttributeRedlining">
            <summary>
            ATTRIBUTE_ID "Графические замечания к документам"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._attributePublicationNecessary">
            <summary>
            ATTRIBUTE_ID "Необходима публикация на портал"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._attributeOptionPublication">
            <summary>
            ATTRIBUTE_ID "Опции публикации"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._objtypeIncompleteObject">
            <summary>
            ID типа "Неполный ссылочный объект"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._attributeAccessCondition">
            <summary>
            Атрибут "Условие проверки прав доступа"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CIDHelper._attributeLastEditorID">
            <summary>
            Атрибут "Изменил карточку объекта"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CIDHelper.ReadFromCache(System.String,System.String,System.String)">
            <summary>
            Прочитать из кэша значение целочисленного ключа по GUIDу
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CIDHelper.GetAttributeID(System.String)">
            <summary>
            Возвращает ид. атрибута по строковому представлению его глобального идентификатора
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CIDHelper.GetObjectTypeID(System.String)">
            <summary>
            Возвращает ид. типа объектов по строковому представлению его глобального идентификатора
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CIDHelper.GetRelationTypeID(System.String)">
            <summary>
            Возвращает ид. типа связей по строковому представлению его глобального идентификатора
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CIDHelper.IsSortedRelationType(System.Int32)">
            <summary>
            Возвращает true, если данный тип связи сортируемый вручную (имеет атрибут Сортировка)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.AllUsersGroupID">
            <summary>
            Получает F_OBJECT_ID для группы ВСЕ ПОЛЬЗОВАТЕЛИ
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CIDHelper.GetObligatoryAttributeID(System.Guid)">
            <summary>
            Возвращает идентификатор обязательного атрибута по его глобальному идентификатору.
            Если атрибута с таким гуидом не существует, то возвращается ObligatoryObjectAttributes.Zero.
            Если атрибут является не обязательным, то возвращает ObligatoryObjectAttributes.None;
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.CompositionVersionID">
            <summary>
            ID атрибута "Идентификатор версии в составе" 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.CompositionVersionBackup">
            <summary>
            ID атрибута "Сохранённый идентификатор версии в составе" 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SettingsAttributeID">
            <summary>
            ID атрибута "Настройки" 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SubstitutesGroupNoID">
            <summary>
            ID атрибута "Номер группы заменителей"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SubstituteInGroup">
            <summary>
            ID атрибута "Номер заменителя в группе" 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SubstituteGroupName">
            <summary>
            ID атрибута "Название группы заменителей" 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SubstituteName">
            <summary>
            ID атрибута "Название заменителя" 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.ModifyContentDateID">
            <summary>
            ATTRIBUTE_ID атрибута "Дата модификации содержимого объекта"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SortIndexID">
            <summary>
            ATTRIBUTE_ID атрибута "Сортировка"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.FolderKeyID">
            <summary>
            ATTRIBUTE_ID атрибута "Ключ папки классификатора"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.PluginTypeID">
            <summary>
            OBJECT_TYPE типа "Загружаемый модуль"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SPRelationTypeID">
            <summary>
            RELATION_TYPE проектной связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.WorkspaceTypeID">
            <summary>
            OBJECT_TYPE "Рабочий стол"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.PersonalLevelID">
            <summary>
            LEVEL_ID "Персональный объект"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.CreatedLevelID">
            <summary>
            LEVEL_ID "Созданный объект"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.FileAttributeID">
            <summary>
            ATTRIBUTE_ID "Файл"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.ConfigFileAttributeID">
            <summary>
            ATTRIBUTE_ID "Конфигурационные файлы"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.ConfigDataTypeID">
            <summary>
            OBJECT_TYPE типа Конфигурационные данные
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.PhysicValueTypeID">
            <summary>
            OBJECT_TYPE типа Физическая величина
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.DeletedID">
            <summary>
            LEVEL_ID удаленных объектов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SysdbaID">
            <summary>
            OBJECT_ID системного администратора
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SystemID">
            <summary>
            OBJECT_ID пользователя Система
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.OwnerGroupID">
            <summary>
            OBJECT_ID группы "Владелец объекта"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.ObjectCreatorGroupID">
            <summary>
            OBJECT_ID группы "СОЗДАТЕЛЬ_ОБЪЕКТА"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.RelationCreatorGroupID">
            <summary>
            OBJECT_ID группы "СОЗДАТЕЛЬ_СВЯЗИ"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.InternalServiceRoleID">
            <summary>
            OBJECT_ID роли "Внутренняя служба IPS"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.AdminRoleID">
            <summary>
            OBJECT_ID роли "Администратор"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.DefaultLanguageID">
            <summary>
            LANGUAGE_ID, принятый по умолчанию
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.UsersTypeID">
            <summary>
            OBJECT_TYPE объектов типа Пользователи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.StorageTypeID">
            <summary>
            OBJECT_TYPE объектов типа Пользователи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.GroupsTypeID">
            <summary>
            OBJECT_TYPE объектов типа Группы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.LoginNameID">
            <summary>
            ATTRIBUTE_ID имени пользователя для входа в систему
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.PasswordID">
            <summary>
            ATTRIBUTE_ID пароля
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.ExternalUserID">
            <summary>
            ATTRIBUTE_ID атрибута "Внешний пользователь"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.UserNameID">
            <summary>
            ATTRIBUTE_ID имени пользователя для отображения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.RolesTypeID">
            <summary>
            OBJECT_TYPE объектов типа Роли
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.RanksTypeID">
            <summary>
            OBJECT_TYPE объектов типа Должности
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.ProjectsTypeID">
            <summary>
            OBJECT_TYPE объектов типа Проекты
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.MeasureTypeID">
            <summary>
            OBJECT_TYPE типа Единица измерения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.NameID">
            <summary>
            ATTRIBUTE_ID наименования
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.ShortNameID">
            <summary>
            ATTRIBUTE_ID краткого наименования
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.DesignationID">
            <summary>
            ATTRIBUTE_ID обозначения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SimpleRelationTypeID">
            <summary>
            RELATION_TYPE простой вертикальной связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SortedRelationTypeID">
            <summary>
            RELATION_TYPE простой связи с сортировкой
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.objtypeVersionRule">
            <summary>
            ID типа объекта "Правило подбора версий"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.objtypeVersionRuleCommon">
            <summary>
            ID типа объекта "Общее правило подбора версий"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.objtypeVersionRuleUser">
            <summary>
            ID типа объекта "Персональное правило подбора версий"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.objtypeVersionRuleSystem">
            <summary>
            ID типа объекта "Системное правило подбора версий"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.DocRelationTypeID">
            <summary>
            RELATION_TYPE документации на изделие
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.SecurityLevelID">
            <summary>
            ID атрибута "Уровень безопасности"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.AnnulmentLevelID">
            <summary>
            LEVEL_ID "Аннулирование"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.KeepingLevelID">
            <summary>
            LEVEL_ID "Хранение"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.LiteraID">
            <summary>
            ATTRIBUTE_ID "Литера"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.InternalRegNumber">
            <summary>
            ATTRIBUTE_ID Внутренний регистрационный номер
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.AttributeVersionInRelation">
            <summary>
            ATTRIBUTE_ID "Идентификатор версии в составе"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.ActiveSnapshotID">
            <summary>
            ID атрибута "Идентификатор активной итерации" 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.AttributeRedlining">
            <summary>
            ID атрибута "Графические замечания к документам" 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.AttributePublicationNecessary">
            <summary>
            ATTRIBUTE_ID "Необходима публикация на портал"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.AttributeOptionPublication">
            <summary>
            ATTRIBUTE_ID "Опции публикации"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.objtypeIncompleteObject">
            <summary>
            ID типа объекта "Неполный ссылочный объект"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.AttributeAccessCondition">
            <summary>
            Атрибут "Условие проверки прав доступа"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CIDHelper.AttributeLastEditorID">
            <summary>
            Атрибут "Изменил карточку объекта"
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CLanguageType">
            <summary>
            Summary description for CLanguage. IDBLanguage
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CLanguageCollection">
            <summary>
            Summary description for CLanguageCollection. IDBLanguageCollection
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CLCSchema.Options">
            <summary>
            Опции (содержат битовые флаги для управления свойствами схемы ЖЦ)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CLCSchema.GetStepsCollection">
            <summary>
            Возвращает коллекцию шагов данного жизненного цикла
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.СLifecycleLevel">
            <summary>
            Summary description for СLifecycleLevel
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CLifecycleLevelCollection">
            <summary>
            Summary description for CLifecycleLevelCollection.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CLifecycleStep">
            <summary>
            Summary description for CLifecycleStep. 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CLifecycleStep.AutoTransferStepID">
            <summary>
            Возвращает идентификатор шага ЖЦ, на который будут вытесняться версии с данного шага (или 0)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CLifecycleStepCollection">
            <summary>
            Summary description for CLifecycleStepCollection.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CLifecycleStepCollection.SchemaID">
            <summary>
            Ид. схемы жизненного цикла, которой принадлежит данная коллекция шагов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CObjectType">
            <summary>
            Прокси-класс для работы с метаданными - описаниями типов объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CObjectType.ParentsArrays">
            <summary>
            Коллекция пар значений [(int)Тип объекта] = [(int)Тип родительского объекта]
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CObjectType._Attributes">
            <summary>
            Коллекция атрибутов типа
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.#ctor(Intermech.Interfaces.Client.ClientSession,System.Int32)">
            <summary>
            Создать прокси-класс для описания типа объекта
            </summary>
            <param name="uSession">Клиентская сессия</param>
            <param name="anObjectTypeID">Идентификатор типа объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType._FillParentsArray(System.Collections.ArrayList)">
            <summary>
            Заполнить указанный массив полной иерархией родительских типов указанного типа объекта
            </summary>
            <param name="objsTreeList">Массив, в котором собирается иерархия родительских типов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.CachedParentTypeID(Intermech.Interfaces.Client.IClientSession,System.Int32)">
            <summary>
            Вытащить из кэш-коллекции или таблицы кэша метаданных идентификатор родительского типа объекта
            </summary>
            <param name="session">Клиентская сессия</param>
            <param name="ObjectTypeID">Идентификатор дочернего типа объекта, для которого отыскивается родительский объект</param>
            <returns>-1 или идентификатор родительского типа объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.CachedFillParentsArray(Intermech.Interfaces.Client.IClientSession,System.Int32,System.Collections.ArrayList)">
            <summary>
            Заполнить указанный массив полной иерархией родительских типов указанного типа объекта
            </summary>
            <param name="session">Клиентская сессия</param>
            <param name="StartObjectType">Стартовый идентификатор типа объекта, для которого собирается иерархия</param>
            <param name="objsTreeList">Массив, в котором собирается иерархия родительских типов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.ReloadClientCache">
            <summary>
            Перечитывает клиентский кэш и paramsTable
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.GetObjectsInfo">
            <summary>
            Возвращает количество неудаленных объектов и итераций объектов данного типа
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.AddChildrenForType(System.Int32,System.Collections.ArrayList)">
            <summary>
            Собрать в массив список всех дочерних типов объектов (рекурсивно)
            </summary>
            <param name="objTypeID">Идентификатор типов объектов</param>
            <param name="objsTreeList">Массив, в котором собирается иерархия типов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.GetPossibleChildren">
            <summary>
            Получить список дочерних типов объектов
            </summary>
            <returns>Коллекция дочерних типов объектов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.GetAllChildren">
            <summary>
            Получить список дочерних типов объектов, включая абстрактные
            </summary>
            <returns>Коллекция дочерних типов объектов, включая абстрактные</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.CObjectType.ViewName">
            <summary>
            Имя таблицы-представления данных для получения списков объектов данного типа
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CObjectType.AttributesTableName">
            <summary>
            Имя таблицы атрибутов данного типа объектов (работает для всех типов, а не только локальных)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.CObjectType.ParentTypeID">
            <summary>
            Идентификатор родительского типа объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.GetAttributeType(System.Int32)">
            <summary>
            Возвращает описатель типа атрибута номер attributeID применительно к данному типу объектов/связей.
            Если тип не может принимать такие атрибуты, то функция возвращает null.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectType.GetAttributeType(System.String)">
            <summary>
            Возвращает описатель типа атрибута с именем attributeName применительно к данному типу объектов/связей.
            Если тип не может принимать такие атрибуты, то функция возвращает null.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CObjectTypeCollection">
            <summary>
            Summary description for CObjectTypeCollection.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CObjectTypeCollection.DisabledViewObjectTypes">
            <summary>
            Список типов объектов, видеть списки которых юзеру запрощено (кэш)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CObjectTypeCollection.DisabledViewUserID">
            <summary>
            Ид. юзера, для которого последний раз получали список DisabledViewObjectTypes
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CObjectTypeCollection.CanViewObjects">
            <summary>
            Метод проверяет имеет ли право данный юзер просматривать список объектов того типа, для которого создана данная коллекция.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CRelationType">
            <summary>
            Summary description for CRelationType.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CRelationType.GetAttributeType(System.Int32)">
            <summary>
            Возвращает описатель типа атрибута номер attributeID применительно к данному типу объектов/связей.
            Если тип не может принимать такие атрибуты, то функция возвращает null.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CRelationType.GetAttributeType(System.String)">
            <summary>
            Возвращает описатель типа атрибута с именем attributeName применительно к данному типу объектов/связей.
            Если тип не может принимать такие атрибуты, то функция возвращает null.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CRelationTypeCollection">
            <summary>
            Summary description for CRelationTypeCollection.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CSubjectAreaCollection">
            <summary>
            Summary description for CSubjectAreaTypeCollection. IDBSubjectAreaTypeCollection
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CSubjectAreaCollection.ValidateAriasID(System.String)">
            <summary>
            Проверяет на валидность идентификаторы предметных областей
            и выдает исключение InvalidAreaIDException
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CSubjectAreaCollection.ValidateAriasString(System.String)">
            <summary>
            Проверяет на допустимость присвоения метаданным строки с идентификаторами предметных областей
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CSubjectAreaType">
            <summary>
            Summary description for CSubjectAreaType. 
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientConsts">
            <summary>
            Summary description for ClientConsts.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientConsts.NotificationFileAttribute4ObjectChanged">
            <summary>
            Соообщение нотификатора: применяется для уведомления редактора файловых атрибутов об изменении файлового атрибута объекта из навигатора и других сторонних мест.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientConsts.InDeveloperMode">
            <summary>
            Содержит занчение true, если система работает в режиме разработчика приложений (разрешено показывать и модифицировать гуиды типов
            Значение получается у сессии, которая берет его с сервера, а там настройка хранится в конфиге сервера
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.GridChangedEventArgs">
            <summary>
            Класс для события, показывающего что произошли изменения в ObjectPropertyGrid.
            ApplyNeeded = true показывает что произошли изменения которые потребуют применения изменений.
            DirectWriteOccured = true показывает что произошла запись напрямую в базу(работа с атрибутом типа ftAutoInc). 
                т.е. Grid изменился, но при ApplyNeeded = false применение изменений не потребуется.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICustomNavWindow">
            <summary>
            Интерфейс, который должен поддерживаться контекстом редактирования (дескриптором или быть в наборе сервисов), функции которого должы
            возвращать тип окна - потомка NavWindow. Таким образом OpenNewWindow (открыть в новом окне будет создавать окна этого типа)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IAVSClientService">
            <summary>Клиентский сервис AVS</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IAVSClientService.ActiveDocumentId">
            <summary>Идентификатор активной спецификации</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAVSClientService.SpecificationIsNeedUpdate(System.Int64,System.Int32,System.Guid,System.Collections.Generic.List{System.String}@)">
            <summary>Спецификация нуждается в обновлении</summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="objectGuid">Глобальный идентификатор версии объекта</param>
            <param name="reasonList">Возвращает сообщения причинах необходимости обновления</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAVSClientService.EditAVSDocument(System.Int64,System.Int32,System.Boolean,System.Boolean)">
            <summary>Открыть конструкторский документ в редакторе AVS</summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="saveAfterUpdate">Сохранить файл документа после обновления при открытии</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAVSClientService.GetViewDocument(System.Int64,System.Int32)">
            <summary>
            Получить документ для просмотра
            </summary>
            <param name="objectID">Идентификатор версии СП</param>
            <param name="objectType">Тип СП</param>
            <returns>ImDocument, если требуется обновление документа, иначе null</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.IAVSClientService.ActiveWindowIsSpecification">
            <summary>Активное окно является окном со спецификацией</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAVSClientService.AddExternalAVSCommand(Intermech.Interfaces.Client.ExternalAVSCommand)">
            <summary>Добавить внешнюю команду в AVS. 
            Новые пункты меню добавляются в меню "Документ"</summary>
            <param name="externalAVSCommand">Команда</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAVSClientService.RemoveExternalAVSCommand(System.String)">
            <summary>Удалить внешнюю команду из AVS</summary>
            <param name="name">Имя команды</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAVSClientService.GetExternalAVSCommand(System.String)">
            <summary>Получить внешнюю команду AVS</summary>
            <param name="name"></param>
            <returns>Возвращает класс с именем и обработчиком команды. Если команды нет, то метод возвращает null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAVSClientService.IsAVSDocumentSupportedType(System.Int32)">
            <summary>Поддерживается ли тип объекта БД как документ AVS</summary>
            <param name="dbObjectTypeID">Идентификатор типа объекта БД</param>
        </member>
        <member name="E:Intermech.Interfaces.Client.IAVSClientService.BeforeCommitCreationAVSDocumentEvent">
            <summary>
            Событие, возникающего перед CommitCreation для заготовки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAVSClientService.OnBeforeCommitCreationAVSDocument(Intermech.Interfaces.Client.BeforeCommitCreationAVSDocumentEventArgs)">
            <summary>
            Метод вызывается по нажатию на кнопку готово перед коммитом для нового объекта (т.е. создаваемый объект еще заготовка)
            </summary>
            <param name="e">Заготовка</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.BeforeCommitCreationAVSDocumentEventHandler">
            <summary>
            Делегат для события, возникающего перед коммитом создания объекта
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.BeforeCommitCreationAVSDocumentEventArgs">
            <summary>
            Аргументы для события, возникающего перед коммитом создания объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.BeforeCommitCreationAVSDocumentEventArgs.Document">
            <summary>
            Объект созданного документа
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.BeforeCommitCreationAVSDocumentEventArgs.DocumentPrototypeID">
            <summary>
            Идентификатор прототипа объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.BeforeCommitCreationAVSDocumentEventArgs.ArticleIDs">
            <summary>
            Список идентификаторов изделий (исполнений) связанных с документом. Изделия могут быть как только что созданные так и уже существующие.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.BeforeCommitCreationAVSDocumentEventArgs.NewObjectIDs">
            <summary>
            Список идентификаторов объектов автоматически созданных при создании документа
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.BeforeCommitCreationAVSDocumentEventArgs.#ctor(Intermech.Interfaces.IDBObject,System.Int64,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int64})">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="objectTypeID">Тип объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ExternalAVSCommand">
            <summary>Встраиваемая в AVS внешняя команда</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ExternalAVSCommand.#ctor(System.String,System.String,System.String,System.EventHandler)">
            <summary>Конструктор</summary>
            <param name="commandName">Имя команды. Идентифицирует команду в методах QueryStatus() и Execute() класса CommandManager</param>
            <param name="caption">Текст пункта меню</param>
            <param name="hint">Подсказка пункта меню</param>
            <param name="commandHandler">Делегат обработчика команды</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ExternalAVSCommand.#ctor(Intermech.Bars.MenuItemBase,System.EventHandler)">
            <summary>Конструктор</summary>
            <param name="menuItem">Пункт меню. Он должен иметь CommandName, который идентифицирует команду в методах QueryStatus() и Execute() класса CommandManager</param>
            <param name="commandHandler">Делегат обработчика команды</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ExternalAVSCommand.CommandName">
            <summary>
            Имя команды. Идентифицирует команду в методах QueryStatus() и Execute() класса CommandManager
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ExternalAVSCommand.Caption">
            <summary>
            Текст пункта меню
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ExternalAVSCommand.Hint">
            <summary>
            Подсказка пункта меню
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ExternalAVSCommand.CommandHandler">
            <summary>
            Делегат обработчика команды (sender - это окно AVSWindow)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ExternalAVSCommand.MenuItem">
            <summary>
            Пункт меню. Может быть null, в этом случае AVS сам создаст пункт в меню "Документ"
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IObjectCreatorCustomService">
            <summary>
            Интерфейс для реализации заменителей диалога создания объектов.
            Используется для создания собственного диалога создания объекта заданного типа
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorCustomService.CreateObjectDialog(System.Int32,System.Int64,System.Int32[],System.Int64[],System.DateTime,System.Boolean)">
            <summary>
            Вызов диалога создания нового объекта (по прототипу) c созданием заданных связей с указанными объектами 
            </summary>
            <param name="ObjectTypeID">Идентификатор типа создаваемого объекта</param>
            <param name="TemplateObjectID">Идентификатор объекта-прототипа</param>
            <param name="RelationTypeIDs">массив идентификаторов связей которые необходимо создавать</param>
            <param name="RelatedObjectIDs">массив идентификаторов объектов с которыми надо связать созданный объект</param>
            <param name="StartDate">время с которого начинают действовать связи (если они были созданы)</param>
            <param name="isVersion">признак, нужно ли создавать версию объекта</param>
            <returns>Идентификатор созданного объекта</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICreatorFileHandler">
            <summary>
            Интерфейс для перекрывающего создателя объектов, позволяющий управлять файловыми атрибутами 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICreatorFileHandler.ShowPage">
            <summary>
            Флаг, отображать ли при создании объекта по прототипу закладку переименования файлов
            вместо закладки с файловыми атрибутами. По-умолчанию TRUE.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICreatorCheckoutHandler">
            <summary>
            Интерфейс для перекрывающего создателя объектов, позволяющий управлять взятием на редактирование созданного объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICreatorCheckoutHandler.CheckoutObject">
            <summary>
            Флаг управления взятием на редактирование объекта после его создания
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICreatorMultiObjectHandler">
            <summary>
            Интерфейс для перекрывающего создателя объектов, позволяющий вернуть в мастер создания перечень созданных объектов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICreatorMultiObjectHandler.ObjectCreatedInfo">
            <summary>
            Перечень созданных объектов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IObjectCreatorRiderCustomService">
            <summary>
            Расширение интерфейса IObjectCreatorCustomService
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorRiderCustomService.AcceptDialog(System.Int32,System.Int64,System.Int32[],System.Int64[],System.DateTime,System.Boolean)">
            <summary>
            Вызывать собственный диалог ? 
            Если здесь вернуть true, то вызовется диалог создания объектов реализованный в функции CreateObjectDialog подписчика
            на конкретный тип объектов, если же вернуть false, то вызоветься стандартный диалог создания объекта
            с изменениями, реализованными подписчиком (см. функции интерфейса)
            </summary>
            <param name="ObjectTypeID">Идентификатор типа создаваемого объекта</param>
            <param name="TemplateObjectID">Идентификатор объекта-прототипа</param>
            <param name="RelationTypeIDs">массив идентификаторов связей которые необходимо создавать</param>
            <param name="RelatedObjectIDs">массив идентификаторов объектов с которыми надо связать созданный объект</param>
            <param name="StartDate">время с которого начинают действовать связи (если они были созданы)</param>
            <param name="isVersion">признак, нужно ли создавать версию объекта</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorRiderCustomService.AfterCreate(System.Int64)">
            <summary>
            Метод вызывается сразу-же после создания новой заготовки ДО отображения диалога создания
            </summary>
            <param name="newObjectID">ID заготовки</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObjectCreatorRiderCustomService.VisiblePages">
            <summary>
            Возвращает коллекцию страниц (наследованные от ObjectCreatorControl), которые будут присутствовать в мастера создания объекта,
            значение в коллекции обозначает отображать ли эту страницу в мастере
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorRiderCustomService.OnCommitAction(Intermech.Interfaces.IUserSession,System.Int64,System.Collections.Generic.List{Intermech.Interfaces.Client.NotificationEventArgs})">
            <summary>
            Метод вызывается по нажатию на кнопку готово
            Внутри не выводить никаких форм !!!!! Этот метод вызывается внутри транзакции !!!
            </summary>
            <param name="session">Пользовательская сессия</param>
            <param name="newObjectID">id заготовки</param>
            <param name="nea">сида ложить евенты</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorRiderCustomService.OnBeforeCommitAction(Intermech.Interfaces.IUserSession,Intermech.Interfaces.IDBObject)">
            <summary>
            Метод вызывается по нажатию на кнопку готово перед коммитом для нового объекта (т.е. создаваемый объект еще заготовка)
            Внутри не выводить никаких форм !!!!! Этот метод вызывается внутри транзакции !!!
            </summary>
            <param name="session">Пользовательская сессия</param>
            <param name="newObject">Заготовка</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorRiderCustomService.OnCancelAction(Intermech.Interfaces.IUserSession,System.Int64,System.Collections.Generic.List{Intermech.Interfaces.Client.NotificationEventArgs})">
            <summary>
            Метод вызывается по нажатию на кнопку отмена
            Внутри не выводить никаких форм !!!!! Этот метод вызывается внутри транзакции !!!
            </summary>
            <param name="session">Пользовательская сессия</param>
            <param name="newObjectID">id заготовки</param>
            <param name="nea">Список событий</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorRiderCustomService.AddPages(System.Object,System.Int32)">
            <summary>
            Добавить в мастер свои страницы (наследованные от ObjectCreatorControl), с порядковым номером
            следования в мастере (если -1 добавиться в конец)
            </summary>
            <param name="CreatedObject"></param>
            <param name="propPageIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IObjectCreatorRiderParamCustomService">
            <summary>
            Расширение интерфейса IObjectCreatorRiderCustomService для поддержки доп. параметров
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorRiderParamCustomService.SetParams(Intermech.Interfaces.Client.IObjectCreatorParams)">
            <summary>
            Передача параметров (вызывается в самом начале, перед созданим объектов)
            </summary>
            <param name="createParams"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IObjectCreatorParams">
            <summary>
            Интерфейс с параметрами для управления кастом креаторами
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IObjectCreatorParams.RawMode">
            <summary>
            Режим создания заготовки объекта( как правило не требуется показывать диалоги создания)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.Attribute4ObjectEventArgs.AttributeType">
            <summary>
            0 - тип не указан
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.Attribute4ObjectEventArgs.#ctor(System.String,System.Int32,System.Int64)">
            <summary>
            Подготовить аргументы события для объекта, с атрибутом attributeID которого произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="objectID">Идентификатор объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.Attribute4ObjectEventArgs.#ctor(System.String,System.Int32,System.Int32,System.Int64,System.Int32)">
            <summary>
            Подготовить аргументы события для объекта, с атрибутом attributeID которого произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="objectTypeID">Идентификатор типа объекта</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.FilesRenamedEventHandler">
            <summary>
            Делегат для события, возникающего при переименовании файла
            </summary>
            <param name="sender">Ссылка на экземпляр создателя cобытия</param>
            <param name="args"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.BeforeDraftCreateEventHandler">
            <summary>
            Делегат для события, возникающего перед созданием заготовки нового объекта
            </summary>
            <param name="sender">Ссылка на экземпляр создателя cобытия</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.AfterDraftCreatedEventHandler">
            <summary>
            Делегат для события, возникающего после создания заготовки нового объекта
            </summary>
            <param name="sender">Ссылка на экземпляр создателя cобытия</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.AfterEntersInCreatedEventHandler">
            <summary>
            Делегат для события, возникающего при успешном включении в какой-либо состав создаваемого объекта
            </summary>
            <param name="sender">Ссылка на экземпляр создателя cобытия</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.AfterObjectCreatedEventHandler">
            <summary>
            Делегат для события, возникающего после успешного завершения создания нового объекта
            </summary>
            <param name="sender">Ссылка на экземпляр создателя cобытия</param>
            <param name="ea">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectCreatorCanceledEventHandler">
            <summary>
            Делегат для события, возникающего при ОТМЕНЕ создания нового объекта
            </summary>
            <param name="sender">Ссылка на экземпляр создателя объекта</param>
            <param name="ea">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.BeforeCommitCreationEventHandler">
            <summary>
            Делегат для события, возникающего перед коммитом создания объекта
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectCreatedEventArgs">
            <summary>
            Аргументы для события, возникающего с создаваемым объектом
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatedEventArgs.ObjectTypeID">
            <summary>
            Идентификатор типа создаваемого объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatedEventArgs.ObjectID">
            <summary>
            Идентификатор версии созданной заготовки.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectCreatedEventArgs.#ctor(System.Int32,System.Int64)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="objectTypeID">Тип объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.BeforeCommitCreationEventArgs">
            <summary>
            Аргументы для события, возникающего перед коммитом создания объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.BeforeCommitCreationEventArgs.#ctor(Intermech.Interfaces.IDBObject,System.Int64)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="objectTypeID">Тип объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.AfterDraftCreatedEventArgs">
            <summary>
            Аргументы для события, возникающего после создания заготовки нового объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AfterDraftCreatedEventArgs.#ctor(System.Int32,System.Int64)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="objectTypeID">Тип объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.AfterPrototypedDraftCreatedEventArgs">
            <summary>
            Аргументы для события, возникающего после создания заготовки нового объекта по прототипу
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AfterPrototypedDraftCreatedEventArgs.#ctor(System.Int32,System.Int64,System.Int64)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="objectTypeID">Тип объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.AfterEntersInCreatedEventArgs">
            <summary>
            Аргументы для события, возникающего при успешном включении в какой-либо состав создаваемого объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterEntersInCreatedEventArgs.ObjectType">
            <summary>
            Тип создаваемого объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterEntersInCreatedEventArgs.ObjectID">
            <summary>
            Идентификатор создаваемого объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterEntersInCreatedEventArgs.RelationType">
            <summary>
            Тип связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterEntersInCreatedEventArgs.PrjLinkID">
            <summary>
            Идентификатор связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterEntersInCreatedEventArgs.ProjectID">
            <summary>
            Идентификатор объекта в состав которого включили создаваемый объект
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AfterEntersInCreatedEventArgs.#ctor(System.Int32,System.Int64,System.Int64,System.Int32,System.Int64)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="objectType">Тип дочернего объекта</param>
            <param name="objectID">Идентификатор дочернего объекта</param>
            <param name="projectID">Идентификатор родительского объекта</param>
            <param name="relationType">Тип связи</param>
            <param name="prjLinkID">Идентификатор связи</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.BeforeDraftCreateEventArgs">
            <summary>
            Аргументы для события, возникающего перед созданием заготовки нового объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.BeforeDraftCreateEventArgs.ObjectTypeID">
            <summary>
            Идентификатор типа создаваемого объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.BeforeDraftCreateEventArgs.TemplateID">
            <summary>
            Идентификатор шаблона, по которому будет создаваться заготовка.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.BeforeDraftCreateEventArgs.#ctor(System.Int32,System.Int64)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="creatingObjType">Идентификатор типа создаваемого объекта</param>
            <param name="templateID">Идентификатор шаблона, по которому будет создаваться заготовка. </param>
        </member>
        <member name="T:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs">
            <summary>
            Аргументы для события, возникающего после успешного завершения создания нового объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.#ctor(System.Int64,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="objectId">Идентификатор созданного объекта</param>
            <param name="runEditor">Признак - нужно ли запускать редактор по завершению создания объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.#ctor(System.Int64,System.Boolean,System.Int64)">
            <summary>
            Конструктор
            </summary>
            <param name="objectId">Идентификатор созданного объекта</param>
            <param name="runEditor">Признак - нужно ли запускать редактор по завершению создания объекта</param>
            <param name="prototypeId">Идентификатор прототипа по которому создается объект</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.#ctor(System.Int64,System.Boolean,System.Int64,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="objectId">Идентификатор созданного объекта</param>
            <param name="runEditor">Признак - нужно ли запускать редактор по завершению создания объекта</param>
            <param name="prototypeId">Идентификатор прототипа по которому создается объект</param>
            <param name="isVersion">Признак - создается новый объект или его версия</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.#ctor(System.Int64,System.Boolean,System.Int64,System.Boolean,System.Int32)">
            <summary>
            Конструктор
            </summary>
            <param name="objectId">Идентификатор созданного объекта</param>
            <param name="runEditor">Признак - нужно ли запускать редактор по завершению создания объекта</param>
            <param name="prototypeId">Идентификатор прототипа по которому создается объект</param>
            <param name="isVersion">Признак - создается новый объект или его версия</param>
            <param name="objectTypeID">Идентификатор типа созданного объекта</param>
        </member>
        <member name="F:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.objectId">
            <summary>
            Поле для хранения идентификатора созданного объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.prototypeId">
            <summary>
            Поле для хранения прототипа по которому создается объект
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.isVersion">
            <summary>
            Поле для хранения признака - создается новый объект или его версия
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.runEditor">
            <summary>
            Поле для хранения значения RunEditor
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.objectTypeID">
            <summary>
            Идентификатор типа созданного объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.ObjectID">
            <summary>
            Идентификатор созданного объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.PrototypeId">
            <summary>
            Идентификатор прототипа по которому создается объект
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.IsVersion">
            <summary>
            Признак - создается новый объект или его версия
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.RunEditor">
            <summary>
            Признак - нужно ли запускать редактор по завершению создания объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.AfterObjectCreatedEventArgs.ObjectTypeID">
            <summary>
            Идентификатор типа созданного объекта
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs">
            <summary>
            Класс для работы с событием, возникающим при отмене создания объекта,
            если заготовка была создана. 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs.createdZagId">
            <summary>
            Поле для хранения идентификатора ЗАГОТОВКИ созданного объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs.isVersion">
            <summary>
            Поле для хранения признака - создается новый объект или его версия
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs.objectTypeID">
            <summary>
            Идентификатор типа созданного объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs.#ctor(System.Int64)">
            <summary>
            Конструктор
            </summary>
            <param name="createdObjectId">Идентификатор созданной заготовки объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs.#ctor(System.Int64,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="createdObjectId">Идентификатор созданной заготовки объекта</param>
            <param name="isVersion">Признак - создавался новый объект или его версия</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs.#ctor(System.Int64,System.Boolean,System.Int32)">
            <summary>
            Конструктор
            </summary>
            <param name="createdObjectId">Идентификатор созданной заготовки объекта</param>
            <param name="isVersion">Признак - создавался новый объект или его версия</param>
            <param name="objectTypeID">Идентификатор типа созданного объекта</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs.CreatedZagId">
            <summary>
            Идентификатор созданной заготовки
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs.IsVersion">
            <summary>
            Признак - создается новый объект или его версия
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatorCanceledEventArgs.ObjectTypeID">
            <summary>
            Идентификатор типа созданного объекта
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.FilesRenamedEventArgs">
            <summary>
            Аргументы для события, возникающего при переименовании файла
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectCreatorDialogParamsEventArgs">
            <summary>
            Аргументы для событий в которых можно получить и изменить некоторые
            предоставляемые в аргументах текущие параметры диалога создателя объектов.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatorDialogParamsEventArgs.CreatorDialog">
            <summary>
            Форма диалога создания объекта параметры которой передаются аргументах
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatorDialogParamsEventArgs.BanEditorAfterCreate">
            <summary>
            Запрет на запуск редактора созданного объекта автоматически самим сервисом-создателем объектов.
            Введён для случаев когда редактор запускается явно после создания объекта
            из кода использующего сервис и независимо от выбора пользователя в настройках данной формы,
            чтобы редактор не заупускался в 2-ух экземплярах когда пользователь выбрал на форме его запуск.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatorDialogParamsEventArgs.OpenEditorSwitch">
            <summary>
            Настройки переключателя режима "Открыть редактор после создания"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectCreatorDialogParamsEventArgs.Copy(Intermech.Interfaces.Client.ObjectCreatorDialogParamsEventArgs)">
            <summary>
            Скопировать себе данные из заданного источника
            </summary>
            <param name="source">Источник данных</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectCreatorDialogParamsEventArgs.BoolSwitchModeSettings">
            <summary>
            Класс настроек переключателя некоторого режима с 2-мя возможными состояниями Активен/Неактивен.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.FileAttribute4ObjectChangedEventArgs">
            <summary>
            Аргументы нотификации изменения файлового атрибута объекта (ftFile ftBlob ftShortBlob)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IGuid">
            <summary>
            Интерфейс объекта, идентифицируемого по Guid
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.FixEditingContext">
            <summary>
            Информация, передаваемая в контексте вызова какого-то задания, для фиксации контекста редактирования в данном задании.
            Класс сам умеет получать информацию о текущем контексте редактирования. Если требуется указать другие значения,
            следует использовать класс <see cref="T:Intermech.Interfaces.Contexts.CurrentEditingContextScope"/>.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FixEditingContext.#ctor">
            <summary>
            Создать экземпляр класса для фиксации текущего контекста редактирования в рамках потока
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FixEditingContext.Dispose">
            <summary>
            Освободить ресурсы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.FixEditingContext.EditingContext">
            <summary>
            Возвращает текущий фиксированный контекст редактирования.
            Значение свойства может содержать объект-пустышку <see cref="P:Intermech.Interfaces.Contexts.CurrentEditingContext.Dummy"/>,
            который обозначает, что контекст редактирования не фиксирован.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMToolBoxItem">
            <summary>
            Класс описывающий item в ToolBox.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMToolBoxItem.ItemCategory">
            <summary>
            Наименование категории.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMToolBoxItem.Hovered">
            <summary>
            Наведен указатель.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMToolBoxItem.Selected">
            <summary>
            Выделен.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMToolBoxItem.ItemType">
            <summary>
            Тип элемента.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMToolBoxItem.WrapperType">
            <summary>
            Тип враппера.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMToolBoxItem.#ctor(System.String,System.Type,System.Type,System.Drawing.Bitmap)">
            <summary>
            Конструктор.
            </summary>
            <param name="name">Наименование элемента</param>
            <param name="toolType">Тип элемента</param>
            <param name="wrapperType">Тип враппера</param>
            <param name="image">Изображение элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMToolBoxItem.#ctor(System.String,System.Type,System.Type,System.String,System.Drawing.Bitmap)">
            <summary>
            Конструктор.
            </summary>
            <param name="name">Наименование элемента</param>
            <param name="toolType">Тип элемента</param>
            <param name="wrapperType">Тип враппера</param>
            <param name="category">Наименование категории</param>
            <param name="image">Изображение элемента</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.DynamicSelectionMode">
            <summary>
            Режим выбора объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DynamicSelectionMode.PreSelect">
            <summary>
            Производится проверка выбранного объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DynamicSelectionMode.Select">
            <summary>
            Объект выбран и обработан ядром
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DynamicSelectionEventHandler">
            <summary>
            Делегат обработки динамического выбора из окна выбора Навигатора.
            Вызывается дважды для одного объекта. Сначала с режимом PreSelect, 
            и, если возвращено true, второй раз после обработки ядром с режимом Select
            </summary>
            <param name="selectedObjectId">Идентификатор выбранного объекта</param>
            <param name="mode">Режим выбора объекта</param>
            <returns>Возвращает true для продолжения обработки объекта, false, если обработка объекта не нужна</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DynamicSelectionItemsEventHandler">
            <summary>
            Делегат обработки динамического выбора из окна выбора Навигатора.
            Вызывается дважды для выбранных элементов. Сначала с режимом PreSelect, 
            и, если возвращено true, второй раз после обработки ядром с режимом Select
            </summary>
            <param name="sender">Отправитель события - ISelectionWindow</param>>
            <param name="selectedItems">Описание выбранных данных</param>
            <param name="mode">Режим выбора объекта</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IClientFileLog">
            <summary>
            Потокобезопасный файловый протокол для клиентского приложения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientFileLog.IsLogOpen">
            <summary>
            Является ли протокол открытым
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientFileLog.CloseLog">
            <summary>
            Закрыть файл с протоколом
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientFileLog.OpenLog">
            <summary>
            Открыть файл с протоколом (путь и имя - по умолчанию)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientFileLog.OpenLog(System.String,System.String)">
            <summary>
            Открыть файл с протоколом
            </summary>
            <param name="logFilePath">Путь к файлу протокола</param>
            <param name="logFileName">Имя файла с протоколом</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientFileLog.Write(System.String,System.Boolean)">
            <summary>
            Записать в протокол указанный текст
            </summary>
            <param name="text">Текст</param>
            <param name="withDateTime">true - в начало строки добавить текущие дату и время (UTC)</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientFileLog.WriteLn(System.String,System.Boolean)">
            <summary>
            Записать в протокол указанный текст
            </summary>
            <param name="text">Текст</param>
            <param name="withDateTime">true - в начало строки добавить текущие дату и время (UTC)</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IIMHSelector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMHSelector.GetMaterialsHandbookDescriptor">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMHSelector.IsMaterialsHandbookItem(Intermech.Navigator.Interfaces.ISelectedItems,System.Boolean@)">
            <summary>
            Проверка на принадлежность узла марочнику материалов.
            </summary>
            <param name="selectedItems">Проверяемый узел в дереве</param>
            <param name="selected">Выделен или нет</param>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMHSelector.SelectMaterial(System.String,System.String,System.Object,System.Int32,System.Int64)">
            <summary>
            
            </summary>
            <param name="caption"></param>
            <param name="description"></param>
            <param name="descriptorCollection"></param>
            <param name="needType"></param>
            <param name="contextObjsID"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMHSelector.SelectMaterial(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
            <param name="useGuid"></param>
            <param name="multiSelect"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMHSelector.SelectMaterial(System.String,System.String,System.Object,System.Int64)">
            <summary>
            Выбирает запись IMBASE.
            </summary>
            <param name="caption">Заголовок окна при выборе</param>
            <param name="description"></param>
            <param name="descriptorCollection">Коллекция узлов, которые нужно отобразить в дереве</param>
            <param name="contextObjsID">Идентификатор объекта</param>
            <returns>Идентификатор ссылки а таблицу IMBASE и номер записи или null при отмене выбора</returns>
            <remarks>Если передается contextObjsID, то у объекта получаем объект IMBASE, на который он ссылается, и позиционируемся на этом объекте</remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMHSelector.SelectCoatingDesignation">
            <summary>
            Выбор наименования покрытия.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMHSelector.SelectGlueDesignation">
            <summary>
            Выбор наименования клея.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMHSelector.SearchAndSelectMaterial(System.Object,System.Int64,System.Int64)">
            <summary>
            Поиск и выделение в марочнике материалов указанного материала.
            </summary>
            <param name="node">Узел в дереве, от котоого идет поиск узла материала</param>
            <param name="tableRefID">Идентификатор ссылки на таблицу IMBASE, которой принадлежит материал</param>
            <param name="recID">Номер записи в таблице</param>
            <returns>Результат поиска</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IIMHSelector.SearchMaterial(System.Object,System.Int64,System.Int64)">
            <summary>
            Поиск в марочнике материалов указанного материала.
            </summary>
            <param name="node">Узел в дереве, от котоого идет поиск узла материала</param>
            <param name="tableRefID">Идентификатор ссылки на таблицу IMBASE, которой принадлежит материал</param>
            <param name="recID">Номер записи в таблице</param>
            <returns>Результат поиска</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.FormDesignerState">
            <summary>
            Состояние службы по работе с формами для редактирования данных
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FormDesignerState.None">
            <summary>
            Нет состояний
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FormDesignerState.OpenParametersCard">
            <summary>
            Открыта "Карточка"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FormDesignerState.OpenObjectCreateWizard">
            <summary>
            Открыт мастер по созданию новых объектов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IFormDesignerStateHolder">
            <summary>
            Интерфейс позволяет отслеживать текущее состояние службы,
            управляющей формами для редактирования данных
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFormDesignerStateHolder.State">
            <summary>
            Состояние службы по работе с формами для редактирования данных
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.HelpProvidersClass">
            <summary>
            для общения с хелпом к ips
            </summary>       
        </member>
        <member name="F:Intermech.Interfaces.Client.HelpProvidersClass.HELP_DIRECTORY">
            <summary>
            путь к папке с хелпом
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.HelpProvidersClass.HELP_FILE">
            <summary>
            имя файла справки
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.HelpProvidersClass.RUS_HELP_DIRECTORY">
            <summary>
            папка в которой расположен русский хелп
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.HelpProvidersClass.HelpPath">
            <summary>
            полный путь к файлу помощи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.HelpProvidersClass.dummy">
            <summary>
            т.к. 
            Any help window that you create through the HTML Help API is
            owned by the calling, or parent, program. 
            This allows the help window to stay on top of its parent,
            yet not be on top of any other program that has focus.
            
            а пользователям это не нравится, создадим окно-заглушку,
            показывать не будем, но будем вызывать хелп для него,
            т. обр. окошко хелпа будет не только терять фокус,
            но и уходить на задний план, как того хотят в 948353
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.HelpProvidersClass.SetHelpOptionForControl(System.Windows.Forms.Control,System.Int32)">
            <summary>
            Подключить вызов справки для контрола
            Убрать кнопки MinimizeBox и MaximizeBox, добавить кнопку вызова справки,
            если это форма
            </summary>
            <param name="currentControl">Сам контрол</param>
            <param name="topic">Раздел справки для отображения</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.HelpProvidersClass.SetHelpOptionForControl(System.Windows.Forms.Control,System.String)">
            <summary>
            Подключить вызов справки для контрола
            Убрать кнопки MinimizeBox и MaximizeBox, добавить кнопку вызова справки,
            если это форма
            </summary>
            <param name="currentControl">Сам контрол</param>
            <param name="topic">Раздел справки для отображения</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.HelpProvidersClass.ShowHelp">
            <summary>
            показать весь хелп 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.HelpProvidersClass.ShowIndexes">
            <summary>
            показать страницу с индексами
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.HelpProvidersClass.ShowSearch">
            <summary>
            показать страницу поиска
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.HelpProvidersClass.ShowHelpTopic(System.String,System.String)">
            <summary>
            Показать раздел справки        
            </summary>
            <param name="topicID">раздел справки для отображения</param>
            <param name="customPath">путь к хелпу</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.HelpProvidersClass.ShowHelpTopic(System.String)">
            <summary>
            Показать раздел справки
            </summary>
            <param name="topicID">Раздел справки для отображения</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.HelpProvidersClass.ShowHelpTopic(System.Int32)">
            <summary>
            Показать раздел справки
            </summary>
            <param name="topicID">Раздел справки для отображения</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.HelpProvidersClass.#cctor">
            <summary>
            конструктор. устанавливаем пути к файлу помощи 
            в зависимости от установаленного в системе языка
            если папка с кодом языка либо файл помощи в этой папке не были найдены
            будем использовать файл помощи в папке RUS
            ну если там ничего нет - совсем плохо
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IAddressService">
            <summary>
            Сервис для перехода через тоолбар адреса
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IAddressService.Text">
            <summary>
            Текст в адресной строке
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IAddressService.History">
            <summary>
            История значений
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IAddressService.Enabled">
            <summary>
            Разрешить или запретить адресную панель
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IArchivesDescriptorService">
            <summary>
            Возвращает дескриптор всех архивов, используется для показа списка архивов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IArchivesDescriptorService.GetDescriptor">
            <summary>
            Возвращает дескриптор всех архивов
            </summary>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.IArchivesDescriptorService.ViewArchives">
            <summary>
            Это должно быть добавлено в IServiceProvider, если вместо закладки "Документы" нужно видеть закладку "Архивы"
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.BackgroundTaskChangedEventHandler">
            <summary>
            Делегат, вызываемый при изменении состояния фоновой задачи
            </summary>
            <param name="sender">Отправитель события</param>
            <param name="type">Какие изменения произошли в фоновой задаче</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IBackgroundTask">
            <summary>
            Интерфейс фоновой задачи для представления в окне фоновых задач IBackgroundTaskView
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IBackgroundTask.Changed">
            <summary>
            Событие, вызываемое при изменении состояния фоновой задачи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTask.ImageIndex">
            <summary>
            Индекс изображения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTask.Name">
            <summary>
            Название фоновой задачи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTask.MaximumValue">
            <summary>
            Максимально допустимое значение индикатора прогресса
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTask.MinimumValue">
            <summary>
            Минимально допустимое значение индикатора прогресса
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTask.Value">
            <summary>
            Текущее значение индикатора прогресса
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTask.Result">
            <summary>
            Результат выполнения фоновой задачи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTask.State">
            <summary>
            Текущее состояние фоновой задачи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTask.ShowMode">
            <summary>
            Режим отображения состояния фоновой задачи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTask.Active">
            <summary>
            Является ли активной указанная фоновая задача
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTask.SetMaxMin(System.Int32,System.Int32)">
            <summary>
            Установить предельно допустимые значения для индикатора прогресса
            </summary>
            <param name="max">Максимально допустимое значение индикатора прогресса</param>
            <param name="min">Минимально допустимое значение индикатора прогресса</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTask.CanStop">
            <summary>
            Можно ли останавливать фоновую задачу
            </summary>
            <returns>true - фоновую задачу можно останавливать</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTask.CanPause">
            <summary>
            Можно ли приостанавливать фоновую задачу
            </summary>
            <returns>true - фоновую задачу можно приостанавливать</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTask.CanResume">
            <summary>
            Можно ли возобновлять фоновую задачу
            </summary>
            <returns>true - фоновую задачу можно возобновлять</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTask.CanTerminate">
            <summary>
            Можно ли прерывать фоновую задачу
            </summary>
            <returns>true - фоновую задачу можно прерывать</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTask.Stop">
            <summary>
            Остановить фоновую задачу
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTask.Pause">
            <summary>
            Приостановить фоновую задачу
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTask.Resume">
            <summary>
            Возобновить фоновую задачу
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTask.Terminate">
            <summary>
            Прервать фоновую задачу
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.BackgroundTaskChangedType">
            <summary>
            Какие изменения произошли в фоновой задаче
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskChangedType.All">
            <summary>
            Любое из допустимых изменений
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskChangedType.Text">
            <summary>
            Изменился текст
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskChangedType.ImageIndex">
            <summary>
            Изменился индекс изображения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskChangedType.Value">
            <summary>
            Изменилось значение
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskChangedType.State">
            <summary>
            Изменилось состояние
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskChangedType.Result">
            <summary>
            Изменился результат
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskChangedType.Dispose">
            <summary>
            Задача удаляется
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.BackgroundTaskShowMode">
            <summary>
            Режим отображения состояния фоновой задачи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskShowMode.Progress">
            <summary>
            В виде индикатора прогресса
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskShowMode.Text">
            <summary>
            В виде текстового сообщения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskShowMode.TimedProgress">
            <summary>
            Индикатор прогресса с подсчетом оставшегося времени
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.BackgroundTaskState">
            <summary>
            Текущее состояние фоновой задачи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskState.Running">
            <summary>
            Выполняется
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskState.Paused">
            <summary>
            Пауза
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskState.Stopped">
            <summary>
            Остановлено
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskState.Terminated">
            <summary>
            Завершено
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.BackgroundTaskState.Error">
            <summary>
            Ошибка
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IBackgroundTaskView">
            <summary>
            Сервис для отображения фоновых процессов в Навигаторе
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTaskView.AddTask(Intermech.Interfaces.Client.IBackgroundTask)">
            <summary>
            Добавить новое задание
            </summary>
            <param name="task">Новое фоновое задание</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTaskView.DeleteTask(Intermech.Interfaces.Client.IBackgroundTask)">
            <summary>
            Удалить фоновое задание
            </summary>
            <param name="task">Удаляемое фоновое задание</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IBackgroundTaskView.CheckClosing">
            <summary>
            Проверить, надо ли закрывать какое-либо фоновое задание
            </summary>
            <returns>false - нельзя остановить какое-то фоновое задание</returns>
        </member>
        <member name="E:Intermech.Interfaces.Client.IBackgroundTaskView.DoContextMenu">
            <summary>
            Событие, уведомляет что нужно отобразить конекстное меню.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IBackgroundTaskView.FocusedItem">
            <summary>
            Возвращает сфокусировнанный элемент.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICaptureFileChangesService">
            <summary>
            Интерфейс сервиса для захвата изменений в файлах объектов IPS на диске и 
            передачи этих изменений в базу IPS.
            </summary>
            <remarks>
            Сервис используется командой "Сохранить изменения".
            </remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICaptureFileChangesService.CaptureChanges(System.Int64,Intermech.Interfaces.Client.SaveChangesMode,System.IServiceProvider)">
            <summary>
            Захватывает и сохраняет в рабочую копию объекта изменения, сделанные пользователем в
            файлах объекта.
            </summary>
            <param name="objectId">Идентификатор версии объекта</param>
            <param name="mode">Режим сохранения изменений в объекте</param>
            <param name="contextServices">Контекст выполняемой операции. Параметр может быть не задан</param>
            <exception cref="T:System.ArgumentException">Не задан идентификатор версии объекта</exception>
            <exception cref="T:System.Exception">В процессе работы сервиса произошла ошибка</exception>
        </member>
        <member name="T:Intermech.Interfaces.Client.FindIconEventHandler">
            <summary>
            Делегат для поиска и автоматического добавления в список икон
            для типа и/или категории. 
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICategoryTypeIconService">
            <summary>
            Сервис для хранения икон, привязанных к категориям и(или) типам.
            Иконы хранятся в двух параллельных ImageList размерами 16 и 32.
            Индексы в этих списках для одной иконы одинаковые.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.ICategoryTypeIconService.FindIcon">
            <summary>
            Событие, которое возникает, если икона для запрошенного типа и
            категории еще не загружена.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.AddIcon(System.Drawing.Icon,System.Int32)">
            <summary>
            Добавляет иконку для категории.
            В сервисе создается клон иконки.
            !!! ПОСЛЕ ДОБАВЛЕНИЯ ИКОНА ДОЛЖНА БЫТЬ УНИЧТОЖЕНА !!!
            </summary>
            <param name="icon">Иконка. При добавлении создается копия, поэтому может потребоваться icon.Dispose()</param>
            <param name="category">Требуемая категория</param>
            <returns>Индекс в ImageList</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.AddIcon(System.Drawing.Icon,System.Int32,System.Int32)">
            <summary>
            Добавляет иконку для категории и типа.
            В сервисе создается клон иконки.
            !!! ПОСЛЕ ДОБАВЛЕНИЯ ИКОНА ДОЛЖНА БЫТЬ УНИЧТОЖЕНА !!!
            </summary>
            <param name="icon">Иконка. При добавлении создается копия, поэтому может потребоваться icon.Dispose()</param>
            <param name="category">Требуемая категория</param>
            <param name="type">Требуемый тип</param>
            <returns>Индекс в ImageList</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.AddIcon(System.Drawing.Icon,System.Int32,System.Int32,System.Object)">
            <summary>
            Добавляет иконку для категории и типа
            В сервисе создается клон иконки.
            !!! ПОСЛЕ ДОБАВЛЕНИЯ ИКОНА ДОЛЖНА БЫТЬ УНИЧТОЖЕНА !!!
            </summary>
            <param name="icon">Иконка. При добавлении создается копия, поэтому может потребоваться icon.Dispose()</param>
            <param name="category">Требуемая категория</param>
            <param name="type">Требуемый тип</param>
            <param name="data">Дополнительные данные</param>
            <returns>Индекс в ImageList</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.IndexOf(System.Int32)">
            <summary>
            Возвращает индекс зарегистрированной иконки для категории
            </summary>
            <param name="category">Требуемая категория</param>
            <returns>Индекс в ImageList</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.IndexOf(System.Int32,System.Int32)">
            <summary>
            Возвращает индекс зарегистрированной иконки для категории и типа
            </summary>
            <param name="category">Требуемая категория</param>
            <param name="type">Требуемый тип</param>
            <returns>Индекс в ImageList</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.IndexOf(System.Int32,System.Int32,System.Object)">
            <summary>
            Возвращает индекс зарегистрированной иконки для категории и типа
            </summary>
            <param name="category">Требуемая категория</param>
            <param name="type">Требуемый тип</param>
            <param name="data">Дополнительные данные</param>
            <returns>Индекс в ImageList</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICategoryTypeIconService.ImageList">
            <summary>
            ImageList 32x16
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICategoryTypeIconService.BigImageList">
            <summary>
            ImageList 32x32
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.GetIcon(System.Int32)">
            <summary>
            Возвращает иконку. Если  иконка не зарегистрирована,
            возвращает иконку по умолчанию.
            Передается внутренний объект, освобождать не требуется.
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.GetIcon(System.Int32,System.Int32)">
            <summary>
            Возвращает иконку. Если  иконка не зарегистрирована,
            возвращает иконку по умолчанию.
            Передается внутренний объект, освобождать не требуется.
            </summary>
            <param name="category"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.GetIcon(System.Int32,System.Int32,System.Object)">
            <summary>
            Возвращает иконку. Если  иконка не зарегистрирована,
            возвращает иконку по умолчанию.
            Передается внутренний объект, освобождать не требуется.
            </summary>
            <param name="category"></param>
            <param name="type"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.GetIconEx(System.Int32)">
            <summary>
            Возвращает иконку. Если  иконка не зарегистрирована,
            возвращает null.
            Передается внутренний объект, освобождать не требуется.
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.GetIconEx(System.Int32,System.Int32)">
            <summary>
            Возвращает иконку. Если  иконка не зарегистрирована,
            возвращает null.
            Передается внутренний объект, освобождать не требуется.
            </summary>
            <param name="category"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.GetIconEx(System.Int32,System.Int32,System.Object)">
            <summary>
            Возвращает иконку. Если  иконка не зарегистрирована,
            возвращает null.
            Передается внутренний объект, освобождать не требуется.
            </summary>
            <param name="category"></param>
            <param name="type"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.BeginUpdate">
            <summary>
            Включение режима обновления
            </summary>
            <remarks>Данный режим отключает отправку уведомлений контролам при добавлении / создании иконок</remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeIconService.EndUpdate">
            <summary>
            Отключение режима обновления
            </summary>
            <remarks>Данный режим восстанавливает отправку уведомлений контролам при добавлении / создании иконок</remarks>
        </member>
        <member name="T:Intermech.Interfaces.Client.FindStateImageEventHandler">
            <summary>
            Делегат для поиска изображений состояний элементов навигации. Он возвращает изображение
            размером 7x16 пикселей или null.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICategoryTypeStateImageService">
            <summary>
            Сервис для хранения изображений элементов навигации, привязанных к 
            категориям, типам и состояниям элементов.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICategoryTypeStateImageService.IndexOf(System.Int32,System.Int32,System.Object,System.Object)">
            <summary>
            Возвращает индекс зарегистрированного изображения или -1, если изображение не найдено.
            </summary>
            <param name="categoryId">Требуемая категория</param>
            <param name="typeId">Требуемый тип</param>
            <param name="data">Дополнительные данные</param>
            <param name="state">Состояние элемента навигации</param>
            <returns>Индекс изображение в ImageList</returns>
        </member>
        <member name="E:Intermech.Interfaces.Client.ICategoryTypeStateImageService.FindStateImage">
            <summary>
            Событие, которое возникает, если изображение для запрошенного элемента навигации
            еще не загружено.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IClientCache">
            <summary>
            Интерфейс на клиентский кэш.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientCache.CacheDataSet">
            <summary>
            ImDataSet с таблицами БД
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.ClearCache">
            <summary>
            Выполняет очистку кэша.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.LoadCache(Intermech.Interfaces.IUserSession)">
            <summary>
            Первоначальная загрузка данных в кэш
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.ReloadCache(Intermech.Interfaces.IUserSession)">
            <summary>
            Синхронизация кэша с серверным кэшем.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.ReloadCacheCategory(System.Int32,Intermech.Interfaces.IUserSession)">
            <summary>
            Обновление таблиц клиентского кэша в зависимости от передаваемой категории объектов.
            </summary>
            <param name="CategoryID">Категории объектов.</param>
            <param name="Session">Пользовательская сессия</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.SaveCache">
            <summary>
            Сохранение кэша в файл
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.GetVisibleList(System.Int32)">
            <summary>
            Возвращает массив видимых идентификаторов
            </summary>
            <param name="category">Категория объектов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.GetTable(System.String)">
            <summary>
            Возвращает таблицу кэша
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.GetFilteredTable(System.String,System.String)">
            <summary>
            Возвращает отфильтрованную таблицу кэша
            </summary>
            <param name="tableName">Имя таблицы</param>
            <param name="fieldName">Имя идентификационного поля объекта данной категории</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.GetFilteredTable(System.String,System.String,System.Data.DataTable)">
            <summary>
            Возвращает отфильтрованную таблицу кэша
            </summary>
            <param name="tableName">Имя таблицы</param>
            <param name="fieldName">Имя идентификационного поля объекта данной категории</param>
            <param name="tbl">Таблица фильтруемых данных. Если null, то берется из кэша по tableName</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientCache.ClearVisibleList(System.Int32[])">
            <summary>
            Очистить списки видимых объектов
            </summary>
            <param name="Categories">Категории обновляемых объектов, если -1, то очистятся все</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientCache.LockReload">
            <summary>
            Блокирует обновление клиентского кэша
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IClientCache.Cleared">
            <summary>
            Событие очистки клиентского кэша.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IClientCache.Reloaded">
            <summary>
            Событие перезагрузки клиентского кэша.
            Новые данные были загружены в кэш с сервера приложений.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IClientPluginsDataTransfer">
            <summary>
            Механизм, позволяющий клиентским плагинам читать и записывать данные в коллекцию для передачи на серверную сторону
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientPluginsDataTransfer.PluginGuid">
            <summary>
            Временный Guid плагина, владеющего данным экземпляром классом
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientPluginsDataTransfer.GetPluginData(System.Collections.Specialized.HybridDictionary)">
            <summary>
            Метод вызывается ядром клиентской части для сбора информации у плагинов.
            Плагины, подписавшиеся в коллекции IClientPluginsService, должны записать в словарик
            PluginsData свою информацию в виде сериализуемых пар значений [Ключ] = [Значение].
            Указанная информация будет передана на серверную сторону.
            </summary>
            <param name="PluginsData">Коллекция сериализуемых пар значений для передачи 
            дополнительной информации на серверную сторону</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientPluginsDataTransfer.PutPluginData(System.Collections.Specialized.HybridDictionary)">
            <summary>
            Метод вызывается ядром клиентской части для раздачи информации плагинам.
            Плагины, подписавшиеся в коллекции IClientPluginsService, должны считать из словарика
            PluginsData свою информацию в виде сериализуемых пар значений [Ключ] = [Значение].
            </summary>
            <param name="PluginsData">Коллекция сериализуемых пар значений для чтения</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IClientPluginsService">
            <summary>
            Сервис, позволяющий клиентским плагинам передавать какую-о информацию на сторону сервера
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientPluginsService.SyncRoot">
            <summary>
            Объект для синхронизации
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientPluginsService.RegisterClientPlugin(System.Guid,Intermech.Interfaces.Client.IClientPluginsDataTransfer)">
            <summary>
            Зарегистрировать указанный класс для обмена информацией
            </summary>
            <param name="PluginGuid">Guid плагина</param>
            <param name="ClientPluginsDataTransfer">Интерфейс для обмена данными</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientPluginsService.UnregisterClientPlugin(System.Guid)">
            <summary>
            Разрегистрировать указанный класс для обмена информацией
            </summary>
            <param name="PluginGuid">Guid плагина</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientPluginsService.GetClientPluginsData(System.Collections.Specialized.HybridDictionary@)">
            <summary>
            Собрать у зарегистрированных плагинов информацию в указанный словарик
            </summary>
            <param name="PluginsData">Коллекция сериализуемых пар значений [Ключ] = [Значение]</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClientPluginsService.PutClientPluginsData(System.Collections.Specialized.HybridDictionary@)">
            <summary>
            Раздать зарегистрированным плагинам информацию из указанного словарика
            </summary>
            <param name="PluginsData">Коллекция сериализуемых пар значений [Ключ] = [Значение]</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IClientSession">
            <summary>
            Summary description for IClientSession.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IClientSession.ClientCache">
            <summary>
            Интерфейс, позволяющий получить инфу о кэше сервера
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IClipboard">
            <summary>
            Интерфейс внутреннего буфера обмена клиентского приложения IPS
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.GetDataObject">
            <summary>
            Возвращает текущий выделенный объект
            </summary>
            <returns>Текущий выделенный объект</returns>	
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.GetDataObjects">
            <summary>
            Возвращает список объектов
            </summary>
            <returns>Список объектов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.GetDataObjects(System.Type)">
            <summary>
            Возвращает список объектов заданного типа
            </summary>
            <param name="needType">Требуемый тип объектов</param>
            <returns>Список объектов требуемого типа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.SetDataObject(System.Object)">
            <summary>
            Добавить информацию в буфер обмена
            </summary>
            <param name="clipboardObject">Объект, добавляемый в буфер обмена</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.SetDataObject(System.Object,System.String)">
            <summary>
            Добавить информацию в буфер обмена
            </summary>
            <param name="clipboardObject">Объект, добавляемый в буфер обмена</param>
            <param name="title">Заголовок объекта который будет отображаться пользователю если не пустой.
            Используется когда заголовок не может быть получен из добавляемого объекта (например методом ToString),
            или когда нужен другой заголовок. </param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.RemoveCurrentDataObject">
            <summary>
            Удалить из буфера обмена текущий объект
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.RefreshImage">
            <summary>
            Обновляет значок у выделенного объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.Push">
            <summary>
            Сохраняет набор объектов во временном массиве
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.Pop">
            <summary>
            Восстанавливает ранее сохраненный набор объектов из временного массива
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IClipboard.Changed">
            <summary>
            Событие возникает при изменении текущего (выделенного) объекта данных буфера обмена
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IClipboard.ContentChanged">
            <summary>
            Событие возникает при изменении состава буфера обмена (после добавления или удаления объекта данных буфера обмена)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IClipboard.RemoveDataObjects(System.Type)">
            <summary>
            Удаляет из буфера обмена объекты указанного типа
            </summary>
            <param name="type">Тип данных для удаления</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICurrentUserAndRole">
            <summary>
            Интерфейс, помогающий определять идентификаторы текущего пользователя и роли
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.UserID">
            <summary>
            Идентификатор текущего пользователя
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.UserGuid">
            <summary>
            Guid текущего пользователя
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.UserName">
            <summary>
            Имя текущего пользователя
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.RoleID">
            <summary>
            Идентификатор текущей роли
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.RoleGuid">
            <summary>
            Guid текущей роли
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.IsAdmin">
            <summary>
            Обладает ли текущий пользователь правами администратора
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.ID">
            <summary>
            Ид. объекта-юзера
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.ClientConnectionID">
            <summary>
            Некое уникальное число для текущего сеанса работы клиента IPS с сервером приложений.
            Внимание! Выполняется обращение к серверу приложений!
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.ProjectID">
            <summary>
            Идентификатор текущего проекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.CachedProjectID">
            <summary>
            Идентификатор текущего проекта
            (значение кэшировано)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.LockEditingContextID">
            <summary>
            Заблокировано ли изменение текущего контекста редактирования
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.EditingContextSource">
            <summary>
            Источник информации о текущем контексте редактирования (глобальный, оконный)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.CachedEditingContextSource">
            <summary>
            Источник информации о текущем контексте редактирования (глобальный, оконный)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.EditingContextID">
            <summary>
            Идентификатор текущего контекста редактирования (глобально для всех сессий пользователя, читается из сессии)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.IsECOEditingContext">
            <summary>
            Проверить, является ли текущий контекст редактирования извещением об изменении
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.CachedContextMode">
            <summary>
            Режим автопополнения контекста редактирования (кэшированное значение)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.CachedEditingContextID">
            <summary>
            Идентификатор текущего контекста редактирования (кэшированное значение)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.CachedEditingContextModificationID">
            <summary>
            Номер группы изменений текущего контекста редактирования (кэшированное значение)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICurrentUserAndRole.ReplaceEditingContext(Intermech.Interfaces.Contexts.CurrentEditingContext)">
            <summary>
            Метод позволяет передать информацию о текущем контексте редактирования на сервер приложений.
            В кэш ничего не записывается, из кэша ничего не читается
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICurrentUserAndRole.RefreshEditingContext">
            <summary>
            Метод позволяет обновить контекст редактирования в случае переподключения клиентской программы к серверу приложений и прочих ситуациях
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.BlockedMenus">
            <summary>
            Заблокированы ли настройки контекстных меню
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.BlockedViews">
            <summary>
            Заблокированы ли настройки видимости закладок Навигатора
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.BlockedCompositions">
            <summary>
            Заблокированы ли настройки отображения для узлов, содержащих составы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.BlockedToolbars">
            <summary>
            Заблокированы ли панели инструментов составов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.IsContextToolbarVisible">
            <summary>
            Видна ли панель инструментов "Контекст редактирования"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.EditingContextMode">
            <summary>
            Режим работы текущего контекста редактирования
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICurrentUserAndRole.CanSetContextAutoUpdateMode(System.Int64)">
            <summary>
            Можно ли выбрать режим автоматического пополнения для указанного контекста редактирования
            </summary>
            <param name="contextID">Идентификатор версии объекта с контекстом</param>
            <returns>Можно включить режим автоматического пополнения указанного контекста редактирования или нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICurrentUserAndRole.CanLeaveContextAutoUpdateMode(System.Int64)">
            <summary>
            Можно ли оставить режим автоматического пополнения для указанного контекста редактирования
            </summary>
            <param name="contextID">Идентификатор версии объекта с контекстом</param>
            <returns>true - можно оставить режим автоматического пополнения указанного контекста редактирования</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.ProjectFiltrationMode">
            <summary>
            Способ фильтрации списков объектов в зависимости от их принадлежности к проектам
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.CachedProjectFiltrationMode">
            <summary>
            Способ фильтрации списков объектов в зависимости от их принадлежности к проектам
            (значение кэшировано)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.Rule">
            <summary>
            Текущее правило по сортировке и отображению составов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.UseRuleEvents">
            <summary>
            Применяются ли события в текущем правиле по сортировке и отображению составов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.RoleNavStreams">
            <summary>
            Настройки видов Навигатора для текущей роли
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.DefaultColumnPack">
            <summary>
            Пакет колонок по-умолчанию
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICurrentUserAndRole.SetCurrentProject(System.Int64,Intermech.Interfaces.Projects.ProjectFiltrationModes,System.Boolean)">
            <summary>
            Установить текущее значение проекта и режим отображения объектов в проекте
            </summary>
            <param name="projectID">Идентификатор текущего проекта</param>
            <param name="projectFiltrationMode">Способ фильтрации списков объектов в зависимости от их принадлежности к проектам</param>
            <param name="silentMode">Тихий режим позволяет избежать ругани при загрузке клиента, когда клиент пытается включить сохраненный проект, который уже удалили или который имеет неверный уровень доступа</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.SilentMode">
            <summary>
            Режим работы без диалога с пользователем
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.PortalClient">
            <summary>
            Флаг того, что текущий IPS Client работает с порталом
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.MaxRows">
            <summary>
            Размер пакета данных
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICurrentUserAndRole.ReloadMaxRows">
            <summary>
            Перечитывает размер пакета
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentUserAndRole.DeveloperMode">
            <summary>
            Режим разработчика
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CanSetContextModeCode">
            <summary>
            Результат проверки, можно ли установить режим автоматического обновления для контекста редактирования
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CanSetContextModeCode.CheckedOutByOtherUser">
            <summary>
            Контекст взят на изменение другим пользователем
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CanSetContextModeCode.ReadOnlyByAccessRights">
            <summary>
            Права доступа запрещают редактирование
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CanSetContextModeCode.ModifyByCreateVersion">
            <summary>
            Модифицировать контекст можно только через выпуск новой версии
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CanSetContextModeCode.CantModifyObject">
            <summary>
            Модифицировать объект контекста запрещено
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CanSetContextModeCode.ContextToolbarDisabled">
            <summary>
            Запрещена или скрыта панель инструментов "Контекст редактирования"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CanSetContextModeCode.UnknownContext">
            <summary>
            Не задан или не найден контекст редактирования
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CanSetContextModeCode.None">
            <summary>
            Проверка не выполнялась
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CanSetContextModeCode.CanSetAutoUpdate">
            <summary>
            Для данного контекста допустимо включить режим автоматического пополнения
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.FiltrationChanged">
            <summary>
            Произошла смена настроек фильтрации состава на новое значение
            </summary>
            <param name="NewFiltration">Ссылка на интерфейс самих настроек фильтрации состава</param>
            <param name="FiltrationValid">Являются ли указанные настройки фильтрации состава корректными (можно ли их использовать или нет)</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IFiltrationService">
            <summary>
            Интерфейс сервиса по управлению тулбаром "Фильтрация состава" в главной форме приложения
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IFiltrationService.OnFiltrationChanged">
            <summary>
            Событие вызывается после смены настроек фильтрации состава на новое значение
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.Enabled">
            <summary>
            Свойство позволяет разрешить или запретить пользователю вносить изменения в настройки фильтрации
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.Filtration">
            <summary>
            Текущие настройки фильтрации для владельца OwnerID.
            Изменения настроек сразу вносятся в базу данных.
            Автоматически будет вызвано событие, уведомляеющее о смене в настройках фильтрации состава.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.FiltrationRuleID">
            <summary>
            OBJECT_ID текущего правила подбора версий. Поле считывается из свойства Filtration.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.FiltrationServiceOwnerID">
            <summary>
            Уникальный ID владельца текущих настроек фильтрации.
            Изменение владельца ведёт к перечитыванию настроек фильтрации состава.
            Автоматически будет вызвано событие, уведомляеющее о смене в настройках фильтрации состава.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.RuleClass">
            <summary>
            Текущее правило фильтрации состава, информация по которому отображена в тулбаре "Фильтрация состава"
            Причём если у правила есть переменные, то они уже заданы согласно текущей настройке фильтрации.
            Можно задавать свои экземпляры правил подбора версий, причём не связанные с реальными объектами
            из базы данных. Например, правила подбора из группирующих объектов.
            
            Если нет текущего окна, то данное значение будет представять собой текущее правило редактирования по умолчанию.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.RuleCompatible">
            <summary>
            Если выбранное правило является вариантом значений переменных (т.е. создано на базе родительского правила),
            то это поле отражает, совместимо ли правило с родительским вариантом (на случай, если были изменения 
            в родительском правиле после создания вариантов его значений переменных)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.RuleValid">
            <summary>
            Валидно ли выбранное правило подбора версий
            (для проверки выполняется метод Valid правила, а также проверяется наличие у него переменных значений)
            Если _FSRuleValid = false, правило применять нельзя
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.RuleErrorCode">
            <summary>
            Код ошибки для текущего правила:
            0 - правило не выбрано,
            1 - настройки недействительны - правило было изменено,
            2 - нет ошибок, правило настроено,
            3 - нет вариантов значений переменных для правила,
            4 - фильтрация состава выключена (obsolete),
            5 - не указан основной вариант значений переменных,
            6 - правило является некорректным
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.FiltrationToolbarVisible">
            <summary>
            Свойство, определяющее видимость тулбара "Фильтрация состава"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationService.FiltrationToolbarHidden">
            <summary>
            Свойство, определяющее "скрытость" тулбара "Фильтрация состава"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFiltrationService.FiltrationApplyUpdates(System.Boolean)">
            <summary>
            Применить все изменения в настройках фильтрации состава к тулбару "Фильтрация состава"
            (с их сохранением в базе данных).
            При необходимости будет вызвано событие, уведомляеющее о смене в настройках фильтрации состава.
            </summary>
            <param name="fireEvent">true - генерировать событие</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFiltrationService.FiltrationUpdate(System.Boolean)">
            <summary>
            Перечитать настройки фильтрации состава, обновить тулбар "Фильтрация состава"
            </summary>
            <param name="FireEvent">true - будет вызвано событие, уведомляеющее о смене в настройках фильтрации состава</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFiltrationService.AddNewButton">
            <summary>
            Добавить новую кнопку на панель "Фильтрация состава"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFiltrationService.AddNewCombobox">
            <summary>
            Добавить новый выпадающий список на панель "Фильтрация состава"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFiltrationService.BeginUpdates">
            <summary>
            Начать обновления в сервисе
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFiltrationService.EndUpdates">
            <summary>
            Завершить обновления в сервисе
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.CurrentRuleErrors">
            <summary>
            Ошибки для текущего правила
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CurrentRuleErrors.AllVersions">
            <summary>
            системное правило "Все версии объектов"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CurrentRuleErrors.LatestVersions">
            <summary>
            системное правило "Последние версии объектов"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CurrentRuleErrors.NoSelected">
            <summary>
            правило не выбрано
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CurrentRuleErrors.Changed">
            <summary>
            настройки недействительны - правило было изменено
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CurrentRuleErrors.Valid">
            <summary>
            нет ошибок, правило настроено
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CurrentRuleErrors.NoVariableValue">
            <summary>
            нет вариантов значений переменных для правила
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CurrentRuleErrors.FilteringIsOff">
            <summary>
            фильтрация состава выключена (obsolete)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CurrentRuleErrors.MainVariantIsNotSpecified">
            <summary>
            не указан основной вариант значений переменных
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.CurrentRuleErrors.Incorrect">
            <summary>
            правило является некорректным
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEditingContextToolbar.RefreshEditingContextToolbar">
            <summary>
            Обновить панель контекстов редактирования (выбрать в списке правильный контекст редактирования,
            без перечитывания списка контекстов, если это допустимо)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IFiltrationClass">
            <summary>
            Интерфейс для класса (формы), которому требуются персональные настройки фильтрации состава
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationClass.FiltrationOwnerID">
            <summary>
            Уникальный ID, который позволяет стать владельцем настроек фильтрации.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IFiltrationRuleClass">
            <summary>
            Интерфейс для класса (формы), который позволяет менять настройки фильтрации извне, какой-либо службой
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFiltrationRuleClass.NewRule">
            <summary>
            Назначив этому свойству значение, можно уведомить реализующий данный интерфейс класс о том,
            что при его активации следует использовать именно это правило подбора версий
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IFormDesignerEditorService">
            <summary>
            Интерфейс сервиса редактора форм
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFormDesignerEditorService.GetFormIDs">
            <summary>
            Получить список форм для которых открыты дизайнеры
            </summary>
            <returns>Массив идентификаторов форм редактирования</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFormDesignerEditorService.GetEditorControl(System.Int64)">
            <summary>
            Получить редактор для формы
            </summary>
            <param name="formID">идентификатор формы для которой открыт дизайнер</param>
            <returns>контрол-редактор, либо null если нет открытого дизайнера</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFormDesignerEditorService.Add(System.Int64,System.Windows.Forms.Control)">
            <summary>
            Добавить новый дизайнер в список дизайнеров
            </summary>
            <param name="formID">идентификатор формы для которой открыт дизайнер</param>
            <param name="editor">контрол-редактор</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFormDesignerEditorService.Remove(System.Int64)">
            <summary>
            Удалить дизайнер из списка дизайнеров
            </summary>
            <param name="formID">идентификатор формы для которой открыт дизайнер</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFormDesignerEditorService.Contains(System.Int64)">
            <summary>
            Проверить на наличие открытого дизайнера для формы
            </summary>
            <param name="formID">идентификатор формы</param>
            <returns>True если открыт дизайнер, False - если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFormDesignerEditorService.Clear">
            <summary>
            Очистить список открытых редакторов форм
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IFormDesignerEditorService.ToolBoxUpdateEvent">
            <summary>
            
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.FormDesignerControlToolBoxUpdateEventArgs">
            <summary>
            Класс для обновления списка ToolBoxItem.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FormDesignerControlToolBoxUpdateEventArgs.#ctor(System.Collections.Generic.List{Intermech.Interfaces.Client.IMToolBoxItem})">
            <summary>
            Конструктор.
            </summary>
            <param name="originalList">Исходный список ToolBoxItems</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.FormDesignerControlToolBoxUpdateEventArgs.Items">
            <summary>
            Список ToolBoxItems.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.FormDesignerToolBoxUpdateEvent">
            <summary>
            Делегат на имзменение списка ToolBoxItems.
            </summary>
            <param name="sender">Контрол-редактор</param>
            <param name="e">Параметры</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IFormDesignerEditorHookable">
            <summary>
            Интерфейс редактора форм чтобы была возможность внесеня изменений
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFormDesignerEditorHookable.Hook">
            <summary>
            Свойство для назначения перехватчиков
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IFormDesignerEditorHook">
            <summary>
            Интерфейс для внесения изменений в дизайнер форм
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IFormDesignerEditorHook.CanExecuteSelector">
            <summary>
            Можно ли вызывать изменения
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IFormDesignerEditorHook.ExecuteSelector(System.Object,System.ComponentModel.PropertyDescriptor,System.Object@)">
            <summary>
            Вызов отображения формы выбора атрибутов
            </summary>
            <param name="value">исходное значение AttributeInfo типа атрибута</param>
            <param name="pd">информация о редактируемом свойстве</param>
            <param name="context">объект в контексте которого произошел вызов изменения</param>
            <returns>Если пользователь выбрал и нажал "OK"</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IInvokeService">
            <summary>
            Сервис, позволяющий выполнить произвольный метод на основном потоке приложения. Этот сервис используется
            фоновыми потоками приложения в случаях, когда им нужно взаимодействовать с пользователем посредством UI.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IInvokeService.Invoke(System.Int32,System.Delegate,System.Object[])">
            <summary>
            Позволяет выполнить указанный метод на основном потоке приложения, в котором работает UI.
            </summary>
            <param name="timeout">Таймаут, в течение которого следует ожидать готовности основного потока приложения</param>
            <param name="method">Делегат выполняемого метода</param>
            <param name="args">Аргументы вызова метода</param>
            <returns>Результат выполнения метода</returns>
            <exception cref="T:System.ArgumentNullException">Ссылка на делегат выполняемого метода не может быть null</exception>
            <exception cref="T:System.TimeoutException">Время ожидания готовности основного потока вышло</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IInvokeService.InvokeCode(System.Int32,Intermech.Interfaces.Client.InvokeServiceMethod)">
            <summary>
            Позволяет выполнить анонимный метод на основном потоке приложения, в котором работает UI.
            </summary>
            <param name="timeout">Таймаут, в течение которого следует ожидать готовности основного потока приложения</param>
            <param name="method">Выполняемый анонимный метод</param>
            <exception cref="T:System.ArgumentNullException">Ссылка на делегат выполняемого метода не может быть null</exception>
            <exception cref="T:System.TimeoutException">Время ожидания готовности основного потока вышло</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IInvokeService.InvokeCode``1(System.Int32,Intermech.Interfaces.Client.InvokeServiceMethod{``0})">
            <summary>
            Позволяет выполнить и получить результат выполнения анонимного метода на основном потоке приложения, в котором работает UI.
            </summary>
            <typeparam name="T">Тип значения, возвращаемого анонимным методом</typeparam>
            <param name="timeout">Таймаут, в течение которого следует ожидать готовности основного потока приложения</param>
            <param name="method">Выполняемый анонимный метод</param>
            <returns>Результат выполнения анонимного метода</returns>
            <exception cref="T:System.ArgumentNullException">Ссылка на делегат выполняемого метода не может быть null</exception>
            <exception cref="T:System.TimeoutException">Время ожидания готовности основного потока вышло</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IInvokeService.InvokeAction(System.Int32,System.Action)">
            <summary>
            Позволяет выполнить анонимный метод на основном потоке приложения, в котором работает UI.
            </summary>
            <param name="timeout">Таймаут, в течение которого следует ожидать готовности основного потока приложения</param>
            <param name="method">Выполняемый анонимный метод</param>
            <exception cref="T:System.ArgumentNullException">Ссылка на делегат выполняемого метода не может быть null</exception>
            <exception cref="T:System.TimeoutException">Время ожидания готовности основного потока вышло</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.IInvokeService.InvokeFunc``1(System.Int32,System.Func{``0})">
            <summary>
            Позволяет выполнить и получить результат выполнения анонимного метода на основном потоке приложения, в котором работает UI.
            </summary>
            <typeparam name="T">Тип значения, возвращаемого анонимным методом</typeparam>
            <param name="timeout">Таймаут, в течение которого следует ожидать готовности основного потока приложения</param>
            <param name="method">Выполняемый анонимный метод</param>
            <returns>Результат выполнения анонимного метода</returns>
            <exception cref="T:System.ArgumentNullException">Ссылка на делегат выполняемого метода не может быть null</exception>
            <exception cref="T:System.TimeoutException">Время ожидания готовности основного потока вышло</exception>
        </member>
        <member name="T:Intermech.Interfaces.Client.InvokeServiceMethod">
            <summary>
            Делегат анонимного метода без возвращаемого значения, используемый сервисом IInvokeService.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.InvokeServiceMethod`1">
            <summary>
            Делегат анонимного метода с возвращаемым значением, используемый сервисом IInvokeService.
            </summary>
            <typeparam name="T">Тип значения, возвращаемого анонимным методом</typeparam>
        </member>
        <member name="T:Intermech.Interfaces.Client.INavigate">
            <summary>
            Интерфейс для поддержки навигации по иерархии.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.INavigate.Changed">
            <summary>
            Состояние навигатора изменилось
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigate.Back">
            <summary>
            Переход на один уровень назад
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigate.Back(System.Int32)">
            <summary>
            Переход назад на n-шагов
            </summary>
            <param name="steps">Количество шагов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigate.Forward">
            <summary>
            Переход на один уровень вперед
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigate.Forward(System.Int32)">
            <summary>
            Переход вперед на n-шагов
            </summary>
            <param name="steps">Количество шагов</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigate.CanBack">
            <summary>
            Возможен переход назад
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigate.CanForward">
            <summary>
            Возможен переход вперед
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigate.BackName">
            <summary>
            Строчка хинта для перехода назад
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigate.ForwardName">
            <summary>
            Строчка хинта для перехода вперед
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigate.BackNames">
            <summary>
            Строчки для выпадающего меню перехода назад
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigate.ForwardNames">
            <summary>
            Строчки для выпадающего меню перехода вперед
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.INavigateManager">
            <summary>
            Интерфейс для связи INavigate скнопками управления на тоолбаре
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigateManager.Attach(Intermech.Interfaces.Client.INavigate)">
            <summary>
            Подключает интерфейс к кнопкам управления
            </summary>
            <param name="navigate">Подключаемый интерфейс навигации</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.UserSessionLoginService">
            <summary>
            Простейшая реализация сервиса, предоставляющего информацию о параметрах входа пользователя на сервер приложений.
            Для получения необходимы сведений используется информация из клиентского пула сессий сервера приложений.
            Класс является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.UserSessionLoginService.#ctor(Intermech.Interfaces.Client.IUserSessionPool)">
            <summary>
            Создает объект.
            </summary>
            <param name="userSessionPool">Клиентский пул сессий сервера приложений</param>
            <exception cref="T:ArgumentNullException">Параметр <paramref name="userSessionPool"/> не должен быть равен null</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.UserSessionLoginService.GetLoginInfo">
            <summary>
            Возвращает основные параметры входа пользователя на сервер приложений.
            </summary>
            <returns>Объект с основными параметрами входа пользователя на сервер приложений</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.SessionPoolThreadKey">
            <summary>
            Класс ключей для идентификации потоков, к которым привязаны пользовательские сессии.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolThreadKey.#ctor(System.Int32,System.Int32)">
            <summary>
            Создает объект.
            </summary>
            <param name="threadId">Идентификатор потока (thread)</param>
            <param name="controlFlowId">Идентификатор логического подпотока управления внутри потока (thread)</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolThreadKey.ThreadId">
            <summary>
            Возвращает идентификатор потока (thread).
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolThreadKey.ControlFlowId">
            <summary>
            Идентификатор логического подпотока управления внутри потока (thread)
            Подробности - в описании <see cref="P:Intermech.Interfaces.Client.SessionPoolVars.ControlFlowId"/>.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.Snapshots.ISnapshotContext">
            <summary>Интерфейс контекста итерации</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Snapshots.ISnapshotContext.Snapshot">
            <summary>Интерфейс итерации</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Snapshots.ISnapshotContext.SnapshotID">
            <summary>Идентификатор итерации</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.Snapshots.SnapshotContextFactory">
            <summary>Фабрика интерфейса контекста итерации</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.Snapshots.SnapshotContextFactory.Create(System.IServiceProvider)">
            <summary>Статический метод-фабрика</summary>
            <param name="serviceProvider"></param>
            <returns>Созданный ISnapshotContext</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.Snapshots.SnapshotContextFactory.SnapshotContext">
            <summary>Реализация ISnapshotContext - интерфейса сущности в контексте итерации</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Snapshots.SnapshotContextFactory.SnapshotContext.Snapshot">
            <summary>Интерфейс итерации</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.Snapshots.SnapshotContextFactory.SnapshotContext.SnapshotID">
            <summary>Идентификатор итерации</summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IAttributesLockService">
            <summary>
            Интерфейс сервиса, позволяющего запретить добавление/редактирование определенных атрибутов у объектов и связей 
            средствами пользовательского интерфейса IPS.
            </summary>
            <remarks>
            Необходимость в этом сервисе возникла из-за того, что ряд атрибутов может приходить извне IPS. Например,
            атрибуты изделия, выпускаемого по 3D-модели, извлекаются из файла этой модели. Поэтому в изменении
            атрибутов такого изделия нет никакого смысла, так как введенные пользователем значения все равно будут
            перезаписаны значениями из файла модели при завершении редактирования 3D-модели.
            </remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAttributesLockService.GetLockedAttributes(Intermech.AttributableElements,System.Int64,System.Int32)">
            <summary>
            Определяет атрибуты объекта или связи, добавление/редактирование которых средствами
            интерфейса пользователя должно быть недоступно.
            </summary>
            <param name="elementKind">Указывает, к чему относятся атрибуты - к объекту или связи</param>
            <param name="elementId">Идентификатор версии объекта или связи</param>
            <param name="elementType">Идентификатор типа объекта или типа связи</param>
            <returns>Коллекция идентификаторов атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IAttributesLockService.LockAttributeValues(Intermech.AttributableElements,System.Int64,System.Int32,System.Collections.Generic.IList{Intermech.Interfaces.AttributeValues})">
            <summary>
            Помечает как read-only значения атрибутов объекта или связи, редактирование которых средствами
            интерфейса пользователя должно быть недоступно. Этот метод является вспомогательным,
            он основан на методе GetLockedAttributes.
            </summary>
            <param name="elementKind">Указывает, к чему относятся атрибуты - к объекту или связи</param>
            <param name="elementId">Идентификатор версии объекта или связи</param>
            <param name="elementType">Идентификатор типа объекта или типа связи</param>
            <param name="attributeValues">Cписок значений атрибутов</param>
            <exception cref="T:System.ArgumentNullException">Ссылка на список значений атрибутов не может быть null</exception>
        </member>
        <member name="E:Intermech.Interfaces.Client.IAttributesLockService.GetLockedAttributesHandler">
            <summary>
            Основное событие, используемое для построения списка блокируемых атрибутов.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IObjectCreatorService">
            <summary>
            Интерфейс IObjectCreatorService службы создания объектов позволяет вызвать мастер создания объектов.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectDialog">
            <summary>
            Создание нового объекта
            </summary>
            <returns>Идентификатор созданного объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeID">Идентификатор ипа объекта, по которому будет создан новый экземпляр объекта.</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32,Intermech.Interfaces.Client.OpenEditorMode@)">
            <summary>
            Создание нового объекта заданного типа.
            Функция в обход стандартного механизма получения значения флажка. 
            Написал по требованию Гинзбурга 21.05.2010
            </summary>
            <param name="aObjectTypeID">Идентификатор типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="OpenEditor">Открывать редактор после создания</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32,Intermech.Interfaces.Client.OpenEditorMode@,Intermech.Interfaces.Client.IObjectCreatorParams)">
            <summary>
            Создание нового объекта заданного типа.
            Функция в обход стандартного механизма получения значения флажка. 
            Написал по требованию Гинзбурга 21.05.2010
            </summary>
            <param name="aObjectTypeID">Идентификатор типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="OpenEditor">Открывать редактор после создания</param>
            <param name="creatorParams">Доп. параметры для управления созданием объекта</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32,System.Int64,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime,System.Boolean,Intermech.Interfaces.Client.OpenEditorMode@,Intermech.Interfaces.Client.IObjectCreatorParams)">
            <summary>
            Создание нового объекта заданного типа.
            </summary>
            <param name="aObjectTypeID">Идентификатор типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aTemplateObjectID">Идентификатор, который задает объект-прототип для создаваемого экземпляра.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинают действовать созданные связи</param>
            <param name="isVersion">Признак - создавать версию, или объект</param>
            <param name="openEditor"></param>
            <param name="creatorParams">Доп. параметры для креатора</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32,System.Boolean)">
            <summary>
            Создание нового объекта заданного типа с возможностью форсировать или заблокировать открытие редактора после создания
            </summary>
            <param name="aObjectTypeID">Идентификатор типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="openEditor">Если true, редактор будет всегда открываться после создания, если false - никогда</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(Intermech.Interfaces.IDBObjectType)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectType">Тип объекта, по которому будет создан новый экземпляр объекта.</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Guid)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeGuid">GUID типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.String)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeName">Наименование типа объекта, по которому будет создан новый экземпляр объекта.
            Если aObjectTypeName не задано, то будет предложено выбрать тип объекта в диалоге</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32[])">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeIDs">Массив идентификаторов типов объектов, из которых 
            будет разрешено выбрать тип создаваемого экземпляра объекта.</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32[],System.Int32@)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeIDs">Массив идентификаторов типов объектов, из которых 
            будет разрешено выбрать тип создаваемого экземпляра объекта.</param>
            <param name="objectTypeID">Тип созданного объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32[],System.Int32)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeIDs">Массив идентификаторов типов объектов, из которых 
            будет разрешено выбрать тип создаваемого экземпляра объекта.</param>
            <param name="selectedID">Тип объектов, выделенный по-умолчанию, или Consts.UnknownObjectTypeId если это неважно</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(Intermech.Interfaces.IDBObjectType[])">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypes">Массив типов объектов, из которых 
            будет разрешено выбрать тип создаваемого экземпляра объекта.</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Guid[])">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeGuids">Массив GUID типов объектов, из которых 
            будет разрешено выбрать тип создаваемого экземпляра объекта.</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32[],Intermech.Interfaces.Client.ObjectRelationLink[],System.Int32)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeIDs">Массив ID типов объектов, из которых будет разрешено выбрать тип создаваемого экземпляра объекта.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="selectedTypeID">Тип объектов, выделенный по-умолчанию, или Consts.UnknownObjectTypeId если это неважно</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.String[])">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeNames">Массив наименований типов объектов, из которых 
            будет разрешено выбрать тип создаваемого экземпляра объекта.</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeID">Идентификатор ипа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(Intermech.Interfaces.IDBObjectType,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectType">Тип объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Guid,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeGuid">GUID типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.String,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeName">Наименование типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeID">Идентификатор ипа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(Intermech.Interfaces.IDBObjectType,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectType">Тип объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Guid,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeGuid">GUID типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.String,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeName">Наименование типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Collections.Hashtable,System.Int64[])">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeIDRelationTypeIDs">Hashtable в которой идентификатору типа объекта
            поставлен в соответствие идентификатор типа связей, которые нужно будет создать с 
            объектами, чьи идентификаторы переданы в aRelatedObjectIDs</param>
            <param name="aRelatedObjectIDs">массив идентификаторов в состав которых 
            нужно включить создаваемый объект</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Collections.Hashtable,System.Int64[],System.DateTime)">
            <summary>
            Создание нового объекта заданного типа
            </summary>
            <param name="aObjectTypeIDRelationTypeIDs">Hashtable в которой идентификатору типа объекта
            поставлен в соответствие идентификатор типа связей, которые нужно будет создать с 
            объектами, чьи идентификаторы переданы в aRelatedObjectIDs</param>
            <param name="aRelatedObjectIDs">массив идентификаторов в состав которых 
            нужно включить создаваемый объект</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTypeDialog(System.Int32,System.Int64,System.Object)">
            <summary>
            Создание нового объекта заданного типа.
            </summary>
            <param name="aObjectTypeID">Идентификатор типа объекта, по которому будет создан новый экземпляр объекта.</param>
            <param name="aTemplateObjectID">Идентификатор, который задает объект-прототип для создаваемого экземпляра.</param>
            <param name="otherParams">Доп. параметры</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(Intermech.Interfaces.IDBObject)">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aTemmplateObject">Прототип объекта по которому будет создан новый экземпляр</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(System.Int64)">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aTemplateObjectID">Идентификатор, который задает объект-прототип для создаваемого экземпляра</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(System.Int64,System.Object)">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aTemplateObjectID">Идентификатор, который задает объект-прототип для создаваемого экземпляра</param>
            <param name="addInfo"> объект для передачи дополнительной информации</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(System.Guid)">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aObjectGuid">GUID объекта, который является прототипом для создаваемого экземпляра</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateVersionAnotherType(System.Int64,System.Int32)">
            <summary>
            Создать версию другого типа
            </summary>
            <param name="aTemplateObjectID"></param>
            <param name="aTemplateObjectType"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(Intermech.Interfaces.IDBObject,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aTemmplateObject">Прототип объекта по которому будет создан новый экземпляр</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(System.Int64,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aTemplateObjectID">Идентификатор, который задает объект-прототип для создаваемого экземпляра</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(System.Guid,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aObjectGuid">GUID объекта, который является прототипом для создаваемого экземпляра</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(Intermech.Interfaces.IDBObject,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aTemmplateObject">Прототип объекта по которому будет создан новый экземпляр</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(System.Int64,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aTemplateObjectID">Идентификатор, который задает объект-прототип для создаваемого экземпляра</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectByTemplateDialog(System.Guid,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание нового объекта по прототипу
            </summary>
            <param name="aObjectGuid">GUID объекта, который является прототипом для создаваемого экземпляра</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectVersionByTemplateDialog(Intermech.Interfaces.IDBObject)">
            <summary>
            Создание новой версии объекта по прототипу
            </summary>
            <param name="aTemmplateObject">Прототип объекта по которому будет создан новый экземпляр</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectVersionByTemplateDialog(System.Int64)">
            <summary>
            Создание новой версии объекта по прототипу
            </summary>
            <param name="aTemplateObjectID">Идентификатор, который задает объект-прототип для создаваемого экземпляра</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectVersionByTemplateDialog(System.Guid)">
            <summary>
            Создание новой версии объекта по прототипу
            </summary>
            <param name="aObjectGuid">GUID объекта, который является прототипом для создаваемого экземпляра</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectVersionByTemplateDialog(Intermech.Interfaces.IDBObject,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание новой версии объекта по прототипу
            </summary>
            <param name="aTemmplateObject">Прототип объекта по которому будет создан новый экземпляр</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectVersionByTemplateDialog(System.Int64,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание новой версии объекта по прототипу
            </summary>
            <param name="aTemplateObjectID">Идентификатор, который задает объект-прототип для создаваемого экземпляра</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectVersionByTemplateDialog(System.Guid,Intermech.Interfaces.Client.ObjectRelationLink[])">
            <summary>
            Создание новой версии объекта по прототипу
            </summary>
            <param name="aObjectGuid">GUID объекта, который является прототипом для создаваемого экземпляра</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectVersionByTemplateDialog(Intermech.Interfaces.IDBObject,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание новой версии объекта по прототипу
            </summary>
            <param name="aTemmplateObject">Прототип объекта по которому будет создан новый экземпляр</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectVersionByTemplateDialog(System.Int64,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание новой версии объекта по прототипу
            </summary>
            <param name="aTemplateObjectID">Идентификатор, который задает объект-прототип для создаваемого экземпляра</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.CreateObjectVersionByTemplateDialog(System.Guid,Intermech.Interfaces.Client.ObjectRelationLink[],System.DateTime)">
            <summary>
            Создание новой версии объекта по прототипу
            </summary>
            <param name="aObjectGuid">GUID объекта, который является прототипом для создаваемого экземпляра</param>
            <param name="aObjRelations">Массив структур, содержащих описание связей, которые нужно создать для нового объекта</param>
            <param name="aStartDate">Дата с которой начинаеют действовать созданные связи</param>
            <returns>Идентификатор созданного объекта. Возвращается -1 если объект не создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.GetObjectCreatedInfo">
            <summary>
            Получение описаний созданных объектов (версий)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.RegisterCreatorCustomService(System.Int32,System.Type)">
            <summary>
            Регистрация мастера создания объектов определенного типа 
            для переопределения имеющегося по умолчанию диалога 
            </summary>
            <param name="aObjectTypeID">идентификатор типа объектов для которого производится 
            замена стандартного мастера создания объектов</param>
            <param name="aCustomServiceType">сылка на тип объекта реализующего интерфейс 
            перекрытого диалога создания объекта определенного типа</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.UnregisterCreatorCustomService(System.Int32,System.Type)">
            <summary>
            Разрегистрация мастера создания объектов определенного типа 
            </summary>
            <param name="aObjectTypeID">идентификатор типа объектов для которого производится 
            замена стандартного мастера создания объектов</param>
            <param name="aCustomServiceType">сылка на тип объекта реализующего интерфейс
            который надо удалить из списка перекрывающих диалогов</param>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.BeforeDraftCreateEvent">
            <summary>
            Событие, возникающее перед созданием заготовки нового объекта
            (позволяет выполнить подстановку идентификатора прототипа объекта)
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.AfterDraftCreatedEvent">
            <summary>
            Событие, возникающее при создании заготовки нового объекта
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.AfterObjectCreatedEvent">
            <summary>
            Событие, возникающее при успешном завершении создания нового объекта
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.ObjectCreatorCanceledEvent">
            <summary>
            Событие, возникающее при ОТМЕНЕ создания нового объекта, если заготовка объекта была создана
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.OpenObjectAfterCreationEvent">
            <summary>
            Событие для открытия успешно созданного объекта, если включен переключатель "Открыть редактор после создания"
            Вызывается после AfterObjectCreatedEvent, чтобы гарантировать, что новый объект откроется только после других обработчиков
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.AfterEntersInCreatedEvent">
            <summary>
            Событие, возникающее при успешном включении в какой-либо состав создаваемого объекта
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.FilesRenamedEvent">
            <summary>
            Событие возникает после копирования переименованных файлов из объекта-прототипа в заготовку
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.BeforeCommitCreationEvent">
            <summary>
            Cобытиt, возникающего перед CommitCreation для заготовки
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.SelectCustomServiceEvent">
            <summary>
            Событие возникает при выборе пользовательского мастера создания объектов определенного типа.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.BeforeShowDialogEvent">
            <summary>
            Вызывается непосредственно перед показом пользователю диалога создателя объектов.
            Предоставляют возможность получения и изменения некоторых текущих используемых параметров.
            !!!Attention!!!: чистить за собой после использования диалога если не требуется на постоянной основе!
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectCreatorService.BeforeCloseDialogEvent">
            <summary>
            Вызывается перед закрытием диалога создателя объектов до сохранения параметров диалога.
            Предоставляет возможность получения и изменения некоторых текущих используемых параметров.
            Может использоваться для изменения некоторых параметров диалога перед сохранением,
            например, для восстановления ранее изменённых в BeforeShowDialogEvent.
            !!!Attention!!!: чистить за собой после использования диалога если не требуется на постоянной основе!
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectCreatorService.FireOnObjectCreatorCanceledEvent(System.Int64,System.Boolean,System.Int32)">
            <summary>
            Генерация события об отмене создания версии
            </summary>
            <param name="zagId">ИД заготовки отменяемой версии</param>
            <param name="isVersion">Является ли заготовка версией</param>
            <param name="objTypeID">ИД типа объекта</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.OpenEditorMode">
            <summary>
            Режим открытия редактора после создателя объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OpenEditorMode.None">
            <summary>
            Неопределено
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OpenEditorMode.Open">
            <summary>
            Открыть редактор
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OpenEditorMode.NotOpen">
            <summary>
            Не открывать редактор
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectCreatedInfo">
            <summary>
            Описание созданного объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatedInfo._objectId">
            <summary>
            Поле для хранения идентификатора созданного объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatedInfo._objectTypeId">
            <summary>
            Идентификатор типа созданного объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatedInfo._prototypeId">
            <summary>
            Поле для хранения прототипа по которому создается объект
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatedInfo._isVersion">
            <summary>
            Поле для хранения признака - создается новый объект или его версия
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectCreatedInfo._relationLinks">
            <summary>
            Перечень созданных связей
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectCreatedInfo.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectCreatedInfo.#ctor(System.Int64,System.Int32)">
            <summary>
            Конструктор
            </summary>
            <param name="objectId"></param>
            <param name="objectTypeId"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectCreatedInfo.#ctor(System.Int64,System.Int32,System.Int64,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="objectId"></param>
            <param name="objectTypeId"></param>
            <param name="prototypeId"></param>
            <param name="isVersion"></param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatedInfo.ObjectId">
            <summary>
            Идентификатор созданного объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatedInfo.PrototypeId">
            <summary>
            Идентификатор прототипа по которому создается объект
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatedInfo.IsVersion">
            <summary>
            Признак - создается новый объект или его версия
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatedInfo.ObjectTypeId">
            <summary>
            Идентификатор типа созданного объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatedInfo.RelationLinks">
            <summary>
            Перечень созданных связей
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectRelationLink">
            <summary>
            Структура для определения идентификатора объекта и идентификатора типа связи
            при создании нового экземпляра объекта с заданными связями
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectRelationLink.ObjectID">
            <summary>
            идентификатор объекта, с которым необходимо создать связь
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectRelationLink.RelationTypeID">
            <summary>
            идентификатор типа связи, которую нужно создать
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectRelationLink.LinkID">
            <summary>
            идентификатор связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectRelationLink.Attributes">
            <summary>
            Список атрибутов и значений, которые нужно установить новой связи
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectRelationLink.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectCreatorCustomServiceEventArgs">
            <summary>
            Аргументы события выбора пользовательского мастера создания объектов определенного типа.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectCreatorCustomServiceEventArgs.#ctor(System.Int32)">
            <summary>
            Создает объект.
            </summary>
            <param name="objectTypeId">Идентификатор типа создаваемого объекта</param>
            <exception cref="T:ArgumentException">Параметр <paramref name="objectTypeId"/> не задан</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatorCustomServiceEventArgs.ObjectTypeId">
            <summary>
            Возвращает идентификатор типа создаваемого объекта.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatorCustomServiceEventArgs.Handled">
            <summary>
            Возвращает или задает признак, что событие было обработано.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatorCustomServiceEventArgs.CustomServiceType">
            <summary>
            Возвращает или задает тип пользовательского мастера создания объектов определенного типа.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectCreatorCustomServiceEventArgs.ConstructorParams">
            <summary>
            Возвращает или задает набор параметров для конструктора собственного создателя объектов.
            В случае null (либо при длине массива равной 0) вызывается конструктор без параметров.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPicturesCache">
            <summary>
            Интерфейс для кеширования изображений для объектов со стороны клиента.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IPicturesCache.LoadComplete">
            <summary>
            Сигнал об окончании загрузки рисунка
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IPicturesCache.Filter">
            <summary>
            Возвращает или текущую строку фильтра имен файлов, которая определяет позиции, отображающиеся в окне «Файлы типа» диалогового окна.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IPicturesCache.Session">
            <summary>
            Получение идентификатора сессии. Этот идентификатор используется в
            дальнейшем для передачи в метод загрузки изображения и при получении события об
            окончании загрузки для идентификации окна, которое запросило этот рисунок.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPicturesCache.GetPicture(System.Int64)">
            <summary>
            Загружает для объекта изображение из атрибута изображение.
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPicturesCache.GetPicture(System.Guid)">
            <summary>
            Загружает для объекта изображение из атрибута изображение.
            </summary>
            <param name="objectGuid">Guid версии объекта</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPicturesCache.GetPicture(System.Int32,System.Int64,System.Int64@)">
            <summary>
            Получение изображения без постановки в очередь.
            </summary>
            <param name="objectType">Тип объекта</param>
            <param name="objectId">Идентификатор объекта</param>
            <param name="newObjectId">Новый идентификатор объекта</param> 
            <returns>
            Возвращает загруженное изображение или DbNull.Value, если для этого объекта изображение не определено.
            Иначе возвращает загруженное изображение.
            </returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPicturesCache.LoadPicture(System.Int32,System.Int64,System.Int32,System.Int64@)">
            <summary>
            Постановка в очередь загрузки изображения.
            </summary>
            <param name="objectType">Тип объекта</param>
            <param name="objectId">Идентификатор объекта</param>
            <param name="sessionId">Идентификатор сессии</param>
            <param name="newObjectId">Новый идентификатор объекта</param> 
            <returns>Возвращает null, если в кеше нет рисунка и загрузка поставлена в очередь</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPicturesCache.RegisterPictureFile(Intermech.Interfaces.Client.IThumbImageCreator,System.String,System.String)">
            <summary>
            Регистрирует интерфейс для создания изображений
            </summary>
            <param name="creator">Создатель объекта</param>
            <param name="ext">Расширение файла( без '.')</param>
            <param name="description">Описание</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPicturesCache.UpdateItem(System.Int32,System.Int64)">
            <summary>
            Обновляет блоб с изображением.
            </summary>
            <param name="objectType">Тип объекта</param>
            <param name="objectId">Идентификатор объекта</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPicturesCache.UpdateItem(System.Int32,System.Int64,System.String)">
            <summary>
            Обновляет блоб с изображением.
            </summary>
            <param name="objectType">Тип объекта</param>
            <param name="objectId">Идентификатор объекта</param>
            <param name="fileName">Полное наименование файла</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.LoadCompleteEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.CacheChangedEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="objectId"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.TranslateObjectIdEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.TranslateObjectEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.TranslateObjectEventArgs.NewObjectId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.TranslateObjectEventArgs.ObjectId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.TranslateObjectEventArgs.Session">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.TranslateObjectEventArgs.TypeId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.TranslateObjectEventArgs.#ctor(Intermech.Interfaces.IUserSession,System.Int64,System.Int32)">
            <summary>
            Конструктор.
            </summary>
            <param name="session"></param>
            <param name="objectId"></param>
            <param name="objectType"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.PictureEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.PictureEventArgs.ObjectId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.PictureEventArgs.Picture">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.PictureEventArgs.Session">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.PictureEventArgs.#ctor(System.Int64,System.Int32,System.Object)">
            <summary>
            Конструктор.
            </summary>
            <param name="objectId"></param>
            <param name="sessionId"></param>
            <param name="picture"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPreviewExtender">
            <summary>
            Интерфейс позволяет расширять список просматриваемых файлов объекта
            путем регистрации подписчиков
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ExtendEventHandler">
            <summary>
            Делегат для опроса
            </summary>
            <param name="eventArgs">Аргументы</param>
        </member>
        <member name="F:Intermech.Interfaces.Client.ExtendEventArgs._objectId">
            <summary>
            Идентификатор базового объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ExtendEventArgs._objectType">
            <summary>
            Тип базового объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ExtendEventArgs._preferedBlobId">
            <summary>
            Предпочтительный идентификатор блоба для для просмотра 
            </summary>        
        </member>
        <member name="F:Intermech.Interfaces.Client.ExtendEventArgs._items">
            <summary>
            Список идентификаторов объектов и блобов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ExtendEventArgs.#ctor(System.Int32,System.Int64,System.Collections.Generic.List{Intermech.Interfaces.Client.FileBlobItem})">
            <summary>
            Контсруктор
            </summary>
            <param name="objectType">Тип базового объекта</param>
            <param name="objectId">Идентификатор базового объекта</param>
            <param name="items">Список идентификаторов объектов и блобов</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ExtendEventArgs.ObjectType">
            <summary>
            Тип базового объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ExtendEventArgs.ObjectID">
            <summary>
            Идентификатор базового объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ExtendEventArgs.Items">
            <summary>
            Список идентификаторов объектаов и блобов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ExtendEventArgs.PreferedBlobID">
            <summary>
            Предпочтительный идентификатор блоба для просмотра 
            </summary>
            
        </member>
        <member name="T:Intermech.Interfaces.Client.FileBlobItem">
            <summary>структура с идентификатором файлового блоба</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileBlobItem.ObjectId">
            <summary>Идентификатор объекта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileBlobItem.AttId">
            <summary>Идентификатор атрибута</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.FileBlobItem.ValueIndex">
            <summary>Индекс в атрибуте</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.FileBlobItem.#ctor(System.Int64,System.Int32,System.Int32)">
            <summary>
            Создает структуру с идентификатором файлового блоба
            </summary>
            <param name="objectId">Идентификатор объекта</param>
            <param name="attId">Идентификатор атрибута</param>
            <param name="valueIndex">Индекс в атрибуте</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPropertyGridView">
            <summary>
            Окно для отображения свойств свбранного объекта для редакторов
            документов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.PropertyPageType">
            <summary>
            Тип страницы свойств
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.PropertyPageType.Unknown">
            <summary>
            Не определен
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.PropertyPageType.Control">
            <summary>
            Страничка представляет собой элемент, основанный на UserControl
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.PropertyPageType.Object">
            <summary>
            На страничке отображаются свойства объекта. Свойства объекта изменяются в PropertyGrid
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPropertyPage">
            <summary>
            Элемент для отображения параметров настройки
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IPropertyPage.Changed">
            <summary>
            Событие об изменении свойств на странице
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IPropertyPage.Type">
            <summary>
            Тип страницы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IPropertyPage.Control">
            <summary>
            Объект для отображения свойств
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IPropertyPage.PageName">
            <summary>
            Имя страницы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPage.Apply">
            <summary>
            Сохранение изменений
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPage.Cancel">
            <summary>
            Отмена изменений
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IPropertyPage.HelpTopicID">
            <summary>
            id раздела справки для данного элемента управления
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IPropertyPage.HeaderText">
            <summary>
            Текст заголовка (пустое значение - заголовок не отображается)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPropertyPageActivationEvents">
            <summary>
            Необязательное расширение для <see cref="T:Intermech.Interfaces.Client.IPropertyPage"/>, позволяющее обрабатывать события 
            переключения между страницами в окне параметров настройки.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPageActivationEvents.InitializePage">
            <summary>
            Вызывается при инициализации окна параметров настройки до отображения окна.
            Метод не должен бросать исключений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPageActivationEvents.BeforeActivatePage">
            <summary>
            Вызывается перед переключением на текущую страницу.
            Метод не должен бросать исключений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPageActivationEvents.AfterActivatePage">
            <summary>
            Вызывается после переключения на текущую страницу.
            Метод не должен бросать исключений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPageActivationEvents.BeforeDeactivatePage">
            <summary>
            Вызывается перед переключением с текущей страницы на другую страницу.
            Метод не должен бросать исключений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPageActivationEvents.AfterDeactivatePage">
            <summary>
            Вызывается после переключения с текущей страницы на другую страницу.
            Метод не должен бросать исключений.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPropertyPageSearchOptionEvents">
            <summary>
            Необязательное расширение для <see cref="T:Intermech.Interfaces.Client.IPropertyPage"/>, позволяющее осуществлять
            получение и выделение настроек
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPageSearchOptionEvents.GetOptionNames">
            <summary>
            Возвращает список имен настроек, содержащихся в контроле
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISortedPropertyGrid">
            <summary>
            Управление сортировкой в property grid настроек 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPageHelper.GetOptionNames(System.ComponentModel.ICustomTypeDescriptor)">
            <summary>
            Возвращает список имен настроек PropertyGrid'а
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPageHelper.GetOptionNames(System.Windows.Forms.Control)">
            <summary>
            Возвращает список имен чек-боксов и лейблов данного контрола,
            проверяя в том числе и вложенные контролы
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intermech.Interfaces.Client.IPropertyPageHelper.GetOptionNames(System.Object)" -->
        <member name="M:Intermech.Interfaces.Client.IPropertyPageHelper.GetBrowsableProperties(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Из данной коллекции свойств возвращает только те, что имеют != null DisplayName и являются Browsable
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPageHelper.GetNestedBrowsableProperties(System.ComponentModel.PropertyDescriptorCollection,System.Object)">
            <summary>
            Из данной коллекции свойств возвращает вложенные свойства
            </summary>
            <param name="component">Родительский компонент свойств</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IPropertyPagesService">
            <summary>
            Сервис управления страницами свойств
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IPropertyPagesService.Changed">
            <summary>
            Событие возникает, когда на страничке свойств вносятся изменения в текущие настройки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IPropertyPagesService.AddPage(System.String,Intermech.Interfaces.Client.IPropertyPage)">
            <summary>
            Добавить страницу свойств
            </summary>
            <param name="path">Путь и название страницы. В качестве разделителя используется '\'</param>
            <param name="page">Страница свойств</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IScanerDocumentService">
            <summary>
            Интерфейс службы сканирования графических документов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IScanerDocumentService.SelectDevice">
            <summary>
            Выбрать сканирующее устройство
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IScanerDocumentService.AcquireDoc(System.String)">
            <summary>
            Сканировать
            </summary>
            <param name="fileExt"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IScanerDocumentService.Init">
            <summary>
            Инициализация службы
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IScanerDocumentService.OnImageTransfer">
            <summary>
            Событие передачи данных от сканера
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IScanerDocumentService.OnEndScaning">
            <summary>
            Событие завершения сканирования
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IScanerDocumentService.IsNullOnImageTransfer">
            <summary>
            навен ли OnImageTransfer null
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.OnImageTransfer">
            <summary>
            передача данных от сканера
            </summary>
            <param name="sender">byte[] поток байт, null - в случае неудачи</param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.OnEndScaning">
            <summary>
            Событие завершения сканирования
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISelectedItemsText">
            <summary>
            Интерфейс реализуется элементами управления Навигатора, 
            которые позволяют вернуть содержимое своих выделенных элементов
            в виде текста, с форматированием, разделителями, заголовками столбцов, т.п.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISelectedItemsText.GetSelectedItemsText(Intermech.Interfaces.Client.SelectedItemsTextOptions,System.String,System.String)">
            <summary>
            Получить текст выделенных в элементе управления Навигатора данных
            </summary>
            <param name="options">Параметры получения текста</param>
            <param name="cellsSeparator">Разделитель между значениями отдельных ячеек</param>
            <param name="rowsSeparator">Разделитель между строками текста</param>
            <returns>Полученный текст</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.SelectedItemsTextOptions">
            <summary>
            Опции для интерфейса ISelectedItemsText
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectedItemsTextOptions.None">
            <summary>
            Нет никаких опций
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectedItemsTextOptions.ColumnsCaptions">
            <summary>
            Добавлять в начало текста заголовки столбцов, разделённые указанной строкой
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectedItemsTextOptions.FirstItemOnly">
            <summary>
            Добавлять в текст только содержимое первого выделенного элемента
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectedItemsTextOptions.ColumnsCaptionsOnly">
            <summary>
            Добавлять в текст только заголовки столбцов, разделённые указанной строкой.
            Больше ничего не будет добавлено
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectedItemsTextOptions.Default">
            <summary>
            Опции по умолчанию (ColumnsCaptions)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISortService">
            <summary>
            Сервис сортировки данных
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISortService.SortTable(System.Data.DataTable)">
            <summary>
            Сортировка таблицы. Параметры сортировки задаются в расширенных свойствах столбцов:
            DataColumn.ExtendedProperties[typeof(ColumnAttributeData)] = new ColumnAttributeData(..)
            </summary>
            <param name="table"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISortColumnHandler">
            <summary>
            Обработчик сортируемой колонки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISortColumnHandler.Handle(System.Data.DataTable,System.Int32,Intermech.Interfaces.Client.ColumnAttributeData,System.String@)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <param name="columnIndex"></param>
            <param name="attrData"></param>
            <param name="sortSQL"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISortColumnHandler.AfterSorting(System.Data.DataTable)">
            <summary>
            
            </summary>
            <param name="table"></param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ColumnAttributeData">
            <summary>
             Информация
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ColumnAttributeData.AttributeID">
            <summary>
            Идентификатор атрибута
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ColumnAttributeData.AttributeType">
            <summary>
            Тип атрибута
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ColumnAttributeData.AttributeSource">
            <summary>
            Принадлежность атрибута
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ColumnAttributeData.Sort">
            <summary>
            Задает порядок сортировки данных по этой колонке
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ColumnAttributeData.OrderByID">
            <summary>
            Задает приоритет сортировки для данной колонки (ее порядок в операторе ORDER BY)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IStartupService">
            <summary>
            Сервис сообщений о загрузке системы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IStartupService.IsStartupCompleted">
            <summary>
            Возвращает признак, что загрузка приложения полностью завершена, и приложение готово к работе.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IStartupService.MainFormShown">
            <summary>
            Главное окно отображено
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IStartupService.StartupComplete">
            <summary>
            Загрузка системы полностью завершена
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IStatusBar">
            <summary>
            Интерфейс для работы со строкой состояния главного окна
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IStatusBarService">
            <summary>
            Интерфейс для работы со строкой состояния главного окна
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IThumbImage">
            <summary>
            Интерфейс представления абстрактного изображения
            для рисования в эскизах страниц
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IThumbImage.PaintTo(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Рисует изображение в указанных границах
            </summary>
            <param name="g">Graphics для рисования</param>
            <param name="bounds">Границы для рисования</param>
            <param name="stretchBounds">Границы, пересчитанные с учетом пропорционального масштабирования</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IThumbImageCreator">
            <summary>
            Интерфейс для создания изображения из потока
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IWorkCopyCommandOptions">
            <summary>
            Интерфейс сервиса для получения дополнительных опции выполнения для команд checkout, save changes, checkin, cancel changes.
            Реализация должна быть thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IWorkCopyCommandOptions.GetCheckinOptions(Intermech.Navigator.Interfaces.ISelectedItems,System.ComponentModel.Design.IServiceContainer,System.Collections.Generic.List{Intermech.Interfaces.Client.WorkCopyCommandOptionsEditor})">
            <summary>
            Собирает и возвращает дополнительные опции выполнения для команды checkin.
            </summary>
            <param name="items">Выделенные элементы навигатора, к которым будет применена команда</param>
            <param name="contextServices">Контейнер сервисов окружения для команды, в которую должны быть помещены дополнительные опции выполнения</param>
            <param name="contextServicesEditors">Коллекция, в которую должны быть помещены редакторы дополнительных опций выполнения</param>
            <exception cref="T:System.ArgumentNullException">Параметры <paramref name="items"/>, <paramref name="contextServices"/>, <paramref name="contextServicesEditors"/> не должны быть равны null</exception>
        </member>
        <member name="E:Intermech.Interfaces.Client.IWorkCopyCommandOptions.CollectCheckinOptions">
            <summary>
            Событие для сбора дополнительных опций выполнения для команды checkin.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ClientFileLog">
            <summary>
            Потокобезопасный файловый протокол для клиентского приложения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientFileLog.logFileStream">
            <summary>
            Файл общего протокола
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientFileLog.logFilePath">
            <summary>
            Путь к файлу протокола
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ClientFileLog.logFileName">
            <summary>
            Имя файла с протоколом
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientFileLog.#ctor">
            <summary>
            Создать пустой экземпляр класса
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientFileLog.#ctor(System.String,System.String)">
            <summary>
            Создать/открыть файловый протокол
            </summary>
            <param name="logFilePath">Путь к файлу протокола</param>
            <param name="logFileName">Имя файла с протоколом</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientFileLog.AddDateTime(System.Boolean,System.String)">
            <summary>
            Добавить при необходимости дату и время в текст сообщения
            </summary>
            <param name="writeDateTime">true - добавлять дату и время в текст сообщения</param>
            <param name="msg">Сообщение</param>
            <returns>Обработанное сообщение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientFileLog.SetDefaults">
            <summary>
            Задать значения по умолчанию
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ClientFileLog.IsLogOpen">
            <summary>
            Является ли протокол открытым
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientFileLog.CloseLog">
            <summary>
            Закрыть файл с протоколом
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientFileLog.OpenLog">
            <summary>
            Открыть файл с протоколом
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientFileLog.OpenLog(System.String,System.String)">
            <summary>
            Открыть файл с протоколом
            </summary>
            <param name="logFilePath">Путь к файлу протокола</param>
            <param name="logFileName">Имя файла с протоколом</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientFileLog.Write(System.String,System.Boolean)">
            <summary>
            Записать в протокол указанный текст
            </summary>
            <param name="text">Текст</param>
            <param name="withDateTime">true - в начало строки добавить текущие дату и время (UTC)</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ClientFileLog.WriteLn(System.String,System.Boolean)">
            <summary>
            Записать в протокол указанный текст
            </summary>
            <param name="text">Текст</param>
            <param name="withDateTime">true - в начало строки добавить текущие дату и время (UTC)</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.GridContextSearchOptions">
            <summary>
            Опции для контекстного поиска в элементе управления Навигатора, содержащем список строк
            (для программного поиска)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.GridContextSearchOptions.None">
            <summary>
            Нет никаких настроек
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.GridContextSearchOptions.Default">
            <summary>
            Стандартные опции для поиска
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.GridContextSearchOptions.CaseSensitive">
            <summary>
            Поиск выполняется с учётом регистра букв
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.GridContextSearchOptions.WholeWords">
            <summary>
            Поиск слов целиком
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.GridContextSearchOptions.WithMask">
            <summary>
            Поиск с учётом маски (* / ?)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.GridContextSearchOptions.WithRegularExpression">
            <summary>
            Маска - регулярное выражение
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.GridContextSearchOptions.FindAll">
            <summary>
            Поиск найдёт и отметит все подходящие записи
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IGridContextSearch">
            <summary>
            Служба контекстного поиска в элементах управления Навигатора, содержащих список строк,
            для вызова из модулей расширения (для программного поиска)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IGridContextSearch.FindColumns(System.Int32)">
            <summary>
            Отыскать колонки в гриде, которые содержит значения указанного атрибута
            (объекта, связи, т.п.)
            </summary>
            <param name="attrID">Идентификатор типа атрибута</param>
            <returns>Колонки, содержащие значения указанного атрибута, либо null, если колонки не найдены</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IGridContextSearch.FindColumns(System.Guid)">
            <summary>
            Отыскать колонки в гриде, которые содержат значения указанного атрибута
            (объекта, связи, т.п.)
            </summary>
            <param name="attrGuid">Глобальный идентификатор типа атрибута</param>
            <returns>Колонки, содержащие значения указанного атрибута, либо null, если колонки не найдены</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.IGridContextSearch.RowsCount">
            <summary>
            Количество строк, загруженных в элемент управления
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IGridContextSearch.Eof">
            <summary>
            Загружены ли все строки в элемент управления (True) или ещё нет
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IGridContextSearch.FetchNext">
            <summary>
            Загрузить очередной пакет с данными
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IGridContextSearch.FetchAll">
            <summary>
            Загрузить все оставшиеся пакеты с данными
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IGridContextSearch.Holder">
            <summary>
            Контейнер настроек для контекстного поиска в элементе управления Навигатора, содержащем список строк
            (для программного поиска)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IGridContextSearch.Search(Intermech.Navigator.Interfaces.NodeColumn[])">
            <summary>
            Выполнить поиск по указанным в Holder критериям. В зависимости от значения selectAllMode,
            поиск выделит в элементе сразу все найденные строки, либо отыщет и выделит следующую
            подходящую строку (поиск выполняется циклично)
            </summary>
            <param name="columns">Колонки, в которых следует выполнять поиск. 
            Если не задано ни одной колонки, поиск будет выполняться во всех видимых колонках</param>
            <returns>true - найдена как минимум одна подходящая строка, false - ничего подходящего не найдено</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IGridContextSearchHolder">
            <summary>
            Контейнер настроек для контекстного поиска в элементе управления Навигатора, содержащем список строк
            (для программного поиска)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IGridContextSearchHolder.Mask">
            <summary>
            Шаблон для поиска (строка может содержать маски * и ?)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IGridContextSearchHolder.Options">
            <summary>
            Опции для поиска
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.INavigatorContextSearchHolder">
            <summary>
            Контейнер настроек для контекстного поиска в элементе управления Навигатора, содержащем список строк
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigatorContextSearchHolder.Mask">
            <summary>
            Шаблон для поиска (строка может содержать маски * и ?)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigatorContextSearchHolder.History">
            <summary>
            История значений для поиска
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigatorContextSearchHolder.Options">
            <summary>
            Опции для поиска
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavigatorContextSearchHolder.LastFoundItem">
            <summary>
            Номер строки (y) и столбца (x), которые были найдены при последнем поиске.
            Данное поле является точкой отсчёта для дальнейшего поиска
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.INavigatorContextSearch">
            <summary>
            Служба контекстного поиска в элементах управления Навигатора, содержащих список строк
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.INavigatorDataHelper">
            <summary>
            Служба для получения информации из ячеек элементов Навигатора, содержащих списки строк
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigatorDataHelper.GetAttributeValue(System.Int32)">
            <summary>
            Получить значение атрибута указанного типа из текущей (или первой выделенной) строки в элементе
            Навигатора. Источник атрибута (объект, связь, т.п.) не играет роли, значение будет получено
            у первой подходящей колонки
            </summary>
            <param name="attrID">Идентификатор типа атрибута</param>
            <returns>Значение, либо DBNull.Value (для пустого значения), либо null, 
            если колонка с указанным атрибутом не найдена</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigatorDataHelper.GetAttributeValue(System.Int32,Intermech.Kernel.Search.AttributeSourceTypes)">
            <summary>
            Получить значение атрибута указанного типа из текущей (или первой выделенной) строки в элементе
            Навигатора
            </summary>
            <param name="attrID">Идентификатор типа атрибута</param>
            <param name="attrSource">Источник атрибута</param>
            <returns>Значение, либо DBNull.Value (для пустого значения), либо null, 
            если колонка с указанным атрибутом не найдена</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigatorDataHelper.GetAttributeValue(System.Guid)">
            <summary>
            Получить значение атрибута указанного типа из текущей (или первой выделенной) строки в элементе
            Навигатора. Источник атрибута (объект, связь, т.п.) не играет роли, значение будет получено
            у первой подходящей колонки
            </summary>
            <param name="attrGuid">Глобальный идентификатор типа атрибута</param>
            <returns>Значение, либо DBNull.Value (для пустого значения), либо null, 
            если колонка с указанным атрибутом не найдена</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigatorDataHelper.GetAttributeValue(System.Guid,Intermech.Kernel.Search.AttributeSourceTypes)">
            <summary>
            Получить значение атрибута указанного типа из текущей (или первой выделенной) строки в элементе
            Навигатора
            </summary>
            <param name="attrGuid">Глобальный идентификатор типа атрибута</param>
            <param name="attrSource">Источник атрибута</param>
            <returns>Значение, либо DBNull.Value (для пустого значения), либо null, 
            если колонка с указанным атрибутом не найдена</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigatorDataHelper.GetRowData(System.Type)">
            <summary>
            Получить данные указанного формата (типа) из элемента, на основании которого сформирована текущая
            (первая выделенная) строка
            </summary>
            <param name="dataFormat">Тип запрашиваемых данных</param>
            <returns>Данные запрошенного типа или null</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.NavigatorContextSearchOptions">
            <summary>
            Опции для контекстного поиска в элементе управления Навигатора, содержащем список строк
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.None">
            <summary>
            Нет никаких настроек
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.Default">
            <summary>
            Стандартные опции для поиска
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.CaseSensitive">
            <summary>
            Поиск выполняется с учётом регистра букв
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.WholeWords">
            <summary>
            Поиск слов целиком
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.WithMask">
            <summary>
            Поиск с учётом маски (* / ?)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.WithRegularExpression">
            <summary>
            Маска - регулярное выражение
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.InActiveColumn">
            <summary>
            Поиск только в активной колонке
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.StartFromOrigin">
            <summary>
            Поиск начинается с начала (а не с текущей позиции)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.BackDirection">
            <summary>
            Направление поиска - назад (а не в обратную сторону)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorContextSearchOptions.FindAll">
            <summary>
            Поиск найдёт и отметит все подходящие записи
            (игнорируются флажки InActiveColumn и ForwardDirection). Если флажка нет, то
            будет выполняться цикличный поиск
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.SelectionOptions">
            <summary>
            Набор флажков, позволяющий фильтровать выбираемые в окне SelectionWindow узлы 
            (позволяет выбирать в окне узлы, содержащие определённые данные),
            скрывать и показывать дерево или панель закладок, управлять множественным выделением
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.Default">
            <summary>
            Позволяет выбирать любые узлы из дерева и списка, в окне доступны
            как дерево "Навигатора", так и панель закладок
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.HideViews">
            <summary>
            Скрывать панель закладок (правая часть окна)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.HideTree">
            <summary>
            Скрывать дерево "Навигатора" (левая часть окна)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.HideViewsToolbar">
            <summary>
            Скрывать панели управления в закладках
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.HideViewsGroupingBox">
            <summary>
            Скрывать панель группирования в закладках
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.HideViewsStatusBar">
            <summary>
            Скрывать статусные строки в закладках
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.SelectObjects">
            <summary>
            Выбирать в окне можно узлы, содержащие объекты
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.SelectObjectTypes">
            <summary>
            Выбирать в окне можно узлы, содержащие типы объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.SelectRelations">
            <summary>
            Выбирать в окне можно узлы, содержащие связи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.SelectRelationTypes">
            <summary>
            Выбирать в окне можно узлы, содержащие типы связей
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.SelectOtherNodes">
            <summary>
            Выбирать в окне можно любые другие типы узлов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.DisableSelectFromTree">
            <summary>
            Запретить выбирать в окне из дерева "Навигатора" (левая часть окна)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.DisableSelectFromViews">
            <summary>
            Запретить выбирать в окне из закладок (правая часть окна)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.DisableObjectListFilter">
            <summary>
            Запретить фильтр списков объектов в окне
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.DisableSelectAbstractTypes">
            <summary>
            Запретить в окне выбирать абстрактные типы объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.DisableMultiselect">
            <summary>
            Запретить в гриде и дереве множественный выбор элементов,
            допускается выбор только одного элемента
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.DisableTreeSorting">
            <summary>
            Запретить сортировку колонок в дереве Навигатора
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.ForceRebuildNavTree">
            <summary>
            Принудительно вызвать перестроение дерева, даже если форма 
            найдена в кэше  
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptions.ForceFilterObjectsByRule">
            <summary>
            Принудительно включить кнопку "Фильтровать списки объектов по текущему правилу подбора версий"
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.SelectionOptionsHolder">
            <summary>
            Класс, в котором хранятся опции для окна по выбору объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SelectionOptionsHolder.Options">
            <summary>
            Опции
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SelectionOptionsHolder.#ctor(Intermech.Interfaces.Client.SelectionOptions)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="options">Опции</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMainFormUpdate">
            <summary>
            Интерфейс, который реализует главная форма для того, 
            чтобы можно было вызвать её полную перерисовку
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMainFormUpdate.AllWindowsRefreshButtonTextVisible">
            <summary>
            Отображать ли текст у кнопки "Перечитать все окна"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMainFormUpdate.ReloadAllWindows(System.Object)">
            <summary>
            Метод вызывает принудительное обновление всех окон Навигатора
            </summary>
            <param name="sender">Отправитель события</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMainFormUpdate.CheckToolbarsBlocking">
            <summary>
            Проверить блокировку панелей инструментов, связанную с настройками роли
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMainFormUpdate.UpdateWindow">
            <summary>
            Обновить главную форму
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMainFormUpdate.CollectCurrentContextsHistory">
            <summary>
            Изучить текущее окно "Навигатора", добавить в историю контекстов все найденные контексты редактирования
            (метод будет удалён после реализации окнозависимых контекстов редактирования в IPS)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IMainFormUpdate.RefreshEditingContextToolbar">
            <summary>
            Обновить состояние тулбара "Контекст редактировани" в зависимости от текущего контекста
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMainFormUpdate.EditingContextHistory">
            <summary>
            История выбранных ранее контекстов редактирования
            (свойство будет удалено после реализации окнозависимых контекстов редактирования в IPS)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMainFormUpdate.MainForm">
            <summary>
            Возвращает объект главной формы приложения.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMainFormUpdate.MainFormScreen">
            <summary>
            Возвращает экран главной формы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMainFormUpdate.PrimaryWorkingArea">
            <summary>
            Возвращает основную рабочую область, в которой размещается главное окно приложения
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMainFormUpdate.ScaleFactor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMainFormUpdate.ApplicationHasOpenedModalForms">
            <summary>
            Открыты ли модальные окна у приложения
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.MultiscreenHelper">
            <summary>
            Вспомогательный статический класс, помогающий при работе на системе с несколькими рабочими столами
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MultiscreenHelper._mainForm">
            <summary>
            Ссылка на интерфейс, позволяющий обращаться к главной форме
            (есть вероятность получить значение null)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MultiscreenHelper.MainForm">
            <summary>
            Ссылка на интерфейс, позволяющий обращаться к главной форме
            (есть вероятность получить значение null)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MultiscreenHelper.MainFormScreen">
            <summary>
            Возвращает экран главной формы или null
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.MultiscreenHelper.PrimaryWorkingArea">
            <summary>
            Возвращает основную рабочую область, в которой размещается главное окно приложения.
            Если недоступно главное окно, свойство вернёт рабочую область основного рабочего стола
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DefaultCommandHandler">
            <summary>
            Перечислитель указывает, чья команда используется в IDefaultCommand - контекстного меню или ICommandManager
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DefaultCommandHandler.ICommandManager">
            <summary>
            Команда обрабатывается ICommandManager
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DefaultCommandHandler.ContectMenu">
            <summary>
            Команда обрабатывается контекстным меню
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IDefaultCommand">
            <summary>
            Интерфейс команды по умолчанию для типа объекта 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IDefaultCommand.ObjectTypeID">
            <summary>
            Тип объекта, для которого назначается команда по умолчанию
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IDefaultCommand.DefaultCommandName">
            <summary>
            Имя команды по умолчанию
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IDefaultCommand.CommandHandler">
            <summary>
            Чья команда - контекстного меню или ICommandManager
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IDefaultCommands4ObjTypes">
            <summary>
            Интерфейс коллекции команд по умолчанию для указанных типов объектов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IDefaultCommands4ObjTypes.Item(System.Int32,System.Boolean)">
            <summary>
            Найти команду по умолчанию для указанного типа объекта.
            Если команда не найдена у данного типа объектов, то изучается весь список родительских
            типов объектов.
            Если команда не была найдена, то вернёт null или
            системную команду по умолчанию, если GetSystemDefaultOnError = true.
            </summary>
            <param name="ObjectTypeID">Тип объекта, для которого отыскивается команда по умолчанию</param>
            <param name="GetSystemDefaultOnError">Если указать true, то в случае, если не будет найдена команда по умолчанию, 
            будет возвращена системная команда по умолчанию для указанного типа объектов</param>
            <returns>Команда по умолчанию для указанного типа объектов или null</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.IDefaultCommands4ObjTypes.Item(System.Guid,System.Boolean)">
            <summary>
            Найти команду по умолчанию для указанного типа объекта.
            Если команда не найдена у данного типа объектов, то изучается весь список родительских
            типов объектов.
            Если команда не была найдена, то вернёт null или
            системную команду по умолчанию, если GetSystemDefaultOnError = true.
            </summary>
            <param name="ObjectTypeGuid">Тип объекта, для которого отыскивается команда по умолчанию</param>
            <param name="GetSystemDefaultOnError">Если указать true, то в случае, если не будет найдена команда по умолчанию, 
            будет возвращена системная команда по умолчанию для указанного типа объектов</param>
            <returns>Команда по умолчанию для указанного типа объектов или null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IDefaultCommands4ObjTypes.AddDefaultCommand(System.Int32,System.String,Intermech.Interfaces.Client.DefaultCommandHandler)">
            <summary>
            Добавить команду по умолчанию для указанного типа объекта
            </summary>
            <param name="ObjectTypeID">Тип объекта, для которого назначается команда по умолчанию</param>
            <param name="DefaultCommandName">Имя команды по умолчанию</param>
            <param name="CommandHandler">Чья команда - контекстного меню или ICommandManager</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IDefaultCommands4ObjTypes.RemoveDefaultCommand(System.Int32)">
            <summary>
            Удалить команду по умолчанию для указанного типа объекта
            </summary>
            <param name="ObjectTypeID">Тип объекта, для которого удаляется команда по умолчанию</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IHotKeysCommand">
            <summary>
            Интерфейс, позволяющий определить, какая команда назначена комбинации "горячих клавиш"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IHotKeysCommand.Shortcut">
            <summary>
            Комбинация "горячих клавиш", которой назначена определённая команда
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IHotKeysCommand.Command">
            <summary>
            Название команды (уникальное в пределах всей системы строковое значение)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IHotKeysCommand.Handler">
            <summary>
            Обработчик указанной команды - контекстное меню или менеджер команд
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IHotKeysManager">
            <summary>
            Интерфейс, позволяющий назначать комбинациям "горячих клавиш" определённые команды
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IHotKeysManager.Item(System.String)">
            <summary>
            Отыскать по указанному имени описание команды
            </summary>
            <param name="command">Уникальное в пределах системы название команды</param>
            <returns>Описание команды</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.IHotKeysManager.Item(System.Windows.Forms.Keys)">
            <summary>
            Отыскать по указанной комбинации "горячих клавиш" описания команд
            </summary>
            <param name="shortcut">Комбинация "горячих клавиш"</param>
            <returns>Описания команд</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IHotKeysManager.RegisterHotKeysCommand(System.Windows.Forms.Keys,System.String,Intermech.Interfaces.Client.DefaultCommandHandler)">
            <summary>
            Зарегистрировать (или перекрыть существующую регистрацию) комбинацию "горячих клавиш" длв выполнения определённой команды
            </summary>
            <param name="shortcut">Комбинация "горячих клавиш", которой назначена определённая команда</param>
            <param name="command">Название команды (уникальное в пределах всей системы строковое значение)</param>
            <param name="handler">Обработчик указанной команды - контекстное меню или менеджер команд</param>
            <returns>Ссылка на интерфейс, связывающий "горячие клавиши" с определённой командой</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IHotKeysManager.UnregisterCommand(System.String)">
            <summary>
            Удалить назначенные "горячие клавиши" указанной команде
            </summary>
            <param name="command">Уникальная строковая команда</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IHotKeysManager.UnregisterHotKeys(System.Windows.Forms.Keys)">
            <summary>
            Удалить команду, назначенную указанным "горячим клавишам"
            </summary>
            <param name="shortcut">Комбинация "горячих клавиш"</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IHotKeysManager.UnregisterHotKeys">
            <summary>
            Удалить все настройки горячих клавиш
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.MRUConsts">
            <summary>
            Константы для поля Tag в элементы IMRUItem
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.MRUConsts.CreateObjByType">
            <summary>
            Элемент IMRUItem предназначен для меню "Создать" - "Объект типа ..."
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IMRUItem">
            <summary>
            Элемент коллекции "Наиболее часто используемые"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMRUItem.LastAccess">
            <summary>
            Дата и время последнего доступа (в UTC-формате)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMRUItem.HintCount">
            <summary>
            Количество "попаданий" в элемент
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMRUItem.Caption">
            <summary>
            Текстовое пояснение элемента
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMRUItem.Value">
            <summary>
            Основное значение элемента
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IMRUItem.Tag">
            <summary>
            Дополнительное значение элемента
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICreateObjByTypeMRU">
            <summary>
            Интерфейс, помогающий управлять списком команд по созданию типов объектов в подменю "Файл\Создать"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICreateObjByTypeMRU.MaxCapacity">
            <summary>
            Максимальная ёмкость списка элементов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Item(System.Int32)">
            <summary>
            Элемент коллекции
            </summary>
            <param name="index">Индекс элемента</param>
            <returns>Элемент с указанным индексом</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Count">
            <summary>
            Количество элементов в коллекции
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Add(System.String,System.Object,System.Object)">
            <summary>
            Добавить элемент в коллекцию (с учётом значения MaxCapacity)
            </summary>
            <param name="Caption">Текстовое пояснение элемента</param>
            <param name="Value">Основное значение элемента</param>
            <param name="Tag">Дополнительное значение элемента</param>
            <returns>Вновь добавленный элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Add(Intermech.Interfaces.Client.IMRUItem)">
            <summary>
            Добавить элемент в коллекцию (с учётом значения MaxCapacity)
            </summary>
            <param name="value">Элемент, который требуется добавить</param>
            <returns>Вновь добавленный элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Clear">
            <summary>
            Очистить всю коллекцию элементов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Contains(Intermech.Interfaces.Client.IMRUItem)">
            <summary>
            Проверить наличие в списке указанного элемента
            </summary>
            <param name="value">Элемент</param>
            <returns>true, если элемент найден</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.IndexOf(Intermech.Interfaces.Client.IMRUItem)">
            <summary>
            Отыскать порядковый номер указанного элемента в коллекции
            </summary>
            <param name="value">Элемент</param>
            <returns>-1, если элемент не найден</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.IndexOf(System.Object)">
            <summary>
            Отыскать порядковый номер указанного значения (IMRUItem.Value, не равно null!!!) в коллекции
            </summary>
            <param name="value">Значение (IMRUItem.Value) (не равно null!!!)</param>
            <returns>-1, если элемент не найден</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Insert(System.Int32,Intermech.Interfaces.Client.IMRUItem)">
            <summary>
            Вставить в коллекцию элемент
            </summary>
            <param name="index">Индекс для добавляемого элемента</param>
            <param name="item">Добавляемый элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Remove(Intermech.Interfaces.Client.IMRUItem)">
            <summary>
            Удалить элемент из коллекции
            </summary>
            <param name="value">Элемент, который требуется удалить</param>
            <returns>Позиция удалённого элемента</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.RemoveAt(System.Int32)">
            <summary>
            Удалить элемент с указанным индексом
            </summary>
            <param name="index">Индекс удаляемого элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Sort">
            <summary>
            Выполнить сортировку
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.Sort(System.Collections.Generic.IComparer{Intermech.Interfaces.Client.IMRUItem})">
            <summary>
            Выполнить сортировку с указанным интерфейсом сравнения
            </summary>
            <param name="comparer">Интерфейс для сравнения элементов IMRUItem</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.ToArray">
            <summary>
            Вернуть массив элементов IMRUItem из коллекции
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.LoadMRU(System.Int64)">
            <summary>
            Загрузить список MRU из настроек пользователя
            </summary>
            <param name="UserID">Идентификатор пользователя</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ICreateObjByTypeMRU.SaveMRU(System.Int64)">
            <summary>
            Сохранить список MRU в настройки указанного пользователя
            </summary>
            <param name="UserID">Идентификатор пользователя</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IWellKnownWindowsOpenService">
            <summary>
            Сервис, позволяющий открывать именованные окна Навигатора
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IWellKnownWindowsOpenService.RegisterWindowOpeningHandler(System.String,System.EventHandler)">
            <summary>
            Зарегистрировать (перекрыть регистрацию) именованное окно Навигатора и метод для его корректного открытия
            </summary>
            <param name="wellKnownName">Уникальное в пределах Навигатора имя окна (WellKnownName)</param>
            <param name="handler">Метод, позволяющий открыть указанное именованное окно</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IWellKnownWindowsOpenService.UnregisterWindowOpeningHandler(System.String)">
            <summary>
            Удалить регистрацию метода для корректного открытия именованного окна Навигатора
            </summary>
            <param name="wellKnownName">Уникальное в пределах Навигатора имя окна (WellKnownName)</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IWellKnownWindowsOpenService.OpenWellKnownWindow(System.String)">
            <summary>
            Открыть именованное окно Навигатора
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NavigatorWindowCaptionEventHandler">
            <summary>
            Делегат события, собирающего информацию о заголовке окна "Навигатора"
            </summary>
            <param name="sender">Отправитель</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.NavigatorCaptionVersionsMode">
            <summary>
            Способ формирования заголовков в строках гридов и деревьев для версионных объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorCaptionVersionsMode.Caption">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorCaptionVersionsMode.BracketCaption">
            <summary>
            [№] Заголовок
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorCaptionVersionsMode.CaptionBracket">
            <summary>
            Заголовок [№]
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorCaptionVersionsMode.VersionBracketCaption">
            <summary>
            [Версия №] Заголовок
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorCaptionVersionsMode.CaptionVersionBracket">
            <summary>
            Заголовок [версия №]
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorCaptionVersionsMode.CaptionVersion">
            <summary>
            Заголовок, версия 1
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NavigatorWindowCaptionsMode">
            <summary>
            Способ формирования заголовка окна "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowCaptionsMode.Default">
            <summary>
            Стандартный заголовок
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowCaptionsMode.TextAndVersion">
            <summary>
            Стандартный заголовок + версия (если в корне дерева отображается объект)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowCaptionsMode.ExtraTexts">
            <summary>
            Стандартный заголовок + дополнительная информация
            (будут опрашиваться подписчики NavigatorWindowCaptionsHelper.OnGetNavigatorWindowCaption)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NavigatorWindowBaseVersionsMode">
            <summary>
            Способ формирования отображения информации о базовой версии
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowBaseVersionsMode.Hidden">
            <summary>
            Стандартный заголовок
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowBaseVersionsMode.ShowBaseVersions">
            <summary>
            Отображать значки для базовых версий
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowBaseVersionsMode.ShowOtherVersions">
            <summary>
            Отображать значки для остальных версий
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowBaseVersionsMode.ShowAllVersions">
            <summary>
            Отображать значки для всех версий
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NavigatorWindowCaptionsHelper">
            <summary>
            Вспомогательный статический класс для работы с заголовками окон "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowCaptionsHelper.OnGetNavigatorWindowCaption">
            <summary>
            Обработчик события, собирающего информацию о заголовке окна "Навигатора"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NavigatorWindowCaptionsHelper.GetNavigatorWindowCaption(System.Object,Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs)">
            <summary>
            Собрать информацию о заголовке окна "Навигатора"
            </summary>
            <param name="sender">Отправитель события</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs">
            <summary>
            Аргументы события, собирающего информацию о заголовке окна "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs._rootDescriptor">
            <summary>
            Корневой дескриптор, на основании которого построено содержимое окна
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.RootDescriptor">
            <summary>
            Корневой дескриптор, на основании которого построено содержимое окна
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs._services">
            <summary>
            Контейнер сервисов, которые используются в окне
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.Services">
            <summary>
            Контейнер сервисов, которые используются в окне
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.Text">
            <summary>
            Заголовок окна
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.ExtraText">
            <summary>
            Дополнительная информация для заголовка
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.TextHint">
            <summary>
            Текстовая подсказка для заголовка окна
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.#ctor(Intermech.Navigator.Interfaces.IDescriptor,System.IServiceProvider,System.String,System.String,System.String)">
            <summary>
            Создать аргументы для события NavigatorWindowCaptionEventHandler
            </summary>
            <param name="rootDescriptor">Корневой дескриптор, на основании которого построено содержимое окна</param>
            <param name="services">Контейнер сервисов, которые используются в окне</param>
            <param name="text">Заголовок окна</param>
            <param name="extraText">Дополнительная информация для заголовка</param>
            <param name="textHint">Текстовая подсказка для заголовка окна</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.#ctor(System.Object)">
            <summary>
            Создать аргументы для события NavigatorWindowCaptionEventHandler, заполнить
            аргументы из указанного объекта-источника
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.NavigatorWindowCaptionEventArgs.Clone">
            <summary>
            Создать точную копию экземпляра класса
            </summary>
            <returns>Точная копия экземпляра класса</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IEditingContextNavWindow">
            <summary>
            Привязка контекстов редактирования к окну "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IEditingContextNavWindow.EditingContextID">
            <summary>
            Идентификатор текущего контекста редактирования
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IEditingContextNavWindow.EditingContextMode">
            <summary>
            Режим работы текущего контекста редактирования
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IEditingContextNavWindow.History">
            <summary>
            Список контекстов редактирования, которые будут отображаться в комбо-боксе (история выбранных контекстов)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NavigatorLinksMode">
            <summary>
            Способ обработки гиперссылок в элементах Навигатора
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorLinksMode.None">
            <summary>
            Стандартный заголовок
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorLinksMode.LeftMouseClick">
            <summary>
            Открывать с помощью левой кнопки мыши
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorLinksMode.MiddleMouseClick">
            <summary>
            Открывать с помощью средней кнопки мыши или её колёсика
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.WellKnownWindowsNames">
            <summary>
            Класс содержит имена нескольких стандартных окон Навигатора.
            Их можно использовать в службе IWellKnownWindowsOpenService
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.WellKnownWindowsNames.Navigator">
            <summary>
            Уникальное имя стандартного окна "Навигатор"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.WellKnownWindowsNames.Favorites">
            <summary>
            Уникальное имя стандартного окна "Избранное"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.WellKnownWindowsNames.Desktop">
            <summary>
            Уникальное имя стандартного окна "Рабочий стол"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.WellKnownWindowsNames.RecentObjects">
            <summary>
            Уникальное имя стандартного окна "Недавние объекты"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.WellKnownWindowsNames.CompositionsAutosortRules">
            <summary>
            Уникальное имя стандартного окна "Редактор правил автоматической сортировки и отображения составов"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.WellKnownWindowsNames.DatabaseStatistics">
            <summary>
            Уникальное имя для стандартного окна "Статистика запросов"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.WellKnownWindowsNames.DatabaseAdministrator">
            <summary>
            Уникальное имя для стандартного окна "Администратор базы данных"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.WellKnownWindowsNames.DatabaseConfigurator">
            <summary>
            Уникальное имя для стандартного окна "Конфигуратор базы данных"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.WellKnownWindowsNames.Portal">
            <summary>
            Уникальное имя для стандартного окна "WEB портал"
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.INavWindowSettings">
            <summary>
            Интерфейс позволяет хранить различные настройки для элементов управления,
            находящихся внутри окон "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INavWindowSettings.Item(System.Object)">
            <summary>
            Считать или установить настройки с указанным ключом
            </summary>
            <param name="key">Ключ настроек</param>
            <returns>Настройки с указанным ключом</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavWindowSettings.Reset">
            <summary>
            Удалить все настройки
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IRecentObjectsService">
            <summary>
            Служба, позволяющая управлять недавними объектами
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IRecentObjectsService.Add(System.Int64,Intermech.DataFormats.ObjectAction,System.DateTime)">
            <summary>
            Добавить/заменить существующий объект
            (метод потокобезопасен)
            </summary>
            <param name="objectID">ID версии объекта</param>
            <param name="action">Действие, выполненное над объектом</param>
            <param name="date">Дата и время (UTC) выполнения этого действия</param>
            <returns>Вновь добавленный или существующий объект</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IRecentObjectsService.Add(System.Int64[],Intermech.DataFormats.ObjectAction,System.DateTime)">
            <summary>
            Добавить/заменить существующие объекты
            (метод потокобезопасен)
            </summary>
            <param name="objectVersionIds">ID версий объектов</param>
            <param name="action">Действие, выполненное над объектами</param>
            <param name="date">Дата и время (UTC) выполнения этого действия</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IRecentObjectsWindow">
            <summary>
            Ссылка на окно "Недавние объекты"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IRecentObjectsWindow.Update">
            <summary>
            Обновить содержимое окна
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IRecentObjectsWindow.Notify">
            <summary>
            Обновить содержимое окна посредством уведомления
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ISimpleExcelReports">
            <summary>
            Интерфейс сервиса, позволяющего генерировать простые отчёты в Excel, используя COM (позднее связывание)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISimpleExcelReports.GetExcelInstance">
            <summary>
            Получить ссылку на существующий экземпляр Excel или запустить новый
            </summary>
            <returns>Ссылка на существующий или вновь запущенный экземпляр Excel</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISimpleExcelReports.GetExcelInstance(System.Object)">
            <summary>
            Получить ссылку на существующий экземпляр Excel или запустить новый, проверить ранее полученную ссылку (жив объект или недоступен)
            </summary>
            <param name="instance">Ранее полученная ссылка или null</param>
            <returns>Ссылка на существующий или вновь запущенный экземпляр Excel</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISimpleExcelReports.GetExcelInstance(System.Object,System.String)">
            <summary>
            Получить ссылку на существующий экземпляр Excel или запустить новый, проверить ранее полученную ссылку (жив объект или недоступен)
            </summary>
            <param name="instance">Ранее полученная ссылка или null</param>
            <param name="caption">Если значение не пустое, будет установлено как заголовок приложения Excel</param>
            <returns>Ссылка на существующий или вновь запущенный экземпляр Excel</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISimpleExcelReports.ReleaseExcelInstance(System.Object)">
            <summary>
            Освободить ссылку на Excel
            </summary>
            <param name="instance">Ссылка на экземпляр Excel</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISimpleExcelReports.SetVisible(System.Object,System.Boolean)">
            <summary>
            Установить видимость указанному экземпляру Excel
            </summary>
            <param name="instance">Ссылка на экзезмпляр Excel</param>
            <param name="visible">Видимость</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ISimpleExcelReports.CreateWorkbook(System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            Создать новую книгу, указать название её первой страницы, задать название книги, имя автора и компанию
            </summary>
            <param name="instance">Ссылка на существующий экземпляр Excel</param>
            <param name="caption">Название первой страницы в новой книге</param>
            <param name="title">Название книги</param>
            <param name="author">Имя автора</param>
            <param name="company">Компания</param>
            <returns>Ссылка на новую книгу</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.ActivateViewEventArgs">
            <summary>
            Аргументы события, связанного с перестроением списка закладок в менеджере
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ActivateViewEventArgs._oldSelectedNodes">
            <summary>
            Список уникальных идентификаторов элементов пространства навигации, на основании
            которых были построены старые закладки
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ActivateViewEventArgs._newSelectedNodes">
            <summary>
            Список уникальных идентификаторов элементов пространства навигации, на основании
            которых будут построены новые закладки
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ActivateViewEventArgs._prevViewName">
            <summary>
            Имя старой закладки
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ActivateViewEventArgs._nextViewName">
            <summary>
            Имя новой закладки
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ActivateViewEventArgs._currActiveView">
            <summary>
            Ссылка на текущую активную закладку (которая может измениться)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ActivateViewEventArgs._newViewName">
            <summary>
            Имя закладки, которая должна стать активной вместо закладки NextViewName
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ActivateViewEventArgs.#ctor(System.Collections.Generic.List{Intermech.Navigator.Interfaces.INodeID},System.Collections.Generic.List{Intermech.Navigator.Interfaces.INodeID},System.String,System.String,Intermech.Navigator.Views.IView)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="oldSelectedNodes">Список уникальных идентификаторов элементов пространства навигации, на основании
            которых были построены старые закладки</param>
            <param name="newSelectedNodes">Список уникальных идентификаторов элементов пространства навигации, на основании
            которых будут построены новые закладки</param>
            <param name="prevViewName">Имя старой закладки</param>
            <param name="nextViewName">Имя новой закладки</param>
            <param name="currActiveView">Имя закладки, которая должна стать активной вместо закладки NextViewName</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ActivateViewEventArgs.OldSelectedNodes">
            <summary>
            Список уникальных идентификаторов элементов пространства навигации, на основании
            которых были построены старые закладки
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ActivateViewEventArgs.NewSelectedNodes">
            <summary>
            Список уникальных идентификаторов элементов пространства навигации, на основании
            которых будут построены новые закладки
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ActivateViewEventArgs.PrevViewName">
            <summary>
            Имя старой закладки
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ActivateViewEventArgs.NextViewName">
            <summary>
            Имя новой закладки
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ActivateViewEventArgs.CurrActiveView">
            <summary>
            Ссылка на текущую активную закладку (которая может измениться)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ActivateViewEventArgs.NewViewName">
            <summary>
            Имя закладки, которая должна стать активной вместо закладки NextViewName
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ActivateViewEventHandler">
            <summary>
            Делегат для события, связанного с перестроением списка закладок в менеджере
            </summary>
            <param name="sender">Отправитель события (менеджер закладок)</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.IViewsManagerService">
            <summary>
            Интерфейс службы, позволяющей влиять на работу менеджеров закладок "Навигатора"
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IViewsManagerService.OnActivateView">
            <summary>
            Событие, вызываемое после того, как перестроятся закладки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IViewsManagerService.FireActivateViewEvent(System.Object,Intermech.Interfaces.Client.ActivateViewEventArgs)">
            <summary>
            Сгенерировать событие (разослать уведомление всем подписчикам)
            </summary>
            <param name="sender">Отправитель события (менеджер закладок)</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs">
            <summary>
            Аргументы события "ObjectsCheckOutEventHandler"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs._sourceVersions">
            <summary>
            Список исходных версий объектов, которые требуется взять на редактирование
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs._resultVersions">
            <summary>
            Список версий объектов для редактирования
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs.Handled">
            <summary>
            Выполнена ли обработка события
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs.Rollback">
            <summary>
            Если значение флага установить в true, служба попытается отменить все изменения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs.Cancel">
            <summary>
            Пользователь хочет отменить создание версии. При этом НЕ НАДО выдавать исключение
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs.SourceVersions">
            <summary>
            Список исходных версий объектов, которые требуется взять на редактирование
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs.ResultVersions">
            <summary>
            Список версий объектов для редактирования
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs.#ctor">
            <summary>
            Создать пустой экземпляр класса
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectsCheckOutEventArgs.#ctor(System.Collections.Generic.List{Intermech.Interfaces.ObjectCheckOutVersionDescription},System.Collections.Generic.List{Intermech.Interfaces.ObjectCheckOutVersionDescription})">
            <summary>
            Создать заполненные аргументы события "ObjectsCheckOutEventHandler"
            </summary>
            <param name="sourceVersions">Список исходных версий объектов, которые требуется взять на редактирование</param>
            <param name="resultVersions">Список версий объектов для редактирования</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectsCheckOutEventHandler">
            <summary>
            Обработчик события "ObjectsCheckOutEventHandler"
            </summary>
            <param name="sender">Отправитель</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectsSelectionOptions">
            <summary>
            Опции, применяемые при работе с коллекциями объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectsSelectionOptions.None">
            <summary>
            Отключить фильтрацию версий объектов, применяемых в контекстах редактирования
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ObjectsSelectionOptionsHolder">
            <summary>
            Контейнер опций, применяемых при работе с коллекциями объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ObjectsSelectionOptionsHolder._options">
            <summary>
            Опции, применяемые при работе с коллекциями объектов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ObjectsSelectionOptionsHolder.Options">
            <summary>
            Опции, применяемые при работе с коллекциями объектов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ObjectsSelectionOptionsHolder.#ctor(Intermech.Interfaces.Client.ObjectsSelectionOptions)">
            <summary>
            Создать контейнер опций
            </summary>
            <param name="options">Опции, применяемые при работе с коллекциями объектов</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.UISettings">
            <summary>
            Настройки пользовательского интерфейса
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.FirstTimeRunning">
            <summary>
            Первый запуск IPS (либо запуск с очищенной конфигурацией пользователя)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.RestoreDocumentWindows">
            <summary>
            Режим восстановления сохранённых окон
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.FullScreenMode">
            <summary>
            Полноэкранный режим
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.AutoupdateNonActiveWindows">
            <summary>
            Обновлять неактивные окна
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.DragDropNotofications">
            <summary>
            Если включен этот режим, то при вставке объектов будут рассылаться управляемые события
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.AskOnExit">
            <summary>
            Запрос на закрытие приложения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.ShowVersionIDs">
            <summary>
            Показывать идентификаторы версий объектов в заголовках
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.ShowShortAttributeNames">
            <summary>
            Показывать краткие наименования атрибутов в заголовках столбцов в списках "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.ShowSplash">
            <summary>
            Показывать заставку при старте приложения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.RunDefaultAction">
            <summary>
            Вызывать действия по умолчанию для 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.AutoCheckOutNewObjects">
            <summary>
            Автоматически брать на изменение вновь созданные объекты
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.NavigatorWindowCaptionsMode">
            <summary>
            Режим отображения заголовков окон "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.ShowVersionsLog">
            <summary>
            Показывать ли протокол подбора версий в подсказках к значкам статусов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.ShowGridChkoutColumn">
            <summary>
            Показывать ли в гридах с объектами дополнительную колонку с версией объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.ShowTreeChkoutColumn">
            <summary>
            Показывать ли в деревьях с объектами дополнительную колонку с версией объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.NavigatorWindowBaseVersionsMode">
            <summary>
            Способ отображения информации о версиях объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.AlwaysShowFirstTab">
            <summary>
            Всегда переключаться на первые закладки в Навигаторе
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.UISettings.NavigatorLinksMode">
            <summary>
            Способ обработки гиперссылок в элементах Навигатора
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UISettings.ShowUnitedSelections">
            <summary>
            Отображать объединенные выборки
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UISettings.ShowFavoritesFolder">
            <summary>
            Отображать папку Избранное в Навигаторе
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UISettings.SaveShowContextVersionsState">
            <summary>
            Сохранять состояние "Показывать контекстные версии объектов"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.UISettings.#cctor">
            <summary>
            Статический конструктор
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DocumentRestoreMode">
            <summary>
            Способ восстановления сохранённых окон
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DocumentRestoreMode.None">
            <summary>
            Не восстанавливать
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DocumentRestoreMode.CreateProxy">
            <summary>
            Создавать прокси
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DocumentRestoreMode.Restore">
            <summary>
            Восстанавливать
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NotificationServiceMode">
            <summary>
            Режим обработки сообщений службы уведомлений
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationServiceMode.Default">
            <summary>
            Обрабатывать все сообщения службы уведомлений
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationServiceMode.RefreshWindows">
            <summary>
            Обновлять все окна Навигатора, если много сообщений
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationServiceMode.NotifyUser">
            <summary>
            Не обновлять ничего, только уведомлять пользователя
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.OptimizationSettings">
            <summary>
            Оптимизация системы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.MinEventsQuantity">
            <summary>
            Минимальное количество уведомлений (минимальный предел)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.MaxEventsQuantity">
            <summary>
            Максимальное количество уведомлений (максимальный предел)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.HideNavigatorReadAllButtonDefault">
            <summary>
            Значение по-умолчанию для настройки "Скрывать кнопку "Читать все" навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.BackgroundTreeTasks">
            <summary>
            Выполнять фоновую проверку дочерних узлов в деревьях
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.spellCheck">
            <summary>
            Выполнять проверку орфографии
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.spellCheckNotCyr">
            <summary>
            Выполнять проверку орфографии
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.FullCompositionsSorting">
            <summary>
            Полная сортировка составов согласно текущему правилу отображения и сортировки составов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.FileZipExclusions">
            <summary>
            Не сжимать файлы указанных типов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.NotificationServiceMode">
            <summary>
            Режим обработки сообщений службы уведомлений
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.OptimizationSettings.MaxEventsCount">
            <summary>
            Максимально допустимое количество уведомлений, превышение которого обновляет все окна вместо их обработки
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.OptimizationSettings.HideNavigatorReadAllButton">
            <summary>
            Скрывать кнопку "Читать все" навигатора
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.OptimizationSettings.#cctor">
            <summary>
            Статический конструктор
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NavigatorRelationCommand">
            <summary>
            Код выполненной команды "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorRelationCommand.Unknown">
            <summary>
            Команда не указана
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorRelationCommand.CopyPaste">
            <summary>
            Выполнена цепочка команд "Копировать" - "Вставить" либо "Копировать связи - вставить"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorRelationCommand.CutPaste">
            <summary>
            Выполнена цепочка команд "Вырезать" - "Вставить"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorRelationCommand.InsertIn">
            <summary>
            Выполнена команда "Добавить в состав"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NavigatorRelationCommand.CreateIn">
            <summary>
            Выполнена команда "Создать в составе"
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IEventArgsItemsCount">
            <summary>
            Интерфейс позволяет службе уведомлений уточнять количество заданий в аргументах
            (например, количество созданных/изменённых/удалёных объектов, т.п.).
            Используется для оптимизации обработки уведомлений
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IEventArgsItemsCount.ItemsCount">
            <summary>
            Количество заданий в аргументах
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IEventArgsOptimizationMode">
            <summary>
            Интерфейс аргументов службы уведомлений, позволяющий проверять корректность применяемой оптимизации
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEventArgsOptimizationMode.GetSupportedOptimization(Intermech.Interfaces.Client.NotificationServiceMode)">
            <summary>
            Проверить, поддерживается ли указанный режим оптимизации аргументами события и,
            в случае необходимости, вернуть максимальный уровень поддерживаемой оптимизации
            </summary>
            <param name="mode">Запрашиваемый режим оптимизации</param>
            <returns>Допустимый режим оптимизации</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.INotificationServiceStatesHolder">
            <summary>
            Интерфейс, предоставляющий дополнительную информацию обработчикам событий от INotificationService
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.INotificationServiceStatesHolder.States">
            <summary>
            Флажки, по которым обработчики событий от INotificationService могут
            выполнять какие-то дополнительные проверки перед обработкой событий
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NodesInsertPosition">
            <summary>
            Куда добавлять новые узлы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NodesInsertPosition.Start">
            <summary>
            Узлы добавляются в начало списка
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NodesInsertPosition.Before">
            <summary>
            Узлы добавляются перед указанным узлом
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NodesInsertPosition.After">
            <summary>
            Узлы добавляются после указанного узла
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NodesInsertPosition.End">
            <summary>
            Узлы добавляются в конец списка
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NotificationEventHandler">
            <summary>
            Обработчик каждого уведомления является делегатом типа NotificationEventHandler.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NotificationEventNames">
            <summary>
            Названия событий службы уведомлений
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.AttributeCreated">
            <summary>
            Уведомление "AttributeCreated" - созданы новые атрибуты
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.AttributeChanged">
            <summary>
            Уведомление "AttributeChanged" - атрибуты изменены
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.AttributeRemoved">
            <summary>
            Уведомление "AttributeRemoved" - атрибуты удалены
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.Attribute4ObjTypeEvent">
            <summary>
            Уведомление "Attribute4ObjTypeEvent" - добавлены, изменены или удалены атрибуты для типа объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.Attribute4RelTypeEvent">
            <summary>
            Уведомление "Attribute4RelTypeEvent" - добавлены, изменены или удалены атрибуты для типа связи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectTypesCreated">
            <summary>
            Уведомление "ObjectTypesCreated" - типы объектов созданы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectTypesChanged">
            <summary>
            Уведомление "ObjectTypesChanged" - свойства типов объектов изменены
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectTypesRemoved">
            <summary>
            Уведомление "ObjectTypesRemoved" - типы объектов удалены
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectsCreated">
            <summary>
            Уведомление "ObjectsCreated" - объекты созданы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectsChanged">
            <summary>
            Уведомление "ObjectsChanged" - объекты изменены
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ManagedObjectsCreated">
            <summary>
            Уведомление "ManagedObjectsCreated" - объекты созданы, управляемое событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectsRemoved">
            <summary>
            Уведомление "ObjectsRemoves" - объекты удалены
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectsCheckedIn">
            <summary>
            Уведомление "ObjectsCheckedIn" - объекты возвращены в архив
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.BeforeObjectsCheckedIn">
            <summary>
            Уведомление "BeforeObjectsCheckedIn" - ПЕРЕД возвращением объектов в архив
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectsChangesCancelled">
            <summary>
            Уведомление "ObjectsChangesCancelled" - отмена изменений в объектах
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectsCheckedOut">
            <summary>
            Уведомление "ObjectsCheckedOut" - объекты взяты на изменение
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.RelationsCreated">
            <summary>
            Уведомление "RelationsCreated" - связи созданы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.RelationsChanged">
            <summary>
            Уведомление "RelationsChanged" - связи изменены
            </summary>
            <remarks>
            Внимание! Данное событие служит только для обновления атрибутов связей.
            Если произошла замена дочернего или родительского объекта необходимо отправить
            последовательно два события RelationsRemoved и RelationsCreated
            </remarks>>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ManagedRelationsCreated">
            <summary>
            Уведомление "ManagedRelationsCreated" - связи созданы, управляемое событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.RelationsRemoved">
            <summary>
            Уведомление "RelationsRemoves" - связи удалены
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ManagedRelationsInsert">
            <summary>
            Уведомление "ManagedRelationsInsert" - связи созданы, 
            требуется добавить их в определённую позицию в дереве, 
            управляемое событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.SubstitutesChanged">
            <summary>
            /// Уведомление "SubstitutesChanged" - изменены связи, участвующие в допустимых заменителях
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.SortedRelationsChanged">
            <summary>
            <para>Уведомление "SortedRelationsChanged" - изменены связи, имеющие атрибут "Сортировка"</para>
            <para>Для корректной обработки требуется наличие всех ид. версии родительских объектов для измененных связей 
            в списке RelationID рассылаемого события</para>
            </summary>        
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.FiltrationChanged">
            <summary>
            Уведомление "FiltrationChanged" - изменены настройки фильтрации состава по правилам подбора версий
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectsFiltrationChanged">
            <summary>
            Уведомление "ObjectsFiltrationChanged" - изменены настройки фильтрации списков объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ObjectTypeAndRelationFiltrationChanged">
            <summary>
            Уведомление "ObjectTypeAndRelationFiltrationChanged" - изменены настройки фильтрации типов объектов и связей
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ApplicationClosing">
            <summary>
            Уведомление "ApplicationClosing" - приложение завершает свою работу
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ApplicationClosed">
            <summary>
            Уведомление "ApplicationClosed" - приложение будет закрыто
            </summary>
            <remarks>Отличается от ApplicationClosing тем что закрытие окончательное и не может быть отменето</remarks>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.RecentObjectsChanged">
            <summary>
            Уведомление "RecentObjectsChanged" - изменился список недавних объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.InternalRecentObjectsChanged">
            <summary>
            Уведомление "InternalRecentObjectsChanged" - изменился список недавних объектов (!НЕ ИСПОЛЬЗОВАТЬ!)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.DragDrop">
            <summary>
            Уведомление "DragDrop" - работа с Drag'N'Drop (работа выполняется с помощью буфера обмена)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.FavoritesChanged">
            <summary>
            Уведомление об изменении состава Избранного.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.FavoritesRemoveType">
            <summary>
            Уведомление об удалении типа из Избранного
            (выделено в отдельное уведомление, т.к. нужно обработать изменение узла дерева навигатора в этом случае отдельно,
            т.к. типы у нас - папки и работа с ними идет через анализаторы)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ProjectChanged">
            <summary>
            Уведомление "ProjectChanged" - изменился текущий проект
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.EditingContextChanged">
            <summary>
            Уведомление "EditingContextChanged" - изменился текущий контекст редактирования
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ApplicabilityAdded">
            <summary>
            Уведомление "ApplicabilityAdded" - создана связи между типами объектов
            (добавлен тип связи для объекта)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ApplicabilityRemoved">
            <summary>
            Уведомление "ApplicabilityRemoved" - удалена связь между типами объектов
            (удален тип связи для объекта)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ApplicabilityChanged">
            <summary>
            Уведомление "ApplicabilityChanged" - изменение связи между типами объектов
            (изменены атрибуты типа связи для объекта)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.PublishObjectsRemoved">
            <summary>
            Уведомление "PublishObjectsRemoved" - Опубликованные объекты удалены
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.OwnComplete">
            <summary>
            Уведомление "OwnComplete" - Завершение владением опубликованными объектами
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.FilesRenamed">
            <summary>
            Уведомление "FilesRenamed" - Файлы переименованы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.SnapshotsChanged">
            <summary>
            Уведомление "SnapshotsChanged" - Изменение в наборе итераций для объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.EmailAccountChanged">
            <summary>
            Уведомление "EmailAccountChanged" - почтовый аккаунт изменен
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.EmailAccauntChanged">
            <summary>
            Уведомление "EmailAccountChanged" - почтовый аккаунт изменен
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.RedliningChanged">
            <summary>
            Уведомление "Внесены изменения в Redlining". Служба IClientRedliningService
            должна выполнить синхронизацию файлов "Red Line" с соответствующими
            объектами IPS
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.ToSelectItemsChanges">
            <summary>
            Уведомление для контролов, которые реализуют интерфейс Intermech.Navigator.Controls.IToSelectItemsHost
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.NavigatorRelationCommand">
            <summary>
            Уведомление о действии, произошедшем с одной или несколькими связями из стандартных команд "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.RevisionsActualized">
            <summary>
            Уведомление об актуализации извещений - позволяет предупредить пользователя,
            если извещения были не актуализированы, а переведены на шаг "Ожидание срока изменения"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.FileReplaced">
            <summary>
            Уведомление "FileReplaced" - заменён файл объекта или связи в файловом атрибуте
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventNames.CriticalEventNames">
            <summary>
            Список названий событий, которые должны рассылаться в "Навигаторе" всем окнам
            независимо от настройки "Обновлять фоновые окна"
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationEventNames.#cctor">
            <summary>
            Статический конструктор
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NotificationServiceStates">
            <summary>
            Флажки, по которым обработчики событий от INotificationService могут
            выполнять какие-то дополнительные проверки перед обработкой событий
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationServiceStates.Default">
            <summary>
            Никаких требований к обработчикам нет
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationServiceStates.InactiveForm">
            <summary>
            Обработчики находятся в неактивной форме (например, в неактивной или скрытой закладке "Навигатора")
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationServiceStates.InactiveDialog">
            <summary>
            Обработчики находятся в неактивной модальной форме (например, закэшированном диалоговом окне)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NotificationServiceStatesHolder">
            <summary>
            Класс, предоставляющий дополнительную информацию обработчикам событий от INotificationService.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationServiceStatesHolder._states">
            <summary>
            Флажки, по которым обработчики событий от INotificationService могут
            выполнять какие-то дополнительные проверки перед обработкой событий
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationServiceStatesHolder.#ctor(Intermech.Interfaces.Client.NotificationServiceStates)">
            <summary>
            Создать экземпляр класса, заполнить его значением
            </summary>
            <param name="states">Флажки, по которым обработчики событий от INotificationService могут
            выполнять какие-то дополнительные проверки перед обработкой событий</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.NotificationServiceStatesHolder.States">
            <summary>
            Флажки, по которым обработчики событий от INotificationService могут
            выполнять какие-то дополнительные проверки перед обработкой событий
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ApplicabilityChangedEventArgs.relationType">
            <summary>
            ID типа связи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ApplicabilityChangedEventArgs.objectType">
            <summary>
            ID типа объекта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ApplicabilityChangedEventArgs.inObjectType">
            <summary>
            ID типа объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ApplicabilityChangedEventArgs.RelationType">
            <summary>
            ID типа связи
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ApplicabilityChangedEventArgs.ObjectType">
            <summary>
            ID типа объекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ApplicabilityChangedEventArgs.InObjectType">
            <summary>
            ID типа объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ApplicabilityChangedEventArgs.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="eventName"> имя события (под этот тип аргументов ApplicabilityAdded, ApplicabilityRemoved)</param>
            <param name="_relationType">тип добавленной/удалённой связи</param>
            <param name="_objectType"> тип дочернего объекта</param>
            <param name="_inObjectType">тип родительского объекта</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.ApplicationClosingEventArgs">
            <summary>
            Аргументы события, возникающего перед завершением работы приложения
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ApplicationClosingEventArgs._cancel">
            <summary>
            Если равно true, приложение не должно завершать свою работу
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ApplicationClosingEventArgs.#ctor(System.String,System.Boolean)">
            <summary>
            Создать событие с указанным именем
            </summary>
            <param name="eventName">Имя события</param>
            <param name="cancel">Если равно true, приложение не должно завершать свою работу</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ApplicationClosingEventArgs.Cancel">
            <summary>
            Если равно true, приложение не должно завершать свою работу
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ApplicationClosingEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.CreatedExternallyEventArgs">
            <summary>
            Список идентификаторов версий объектов, с которыми произошло некоторое событие (интеграторы на это событие не реагируют)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.CreatedExternallyEventArgs.#ctor(System.String,System.Int64)">
            <summary>
            Список идентификаторов версий объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName"></param>
            <param name="objectId"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CreatedExternallyEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64})">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и списком идентификаторов версий объектов
            </summary>
            <param name="eventName">Имя события обновления</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CreatedExternallyEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и списком идентификаторов версий объектов
            </summary>
            <param name="eventName">Имя события обновления</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="objectTypeIDs">Список идентификаторов типов созданных объектов (если типы неизвестен, можно подсунуть Intermech.Consts.UnknownObjectTypeId)</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CreatedExternallyEventArgs.#ctor(System.String,System.Collections.Generic.IList{Intermech.Interfaces.Compositions.ObjInfoItem})">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и списком идентификаторов версий объектов
            </summary>
            <param name="eventName">Имя события обновления</param>
            <param name="objectsInfoItems">Список с информацией об объектах с которыми произошло событие.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.CreatedExternallyEventArgs.MergeWith(System.Object)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBAttributes4RelTypeEventArgs">
            <summary>
            Список идентификаторов атрибутов, с которыми произошло некоторое событие, для типов связей
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBAttributes4RelTypeEventArgs.RelationType">
            <summary>
            Тип связи, с которой произошло событие
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributes4RelTypeEventArgs.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Подготовить список идентификаторов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="AnRelationType">Тип связи, с которой произошло событие</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributes4RelTypeEventArgs.#ctor(System.String,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Подготовить список идентификаторов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
            <param name="AnRelationType">Тип связи, с которой произошло событие</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributes4RelTypeEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int32},System.Int32)">
            <summary>
            Подготовить список идентификаторов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="attributeIDs">Идентификаторы атрибутов</param>
            <param name="AnRelationType">Тип связи, с которой произошло событие</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributes4RelTypeEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int32},System.Boolean,System.Int32)">
            <summary>
            Подготовить список идентификаторов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="attributeIDs">Идентификаторы атрибутов</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
            <param name="AnRelationType">Тип связи, с которой произошло событие</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributes4RelTypeEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBAttributes4TypeEventArgs">
            <summary>
            Список идентификаторов атрибутов, с которыми произошло некоторое событие, для типов объектов/связей
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBAttributes4TypeEventArgs.CategoryID">
            <summary>
            Тип объекта или связи, с которым (которой) произошло событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBAttributes4TypeEventArgs.AddedIDs">
            <summary>
            Список добавленных атрибутов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBAttributes4TypeEventArgs.ChangedIDs">
            <summary>
            Список изменённых атрибутов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBAttributes4TypeEventArgs.RemovedIDs">
            <summary>
            Список удалённых атрибутов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributes4TypeEventArgs.#ctor(System.String,System.Int32,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Подготовить список идентификаторов атрибутов для типа объекта/связи
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="categoryID">Идентификатор типа объекта или связи</param>
            <param name="addedIDs">Список добавленных атрибутов</param>
            <param name="changedIDs">Список изменённых атрибутов</param>
            <param name="removedIDs">Список удалённых атрибутов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributes4TypeEventArgs.#ctor(System.String,System.Int32,System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32},System.Boolean)">
            <summary>
            Подготовить список идентификаторов атрибутов для типа объекта/связи
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="categoryID">Идентификатор типа объекта или связи</param>
            <param name="addedIDs">Список добавленных атрибутов</param>
            <param name="changedIDs">Список изменённых атрибутов</param>
            <param name="removedIDs">Список удалённых атрибутов</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBAttributes4TypeEventArgs.ItemsCount">
            <summary>
            Количество заданий в аргументах (Не путать с количеством объектов!)
            </summary>
            <remarks>Для пустого списка объектов, число заданий = 1 !!!</remarks>>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributes4TypeEventArgs.GetSupportedOptimization(Intermech.Interfaces.Client.NotificationServiceMode)">
            <summary>
            Проверить, поддерживается ли указанный режим оптимизации аргументами события и,
            в случае необходимости, вернуть максимальный уровень поддерживаемой оптимизации
            </summary>
            <param name="mode">Запрашиваемый режим оптимизации</param>
            <returns>Допустимый режим оптимизации</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBAttributesEventArgs">
            <summary>
            Список идентификаторов атрибутов, с которыми произошло некоторое событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBAttributesEventArgs._attributeIDs">
            <summary>
            Словарь идентификаторов атрибутов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributesEventArgs.#ctor(System.String,System.Int32)">
            <summary>
            Подготовить список идентификаторов атрибутов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="attributeID">Идентификатор атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributesEventArgs.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Подготовить список идентификаторов атрибутов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributesEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и списком идентификаторов атрибутов
            </summary>
            <param name="eventName">Имя события обновления</param>
            <param name="attributeIDs">
            Список идентификаторов атрибутов. Может быть любым списком объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int32.
            </param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributesEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int32},System.Boolean)">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и
            списком идентификаторов атрибутов.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="attributeIDs">
            Список идентификаторов атрибутов. Может быть любым объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int32.
            </param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBAttributesEventArgs.AttributeIDs">
            <summary>
            Возвращает список идентификаторов атрибутов, с которыми произошло событие
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributesEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBAttributesEventArgs.ItemsCount">
            <summary>
            Количество заданий в аргументах (Не путать с количеством атрибутов!)
            </summary>
            <remarks>Для пустого списка атрибутов, число заданий = 1 !!!</remarks>>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBAttributesEventArgs.GetSupportedOptimization(Intermech.Interfaces.Client.NotificationServiceMode)">
            <summary>
            Проверить, поддерживается ли указанный режим оптимизации аргументами события и,
            в случае необходимости, вернуть максимальный уровень поддерживаемой оптимизации
            </summary>
            <param name="mode">Запрашиваемый режим оптимизации</param>
            <returns>Допустимый режим оптимизации</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBObjectsCheckOutEventArgs">
            <summary>
            Событие, возникающее при взятии объекта на изменение
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsCheckOutEventArgs._newObjectIDs">
            <summary>
            Коллекция новых идентификаторов объектов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsCheckOutEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int64})">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и
            списком идентификаторов версий объектов.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектом,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="newObjectIDs">
            Список новых идентификаторов версий объектов. Может быть любым объектом,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsCheckOutEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и
            списком идентификаторов версий объектов.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектом,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="newObjectIDs">
            Список новых идентификаторов версий объектов. Может быть любым объектом,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="objectTypeIDs">
            Список идентификаторов типов созданных объектов
            (если типы неизвестен, можно подсунуть Intermech.Consts.UnknownObjectTypeId)
            </param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsCheckOutEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int64},System.Boolean)">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и
            списком идентификаторов версий объектов.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектом,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="newObjectIDs">
            Список новых идентификаторов версий объектов. Может быть любым объектом,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsCheckOutEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int32},System.Boolean)">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и
            списком идентификаторов версий объектов.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектом,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="newObjectIDs">
            Список новых идентификаторов версий объектов. Может быть любым объектом,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="objectTypeIDs">
            Список идентификаторов типов созданных объектов
            (если типы неизвестен, можно подсунуть Intermech.Consts.UnknownObjectTypeId)
            </param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsCheckOutEventArgs.NewObjectIDs">
            <summary>
            Возвращает список идентификаторов новых версий объектов, с которыми произошло событие.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsCheckOutEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsCheckOutEventArgs.IsCritical">
            <summary>
            Проверить, является ли событие критическим благодаря указанным аргументам
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBObjectsEventArgs">
            <summary>
            Список идентификаторов версий объектов, с которыми произошло некоторое событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsEventArgs._objectIDs">
            <summary>
            Словарь идентификаторов объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsEventArgs._objectTypeIDs">
            <summary>
            Словарь идентификаторов типов созданных объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsEventArgs._isCritical">
            <summary>
            Признак того, что событие является критичным и его необходимо передать во все неактивные окна.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsEventArgs._verType">
            <summary>
            Разновидность записи об объектах
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.#ctor(System.String,System.Int64,System.Boolean)">
            <summary>
            Подготовить список идентификаторов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
            <summary>
            Подготовить список идентификаторов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="objectTypeID">Идентификатор типа объекта (если тип неизвестен, можно подсунуть Intermech.Consts.UnknownObjectTypeId)</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Boolean)">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и
            списком идентификаторов версий объектов.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int32},System.Boolean)">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и
            списком идентификаторов версий объектов.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="objectTypeIDs">Список идентификаторов типов созданных объектов (если типы неизвестен, можно подсунуть Intermech.Consts.UnknownObjectTypeId)</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsEventArgs.VerType">
            <summary>
            Разновидность записи об объектах
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsEventArgs.ObjectIDs">
            <summary>
            Возвращает список идентификаторов версий объектов, с которыми произошло событие
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsEventArgs.ObjectTypeIDs">
            <summary>
            Список идентификаторов типов созданных объектов (если типы неизвестен, можно подсунуть Intermech.Consts.UnknownObjectTypeId)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsEventArgs.ItemsCount">
            <summary>
            Количество заданий в аргументах (Не путать с количеством объектов!)
            </summary>
            <remarks>Для пустого списка объектов, число заданий = 1 !!!</remarks>>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.ExcludeDuplicates">
            <summary>
            Исключить дублирующиеся идентификаторы из списка
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsEventArgs.IsCritical">
            <summary>
            Проверить, является ли событие критическим благодаря указанным аргументам
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.GetSupportedOptimization(Intermech.Interfaces.Client.NotificationServiceMode)">
            <summary>
            Проверить, поддерживается ли указанный режим оптимизации аргументами события и,
            в случае необходимости, вернуть максимальный уровень поддерживаемой оптимизации
            </summary>
            <param name="mode">Запрашиваемый режим оптимизации</param>
            <returns>Допустимый режим оптимизации</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.AreAllTypesKnown">
            <summary>
            Все ли типы объектов известны
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.CheckForObjectTypeIDs(System.Int32)">
            <summary>
            Проверить имеется ли в коллекции типов объектов, определенный ID
            </summary>
            <param name="objTypeId">Проверяемый ID</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.CheckForObjectTypeIDs(System.Collections.Generic.List{System.Int32})">
            <summary>
            Проверить имеется ли в коллекции типов объектов, хотя бы один из заданных ID
            </summary>
            <param name="objTypeIds">Коллекция проверяемых ID</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsEventArgs.CheckForObjectTypeIDs(Intermech.Interfaces.Client.NotificationService.Interfaces.CheckTypeIdDelegate)">
            <summary>
            Проверить ID типов объектов на соответствие условию делегата
            </summary>
            <param name="checkDelegate">Делегат в который будут передаваться ID типов объектов для проверки</param>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs">
            <summary>Аргументы события изменения атрибутов объекта в базе</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs.origAttributeValuesArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs.OrigAttributeValuesArray">
            <summary>Старые значения атрибутов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs.attributeValuesArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs.AttributeValuesArray">
            <summary>Новые значения атрибутов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs.objectType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs.ObjectType">
            <summary>Тип объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs.#ctor(System.String,System.Int64,System.Int32,Intermech.Interfaces.AttributeValues[],Intermech.Interfaces.AttributeValues[])">
            <summary>Конструктор</summary>
            <param name="eventName">Имя события</param>
            <param name="objectID">Ид версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="origList">Список оригинальных значений</param>
            <param name="avArray">Список изменённых значений</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs.#ctor(System.Int64,System.Int32,Intermech.Interfaces.AttributeValues,Intermech.Interfaces.AttributeValues)">
            <summary>Конструктор агрументов события ObjectsChanged</summary>
            <param name="objectID">ID версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="oldAttrValues">Старые значения атрибута</param>
            <param name="newAttrValues">Новые значения атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsExtendedEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBObjectsFiltrationEventArgs">
            <summary>
            Аргументы события, возникающего при изменении настроек фильтрации списков объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsFiltrationEventArgs._selectionID">
            <summary>
            Идентификатор выборки, по которой выполняется фильтрация списков объектов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsFiltrationEventArgs._selectionGuid">
            <summary>
            Guid выборки, по которой выполняется фильтрация списков объектов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsFiltrationEventArgs.#ctor(System.String,System.Int64,System.Guid)">
            <summary>
            Создать аргументы события
            </summary>
            <param name="eventName">Название события</param>
            <param name="selectionID">Идентификатор выборки, по которой выполняется фильтрация списков объектов</param>
            <param name="selectionGuid">Guid выборки, по которой выполняется фильтрация списков объектов</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsFiltrationEventArgs.SelectionID">
            <summary>
            Идентификатор выборки, по которой выполняется фильтрация списков объектов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectsFiltrationEventArgs.SelectionGuid">
            <summary>
            Guid выборки, по которой выполняется фильтрация списков объектов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBObjectsManagedEventArgs">
            <summary>
            Список идентификаторов версий объектов, с которыми произошло некоторое управляемое событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectsManagedEventArgs.AcceptEvent">
            <summary>
            Допускается ли данное событие к обработке
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsManagedEventArgs.#ctor(System.String,System.Int64,System.Boolean)">
            <summary>
            Подготовить список идентификаторов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="AnAcceptEvent">Допускается ли данное событие к обработке</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsManagedEventArgs.#ctor(System.String,System.Int64,System.Int32,System.Boolean)">
            <summary>
            Подготовить список идентификаторов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="objectTypeID">Идентификатор типа объекта</param>
            <param name="AnAcceptEvent">Допускается ли данное событие к обработке</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsManagedEventArgs.#ctor(System.String,System.Int64,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Подготовить список идентификаторов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="objectTypeID">Идентификатор типа объекта</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
            <param name="AnAcceptEvent">Допускается ли данное событие к обработке</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsManagedEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int32},System.Boolean)">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и списком идентификаторов версий объектов
            </summary>
            <param name="eventName">Имя события обновления</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="objectTypeIDs">Список идентификаторов типов объектов</param>
            <param name="AnAcceptEvent">Допускается ли данное событие к обработке</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsManagedEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int32},System.Boolean,System.Boolean)">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и
            списком идентификаторов версий объектов.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="objectIDs">
            Список идентификаторов версий объектов. Может быть любым объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int64.
            </param>
            <param name="objectTypeIDs">Список идентификаторов типов объектов</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
            <param name="AnAcceptEvent">Допускается ли данное событие к обработке</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectsManagedEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBObjectTypeAndRelationFiltrationEventArgs">
            <summary>
            Аргументы события, возникающего при изменении настроек фильтрации составов по типам объектов и связей
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectTypeAndRelationFiltrationEventArgs._activeFilterGuid">
            <summary>
            Идентификатор активного фильтра. null - фильтрация отключена
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectTypeAndRelationFiltrationEventArgs.#ctor(System.String,System.Guid)">
            <summary>
            Создать аргументы события
            </summary>
            <param name="eventName">Название события</param>
            <param name="activeFilterGuid">Идентификатор активного фильтра. null - фильтрация отключена</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectTypeAndRelationFiltrationEventArgs.ActiveFilterGuid">
            <summary>
            Идентификатор активного фильтра. null - фильтрация отключена
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBObjectTypesEventArgs">
            <summary>
            Список идентификаторов типов объектов, с которыми произошло некоторое событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBObjectTypesEventArgs._objectTypeIDs">
            <summary>
            Словарь идентификаторов типов объектов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectTypesEventArgs.#ctor(System.String,System.Int32)">
            <summary>
            Подготовить список идентификаторов типов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="objectTypeID">Идентификатор типа объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectTypesEventArgs.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Подготовить список идентификаторов типов объектов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="objectTypeID">Идентификатор типа объекта</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectTypesEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int32})">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и списком идентификаторов типов объектов
            </summary>
            <param name="eventName">Имя события обновления</param>
            <param name="objectTypeIDs">
            Список идентификаторов типов объектов. Может быть любым списком объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int32.
            </param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectTypesEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int32},System.Boolean)">
            <summary>
            Создает новый экземпляр объекта с указанными именем события обновления и
            списком идентификаторов типов объектов.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="objectTypeIDs">
            Список идентификаторов типов объектов. Может быть любым объектов,
            поддерживающим интерфейс IList и содержащим значения типа Int32.
            </param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectTypesEventArgs.ObjectTypeIDs">
            <summary>
            Возвращает список идентификаторов типов объектов, с которыми произошло событие
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectTypesEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBObjectTypesEventArgs.ItemsCount">
            <summary>
            Количество заданий в аргументах (Не путать с количеством типов объектов !)
            </summary>
            <remarks>Для пустого списка типов объектов, число заданий = 1 !!!</remarks>>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBObjectTypesEventArgs.GetSupportedOptimization(Intermech.Interfaces.Client.NotificationServiceMode)">
            <summary>
            Проверить, поддерживается ли указанный режим оптимизации аргументами события и,
            в случае необходимости, вернуть максимальный уровень поддерживаемой оптимизации
            </summary>
            <param name="mode">Запрашиваемый режим оптимизации</param>
            <returns>Допустимый режим оптимизации</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBRelationsEventArgs">
            <summary>
            Список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsEventArgs._relationCommand">
            <summary>
            Код выполненной команды "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsEventArgs._relationIDs">
            <summary>
            Список идентификаторов связей
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsEventArgs._knownRelationTypes">
            <summary>
            Список идентификаторов связей
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsEventArgs._relationInfo">
            <summary>
            Информация по связям
            [(Int64)Идентификатор связи] => [(RelInfo)Краткое описание связи]
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsEventArgs._projIDs">
            <summary>
            Список присутствующих идентификаторов родительских объектов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Int64)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationID">Идентификатор связи</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Int64,System.Int32)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="relationType"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,Intermech.Interfaces.Compositions.RelInfoItem)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relInfoItem">Информация о связи с которой произошло событие</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Collections.Generic.IList{Intermech.Interfaces.Compositions.RelInfoItem})">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relInfoItems">Информация о связях с которыми произошло событие</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Int64,System.Int64,System.Int32)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="projID">Идентификатор версии родительского объекта</param>
            <param name="relType">Идентификатор типа связи</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Int64,System.Int64,System.Int32,System.Int32)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="projID">Идентификатор версии родительского объекта</param>
            <param name="projTypeID">Идентификатор типа родительского объекта</param>
            <param name="relType">Идентификатор типа связи</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Int64,System.Int64,System.Int32,System.Int32,Intermech.Interfaces.Client.NavigatorRelationCommand)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="projID">Идентификатор версии родительского объекта</param>
            <param name="projTypeID">Идентификатор типа родительского объекта</param>
            <param name="relType">Идентификатор типа связи</param>
            <param name="relCommand">Код выполненной команды "Навигатора"</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64})">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationIDs">Список идентификаторов связей</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Подготовить список идентификаторов связей и идентификаторов их типов, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationIDs">Список идентификаторов связей</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32})">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationIDs">Список идентификаторов связей</param>
            <param name="projIDs">Список идентификаторов версий родительских объектов или null</param>
            <param name="projTypeIDs">Список идентификаторов типов родительских объектов или null</param>
            <param name="relTypeIDs">Список идентификаторов типов связей или null</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.Int32},System.Collections.Generic.IList{System.Int32},Intermech.Interfaces.Client.NavigatorRelationCommand)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationIDs">Список идентификаторов связей</param>
            <param name="projIDs">Список идентификаторов версий родительских объектов или null</param>
            <param name="projTypeIDs">Список идентификаторов типов родительских объектов или null</param>
            <param name="relTypeIDs">Список идентификаторов типов связей или null</param>
            <param name="relationCommand">Код выполненной команды "Навигатора"</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBRelationsEventArgs.RelationIDs">
            <summary>
            Возвращает список идентификаторов связей, с которыми произошло событие
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBRelationsEventArgs.ProjIDs">
            <summary>
            Список присутствующих идентификаторов родительских объектов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBRelationsEventArgs.KnownRelationTypes">
            <summary>
            Уникальный список присутствующих типов связей
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBRelationsEventArgs.RelationCommand">
            <summary>
            Код выполненной команды "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBRelationsEventArgs.PartTypeDictionaryByRelationID">
            <summary>
            Должно быть заполнено для оптимизации вставки связей при включенной группировке по типам.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.GetProjID(System.Int64)">
            <summary>
            Получить идентификатор версии родительского объекта для указанной связи
            </summary>
            <param name="prjLinkID">Идентификатор связи</param>
            <returns>Идентификатор версии родительского объекта для указанной связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.GetProjTypeID4Link(System.Int64)">
            <summary>
            Получить идентификатор типа родительского объекта для указанной связи
            </summary>
            <param name="prjLinkID">Идентификатор связи</param>
            <returns>Идентификатор типа родительского объекта для указанной связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.GetProjTypeID(System.Int64)">
            <summary>
            Получить идентификатор типа указанного родительского объекта
            </summary>
            <param name="projID">Идентификатор версии родительского объекта</param>
            <returns>Идентификатор типа родительского объекта для указанной связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.GetRelationType(System.Int64)">
            <summary>
            Получить идентификатор типа указанной связи
            </summary>
            <param name="prjLinkID">Идентификатор связи</param>
            <returns>Идентификатор типа указанной связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.Exists(System.Int64,System.Int32)">
            <summary>
            Проверить, есть ли в аргументах события хотя бы одна связь,
            у которой - указанные родительский объект и тип связи
            </summary>
            <param name="projID">Родительский тип объекта</param>
            <param name="relTypeID">Тип связи</param>
            <returns>true - в коллекции есть как минимум одна связь с указанными параметрами</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.HasEmptyItems">
            <summary>
            Проверить, есть ли хотя бы один пустой элемент в словарике
            </summary>
            <returns>true - как минимум для одной связи не задан родительский объект или тип связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBRelationsEventArgs.ItemsCount">
            <summary>
            Количество заданий в аргументах (Не путать с количеством связей!)
            </summary>
            <remarks>Для пустого списка связей, число заданий = 1 !!!</remarks>>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsEventArgs.GetSupportedOptimization(Intermech.Interfaces.Client.NotificationServiceMode)">
            <summary>
            Проверить, поддерживается ли указанный режим оптимизации аргументами события и,
            в случае необходимости, вернуть максимальный уровень поддерживаемой оптимизации
            </summary>
            <param name="mode">Запрашиваемый режим оптимизации</param>
            <returns>Допустимый режим оптимизации</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs">
            <summary>Аргументы события изменения атрибутов связи в базе</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs.origAttributeValuesArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs.OrigAttributeValuesArray">
            <summary>Старые значения атрибутов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs.attributeValuesArray">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs.AttributeValuesArray">
            <summary>Новые значения атрибутов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs.relationType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs.RelationType">
            <summary>Тип связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs.#ctor(System.String,System.Int64,System.Int32,Intermech.Interfaces.AttributeValues[],Intermech.Interfaces.AttributeValues[])">
            <summary>Конструктор</summary>
            <param name="eventName">Имя события</param>
            <param name="relationID">Ид связи</param>
            <param name="relationType">Тип связи</param>
            <param name="origList">список оригинальных значений</param>
            <param name="avArray">список измененных значений</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs.#ctor(System.Int64,System.Int32,Intermech.Interfaces.AttributeValues,Intermech.Interfaces.AttributeValues)">
            <summary>Конструктор агрументов события RelationsChanged</summary>
            <param name="relationID">Ид связи</param>
            <param name="relationType">Тип связи</param>
            <param name="oldAttrValues">Старые значения атрибута</param>
            <param name="newAttrValues">Новые значения атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsExtendedEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBRelationsManagedEventArgs">
            <summary>
            Список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsManagedEventArgs.AcceptEvent">
            <summary>
            Допускается ли данное событие к обработке
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsManagedEventArgs.Control">
            <summary>
            Элемент управления, которому предназначено событие
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsManagedEventArgs.Node">
            <summary>
            Узел, который является "точкой отсчёта" при вставке в список новых узлов
            (ссылка на ITreeNode)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBRelationsManagedEventArgs.InsertPosition">
            <summary>
            Куда добавляются вновь созданные узлы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsManagedEventArgs.#ctor(System.String,System.Int64,System.Boolean)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="AnAcceptEvent">Допускается ли данное событие к обработке</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsManagedEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Boolean)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationIDs">Список идентификаторов связей</param>
            <param name="AnAcceptEvent">Допускается ли данное событие к обработке</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsManagedEventArgs.#ctor(System.String,System.Int64,System.Boolean,System.Object,System.Object,Intermech.Interfaces.Client.NodesInsertPosition)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие.
            Связи должны быть добавлены в список в указанную позицию
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="AnAcceptEvent">Допускается ли данное событие к обработке</param>
            <param name="control">Элемент управления, которому предназначено событие</param>
            <param name="node">Узел, который является "точкой отсчёта" при вставке в список новых узлов (ссылка на ITreeNode)</param>
            <param name="insertPosition">Куда добавляются вновь созданные узлы</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsManagedEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Boolean,System.Object,System.Object,Intermech.Interfaces.Client.NodesInsertPosition)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло некоторое событие.
            Связи должны быть добавлены в список в указанную позицию
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationIDs">Список идентификаторов связей</param>
            <param name="AnAcceptEvent">Допускается ли данное событие к обработке</param>
            <param name="control">Элемент управления, которому предназначено событие</param>
            <param name="node">Узел, который является "точкой отсчёта" при вставке в список новых узлов (ссылка на ITreeNode)</param>
            <param name="insertPosition">Куда добавляются вновь созданные узлы</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBRelationsManagedEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DBSubstitutesEventArgs">
            <summary>
            Список идентификаторов связей, с которыми произошло событие, связанное с допзаменами
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DBSubstitutesEventArgs._projID">
            <summary>
            Идентификатор родительского объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBSubstitutesEventArgs.#ctor(System.String,System.Int64)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло событие, связанное с допзаменами
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationID">Идентификатор связи</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBSubstitutesEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64})">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло событие, связанное с допзаменами
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationIDs">Список идентификаторов связей</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBSubstitutesEventArgs.#ctor(System.String,System.Collections.Generic.IList{System.Int64},System.Int64)">
            <summary>
            Подготовить список идентификаторов связей, с которыми произошло событие, связанное с допзаменами
            </summary>
            <param name="eventName">Наименование события</param>
            <param name="relationIDs">Список идентификаторов связей</param>
            <param name="projID">Идентификатор родительского объекта</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DBSubstitutesEventArgs.ProjID">
            <summary>
            Идентификатор родительского объекта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DBSubstitutesEventArgs.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.DragDropEventArgs">
            <summary>
            Аргументы события, возникающего во время Drag'N'Drop
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DragDropEventArgs.Handled">
            <summary>
            Если равно true, событие успешно обработано
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DragDropEventArgs.IsCut">
            <summary>
            Если равно true, выполняется цепочка команд "Cut", "Paste", иначе - "Copy", "Paste"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DragDropEventArgs.SourceItems">
            <summary>
            Коллекция выделенных элементов, которые перетаскиваются
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DragDropEventArgs.SourceProvider">
            <summary>
            Контекст, в рамках которого создана коллекция перетаскиваемых выделенных элементов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DragDropEventArgs.SourceControl">
            <summary>
            Элемент управления, из которого перетаскиваются выделенные элементы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DragDropEventArgs.DestItems">
            <summary>
            Коллекция выделенных элементов, на которые был выполнен "сброс"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DragDropEventArgs.DestProvider">
            <summary>
            Контекст, в рамках которого создана коллекция выделенных элементов, на которые был выполнен "сброс"
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.DragDropEventArgs.DestControl">
            <summary>
            Элемент управления, на который были "сброшены" перетаскиваемые выделенные элементы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.DragDropEventArgs.#ctor(System.String,System.Boolean,System.Boolean,Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider,System.Object,Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider,System.Object)">
            <summary>
            Создать событие с указанным именем
            </summary>
            <param name="eventName">Имя события</param>
            <param name="handled">Если равно true, событие успешно обработано</param>
            <param name="isCut">Если равно true, выполняется цепочка команд "Cut", "Paste", иначе - "Copy", "Paste"</param>
            <param name="sourceItems">Коллекция выделенных элементов, которые перетаскиваются</param>
            <param name="sourceProvider">Контекст, в рамках которого создана коллекция перетаскиваемых выделенных элементов</param>
            <param name="sourceControl">Элемент управления, из которого перетаскиваются выделенные элементы</param>
            <param name="destItems">Коллекция выделенных элементов, на которые был выполнен "сброс"</param>
            <param name="destProvider">Контекст, в рамках которого создана коллекция выделенных элементов, на которые был выполнен "сброс"</param>
            <param name="destControl">Элемент управления, на который были "сброшены" перетаскиваемые выделенные элементы</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.DragDropEventArgs.ItemsCount">
            <summary>
            Количество заданий в аргументах (Не путать с количеством объектов!)
            </summary>
            <remarks>Для пустого списка объектов, число заданий = 1 !!!</remarks>>
        </member>
        <member name="M:Intermech.Interfaces.Client.DragDropEventArgs.GetSupportedOptimization(Intermech.Interfaces.Client.NotificationServiceMode)">
            <summary>
            Проверить, поддерживается ли указанный режим оптимизации аргументами события и,
            в случае необходимости, вернуть максимальный уровень поддерживаемой оптимизации
            </summary>
            <param name="mode">Запрашиваемый режим оптимизации</param>
            <returns>Допустимый режим оптимизации</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICriticalEventArgs">
            <summary>
            Интерфейс позволяет проверить, является ли событие критическим в зависимости от его аргументов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICriticalEventArgs.IsCritical">
            <summary>
            Проверить, является ли событие критическим согласно его аргументам
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.NotificationEventArgs">
            <summary>
            Данные для событий службы уведомлений
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventArgs._eventName">
            <summary>
            Имя события обновления
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.NotificationEventArgs._firePrePostEvents">
            <summary>
            "Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationEventArgs.#ctor(System.String,System.Boolean)">
            <summary>
            Создать событие с указанным именем
            </summary>
            <param name="eventName">Имя события</param>
            <param name="firePrePostEvents">"Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.NotificationEventArgs.EventName">
            <summary>
            Имя события обновления
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.NotificationEventArgs.FirePrePostEvents">
            <summary>
            "Дёргать" дополнительные события "Перед основным событием" и "После основного события" у сервиса событий
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.NotificationEventArgs.ItemsCount">
            <summary>
            Количество заданий в аргументах
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationEventArgs.GetSupportedOptimization(Intermech.Interfaces.Client.NotificationServiceMode)">
            <summary>
            Проверить, поддерживается ли указанный режим оптимизации аргументами события и,
            в случае необходимости, вернуть максимальный уровень поддерживаемой оптимизации
            </summary>
            <param name="mode">Запрашиваемый режим оптимизации</param>
            <returns>Допустимый режим оптимизации</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IDataMergingSupport">
            <summary>
            Позволяет реализовать объект, данные которого могут быть объединены с данными другого объекта.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IDataMergingSupport.MergeWith(System.Object)">
            <summary>
            Объединяет данные этого объекта с данными указанного объекта. После успешного объединения другой
            объект будет больше не нужен.
            </summary>
            <param name="obj">Объект, чьи данные должны быть объединены с данными этого объекта</param>
            <returns>true, если объединение было успешным, в противном случае - false</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.INotificationService">
            <summary>
            INotificationService – это ядро службы уведомлений. Данная служба позволяет рассылать уведомления и получать их. 
            Ссылка на неё доступна в глобальном контейнере сервисов ServicesManager.
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.INotificationService.OnBeforeEvent">
            <summary>
            Событие генерируется перед вызовом указанного события
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.INotificationService.OnAfterEvent">
            <summary>
            Событие генерируется после вызова указанного события
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationService.Subscribe(System.String,Intermech.Interfaces.Client.NotificationEventHandler)">
            <summary>
            Осуществляет подписку на обработку события обновления.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="eventHandler">Делегат обработчика события обновления.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationService.Subscribe(Intermech.Interfaces.Client.NotificationEventHandler)">
            <summary>
            Осуществляет подписку на обработку любых событий обновления.
            </summary>
            <param name="eventHandler">Делегат обработчика события обновления.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationService.Unsubscribe(System.String,Intermech.Interfaces.Client.NotificationEventHandler)">
            <summary>
            Осуществляет отписку от обработки события обновления.
            </summary>
            <param name="eventName">Имя события обновления.</param>
            <param name="eventHandler">Делегат обработчика события обновления.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationService.Unsubscribe(Intermech.Interfaces.Client.NotificationEventHandler)">
            <summary>
            Осуществляет отписку от обработки любых событий обновления.
            </summary>
            <param name="eventHandler">Делегат обработчика события обновления.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationService.FireEvent(System.Object,Intermech.Interfaces.Client.NotificationEventArgs)">
            <summary>
            Извещает всех подписчиков о произошедшем событии.
            </summary>
            <param name="sender">Объект, рассылающий событие обновления.</param>
            <param name="e">Данные для события обновления.</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationService.HasSubscribers(System.String)">
            <summary>
            Позволяет узнать, есть ли подписчики на указанное событие.
            </summary>
            <param name="eventName">Имя события</param>
            <returns>true - если подписчики есть</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.INotificationQueue">
            <summary>
            Позволяет реализовать очередь событий обновления, которая сначала накапливает события, а затем запускает 
            их на выполнение.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationQueue.QueueEvent(Intermech.Interfaces.Client.NotificationEventArgs)">
            <summary>
            Ставит событие в очередь на выполнение.
            </summary>
            <param name="args">Аргументы события</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationQueue.FlushQueue(System.Object)">
            <summary>
            Запускает все события на выполнение и очищает очередь событий.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationQueue.FlushQueue(Intermech.Interfaces.Client.NotificationService.INotificationWindowService,System.Object)">
            <summary>
            Запускает все события на выполнение для заданной службы окна навигатора и очищает очередь событий.
            </summary>
            <remarks>Позволяет явно отправить события в окно навигатора, даже если оно неактивно</remarks>
        </member>
        <member name="M:Intermech.Interfaces.Client.INotificationQueue.ToEnumerable">
            <summary>
            Извлекает содержимое очереди событий и возвращает его в виде перечисления. Сама очередь событий при этом не очищается.
            </summary>
            <returns>Перечисление событий</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.NotificationQueue">
            <summary>
            Реализует очередь событий обновления, которая позволяет сначала накапливать события, а затем запустить 
            их на выполнение.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationQueue.DoFireQueue(Intermech.Interfaces.Client.INotificationService,Intermech.Interfaces.Client.NotificationService.INotificationWindowService,System.Object)">
            <summary>
            
            </summary>
            <param name="notificationWindowService"></param>
            <param name="sender"></param>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationQueue.DoFlushQueue(Intermech.Interfaces.Client.NotificationService.INotificationWindowService,System.Object)">
            <summary>
            Запускает все события на выполнение и очищает очередь событий.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationQueue.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationQueue.QueueEvent(Intermech.Interfaces.Client.NotificationEventArgs)">
            <summary>
            Ставит событие в очередь на выполнение.
            </summary>
            <param name="args">Аргументы события</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationQueue.FlushQueue(System.Object)">
            <summary>
            Запускает все события на выполнение и очищает очередь событий.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.NotificationQueue.ToEnumerable">
            <summary>
            Извлекает содержимое очереди событий и возвращает его в виде перечисления. Сама очередь событий при этом не очищается.
            </summary>
            <returns>Перечисление событий</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.ICurrentNavWindow">
            <summary>
            Интерфейс на текущее окно навигатора
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentNavWindow.NavWindow">
            <summary>
            Текущее окно навигатора (или null, если такового нету)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentNavWindow.TreeView">
            <summary>
            Ссылка на дерево "Навигатора" (привести к типу NavigatorTreeView)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ICurrentNavWindow.ViewsManagers">
            <summary>
            Ссылка на менеджер закладок (привести к типу PageViewsManager)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.IEnableTreeCollapse">
            <summary>
            Интерфейс, позволяющий окнам "Навигатора" определять,
            можно ли сворачивать дерево "Навигатора" при открытии нового окна,
            содержимое которое строится на основе указанного дескриптора корневого узла
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IEnableTreeCollapse.Guid">
            <summary>
            Уникальный Guid класса, реализующего данный интерфейс
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEnableTreeCollapse.EnableTreeCollapse(Intermech.Navigator.Interfaces.IDescriptor,System.IServiceProvider)">
            <summary>
            Выполнить проверку, можно ли сворачивать дерево "Навигатора",
            которое построено на основании указанного дескриптора корневого узла,
            при открытии нового окна
            </summary>
            <param name="rootDescriptor">Дескриптор корневого узла дерева</param>
            <param name="viewServices">Контейнер сервисов для дерева</param>
            <returns>Сворачивание дерева разрешено, не разрешено, дескриптор не распознан</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IEnableTreeColumnsSorting">
            <summary>
            Интерфейс, позволяющий окнам "Навигатора" определять,
            можно ли разрешать сортировку в колонке в дереве "Навигатора"
            для содержимого, которое строится на основе указанного дескриптора
            корневого узла
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IEnableTreeColumnsSorting.Guid">
            <summary>
            Уникальный Guid класса, реализующего данный интерфейс
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEnableTreeColumnsSorting.EnableTreeColumnsSorting(Intermech.Navigator.Interfaces.IDescriptor,System.IServiceProvider)">
            <summary>
            Выполнить проверку, можно ли разрешать сортировку в колонках в дереве "Навигатора",
            которое построено на основании указанного дескриптора корневого узла
            </summary>
            <param name="rootDescriptor">Дескриптор корневого узла дерева</param>
            <param name="viewServices">Контейнер сервисов для дерева</param>
            <returns>Сортировка в колонках разрешена, не разрешена, дескриптор не распознан</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IEnableTreeColumnsSortingService">
            <summary>
            Интерфейс клиентской службы, позволяющей окнам "Навигатора" определять,
            можно ли разрешать сортировку в колонках в дереве "Навигатора"
            для содержимого, которое строится на основе указанного дескриптора
            корневого узла
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEnableTreeColumnsSortingService.Register(Intermech.Interfaces.Client.IEnableTreeColumnsSorting)">
            <summary>
            Зарегистрировать класс, позволяющий проверять дескрипторы
            </summary>
            <param name="selector">Класс, выполняющий проверки дескрипторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEnableTreeColumnsSortingService.Unregister(Intermech.Interfaces.Client.IEnableTreeColumnsSorting)">
            <summary>
            Разрегистрировать класс, позволяющий проверять дескрипторы
            </summary>
            <param name="selector">Класс, выполняющий проверки дескрипторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEnableTreeColumnsSortingService.EnableTreeColumnsSorting(Intermech.Navigator.Interfaces.IDescriptor,System.IServiceProvider)">
            <summary>
            Выполнить проверку, можно ли сортировать в колонках в дереве "Навигатора",
            которое построено на основании указанного дескриптора корневого узла
            </summary>
            <param name="rootDescriptor">Дескриптор корневого узла дерева</param>
            <param name="viewServices">Контейнер сервисов для дерева</param>
            <returns>Сортировка в колонках дерева разрешена или нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IEnableTreeMultiSelect">
            <summary>
            Интерфейс, позволяющий окнам "Навигатора" определять,
            можно ли разрешать множественное выделение в дереве "Навигатора"
            для содержимого, которое строится на основе указанного дескриптора
            корневого узла
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.IEnableTreeMultiSelect.Guid">
            <summary>
            Уникальный Guid класса, реализующего данный интерфейс
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEnableTreeMultiSelect.EnableTreeMultiSelect(Intermech.Navigator.Interfaces.IDescriptor,System.IServiceProvider)">
            <summary>
            Выполнить проверку, можно ли включить множественное выделение в дереве "Навигатора",
            которое построено на основании указанного дескриптора корневого узла
            </summary>
            <param name="rootDescriptor">Дескриптор корневого узла дерева</param>
            <param name="viewServices">Контейнер сервисов для дерева</param>
            <returns>Множественное выделение разрешено, не разрешено, дескриптор не распознан</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IEnableTreeMultiSelectService">
            <summary>
            Интерфейс клиентской службы, позволяющей окнам "Навигатора" определять,
            можно ли разрешать множественное выделение в дереве "Навигатора"
            для содержимого, которое строится на основе указанного дескриптора
            корневого узла
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEnableTreeMultiSelectService.Register(Intermech.Interfaces.Client.IEnableTreeMultiSelect)">
            <summary>
            Зарегистрировать класс, позволяющий проверять дескрипторы
            </summary>
            <param name="selector">Класс, выполняющий проверки дескрипторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEnableTreeMultiSelectService.Unregister(Intermech.Interfaces.Client.IEnableTreeMultiSelect)">
            <summary>
            Разрегистрировать класс, позволяющий проверять дескрипторы
            </summary>
            <param name="selector">Класс, выполняющий проверки дескрипторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IEnableTreeMultiSelectService.EnableTreeMultiSelect(Intermech.Navigator.Interfaces.IDescriptor,System.IServiceProvider)">
            <summary>
            Выполнить проверку, можно ли включить множественное выделение в дереве "Навигатора",
            которое построено на основании указанного дескриптора корневого узла
            </summary>
            <param name="rootDescriptor">Дескриптор корневого узла дерева</param>
            <param name="viewServices">Контейнер сервисов для дерева</param>
            <returns>Множественное выделение разрешено или нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.IObjectsCheckOutService">
            <summary>
            Сервис "Навигатора", позволяющий брать на изменение группы объектов
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Client.IObjectsCheckOutService.ObjectsCheckOutEventHandler">
            <summary>
            Событие, которое вызывается после получения редактируемых копий объектов, для дальнейшего анализа и обработки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectsCheckOutService.FireObjectsCheckOutEvent(System.Object,Intermech.Interfaces.Client.ObjectsCheckOutEventArgs)">
            <summary>
            Генерирует событие для дальнейшей обработки редактируемых копий объектов. Используется в тех случаях, когда редактируемые объекты создаются другим сервисов IPS.
            </summary>
            <param name="sender">Отправитель события</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectsCheckOutService.CheckOut(Intermech.Interfaces.IUserSession,System.Collections.Generic.IList{System.Int64},System.Boolean)">
            <summary>
            Получить список версий объектов для редактирования
            </summary>
            <param name="session">Сессия, в рамках которой выполняется работа</param>
            <param name="versions">Список версий объектов, которые требуется взять на изменение</param>
            <param name="throwException">true - при ошибке сгенерировать исключение</param>
            <returns>Список версий объектов для редактирования. Если возникла ошибка, будет возвращено значение null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.IObjectsCheckOutService.CheckOut(Intermech.Interfaces.IUserSession,System.Collections.Generic.IList{Intermech.Interfaces.IDBObject},System.Boolean)">
            <summary>
            Получить список версий объектов для редактирования
            </summary>
            <param name="session">Сессия, в рамках которой выполняется работа</param>
            <param name="versions">Список описаний версий объектов, которые требуется взять на изменение</param>
            <param name="throwException">true - при ошибке сгенерировать исключение</param>
            <returns>Список версий объектов для редактирования. Если возникла ошибка, будет возвращено значение null</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.INavigatorTreeCollapseService">
            <summary>
            Интерфейс клиентской службы, позволяющей окнам "Навигатора" определять,
            требуется ли сворачивать дерево "Навигатора" при открытии нового окна
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigatorTreeCollapseService.Register(Intermech.Interfaces.Client.IEnableTreeCollapse)">
            <summary>
            Зарегистрировать класс, позволяющий проверять дескрипторы
            </summary>
            <param name="selector">Класс, выполняющий проверки дескрипторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigatorTreeCollapseService.Unregister(Intermech.Interfaces.Client.IEnableTreeCollapse)">
            <summary>
            Разрегистрировать класс, позволяющий проверять дескрипторы
            </summary>
            <param name="selector">Класс, выполняющий проверки дескрипторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.INavigatorTreeCollapseService.EnableTreeCollapse(Intermech.Navigator.Interfaces.IDescriptor,System.IServiceProvider)">
            <summary>
            Выполнить проверку, можно ли сворачивать дерево "Навигатора" при открытии нового окна,
            которое построено на основании указанного дескриптора корневого узла
            </summary>
            <param name="rootDescriptor">Дескриптор корневого узла дерева</param>
            <param name="viewServices">Контейнер сервисов для дерева</param>
            <returns>Сортировка в колонках дерева разрешена или нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.ActiveSessionsCollection">
            <summary>
            Коллекция активных пользовательских сессий (т.е. выделенных потокам и связанных с этими потоками).
            Реализация не является thread safe.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.SessionPoolDescriptor">
            <summary>
            Описывает открытую пользовательскую сессию и ресурсы, связанные с ней.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolDescriptor.#ctor(Intermech.Interfaces.IUserSession)">
            <summary>
            Создает дескриптор пользовательской сессии.
            </summary>
            <param name="session">Пользовательская сессия</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolDescriptor.BeginUsage">
            <summary>
            Сигнализирует, что у пользовательской сессии появился еще один клиент.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolDescriptor.EndUsage">
            <summary>
            Сигнализирует, что у пользовательской сессии стало на одного клиента меньше.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolDescriptor.UsageCount">
            <summary>
            Возвращает количество активных клиентов у выделенной пользовательской сессии.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolDescriptor.LastAccessTimeUtc">
            <summary>
            Возвращает время последнего обращения к пользовательской сессии.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolDescriptor.Session">
            <summary>
            Возвращает пользовательскую сессию, описываемую дескриптором. 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolDescriptor.ThreadKey">
            <summary>
            Задает или возвращает ключ потока, которому выделена сессия.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolDescriptor.OwnerThreadKey">
            <summary>
            Возвращает или задает ключ потока, за которым закреплена сессия.
            Из пула такая сессия будет выдаваться только по запросу от этого потока.
            Значение свойства может быть не задано и равно null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolDescriptor.IsTopmost">
            <summary>
            Возвращает признак переиспользования сессии при вложенном создании SessionKeeper.
            Если создание SessionKeeper не вложено в область действия другого SessionKeeper,
            то значение свойства будет равно true, во всех остальных случаях - false.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolDescriptor.ReleaseMode">
            <summary>
            Возвращает текущий режим освобождения сессии.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolDescriptor.TrySetReleaseMode(Intermech.Interfaces.UserSessionReleaseMode)">
            <summary>
            Изменяет режим освобождения сессии.
            </summary>
            <param name="newReleaseMode">Режим освобождения сессии</param>
            <returns>Признак успешного/неуспешного изменения режима</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.#ctor(Intermech.Interfaces.Client.IClientCache)">
            <summary>
            Создает объект.
            </summary>
            <param name="clientCacheService">Сервис клиентского кэша метаданных для сессий сервера приложений</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="clientCacheService"/> не должен быть равен null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.ConnectionErrorReporter">
            <summary>
            Возвращает или задает объект для вывода диагностических сообщений.
            Значение свойства не может быть null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.OptionalServices">
            <summary>
            Возвращает контейнер с необязательными сервисами, используемыми пулом сессий.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.SpeedupServices">
            <summary>
            Возвращает контейнер с клиентскими прокси-сервисами для ускорения работы сессий сервера приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.Allocate">
            <summary>
            Выделяет сессию для текущего потока. Если для текущего потока уже имеется выделенная сессия, то метод должен вернуть эту же сессию.
            </summary>
            <returns>Дескриптор выделенной сессии</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.Release(Intermech.Interfaces.IUserSessionDescriptor)">
            <summary>
            Освобождает выделенную ранее сессию.
            </summary>
            <param name="descriptor">Дескриптор выделенной сессии</param>
            <exception cref="T:System.ArgumentNullException">Ссылка на дескриптор сессии не может быть null</exception>
            <exception cref="T:System.InvalidOperationException">Попытка освободить сессию, выделенную для другого потока приложения</exception>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.Shutdown">
            <summary>
            Завершает использование механизма выделения пользовательских сессий. Метод вызывается в конце работы приложения для 
            корректного завершения приложения. Обычно, реализация этого метода используется для очистки пула сессий, если таковой имеется.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.FreeInactiveSessions(System.Object)">
            <summary>
            Закрывает неиспользуемые в течение долгого времени пользовательские сессии.
            </summary>
            <param name="state">Не используется</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.CheckConnectionPeriodically">
            <summary>
            Периодически проверяет подключение к серверу приложений. Если подключение разорвано, то пул открытых сессий будет очищен.
            Метод используется для автоматического переподключения к серверу приложений при обрыве подключения незаметно для пользователя.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.CheckConnection">
            <summary>
            Проверяет подключение к серверу приложений. Если подключение разорвано, то пул открытых сессий будет очищен.
            Метод используется для автоматического переподключения к серверу приложений при обрыве подключения незаметно для пользователя.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.ClearSessionPool(System.Boolean)">
            <summary>
            Очищает пул открытых пользовательских сессий.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.TestConnection">
            <summary>
            Проверяет работоспособность подключения к серверу приложений.
            Метод должен работать максимально быстро, так как вызывается очень часто.
            </summary>
            <returns>Результат проверки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.ResetConnectionData">
            <summary>
            Очищает все кэшированные сервисом данные, полученные от сервера приложений.
            Метод используется при обрыве подключения к серверу приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.SessionPoolBase.IsSessionPinningRequired(Intermech.Interfaces.Client.SessionPoolThreadKey)">
            <summary>
            Проверяет, требует ли текущий поток закрепления сессий, выделяемых для него.
            В реализации по умолчанию ни один поток не требует закрепления сессий.
            </summary>
            <param name="threadKey">Ключ текущего потока</param>
            <returns>true, если требуется закрепление сессии за текущим потоком</returns>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.SyncRoot">
            <summary>
            Объект для синхронизации многопоточного доступа.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.ClientCache">
            <summary>
            Экземпляр клиентского кэша.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.ActiveSessionsPool">
            <summary>
            Пул открытых и распределенных пользовательских сессий. Ключем является идентификатор потока, который использует сессию.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.InactiveSessionsPool">
            <summary>
            Пул открытых и нераспределенных пользовательских сессий.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.PoolInitialized">
            <summary>
            Возвращает признак, что пул сессий уже был инициализирован.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.MainSession">
            <summary>
            Основная сессия приложения.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.LazyCleanupTimer">
            <summary>
            Таймер для запуска процесса освобождения давно не используемых, но открытых сессий.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.SessionPoolBase.LastCheckConnectionTime">
            <summary>
            Время последней проверки подключения к серверу приложений.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SessionPoolBase.CleanupPeriod">
            <summary>
            Интервал времени между периодическими чистками пула сессий.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.SessionPoolBase.CheckConnectionPeriod">
            <summary>
            Интервал периодической проверки обрыва подключения к серверу приложений.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.UserSessionCreatedEventArgs">
            <summary>
            Аргументы события создания пользовательской сессии.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.UserSessionCreatedEventArgs.#ctor(Intermech.Interfaces.IMServer,Intermech.Interfaces.IUserSession,Intermech.Interfaces.Client.IUserSessionLoginInfo)">
            <summary>
            Создает объект.
            </summary>
            <param name="server">Основной объект сервера приложений</param>
            <param name="session">Объект созданной пользовательской сессии</param>
            <param name="loginInfo">Контейнер с параметрами входа пользователя на сервер приложений</param>
            <exception cref="T:ArgumentNullException">Параметры <paramref name="server"/>, <paramref name="session"/>, <paramref name="loginInfo"/> не должны быть равны null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionCreatedEventArgs.Server">
            <summary>
            Возвращает основной объект сервера приложений.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionCreatedEventArgs.Session">
            <summary>
            Возвращает объект пользовательской сессии.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionCreatedEventArgs.LoginInfo">
            <summary>
            Возвращает контейнер с параметрами входа пользователя на сервер приложений.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.UserSessionLoginInfo">
            <summary>
            Контейнер с параметрами входа пользователя на сервер приложений.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.UserSessionLoginInfo.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.UserSessionLoginInfo.Assign(Intermech.Interfaces.Client.UserSessionLoginInfo)">
            <summary>
            Заполняет свойства текущего объекта, копируя значения из указанного объекта.
            </summary>
            <param name="anotherLoginInfo">Другой объект</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="anotherLoginInfo"/> не должен быть равен null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionLoginInfo.LoginName">
            <summary>
            Возвращает или задает логин пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionLoginInfo.UserName">
            <summary>
            Возвращае или задает полное имя пользователя.
            Для входа пользователя это свойство заполнять не требуется. Оно будет заполнено автоматически после успешного входа.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionLoginInfo.RoleName">
            <summary>
            Возвращает или задает название роли пользователя.
            Для входа пользователя требуется, чтобы было заполнено либо это свойство, либо RoleId.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionLoginInfo.RoleId">
            <summary>
            Возвращает или задает идентификатор роли пользователя.
            Для входа пользователя требуется, чтобы было заполнено либо это свойство, либо RoleName.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionLoginInfo.AccessLevel">
            <summary>
            Возвращает или задает уровень доступа пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionLoginInfo.ActingUserName">
            <summary>
            Возвращает или задает полное имя пользователя, который исполняет обязанности текущего пользователя.
            Для входа пользователя это свойство заполнять не требуется. Оно будет заполнено автоматически после успешного входа.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ServicesManager">
            <summary>
            Статический класс для работы с глобальными сервисами приложения. Реализация является thread safe.
            Данный класс морально устарел и оставлен для поддержания работоспособности существующего кода.
            Новый код должен использовать класс <see cref="T:Intermech.Interfaces.ApplicationServices"/>.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ServicesManager.RemoveService(System.Type)">
            <summary>
            Удаляет указанный сервис
            </summary>
            <param name="serviceType">Тип удаляемого сервиса</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ServicesManager.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            
             <summary>
             Добавление в список сервисов функции для получения сервиса.
             </summary>
             <param name="serviceType"></param>
             <param name="callback"></param>
             <code>
             public object DbSessionableCreator(IServiceContainer container,Type needType)
             {
            		if(needType == typeof(MyObject1) return new MyObject1();
            		...
             }
             ...
             ServerService.AddService(typeof(DBSessionable),new ServiceCreatorCallback(DbSessionableCreator);
             </code>
        </member>
        <member name="M:Intermech.Interfaces.Client.ServicesManager.AddService(System.Type,System.Object)">
            <summary>
            Добавляет в список сервисов указанный обЪект
            </summary>
            <param name="serviceType">тип добавляемого сервиса</param>
            <param name="serviceInstance">добавляемый сервис</param>
            <code>
            ServerServices.AddService(typeof(IInterface),new InterfaceImpl());
            ...
            IInterface it = ServerService.GetService(typeof(IInterface));
            </code>
        </member>
        <member name="M:Intermech.Interfaces.Client.ServicesManager.GetService``1(System.Boolean,System.String)">
            <summary>Попытка извлечения сервиса из провайдера сервисов</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса (при аргументе throwExceptionIfNotFound == true)</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="throwExceptionIfNotFound">Выбрасывать ли исключительную ситуацию в случае отсустствия в провайдере запрашиваемого
                                                   сервиса</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то испольхзуется стандартное сообщение</param>
            <returns>Извекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ServicesManager.GetService``1(System.String)">
            <summary>Извлечение сервиса из провайдера сервисов</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то испольхзуется стандартное сообщение</param>
            <returns>Извекаемый сервис</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.UserSessionSpeedupServices">
            <summary>
            Содержит необязательные клиентские прокси-сервисы, значительно ускоряющие работу клиентских сессий
            за счет кэширования и сокращения количества обращений к серверу приложений.
            Реализация является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.UserSessionSpeedupServices.#ctor">
            <summary>
            Создает объект
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionSpeedupServices.CustomServices">
            <summary>
            Возвращает или задает сервис типа <see cref="T:Intermech.Interfaces.Client.ICustomServicesSpeedupService"/>
            Значение может быть не задано и равно null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionSpeedupServices.DBConfigurations">
            <summary>
            Возвращает или задает сервис типа <see cref="T:Intermech.Interfaces.IDBConfigurations"/>
            Значение может быть не задано и равно null.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.UserSessionSpeedupServices.ClientMetadataCache">
            <summary>
            Возвращает или задает сервис типа <see cref="T:Intermech.Interfaces.Client.IClientMetadataCache"/>
            Значение может быть не задано и равно null.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.WebPortal.IPublicationService">
            <summary>
            Сервис клиентской части публикации
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.WebPortal.IPublicationService.PublishWithDialog(Intermech.Navigator.Interfaces.ISelectedItems)">
            <summary>
            Опубликовать объекты на портал с предварительным отображением окна публикации
            </summary>
            <param name="items">Коллекция выбранных объектов в Навигаторе</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.WebPortal.IPublicationService.PublishWithDialog(System.Collections.Generic.List{System.Tuple{System.Int64,System.Int32}})">
            <summary>
            Опубликовать объекты на портал с предварительным отображением окна публикации
            </summary>
            <param name="items">Коллекция объектов для публикации Tuple([идентификатор версии объекта],[тип объекта])</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.WebPortal.IPublicationService.ShowPublishOptions(System.Collections.Generic.List{System.Tuple{System.Int64,System.Int32}},Intermech.Interfaces.WebPortal.ExtendedPublishOptions2)">
            <summary>
            Показывает окно публикации в режиме изменения настроек и просмотра состава, без публикации
            </summary>
            <param name="items"></param>
            <param name="options"></param>
            <returns>True, если окно было закрыто по OK</returns>
        </member>
        <member name="T:Intermech.Interfaces.Client.WorkCopyCommandOptionsEditor">
            <summary>
            Базовый класс для редакторов дополнительных опций выполнения для команд checkout, save changes, checkin, cancel changes.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.WorkCopyCommandOptionsEditor.ApplyChanges">
            <summary>
            Применяет изменения, сделанные в редакторе опций.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.WorkCopyCommandOptionsEventArgs">
            <summary>
            Реализует класс для хранения аргументов событий по получению дополнительных опций выполнения.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.WorkCopyCommandOptionsEventArgs.#ctor(Intermech.Navigator.Interfaces.ISelectedItems,System.ComponentModel.Design.IServiceContainer,System.Collections.Generic.List{Intermech.Interfaces.Client.WorkCopyCommandOptionsEditor})">
            <summary>
            Создает объект.
            </summary>
            <param name="items">Выделенные элементы навигатора, к которым будет применена команда</param>
            <param name="contextServices">Контейнер сервисов окружения для команды, в которую должны быть помещены дополнительные опции выполнения</param>
            <param name="contextServicesEditors">Коллекция, в которую должны быть помещены редакторы дополнительных опций выполнения</param>
            <exception cref="T:ArgumentNullException">Параметры <paramref name="items"/>, <paramref name="contextServices"/>, <paramref name="contextServicesEditors"/> не должны быть равны null</exception>
        </member>
        <member name="P:Intermech.Interfaces.Client.WorkCopyCommandOptionsEventArgs.Items">
            <summary>
            Возвращает выделенные элементы навигатора, к которым будет применена команда.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.WorkCopyCommandOptionsEventArgs.ContextServices">
            <summary>
            Возвращает контейнер сервисов окружения для команды, в которую должны быть помещены дополнительные опции выполнения.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.WorkCopyCommandOptionsEventArgs.ContextServicesEditors">
            <summary>
            Возвращает коллекцию, в которую должны быть помещены редакторы дополнительных опций выполнения.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Calendars.CalendarEvents">
            <summary>События, связанные с календарём</summary>
        </member>
        <member name="T:Intermech.Interfaces.Show.IDllIndex">
            <summary>интерфейс работы с DLL</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IDllIndex.Index">
            <summary>положение в DLL</summary>
        </member>
        <member name="T:Intermech.Interfaces.Show.IShowDwg">
            <summary>интерфейс работы с Show</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IShowDwg.Blocks">
            <summary>массив блоков</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IShowDwg.Layouts">
            <summary>массив компоновок</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IShowDwg.Layers">
            <summary>массив слоёв</summary>
        </member>
        <member name="M:Intermech.Interfaces.Show.IShowDwg.SetClip(Intermech.RectangleD)">
            <summary>установить границу прорисовки(мм)</summary>
            <param name="box">граница прорисовки, Empty - рисовать всё</param>
        </member>
        <member name="T:Intermech.Interfaces.Show.IBlock">
            <summary>интерфейс работы с блоком</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IBlock.Name">
            <summary>имя блока</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IBlock.Bounds">
            <summary>пересчитать границы включённых слоёв для блока</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IBlock.BoundsAll">
            <summary>габариты блока при всех слоях</summary>
        </member>
        <member name="M:Intermech.Interfaces.Show.IBlock.Paint(System.Drawing.Graphics,Intermech.RectangleD,System.Double)">
            <summary>рисовать графику блока GDI+</summary>
            <param name="graphics">Graphics для рисования</param>
            <param name="clipBox">Границы для рисования, = RectangleD.Empty - безграниц</param>
            <param name="epsilon">погрешность поиска нерисуемой рамки</param>
        </member>
        <member name="M:Intermech.Interfaces.Show.IBlock.Paint(Syncfusion.Pdf.Graphics.PdfGraphics,Intermech.RectangleD,System.Double)">
            <summary>рисовать графику блока PDF</summary>
            <param name="graphics">Graphics для рисования PDF</param>
            <param name="clipBox">Границы для рисования, = RectangleD.Empty - безграниц</param>
            <param name="epsilon">погрешность поиска нерисуемой рамки</param>
        </member>
        <member name="T:Intermech.Interfaces.Show.IBlockTable">
            <summary>интерфейс работы с массивом блоков</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IBlockTable.Length">
            <summary>длинна списка блоков</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IBlockTable.Array">
            <summary>массив блоков</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.IBlockTable.Item(System.Int32)">
            <summary>получить по индексу в массиве сам блок</summary>
            <param name="index">индекс в массиве</param>
            <returns>блок</returns>
        </member>
        <member name="T:Intermech.Interfaces.Show.ILayout">
            <summary>интерфейс работы с компоновкой</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayout.Name">
            <summary>имя компоновки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayout.Bounds">
            <summary>пересчитать границы включённых слоёв для компоновки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayout.BoundsAll">
            <summary>габариты компоновки при всех слоях</summary>
        </member>
        <member name="M:Intermech.Interfaces.Show.ILayout.Paint(System.Drawing.Graphics)">
            <summary>рисовать графику компоновки безграниц GDI+</summary>
            <param name="graphics">Graphics для рисования</param>
        </member>
        <member name="M:Intermech.Interfaces.Show.ILayout.Paint(System.Drawing.Graphics,Intermech.RectangleD,System.Double)">
            <summary>рисовать графику компоновки GDI+</summary>
            <param name="graphics">Graphics для рисования</param>
            <param name="clipBox">Границы для рисования, = RectangleD.Empty - безграниц</param>
            <param name="epsilon">погрешность поиска нерисуемой рамки</param>
        </member>
        <member name="M:Intermech.Interfaces.Show.ILayout.Paint(Syncfusion.Pdf.Graphics.PdfGraphics,Intermech.RectangleD,System.Double)">
            <summary>рисовать графику компоновки PDF</summary>
            <param name="graphics">Graphics для рисования PDF</param>
            <param name="clipBox">Границы для рисования, = RectangleD.Empty - безграниц</param>
            <param name="epsilon">погрешность поиска нерисуемой рамки</param>
        </member>
        <member name="T:Intermech.Interfaces.Show.ILayoutTable">
            <summary>интерфейс работы с массивом компоновок</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayoutTable.Length">
            <summary>длинна массива компоновок</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayoutTable.InFile">
            <summary>компоновка	с которой сохранён чертёж</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayoutTable.Array">
            <summary>массив компоновок</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayoutTable.Item(System.Int32)">
            <summary>получить по индексу в массиве саму компоновку</summary>
            <param name="index">индекс в таблице</param>
            <returns>компоновка</returns>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayoutTable.Item(Intermech.Interfaces.Show.ILayout)">
            <summary>получить по компоновке индекс в массиве</summary>
            <param name="vitem">компоновка</param>
            <returns>индекс в массиве</returns>
        </member>
        <member name="T:Intermech.Interfaces.Show.ILayer">
            <summary>интерфейс работы со слоем</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayer.Name">
            <summary>имя слоя</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayer.Visible">
            <summary>состояние слоя : true - включена видимость</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayer.Bound">
            <summary>габариты слоя</summary>
        </member>
        <member name="T:Intermech.Interfaces.Show.ILayerTable">
            <summary>интерфейс работы с массивом слоёв</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayerTable.Length">
            <summary>длинна массива слоёв</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayerTable.Item(System.Int32)">
            <summary>получить по индексу сам слой</summary>
            <param name="index">индекс в массиве</param>
            <returns>слой</returns>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayerTable.Bounds">
            <summary>пересчитать границы включённых слоёв</summary>
        </member>
        <member name="P:Intermech.Interfaces.Show.ILayerTable.BoundsAll">
            <summary>габариты при всех слоях</summary>
        </member>
        <member name="T:Intermech.Interfaces.IContextServicesStack`1">
            <summary>Интерфейс стека однотипных сервисов в локальном контексте.
                     Позволяет организовывать работу однотивных сервисов, находящихся во вложенных друг в
                     друга контейнерах. Например "фильтрация команд контекстного меню должна осуществляться контролом, а так же всеми
                     контролами, в которые он вложен (поддерживающих сервис фильтрации команд)"</summary>
            <typeparam name="ServiceType">Тип сервиса</typeparam>
        </member>
        <member name="P:Intermech.Interfaces.IContextServicesStack`1.Enumeration">
            <summary>Перечисление сервисов (соотв. сервис данного контекста и всех контекстов, в которые он входит)</summary>
        </member>
        <member name="T:Intermech.Interfaces.ContextServicesStack`1">
            <summary>База для стека однотипных сервисов в локальном контексте.
                     Позволяет организовывать работу однотивных сервисов, находящихся во вложенных друг в
                     друга контейнерах. Например "фильтрация команд контекстного меню должна осуществляться контролом, а так же всеми
                     контролами, в которые он вложен (поддерживающих сервис фильтрации команд)"</summary>
            <typeparam name="ServiceType">Тип сервиса</typeparam>
        </member>
        <member name="M:Intermech.Interfaces.ContextServicesStack`1.#ctor(System.ComponentModel.Design.IServiceContainer,`0)">
            <summary>Конструктор</summary>
            <param name="localContext">Локальный контекст (контейнер сервисов)</param>
            <param name="localService">Локальный сервис, которые будут доступен только в данном контексте</param>
        </member>
        <member name="P:Intermech.Interfaces.ContextServicesStack`1.Enumeration">
            <summary>Перечисление сервисов, сложенных в стек в данном контексте</summary>
        </member>
        <member name="T:Intermech.Interfaces.Extensions.ContextServicesStackFuncs">
            <summary>Класс для расширения над контейнером серсисов, упрощающего регистрацию провайдера локальных команд не удаляя приэтом команды вышестоящего
                     контекста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Extensions.ContextServicesStackFuncs.AddLocalService``1(System.ComponentModel.Design.IServiceContainer,``0)">
            <summary>Класс для расширение над контейнером серсисов, упрощающего регистрацию локальных сервисов в формате стека однотипных сервисов в
                     контексте. Например "фильтрация команд контекстного меню должна осуществляться контролом, а так же всеми
                     контролами, в которые он вложен (поддерживающих сервис фильтрации команд)"</summary>
        </member>
        <member name="M:Intermech.Interfaces.Extensions.ContextServicesStackFuncs.RemoveLocalService``1(System.ComponentModel.Design.IServiceContainer,``0)">
            <summary>Класс для расширение над контейнером серсисов, упрощающего регистрацию локальных сервисов в формате стека однотипных сервисов в
                     контексте. Например "фильтрация команд контекстного меню должна осуществляться контролом, а так же всеми
                     контролами, в которые он вложен (поддерживающих сервис фильтрации команд)"</summary>
        </member>
        <member name="M:Intermech.Interfaces.Extensions.ContextServicesStackFuncs.SuspendLocalService``1(System.ComponentModel.Design.IServiceContainer,System.Func{Intermech.Interfaces.ContextServicesStack{``0}},``0)">
            <summary>Засуспендить в контексте сервиса Может потребоваться например для того, чтобы во вложенном в диалог (который является
                     провайдером комманд) пользовательском контроле, запретить отображаться дополнительным командам, создаваемым диалогом</summary>
            <param name="localContext">Контекст</param>
            <param name="constructor">Конструктор стека сервисов</param>
            <param name="localService">Сервис, который должен быть засуспенжен в данном контексте (в контексте будет стек сервисов без онного)</param>
        </member>
        <member name="T:Intermech.Interfaces.StandaloneView.IStandaloneViewSettingsService">
            <summary>
            Клиентский сервис для доступа к настройкам типов объектов для режима автономного просмотра.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.StandaloneView.IStandaloneViewSettingsService.GetEffectiveSettings(System.Int32)">
            <summary>
            Возвращает настройки для указанного типа объектов с учетом настроек базовых типов объектов.
            </summary>
            <param name="objectType">Идентификатор типа объекта</param>
            <returns>Объект с настройками</returns>
        </member>
        <member name="M:Intermech.Interfaces.StandaloneView.IStandaloneViewSettingsService.TryLoadSettings(System.Int32)">
            <summary>
            Загружает собственные настройки для указанного типа объектов, при этом настройки для базовых типов объектов не используются.
            Метод используется редактором настроек.
            </summary>
            <param name="objectType">Идентификатор типа объектов</param>
            <returns>Объект с настройками или null</returns>
            <exception cref="T:ArgumentException">objectType</exception>
        </member>
        <member name="M:Intermech.Interfaces.StandaloneView.IStandaloneViewSettingsService.SaveSettings(System.Int32,Intermech.Interfaces.StandaloneView.StandaloneViewObjectTypeSettings)">
            <summary>
            Сохраняет собственные настройки для указанного типа объектов.
            Метод используется редактором настроек.
            </summary>
            <param name="objectType">Идентификатор типа объектов</param>
            <param name="settings">Объект с настройками</param>
            <exception cref="T:ArgumentException">objectType</exception>
            <exception cref="T:ArgumentNullException">settings</exception>
        </member>
        <member name="M:Intermech.Interfaces.StandaloneView.IStandaloneViewSettingsService.RemoveSettings(System.Int32)">
            <summary>
            Удаляет собственные настройки для указанного типа объектов.
            Метод используется редактором настроек.
            </summary>
            <param name="objectType">Идентификатор типа объектов</param>
        </member>
        <member name="T:Intermech.Interfaces.StandaloneView.StandaloneViewVars">
            <summary>
            Класс содержит динамические переменные, позволяющие изменять поведение команд пользовательского интерфейса,
            предназначенных для автономного просмотра документов.
            </summary>
            <remarks>
            <para>
            В режиме автономного просмотра документов в содержимое или файл просматриваемого документа внедряются
            дополнительные сведения - актуальные подписи документа, контрольная сумма файла, атрибуты документа, 
            заполняемые после согласования документа, и др.</para>
            <para>
            Динамические переменные, описанные в этом классе, изменяют поведение некоторых специализированных команд автономного просмотра.</para>
            </remarks>
        </member>
        <member name="P:Intermech.Interfaces.StandaloneView.StandaloneViewVars.IsActive">
            <summary>
            Возвращает или задает признак активации автономного просмотра в контексте
            текущего действия в интерфейсе пользователя. По умолчанию не активировано.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.StandaloneView.StandaloneViewVars.AdjustSettingsInDialogMode">
            <summary>
            Включает и выключает диалоговый режим предварительной коррекции настроек автономного просмотра,
            выполняемой перед просмотром каждого документа по команде "Смотреть...". По умолчанию режим выключен.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.ClipboardObjectsList">
            <summary> 
            Список объектов, помещённых в буфер обмена
            Поддерживает интерфейс ICutCopy, чтобы иметь возможность отличать вырезаные объекты от скопированых
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.ClipboardObjectsList.#ctor(System.Collections.ArrayList,System.Boolean)">
            <summary>
            Создать список объектов
            </summary>
            <param name="idList">Список объектов</param>
            <param name="isCut">true - объекты были помещены в список с помощью команды Вырезать</param>
        </member>
        <member name="M:Intermech.Interfaces.ClipboardObjectsList.#ctor(System.Collections.ArrayList,System.Boolean,Intermech.Navigator.Interfaces.IIOSource,Intermech.DataFormats.IDBTypedObjectID)">
            <summary>
            Создать список объектов
            </summary>
            <param name="idList">Список объектов</param>
            <param name="isCut">true - объекты были помещены в список с помощью команды Вырезать</param>
            <param name="source">Информация об источнике объектов idList</param>
        </member>
        <member name="M:Intermech.Interfaces.ClipboardObjectsList.#ctor(System.Collections.ArrayList,System.Boolean,System.Boolean,Intermech.Navigator.Interfaces.IIOSource,Intermech.DataFormats.IDBTypedObjectID)">
            <summary>
            Создать список объектов
            </summary>
            <param name="idList">Список объектов</param>
            <param name="isCut">true - объекты были помещены в список с помощью команды Вырезать</param>
            <param name="source">Информация об источнике объектов idList</param>
        </member>
        <member name="F:Intermech.Interfaces.ClipboardObjectsList._isCut">
            <summary>
            Признак того, что в буфер обмена помещены не скопированые, а вырезаные объекты
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.ClipboardObjectsList._needToCopyRelationAttrs">
            <summary>
            Нужно ли копировать атрибуты связи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.ClipboardObjectsList._source">
            <summary>
            Информация об источнике объектов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.ClipboardObjectsList.IsCut">
            <summary> Признак того, что в буфер обмена помещены не скопированые, а вырезаные объекты </summary>
        </member>
        <member name="P:Intermech.Interfaces.ClipboardObjectsList.NeedToCopyRelationAttrs">
            <summary> Нужно ли копировать атрибуты связи </summary>
        </member>
        <member name="P:Intermech.Interfaces.ClipboardObjectsList.ImageIndex">
            <summary> Индекс иконки </summary>
        </member>
        <member name="P:Intermech.Interfaces.ClipboardObjectsList.Source">
            <summary>
            Источник объектов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.ClipboardObjectsList.ToString">
            <summary> Преобразование в строку </summary>
            <returns> Строковое представление того, что находиться в буфере обмена </returns>
        </member>
        <member name="T:Intermech.Interfaces.Imbase.IImbaseSelector">
            <summary>
            Сервис для выбора объектов из IMBASE.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.GetConverterForTableRecordRefFlag">
            <summary>
            Получение конвертера для атрибутов у которых выставлен флаг AttributeOptions.ImbaseFlag_TableRecordRef.
            </summary>
            <returns>Конвертер атрибута</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.GetEditorForTableRecordRefFlag">
            <summary>
            Получение редактора для атрибутов, у которых выставлен флаг AttributeOptions.ImbaseFlag_TableRecordRef.
            </summary>
            <returns>Редактор атрибута</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.GetDescriberForTableRecordRefFlag">
            <summary>
            Получение описателя атрибутов, у которых выставлен флаг AttributeOptions.ImbaseFlag_TableRecordRef, для применения в службе подписки на редактирование атрибутов в формах и карточках объектов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.SelectFromCatalog(System.String,System.String,System.Object,System.Boolean,System.Boolean,System.Int32[],System.Int32,System.Int64,System.Object)">
            <summary>
            Выбирает один объект из указанного Каталога.
            </summary>
            <param name="caption">Заголовок окна при выборе</param>
            <param name="description"></param>
            <param name="catalogId">Идентификатор Каталога ( Guid, Идентификатор версии(Int64) или имя (string))</param>
            <param name="rawObject">Указывает, создавать ли объект нового типа(false) или вернуть сам выбранный объект(true)</param>
            <param name="commitCreation">Указывает создавать ли объект в базе (true) или возвращать заготовку (возвращает отрицательный objectId)</param>
            <param name="allowedTypes">Список базовых объектов IMBASE, которые могут быть выбраны</param>
            <param name="needType">Тип создаваемого объекта или -1 для типа, определяемого по атрибутам</param>
            <param name="contextObjsID">Идентификатор изделия</param>
            <param name="selectedItemsAnalyzer">Кастомный анализатор, передается когда работа стандартного анализатора противоречит логике</param>
            <returns>Идентификатор выбранного объекта или -1 при отмене выбора</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.SelectFromCatalog(System.String,System.String,System.Object,System.Boolean,System.Boolean,System.Int32[],System.Int32)">
            <summary>
            Выбирает один объект из указанного Каталога.
            </summary>
            <param name="caption">Заголовок окна при выборе</param>
            <param name="description"></param>
            <param name="catalogId">Идентификатор Каталога ( Guid, Идентификатор версии(Int64) или имя (string))</param>
            <param name="rawObject">Указывает, создавать ли объект нового типа(false) или вернуть сам выбранный объект(true)</param>
            <param name="commitCreation">Указывает создавать ли объект в базе (true) или возвращать заготовку (возвращает отрицательный objectId)</param>
            <param name="allowedTypes">Список базовых объектов IMBASE, которые могут быть выбраны</param>
            <param name="needType">Тип создаваемого объекта или -1 для типа, определяемого по атрибутам</param>
            <returns>Идентификатор выбранного объекта или -1 при отмене выбора</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.SelectFromCatalog(System.String,System.String,System.Object,System.Int32,System.Int64)">
            <summary>
            
            </summary>
            <param name="caption"></param>
            <param name="description"></param>
            <param name="catalogObject"></param>
            <param name="needType"></param>
            <param name="contextObjsID">Идентификатор изделия</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.SelectFromCatalog(System.Object,System.Int64)">
            <summary>
            
            </summary>
            <param name="catalogObject"></param>
            <param name="selectedID"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.SelectFromCatalog(Intermech.Interfaces.Client.Imbase.ImbaseSelectorParams)">
            <summary>
            Выбор из указанного Каталога одного объекта 
            </summary>
            <param name="selectorParams"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.CreateFromCatalog(System.Object,System.Int64)">
            <summary>
            Создать объект на основе выбранной записи каталога IMBASE
            (используется при заполнении атрибута материал)
            </summary>
            <param name="catalogObject">выбранный каталог</param>
            <param name="selectedID">и запись в каталоге</param>
            <returns> id созданного материала</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.SelectRecord(System.String,System.String,System.Int64)">
            <summary>
            Выбирает запись IMBASE.
            </summary>
            <param name="caption">Заголовок окна при выборе</param>
            <param name="description"></param>
            <param name="contextObjsID">Идентификатор объекта</param>
            <returns>Идентификатор ссылки а таблицу IMBASE и номер записи или null при отмене выбора</returns>
            <remarks>Если передается contextObjsID, то у объекта получаем объект IMBASE, на который он ссылается, и позиционируемся на этом объекте</remarks>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.SelectRecord(System.Int64,System.String,System.String)">
            <summary>
            Выбирает запись IMBASE.
            </summary>
            <param name="imbaseObjID">Идентификатор объекта IMBASE (каталога или папки)</param>
            <param name="caption">Заголовок окна при выборе</param>
            <param name="description">Описание</param>
            <returns>Идентификатор ссылки а таблицу IMBASE и номер записи или null при отмене выбора</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.DynamicSelection(System.String,System.String,System.Object,System.Boolean,System.Boolean,System.Int32,Intermech.Interfaces.Client.DynamicSelectionEventHandler,System.Int64)">
            <summary>
            Динамический выбор из IMBASE без накопления результатов выбора. При выборе объекта
            он обрабатывается ядром и в делегат передается идентификатор выбранного объекта.
            </summary>
            <param name="caption">Заголовок окна при выборе</param>
            <param name="description"></param>
            <param name="catalogId">Идентификатор Каталога ( Guid, Идентификатор версии(Int64) или имя (string))</param>
            <param name="rawObject">Указывает, создавать ли объект нового типа(false) или вернуть сам выбранный объект(true)</param>
            <param name="commitCreation">Указывает создавать ли объект в базе (true) или возвращать заготовку (возвращает отрицательный objectId)</param>
            <param name="needType">Тип создаваемого объекта или -1 для типа, определяемого по атрибутам</param>
            <param name="dynamicSelection">Делегат, который принимает события о выборе объекта. Ес</param>
            <param name="contextObjsID">Идентификатор изделия</param>
            <returns>Возвращает массив идентификаторов выбранных объектов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.DynamicSelection(System.String,System.String,System.Object,System.Boolean,System.Boolean,System.Int32,Intermech.Interfaces.Client.DynamicSelectionEventHandler)">
            <summary>
            Динамический выбор из IMBASE без накопления результатов выбора. При выборе объекта
            он обрабатывается ядром и в делегат передается идентификатор выбранного объекта.
            </summary>
            <param name="caption">Заголовок окна при выборе</param>
            <param name="description"></param>
            <param name="catalogId">Идентификатор Каталога ( Guid, Идентификатор версии(Int64) или имя (string))</param>
            <param name="rawObject">Указывает, создавать ли объект нового типа(false) или вернуть сам выбранный объект(true)</param>
            <param name="commitCreation">Указывает создавать ли объект в базе (true) или возвращать заготовку (возвращает отрицательный objectId)</param>
            <param name="needType">Тип создаваемого объекта или -1 для типа, определяемого по атрибутам</param>
            <param name="dynamicSelection">Делегат, который принимает события о выборе объекта. Ес</param>
            <returns>Возвращает массив идентификаторов выбранных объектов</returns>
        </member>
        <member name="P:Intermech.Interfaces.Imbase.IImbaseSelector.ContextObjectId">
            <summary>
            Идентификатор объекта-контекста выбора ( ID таблицы или ссылки на таблицу). Используется при выборе записи таблицы.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.CatalogsForObjectAtt(System.Int32,System.Int32)">
            <summary>
            Возвращает список каталогов, которым назначен через атрибут
            Imbase.Consts.ObjectTypeAndAttCatalogLinkID :" Привязка к типу объекта, атрибуту"
            список пар вида [тип объекта:тип атрибута].
            </summary>
            <param name="objectType">Тип объекта</param>
            <param name="attType">Тип атрибута</param>
            <returns>Список идентификаторов объектов типа Каталог IMBASE</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.GetImbaseObjectAttrLinks(System.Int32)">
            <summary>
            Get all object types + attributes links to imbase catalogs
            by attribute Imbase.Consts.ObjectTypeAndAttCatalogLinkID (with object's type hierarchy).
            </summary>
            <param name="objectType">Object type id</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.GetImbaseObjectAttrLinks">
            <summary>
            Get all object types + attributes links to imbase catalogs
            by attribute Imbase.Consts.ObjectTypeAndAttCatalogLinkID (without object's type hierarchy).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.GetObjectIdByOldImbaseKey(System.String,System.Int32,System.Boolean)">
            <summary>
            Позволяет получить идентификатор объекта по старому ключу IMBASE.
            </summary>
            <param name="oldImbaseKey">Старый ключ IMBASE</param>
            <param name="objectType">Тип объектов, среди которых искать</param>
            <param name="createIfNotFound">создавать ли новый объект, если не найден</param>
            <returns>Идентификатор версии объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.GetObjectIdByImbaseKey(System.String,System.Boolean)">
            <summary>
            Позволяет получить идентификатор объекта по ключу IMBASE.
            </summary>
            <param name="imbaseKey">Ключ IMBASE</param>
            <param name="createIfNotFound">создавать ли новый объект, если не найден( в случае старого ключа)</param>
            <returns>Идентификатор версии объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.SelectRecord(System.String,System.Boolean)">
            <summary>
            Формирование ключа "Ссылка на запись таблицы IMBASE".
            </summary>
            <param name="strImbaseKey">Ранее сформированный ключ</param>
            <param name="useGuid">Использовать GUID как идентификатор ярлыка вместо ID</param>		
            <returns>Новый ключ. Если строка пустая то запись таблицы не была выбрана</returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.GetRootDescriptor(System.Collections.Generic.List{System.Int64})">
            <summary>
            Получить виртуальный нод "Каталоги и справочники IMBASE".
            </summary>
            <param name="catalogIDs">Список идентификаторов каталогов, которые необходимо отобразить</param>
            <returns>Виртуальный нод "Каталоги и справочники IMBASE"</returns>
            <remarks>Если список идентификаторов каталогов пуст или null, то отображается все дерево IMBASE</remarks>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.SelectImbaseObjects(System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.Int32},System.IServiceProvider)">
            <summary>
            
            </summary>
            <param name="catalogIDs"></param>
            <param name="typeIDs"></param>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.IImbaseSelector.GetImbaseDescriptor(System.Int32,System.Int32)">
            <summary>
            Возвращает дескриптор для указанного атрибута в контексте типа объекта, на основании свойства атрибута "Справочник Imbase".
            Если тип объекта не задан, читает свойство "Справочник Imbase" у атрибута.
            Если тип атрибута не задан - вернет дескриптор из всех каталогов, из которых можно выбрать
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Imbase.ImbaseObjectAttrLink">
            <summary>
            Object type + attribute to imbase catalog link 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Imbase.ImbaseObjectAttrLink._objectTypeID">
            <summary>
            Object type id.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Imbase.ImbaseObjectAttrLink._attribiteID">
            <summary>
            Attribute type id.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Imbase.ImbaseObjectAttrLink._imbaseObjID">
            <summary>
            Imbase object id.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Imbase.ImbaseObjectAttrLink.#ctor(System.Int32,System.Int32,System.Int64)">
            <summary>
            Constructor.
            </summary>
            <param name="objectTypeID"></param>
            <param name="attributeID"></param>
            <param name="imbaseObjID"></param>
        </member>
        <member name="T:Intermech.Interfaces.IBigImageList">
            <summary>
            Сервис для работы с большими 48x48 картинками
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.IBigImageList.Add(System.Drawing.Image,System.String)">
            <summary>
            Добавляет картинку в список.
            </summary>
            <param name="image">Картинками для добавления. Копия не создается, image.Dispose() не нужен</param>
            <param name="name">Имя картинки</param>
            <returns>Индекс в списке</returns>
        </member>
        <member name="M:Intermech.Interfaces.IBigImageList.ImageIndex(System.String)">
            <summary>
            Возвращает индекс картинки по имени
            </summary>
            <param name="name">Требуемое имя</param>
            <returns>Индекс в списке или -1.</returns>
        </member>
        <member name="P:Intermech.Interfaces.IBigImageList.ImageList">
            <summary>
            Объект ImageList для размера 48x48
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.IBigImageList.ImageName(System.Int32)">
            <summary>
             Возвращает имя картинки по ее индексу
            </summary>
            <param name="imageIndex">Индекс картинки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.IBigImageList.AddStrip(System.Drawing.Image,System.String[])">
            <summary>
            Добавляет группу изображений в список
            </summary>
            <param name="images">Группа изображений</param>
            <param name="names">Имена изображений</param>
            <returns>Индекс первого изображения в списке</returns>
        </member>
        <member name="T:Intermech.Interfaces.IDoubleNamedImageList">
            <summary>
            Сервис для работы с именоваными иконками
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.IDoubleNamedImageList.Add(System.Drawing.Icon,System.String)">
            <summary>
            Добавляет иконку в список. Для двухразмерных списков иконка
            может содержать размеры 16х16 и 32х32
            </summary>
            <param name="icon">Иконка для добавления</param>
            <param name="name">Имя иконки</param>
            <returns>Индекс в списке</returns>
            <remarks>В зависимости от назначения списка, внутренний размер изображени может
            быть и не 16х16.</remarks>
        </member>
        <member name="M:Intermech.Interfaces.IDoubleNamedImageList.Add(System.Drawing.Image,System.String)">
            <summary>
            Добавляет изображение в список. Для двухразмерных списков иконка
            увеличивается в размер 32х32 если она 16х16 или уменьшается до 16
            </summary>
            <param name="image">Изображение</param>
            <param name="name">Имя изображения</param>
            <returns>Индекс в списке</returns>
        </member>
        <member name="M:Intermech.Interfaces.IDoubleNamedImageList.Add(System.Drawing.Image,System.Drawing.Image,System.String)">
            <summary>
            Добавляет изображения в список.
            </summary>
            <param name="image16">Изображение</param>
            <param name="image32">Увеличенное изображение</param>
            <param name="name">Имя изображения</param>
            <returns>Индекс в списке</returns>
        </member>
        <member name="M:Intermech.Interfaces.IDoubleNamedImageList.AddStrip(System.Drawing.Image,System.String[])">
            <summary>
            Добавляет группу изображений в список
            </summary>
            <param name="images">Группа изображений</param>
            <param name="names">Имена изображений</param>
            <returns>Индекс первого изображения в списке</returns>
        </member>
        <member name="M:Intermech.Interfaces.IDoubleNamedImageList.AddStrip(System.Drawing.Image,System.Drawing.Image,System.String[])">
            <summary>
            Добавляет группу изображений в список
            </summary>
            <param name="images16">Группа изображений 16х16</param>
            <param name="images32">Группа изображений 32х32</param>
            <param name="names">Имена изображений</param>
            <returns>Индекс первого изображения в списке</returns>
        </member>
        <member name="M:Intermech.Interfaces.IDoubleNamedImageList.ImageIndex(System.String)">
            <summary>
            Возвращает индекс иконки по имени
            </summary>
            <param name="name">Требуемое имя</param>
            <returns>Индекс в списке или -1.</returns>
        </member>
        <member name="P:Intermech.Interfaces.IDoubleNamedImageList.ImageList">
            <summary>
            Объект ImageList для размера 16х16
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.IDoubleNamedImageList.BigImageList">
            <summary>
            Объект ImageList для размера 32х32
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.INamedImageList">
            <summary>
            Сервис для работы с именоваными иконками
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.INamedImageList.Add(System.Drawing.Icon,System.String)">
            <summary>
            Добавляет иконку в список.
            </summary>
            <param name="icon">Иконка для добавления. При добавлении создается копия, поэтому может потребоваться Dispose()</param>
            <param name="name">Имя иконки</param>
            <returns>Индекс в списке</returns>
            <remarks>В зависимости от назначения списка, внутренний размер изображени может
            быть и не 16х16.</remarks>
        </member>
        <member name="M:Intermech.Interfaces.INamedImageList.Add(System.Drawing.Image,System.String)">
            <summary>
            Добавляет изображение в список.
            </summary>
            <param name="image">Изображение. При добавлении создается копия, поэтому может потребоваться Dispose()</param>
            <param name="name">Имя изображения</param>
            <returns>Индекс в списке</returns>
        </member>
        <member name="M:Intermech.Interfaces.INamedImageList.AddStrip(System.Drawing.Image,System.String[])">
            <summary>
            Добавляет группу изображений в список
            </summary>
            <param name="images">Группа изображений.</param>
            <param name="names">Имена изображений</param>
            <returns>Индекс первого изображения в списке</returns>
        </member>
        <member name="M:Intermech.Interfaces.INamedImageList.ImageIndex(System.String)">
            <summary>
            Возвращает индекс иконки по имени
            </summary>
            <param name="name">Требуемое имя</param>
            <returns>Индекс в списке или -1.</returns>
        </member>
        <member name="P:Intermech.Interfaces.INamedImageList.ImageList">
            <summary>
            Объект ImageList для размера 16х16
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.INamedImageList.ImageName(System.Int32)">
            <summary>
             Возвращает имя иконки по ее индексу
            </summary>
            <param name="imageIndex">Индекс иконки</param>
            <returns>Имя иконки</returns>
        </member>
        <member name="T:Intermech.Interfaces.ISplashService">
            <summary>
            Сервис для работы с SplashScreen
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.ISplashService.Steps">
            <summary>
            Количество шагов ProgressBar
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.ISplashService.Position">
            <summary>
            Текущее положение ProgressBar
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.ISplashService.StepName">
            <summary>
            Имя текущего шага
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.ISplashService.StepDescription">
            <summary>
            Описание текущего шага
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.ISplashService.StepIt">
            <summary>
            Увеличение текущей позиции в ProgressBar
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.ISplashService.CloseSplash">
            <summary>
            Закрывает окно SplashScreen
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.ParamsStorage.IParamsStorageObject">
            <summary>
            Объект-контейнер параметров / настроек
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.ParamsStorage.IParamsStorageObject.ObjectID">
            <summary>
            Ид. версии объекта контейнера
            </summary>
            <remarks>Без крайней необходимости не использовать</remarks>
        </member>
        <member name="P:Intermech.Interfaces.ParamsStorage.IParamsStorageObject.StorageName">
            <summary>
            Имя объекта контейнера
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageObject.GetFormDesignIDs">
            <summary>
            Получение списка форм редактирования, назначеннных контейнеру
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageObject.SetFormDesignIDs(System.Int64[])">
            <summary>
            Назначение форм редактирования контейнеру
            </summary>
            <param name="formIDs"></param>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageObject.GetAttributeValues">
            <summary>
            Получение списка значений атрибутов, назначенных контейнеру
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageObject.SetAttributeValues(Intermech.Interfaces.AttributeValues[],System.Boolean)">
            <summary>
            Назначение значений атрибутов контейнеру
            </summary>
            <param name="attrValues"></param>
            <param name="deleteNotExistingAttr">Удалять несуществующие атрибуты</param>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageObject.ShowDialog(System.String,Intermech.Interfaces.AttributeValues[]@)">
            <summary>
            Отображение диалога с формами ввода/редактирования
            </summary>
            <remarks>Если формы не заданы - метод вернет false. 
            Результирующие значения атрибутов сохраняются в контейнере</remarks>
            <param name="caption">Заголовок окна</param>
            <param name="resultValues">Результитующий список значений атрибутов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageObject.ShowDialog(System.String,System.Boolean,Intermech.Interfaces.AttributeValues[]@)">
            <summary>
            Отображение диалога с формами ввода/редактирования
            </summary>
            <remarks>Если формы не заданы - метод вернет false</remarks>
            <param name="caption">Заголовок окна</param> 
            <param name="temporaryMode">Флаг режима сохранения результирующих. False - результат не сохраняется в контейнер</param>
            <param name="resultValues">Результитующий список значений атрибутов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageObject.ShowDialog(System.String,System.Boolean,Intermech.Interfaces.AttributeValues[],Intermech.Interfaces.AttributeValues[]@)">
            <summary>
            Отображение диалога с формами ввода/редактирования
            </summary>
            <remarks>Если формы не заданы - метод вернет false</remarks>
            <param name="caption">Заголовок окна</param>
            <param name="temporaryMode">Флаг режима сохранения результирующих. False - результат не сохраняется в контейнер</param>
            <param name="paramValues">Cписок атрибутов - параметров</param>
            <param name="resultValues">Результитующий список значений атрибутов</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.ParamsStorage.IParamsStorageService">
            <summary>
            Интерфейс службы параметров (начальных настроек)
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageService.RegisterObject(System.String,System.Boolean)">
             <summary>
             Создание / регистрация объекта-контейнера параметров
             </summary>
             <param name="storagеName">Имя объекта-контейнера</param>
             <param name="exceptionIfExists">
             True  - генерируется ошибка при попытке создать контейнер с имененем, уже существующим в базе.
             False - возвращается ранее созданый контейнер.
             </param>
            <remarks>В качестве имени контейнера могут выступать любые строковые значения (наприм. тестовые представления GUID и их комбинации),
            длиной до 450 символов</remarks>
             <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageService.GetObject(System.String)">
            <summary>
            Получение объекта - контейнера по его имени
            </summary>
            <param name="storageName">Имя объекта-контейнера</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.ParamsStorage.IParamsStorageService.RemoveObject(System.String)">
            <summary>
            Удаление объекта - контейнера
            </summary>
            <param name="storageName">Имя объекта-контейнера</param>
        </member>
        <member name="F:Intermech.AutoUpdater.AutoUpdaterErrorDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.AutoUpdater.AutoUpdaterErrorDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.AutoUpdater.AutoUpdaterErrorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Intermech.AutoUpdater.AutoUpdaterMessageDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.AutoUpdater.AutoUpdaterMessageDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.AutoUpdater.AutoUpdaterMessageDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Intermech.Commands.CommandFactory.OnCreateCommand">
            <summary>
            Событие создания команды.
            </summary>
        </member>
        <member name="T:Intermech.Commands.ExtendedSelectedItemsCommand">
            <summary>
            Расширенный вариант класса <see cref="T:Intermech.Commands.SelectedItemsCommand"/>, 
            предоставляющий дополнительные точки расширения.
            </summary>
        </member>
        <member name="M:Intermech.Commands.ExtendedSelectedItemsCommand.DoBeforeProceedItems(Intermech.Interfaces.IUserSession)">
            <summary>
            Уведомление перед началом обработки объектов
            </summary>
            <param name="session"></param>
            <remarks>В ряде случаев нужно знать есть ли общая сессия для всех объектов</remarks>
        </member>
        <member name="M:Intermech.Commands.ExtendedSelectedItemsCommand.DoAfterProceedItems(Intermech.Interfaces.IUserSession)">
            <summary>
            Уведомление после окончания обработки объектов
            </summary>
            <param name="session">В ряде случаев нужно знать есть ли общая сессия для всех объектов</param>
        </member>
        <member name="M:Intermech.Commands.ExtendedSelectedItemsCommand.DoBeforeProceedItem(System.Int32)">
            <summary>
            Уведомление перед началом обработки объекта
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Intermech.Commands.ExtendedSelectedItemsCommand.DoAfterProceedItem(System.Int32)">
            <summary>
            Уведомление после окончания обработки объекта
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Intermech.Commands.Command">
            <summary>
            Базовый класс для команд клиента IPS, поддерживающих централизованное создание и управление.
            </summary>
        </member>
        <member name="M:Intermech.Commands.Command.#ctor(System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="name">Имя команды</param>
            <exception cref="T:ArgumentException">Параметр <paramref name="name"/> не должен быть пуст или равен null</exception>
        </member>
        <member name="P:Intermech.Commands.Command.Name">
            <summary>
            Возвращает имя команды.
            </summary>
        </member>
        <member name="P:Intermech.Commands.Command.DisplayName">
            <summary>
            Возвращает или задает название команды, отображаемое в диалоговых окнах.
            По умолчанию значение свойства равно имени команды.
            </summary>
            <exception cref="T:ArgumentNullException">Новое значение свойства не должно быть равно null</exception>
        </member>
        <member name="P:Intermech.Commands.Command.Notifications">
            <summary>
            Возвращает или задает очередь событий обновления интерфейса пользователя.
            </summary>
            <exception cref="T:ArgumentNullException">Новое значение свойства не должно быть равно null</exception>
        </member>
        <member name="P:Intermech.Commands.Command.UpdateUI">
            <summary>
            Включает или выключает рассылку событий обновления интерфейса пользователя.
            </summary>
        </member>
        <member name="P:Intermech.Commands.Command.ContextServices">
            <summary>
            Возвращает или задает контейнер сервисов окружения, в котором команда будет выполнена.
            По умолчанию свойство указывает на пустой контейнер.
            </summary>
            <exception cref="T:ArgumentNullException">Новое значение свойства не должно быть равно null</exception>
        </member>
        <member name="M:Intermech.Commands.Command.Execute">
            <summary>
            Выполняет команду.
            </summary>
        </member>
        <member name="M:Intermech.Commands.Command.DoExecute">
            <summary>
            Выполняет команду.
            </summary>
        </member>
        <member name="M:Intermech.Commands.Command.FlushNotificationQuery">
            <summary>
            Отправка событий гна выполнение 
            </summary>
        </member>
        <member name="T:Intermech.Commands.CommandEvents">
            <summary>
            Содержит глобальные события для команд клиента IPS, поддерживающих централизованное создание и управление.
            </summary>
        </member>
        <member name="E:Intermech.Commands.CommandEvents.CommandStarted">
            <summary>
            Событие начала выполнения команды.
            </summary>
        </member>
        <member name="E:Intermech.Commands.CommandEvents.CommandFinished">
            <summary>
            Событие окончания выполнения команды. Событие срабатывает как при успешном выполнении команды,
            так и при необработанном исключении при выполнении команды.
            </summary>
        </member>
        <member name="T:Intermech.Commands.CommandStack">
            <summary>
            Стек выполняющихся команд клиента IPS, поддерживающих централизованное создание и управление.
            </summary>
        </member>
        <member name="P:Intermech.Commands.CommandStack.ActiveCommand">
            <summary>
            Возвращает команду, выполняющуюся в данный момент на текущем потоке.
            Значение свойства может быть равно null, если ни одна команда не выполняется.
            </summary>
        </member>
        <member name="T:Intermech.Commands.CreateCommandEventArgs">
            <summary>
            Аргументы события создания команды.
            </summary>
        </member>
        <member name="M:Intermech.Commands.CreateCommandEventArgs.#ctor(System.Type,System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="commandType">Тип создаваемой команды, который должен быть унаследован от класса <see cref="T:Command"/></param>
            <param name="commandName">Имя создаваемой команды</param>
            <exception cref="T:ArgumentNullException">Параметры <paramref name="commandType"/>, <paramref name="commandName"/> не должны быть равны null</exception>
            <exception cref="T:ArgumentException">Параметр <paramref name="commandType"/> унаследован не от типа <see cref="T:Command"/>; параметр <paramref name="commandName"/> не должен быть пуст</exception>
        </member>
        <member name="P:Intermech.Commands.CreateCommandEventArgs.CommandType">
            <summary>
            Возвращает тип создаваемой команды.
            </summary>
        </member>
        <member name="P:Intermech.Commands.CreateCommandEventArgs.CommandName">
            <summary>
            Возвращает имя создаваемой команды.
            </summary>
        </member>
        <member name="P:Intermech.Commands.CreateCommandEventArgs.Command">
            <summary>
            Возвращает или задает созданную команду.
            </summary>
            <exception cref="T:ArgumentException">Тип созданной команды унаследован не от требуемого типа</exception>
        </member>
        <member name="M:Intermech.Commands.SelectedItemsCommand.Init(Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider,System.Object)">
            <summary>
            Инициализация комманды
            </summary>
            <param name="items">Коллекция элементов пространства навигации</param>
            <param name="viewServices">Провайдер сервисов контекста, в котором создается команда. Параметр может быть не задан</param>
            <param name="additionalInfo">Дополнительная информация для команды. Параметр может быть не задан</param>
        </member>
        <member name="P:Intermech.Commands.SelectedItemsCommand.Items">
            <summary>
            Возвращает коллекцию элементов пространства навигации.
            </summary>
        </member>
        <member name="P:Intermech.Commands.SelectedItemsCommand.AdditionalInfo">
            <summary>
            Возвращает или задает дополнительную информацию для команды. 
            Значение свойства может быть не задано и равно null.
            </summary>
        </member>
        <member name="P:Intermech.Commands.SelectedItemsCommand.CommonOptions">
            <summary>
            Возвращает или задает общие опции выполнения команды.
            Значение свойства может быть не задано и равно null.
            </summary>
            <remarks>
            Общие опции выполнения команды могут быть переданы команде двумя способами: либо через этого свойство,
            либо через свойство <see cref="P:Command.ContextServices"/> в виде объекта типа <see cref="T:ObjectCommandsOptionsHolder"/>.
            Значение этого свойства более приоритетно, чем значение свойства <see cref="P:Command.ContextServices"/>.
            </remarks>
        </member>
        <member name="M:Intermech.Commands.SelectedItemsCommand.GetCommonOptions">
            <summary>
            Получение общих опций выполнения команд.
            </summary>
            <returns>Общие опции выполнения команд</returns>
        </member>
        <member name="T:Intermech.Commands.AfterObjectCommandArgs">
            <summary>
            Аргументы для события, рассылаемого после применения команды к объекту IPS.
            </summary>
        </member>
        <member name="M:Intermech.Commands.AfterObjectCommandArgs.#ctor(System.Int64,System.Int64)">
            <summary>
            Создает объект.
            </summary>
            <param name="objectId">Идентификатор версии объекта IPS после применения команды. Значение может быть не задано, если объект IPS был удален</param>
            <param name="oldObjectId">Идентификатор версии объекта IPS до применения команды. Значение должно быть задано</param>
        </member>
        <member name="P:Intermech.Commands.AfterObjectCommandArgs.ObjectId">
            <summary>
            Возвращает идентификатор версии объекта IPS после применения команды.
            Значение может быть не задано, если объект IPS был удален.
            </summary>
        </member>
        <member name="P:Intermech.Commands.AfterObjectCommandArgs.OldObjectId">
            <summary>
            Возвращает идентификатор версии объекта IPS до применения команды.
            </summary>
        </member>
        <member name="P:Intermech.Commands.AfterObjectCommandArgs.IsObjectRemoved">
            <summary>
            Возвращает признак, что объект IPS был удален.
            </summary>
        </member>
        <member name="P:Intermech.Commands.AfterObjectCommandArgs.IsObjectCopyReplaced">
            <summary>
            Возвращает признак, что рабочая копия объекта была заменена архивной (или наоборот).
            </summary>
        </member>
        <member name="P:Intermech.Commands.ObjectCommand.CommonOptions">
            <summary>
            Возвращает или задает общие опции выполнения команды.
            Значение свойства может быть не задано и равно null.
            </summary>
            <remarks>
            Общие опции выполнения команды могут быть переданы команде двумя способами: либо через этого свойство,
            либо через свойство <see cref="P:Command.ContextServices"/> в виде объекта типа <see cref="T:ObjectCommandsOptionsHolder"/>.
            Значение этого свойства более приоритетно, чем значение свойства <see cref="P:Command.ContextServices"/>.
            </remarks>
        </member>
        <member name="M:Intermech.Commands.ObjectCommand.GetCommonOptions">
            <summary>
            Получение общих опций выполнения команд.
            </summary>
            <returns>Общие опции выполнения команд</returns>
        </member>
        <member name="T:Intermech.Commands.ObjectCommandsOptionsHolder">
            <summary>
            Контейнер опций для команд, выполняемых над информационными объектами IPS
            </summary>
        </member>
        <member name="M:Intermech.Commands.ObjectCommandsOptionsHolder.#ctor">
            <summary>
            Создать пустой контейнер опций
            </summary>
        </member>
        <member name="M:Intermech.Commands.ObjectCommandsOptionsHolder.#ctor(Intermech.Commands.ObjectCommandsOptions)">
            <summary>
            Создать заполненный контейнер опций
            </summary>
            <param name="options">Опции для команд, выполняемых над информационными объектами IPS</param>
        </member>
        <member name="P:Intermech.Commands.ObjectCommandsOptionsHolder.Options">
            <summary>
            Опции для команд, выполняемых над информационными объектами IPS
            </summary>
        </member>
        <member name="T:Intermech.Commands.ObjectCommandsOptions">
            <summary>
            Опции для команд, выполняемых над информационными объектами IPS
            </summary>
        </member>
        <member name="F:Intermech.Commands.ObjectCommandsOptions.None">
            <summary>
            Никаких опций не задано
            </summary>
        </member>
        <member name="F:Intermech.Commands.ObjectCommandsOptions.PreserveWorkingCopies">
            <summary>
            Не удалять рабочие копии объектов при выполнении команды "Завершить редактирование".
            Если флажок задан, у объектов на сервере вызывается IDBObject.SaveToArcCopy() вместо Checkin()
            </summary>
        </member>
        <member name="F:Intermech.Commands.ObjectCommandsOptions.NoConfirmation">
            <summary>
            Не запрашивать у пользователя потверждения выполнения комманды
            </summary>    
            <remarks>При условии что команда поддерживает данный режим</remarks>
        </member>
        <member name="F:Intermech.Commands.ObjectCommandsOptions.NonInteractive">
            <summary>
            Выполнить команду без отображения диалогов и индикаторов хода выполнения
            </summary>    
            <remarks>При условии что команда поддерживает данный режим</remarks>
        </member>
        <member name="T:Intermech.DataFormats.DBObjectToCompare">
            <summary>
            Формат для передачи данных об объектах, файлы которых надо сравнить
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectToCompare.ObjectID">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectToCompare.ObjectTypeID">
            <summary>
            Идентификатор типа объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectToCompare.Caption">
            <summary>
            Заголовок объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectToCompare.NameInMessages">
            <summary>
            Возвращает строку для отображения имени объекта в информационных сообщениях
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectToCompare.VersionID">
            <summary>
            Порядковый номер версии объекта
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.DBSimpleObject">
            <summary>
            Класс для хранения минимальной информации об объекте, которая часто нужна для работы c данными на интерфейсе клиента
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBSimpleObject.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBSimpleObject.GetHashCode">
            <summary>
            Получить 32-битный хэш-код объекта
            </summary>
            <returns>32-битный хэш-код объекта</returns>
        </member>
        <member name="T:Intermech.DataFormats.SelectionChangedEventHandler">
            <summary>Делегат для события, информирующего о том, что список идентификаторов выбранных версий объектов изменился,
                     например пользователем были выбраны другие версии объектов</summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBObjectsSource">
            <summary>Интерфейс источника информации об выбранных версиях объектов</summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBObjectsSource.ObjectVersionIDs">
            <summary>Список идентификаторов версий объектов</summary>
        </member>
        <member name="E:Intermech.DataFormats.IDBObjectsSource.Changed">
            <summary>Событие, информирующее о том, что список идентификаторов выбранных версий объектов изменился,
                     например пользователем были выбраны другие версии объектов</summary>
        </member>
        <member name="T:Intermech.DataFormats.DBAttributeGroupID">
            <summary>
            Объект-формат для передачи сведений об идентификаторах 
            атрибутов базы данных между различными частями системы. Доступ
            к передаваемой информации осуществляется через интерфейс
            IDBAttributeID.
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.DBAttributeID">
            <summary>
            Объект-формат для передачи сведений об идентификаторах 
            атрибутов базы данных между различными частями системы. Доступ
            к передаваемой информации осуществляется через интерфейс
            IDBAttributeID.
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.DBCheckedOutByID">
            <summary>
            Объект-формат для передачи сведений об идентификаторах связей 
            между различными частями системы. Доступ к передаваемой
            информации осуществляется через интерфейс IDBCheckedOutID.
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBCheckedOutByID._objectID">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBCheckedOutByID._checkedOutBy">
            <summary>
            Идентификатор пользователя, взявшего объект на изменение
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBCheckedOutByID._owner">
            <summary>
            Владелец объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBCheckedOutByID.ObjectID">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBCheckedOutByID.CheckedOutBy">
            <summary>
            Идентификатор пользователя, взявшего объект на изменение
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBCheckedOutByID.Owner">
            <summary>
            Владелец объекта
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBCheckedOutByID.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="checkedOutBy">Идентификатор пользователя, взявшего объект на изменение</param>
            <param name="owner">Владелец объекта</param>
        </member>
        <member name="M:Intermech.DataFormats.DBCheckedOutByID.Equals(System.Object)">
            <summary>
            Сравнить экземпляр класса с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBCheckedOutByID.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра объекта
            </summary>
            <returns>32-битный хэш-код экземпляра объекта</returns>
        </member>
        <member name="T:Intermech.DataFormats.DBLCStepID">
            <summary>
            Объект-формат для передачи данных шаге жизненного цикла
            через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBLCStepID._lcStepID">
            <summary>
            Шаг жизненного цикла
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBLCStepID._lcStep">
            <summary>
            Название шага жизненного цикла
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBLCStepID.LCStepID">
            <summary>
            Шаг жизненного цикла
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBLCStepID.LCStep">
            <summary>
            Название шага жизненного цикла
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBLCStepID.#ctor(System.Int32,System.String)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="lcStepID">Шаг жизненного цикла</param>
            <param name="lcStep">Название шага жизненного цикла</param>
        </member>
        <member name="M:Intermech.DataFormats.DBLCStepID.Equals(System.Object)">
            <summary>
            Сравнить экземпляр класса с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBLCStepID.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра объекта
            </summary>
            <returns>32-битный хэш-код экземпляра объекта</returns>
        </member>
        <member name="T:Intermech.DataFormats.DBObjectID">
            <summary>
            Объект-формат для передачи сведений об идентификаторах объектов
            базы данных между различными частями системы. Доступ к передаваемой
            информации осуществляется через интерфейс IDBObjectID.
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBObjectID._objID">
            <summary>
            Идентификатор версии объекта (F_OBJECT_ID)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBObjectID._id">
            <summary>
            Идентификатор объекта (F_ID)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBObjectID._caption">
            <summary>
            Заголовок объекта
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBObjectID._owner">
            <summary>
            Владелец объекта
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectID.#ctor(System.Int64,System.Int64,System.String,System.Int64)">
            <summary>
            Конструктор
            </summary>
            <param name="objID">Идентификатор версии объекта (F_OBJECT_ID)</param>
            <param name="id">Идентификатор объекта</param>
            <param name="caption">Заголовок объекта</param>
            <param name="owner">Владелец объекта</param>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectID.#ctor(Intermech.Interfaces.ObjectSystemPropertiesEx)">
            <summary>
            Конструктор
            </summary>
            <param name="objID">Идентификатор версии объекта (F_OBJECT_ID)</param>
            <param name="id">Идентификатор объекта</param>
            <param name="caption">Заголовок объекта</param>
            <param name="owner">Владелец объекта</param>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectID.#ctor(Intermech.DataFormats.IDBObjectID)">
            <summary>
            Конструктор
            </summary>
            <param name="source"></param>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectID.Value">
            <summary>
            Идентификатор версии объекта (F_OBJECT_ID)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectID.ID">
            <summary>
            Идентификатор объекта (F_ID)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectID.Caption">
            <summary>
            Заголовок объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectID.Owner">
            <summary>
            Владелец объекта
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectID.CompareTo(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Сравнить с указанным объектом</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectID.CompareTo(Intermech.DataFormats.IDBObjectID)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectID.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectID.GetHashCode">
            <summary>
            Получить 32-битный хэш-код объекта
            </summary>
            <returns>32-битный хэш-код объекта</returns>
        </member>
        <member name="T:Intermech.DataFormats.DBObjectTypeID">
            <summary>
            Объект-формат для передачи сведений об идентификаторах типов объектов
            базы данных между различными частями системы. Доступ к передаваемой
            информации осуществляется через интерфейс IDBObjectTypeID.
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.DBRelationID">
            <summary>
            Объект-формат для передачи сведений об идентификаторах связей 
            между различными частями системы. Доступ к передаваемой
            информации осуществляется через интерфейс IDBRelationID.
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBRelationID._relationID">
            <summary>
            Идентификатор связи между объектами
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBRelationID._partID">
            <summary>
            Идентификатор версии объекта, входящего по этой связи в другой объект
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBRelationID._relationType">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBRelationID._sorting">
            <summary>
            Значение атрибута "Сортировка"
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBRelationID._projID">
            <summary>
            Идентификатор версии родительского объекта
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBRelationID._relGuid">
            <summary>
            Guid связи
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBRelationID.#ctor(System.Int64,System.Int64,System.Int32,System.Int64,System.Guid,System.Int64)">
            <summary>
            Создать экземпляр объекта
            </summary>
            <param name="relationID">Идентификатор связи между объектами</param>
            <param name="partID">Идентификатор версии объекта, входящего по этой связи в другой объект</param>
            <param name="relTypeID">Идентификатор типа связи или -1, если требуется определять её автоматически</param>
            <param name="sorting">Значение атрибута "Сортировка"</param>
            <param name="relGuid">Guid связи</param>
            <param name="projID">Идентификатор версии родительского объекта</param>
        </member>
        <member name="P:Intermech.DataFormats.DBRelationID.Value">
            <summary>
            Идентификатор связи между объектами
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBRelationID.PartID">
            <summary>
            Идентификатор версии объекта, входящего по этой связи в другой объект
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBRelationID.RelationType">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBRelationID.Sorting">
            <summary>
            Значение атрибута "Сортировка"
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBRelationID.ProjID">
            <summary>
            Идентификатор версии родительского объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBRelationID.RelGuid">
            <summary>
            Guid связи
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBRelationID.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBRelationID.GetHashCode">
            <summary>
            Получить 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="T:Intermech.DataFormats.DBObjectFiltrationState">
            <summary>
            Класс для получения статуса подбора версии объекта
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBObjectFiltrationState._state">
            <summary>
            Статус фильтрации текущего объекта по правилу подбора версий
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectFiltrationState.#ctor(Intermech.Interfaces.ObjectFiltrationState)">
            <summary>
            Создать экземпляр объекта
            </summary>
            <param name="state">Статус фильтрации текущего объекта по правилу подбора версий</param>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectFiltrationState.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectFiltrationState.GetHashCode">
            <summary>
            Получить 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectFiltrationState.State">
            <summary>
            Статус фильтрации текущего объекта по правилу подбора версий
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.DBSelectionID">
            <summary>
            Объект-формат для передачи сведений об выборках. 
            Доступ к передаваемой информации осуществляется через интерфейс IDBSelectionID.
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSelectionID._id">
            <summary>
            Идентификатор объекта
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSelectionID._objectID">
            <summary>
            Идентификатор версии выборки
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSelectionID._handSelection">
            <summary>
            Является ли выборка ручной
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSelectionID._selectionType">
            <summary>
            Принадлежность выборки
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBSelectionID.#ctor(System.Int64,System.Int64,System.Boolean,Intermech.SelectionType)">
            <summary>
            Создать экземпляр объекта
            </summary>
            <param name="objectID">Идентификатор версии выборки</param>
            <param name="id">Идентификатор объекта</param>
            <param name="handSelection">Является ли выборка ручной</param>
            <param name="selectionType">Принадлежность выборки</param>
        </member>
        <member name="P:Intermech.DataFormats.DBSelectionID.ObjectID">
            <summary>
            Идентификатор версии объекта (выборки)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSelectionID.ID">
            <summary>
            Идентификатор объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSelectionID.HandSelection">
            <summary>
            Является ли выборка ручной
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSelectionID.Type">
            <summary>
            Принадлежность выборки 
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBSelectionID.Equals(System.Object)">
            <summary>
            Сравнить два объекта
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBSelectionID.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра объекта
            </summary>
            <returns>32-битный хэш-код экземпляра объекта</returns>
        </member>
        <member name="T:Intermech.DataFormats.DBObjectTypeSelectionID">
            <summary>
            Объект-формат для передачи сведений о типах объектов, связанных с выборками.
            Доступ к передаваемой информации осуществляется через интерфейс IDBObjectTypeSelectionID.
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBObjectTypeSelectionID._bindedObjectTypeID">
            <summary>
            Идентификатор типа объекта, с которым связана выборка
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectTypeSelectionID.#ctor(System.Int64,System.Int64,System.Boolean,Intermech.SelectionType)">
            <summary>
            Создать экземпляр объекта
            </summary>
            <param name="objectID">Идентификатор версии выборки</param>
            <param name="id">Идентификатор объекта</param>
            <param name="handSelection">Является ли выборка ручной</param>
            <param name="selectionType">Принадлежность выборки</param>
        </member>
        <member name="M:Intermech.DataFormats.DBObjectTypeSelectionID.#ctor(System.Int64,System.Int64,System.Boolean,Intermech.SelectionType,System.Int32)">
            <summary>
            Создать экземпляр объекта
            </summary>
            <param name="objectID">Идентификатор версии выборки</param>
            <param name="id">Идентификатор объекта</param>
            <param name="handSelection">Является ли выборка ручной</param>
            <param name="selectionType">Принадлежность выборки</param>
            <param name="bindedObjectTypeID">Идентификатор типа объекта, с которым связана выборка</param>
        </member>
        <member name="P:Intermech.DataFormats.DBObjectTypeSelectionID.BindedObjectTypeID">
            <summary>
            Идентификатор типа объекта, с которым связана выборка
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.DBSpecificationObjectID">
            <summary>
            Объект-формат для передачи сведений о дочерних объектах спецификации
            между различными частями системы
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.relationID">
            <summary>
            Идентификатор связи
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.relationTypeID">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.projID">
            <summary>
            Идентификатор версии родительского объекта
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.designation">
            <summary>
            Обозначение объекта (атрибут объекта)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.name">
            <summary>
            Наименование объекта (атрибут объекта)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.zone">
            <summary>
            Зона (атрибут связи)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.position">
            <summary>
            Позиция (атрибут связи)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.format">
            <summary>
            Формат (атрибут объекта)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.quantity">
            <summary>
            Количество (атрибут связи)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.remark">
            <summary>
            Примечание (атрибут связи)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBSpecificationObjectID.sectionID">
            <summary>
            Идентификатор раздела спецификации, в котором находится объект (атрибут связи)
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.#ctor(System.Int32,System.Int64,System.Int64,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="objTypeID">Тип объекта</param>
            <param name="objID">Идентификатор версии объекта</param>
            <param name="id">Идентификатор объекта</param>
            <param name="caption">Заголовок</param>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.#ctor(System.Int32,System.Int64,System.Int64,System.String,System.Int64,System.Int32,System.Int64,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            Конструктор
            </summary>
            <param name="objTypeID">Тип объекта</param>
            <param name="objID">Идентификатор версии объекта</param>
            <param name="id">Идентификатор объекта</param>
            <param name="caption">Заголовок</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="relationTypeID">Идентификатор типа связи</param>
            <param name="projID">Идентификатор версии родительского объекта</param>
            <param name="designation">Обозначение объекта (атрибут объекта)</param>
            <param name="name">Наименование объекта (атрибут объекта)</param>
            <param name="zone">Зона (атрибут связи)</param>
            <param name="position">Позиция (атрибут связи)</param>
            <param name="format">Формат (атрибут объекта)</param>
            <param name="quantity">Количество (атрибут связи)</param>
            <param name="remark">Примечание (атрибут связи)</param>
            <param name="sectionID">Идентификатор раздела спецификации, в котором находится объект (атрибут связи)</param>
            <param name="version">Номер версии объекта</param>
            <param name="baseVersion">Признак базовой версии</param>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.#ctor(Intermech.Interfaces.IUserSession,System.Int64,System.Int64)">
            <summary>
            Конструктор
            </summary>
            <param name="session">Сессия</param>
            <param name="objID">Идентификатор версии объекта</param>
            <param name="relationID">Идентификатор связи</param>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.Load(Intermech.Interfaces.IUserSession,System.Int64,System.Int64)">
            <summary>
            Загрузить информацию из базы данных в экземпляр класса
            </summary>
            <param name="session">Сессия</param>
            <param name="objID">Идентификатор версии объекта</param>
            <param name="relationID">Идентификатор связи</param>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.GetAttrAsString(Intermech.Interfaces.IDBObject,System.String)">
            <summary>
            Получить значение указанного атрибута объекта в виде строки
            </summary>
            <param name="obj">Объект</param>
            <param name="attrGuid">Идентификатор атрибута</param>
            <returns>Значение атрибута в виде строки</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.GetAttrAsInt64(Intermech.Interfaces.IDBObject,System.String)">
            <summary>
            Получить значение указанного атрибута объекта в виде Int64
            </summary>
            <param name="obj">Объект</param>
            <param name="attrGuid">Идентификатор атрибута</param>
            <returns>Значение атрибута в виде Int64</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.GetAttrAsString(Intermech.Interfaces.IDBRelation,System.String)">
            <summary>
            Получить значение указанного атрибута связи в виде строки
            </summary>
            <param name="rel">Связь</param>
            <param name="attrGuid">Идентификатор атрибута</param>
            <returns>Значение атрибута в виде строки</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.GetAttrAsInt64(Intermech.Interfaces.IDBRelation,System.String)">
            <summary>
            Получить значение указанного атрибута связи в виде Int64
            </summary>
            <param name="rel">Связь</param>
            <param name="attrGuid">Идентификатор атрибута</param>
            <returns>Значение атрибута в виде Int64</returns>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.RelationID">
            <summary>
            Идентификатор связи
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.RelationTypeID">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.ProjID">
            <summary>
            Идентификатор версии родительского объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.Designation">
            <summary>
            Обозначение объекта (атрибут объекта)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.Name">
            <summary>
            Наименование объекта (атрибут объекта)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.Zone">
            <summary>
            Зона (атрибут связи)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.Position">
            <summary>
            Позиция (атрибут связи)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.Format">
            <summary>
            Формат (атрибут объекта)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.Quantity">
            <summary>
            Количество (атрибут связи)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.Remark">
            <summary>
            Примечание (атрибут связи)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBSpecificationObjectID.SectionID">
            <summary>
            Идентификатор раздела спецификации, в котором находится объект (атрибут связи)
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBSpecificationObjectID.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="T:Intermech.DataFormats.DBTypedObjectID">
            <summary>
            Объект-формат для передачи сведений об идентификаторах и типах
            объектов базы данных между различными частями системы. Доступ
            к передаваемой информации осуществляется через интерфейс
            IDBTypedObjectID.
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBTypedObjectID._objTypeID">
            <summary>
            Тип объекта
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBTypedObjectID._version">
            <summary>
            Номер версии
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBTypedObjectID._baseVersion">
            <summary>
            Признак базовой версии объекта (1). В дальнейшем
            может содержать дополнительные признаки (битовые флажки)
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBTypedObjectID._siteID">
            <summary>
            Узлы информационной системы
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.DBTypedObjectID._modificationID">
            <summary>
            Номер группы изменений (не равна 0 - объект принадлежит контексту редактирования)
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBTypedObjectID.#ctor(System.Int32,System.Int64,System.Int64,System.String,System.Int64,System.Int64,System.Int64,System.String,System.Int64)">
            <summary>
            Конструктор
            </summary>
            <param name="objTypeID">Тип объекта</param>
            <param name="objID">Идентификатор версии объекта</param>
            <param name="id">Идентификатор объекта</param>
            <param name="caption">Заголовок</param>
            <param name="owner">Владелец объекта</param>
            <param name="version">Номер версии</param>
            <param name="baseVersion">Признак базовой версии</param>
            <param name="siteID">Узлы информационной системы</param>
            <param name="modificationID">Номер группы изменений (не равна 0 - объект принадлежит контексту редактирования)</param>
        </member>
        <member name="M:Intermech.DataFormats.DBTypedObjectID.#ctor(Intermech.Interfaces.ObjectSystemPropertiesEx)">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBTypedObjectID.#ctor(Intermech.DataFormats.IDBTypedObjectID)">
            <summary>
            Конструктор
            </summary>
            <param name="source">Прототип</param>
        </member>
        <member name="P:Intermech.DataFormats.DBTypedObjectID.ObjectType">
            <summary>
            Тип объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBTypedObjectID.ObjectID">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBTypedObjectID.Version">
            <summary>
            Номер версии
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBTypedObjectID.BaseVersion">
            <summary>
            Признак базовой версии объекта (1). В дальнейшем
            может содержать дополнительные признаки (битовые флажки)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBTypedObjectID.SiteID">
            <summary>
            Узлы информационной системы
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.DBTypedObjectID.ModificationID">
            <summary>
            Номер группы изменений (не равна 0 - объект принадлежит контексту редактирования)
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.DBTypedObjectID.CompareTo(Intermech.DataFormats.IDBTypedObjectID)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBTypedObjectID.CompareTo(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Сравнить с указанным объектом</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBTypedObjectID.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.DBTypedObjectID.GetHashCode">
            <summary>
            Получить 32-битный хэш-код экземпляра объекта
            </summary>
            <returns>32-битный хэш-код экземпляра объекта</returns>
        </member>
        <member name="T:Intermech.DataFormats.ClipboardObject">
            <summary> 
            Объект, помещаемый в буфер обмена IPS при операциях Копировать и Вырезать
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.ClipboardObject.#ctor(Intermech.DataFormats.IDBTypedObjectID,Intermech.DataFormats.IDBRelationID)">
            <summary>Создать экземпляр класса</summary>
            <param name="iDBTypedObjectID"> Интерфейс, описывающий пару тип объекта + его идентификатор </param>
            <param name="iDBRelationID"> Интерфейс, описывающий связь, входящей в объект </param>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.IDBTypedObjectID">
            <summary> Интерфейс, описывающий пару тип объекта + его идентификатор </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.IDBRelationID">
            <summary> Интерфейс, описывающий связь, входящей в объект </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.ObjectType">
            <summary> Идентификтаор типа объекта </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.ObjectID">
            <summary> Идентификатор версии объекта </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.ID">
            <summary> Идентификатор объекта </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.Caption">
            <summary>
            Заголовок объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.Owner">
            <summary>
            Владелец объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.Version">
            <summary>
            Номер версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.BaseVersion">
            <summary>
            Признак базовой версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.SiteID">
            <summary>
            Узел информационной системы
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.ModificationID">
            <summary>
            Номер группы изменений (не равна 0 - объект принадлежит контексту редактирования)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.Value">
            <summary> Идентификатор связи </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.PartID">
            <summary> Идентификатор дочернего объекта </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.RelationType">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.Sorting">
            <summary>
            Значение атрибута "Сортировка"
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.ProjID">
            <summary>
            Идентификатор версии родительского объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ClipboardObject.RelGuid">
            <summary>
            Guid связи
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.ClipboardObject.ToString">
            <summary>
            Вернуть строковое описание объекта из буфера обмена
            </summary>
            <returns>Cтроковое описание объекта из буфера обмена</returns>
        </member>
        <member name="T:Intermech.DataFormats.ICutCopy">
            <summary>
            Интерфейс для передачи данных об типе операции (Вырезать, Копировать) при этих операциях через буфер обмена IPS
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ICutCopy.IsCut">
            <summary>
            Флаг операции: true - объект вырезан, false - объект скопирован
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ICutCopy.NeedToCopyRelationAttrs">
            <summary>
            Необходимость копирования информации об атрибутах связи: true - копируем, false - не копируем
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.ICutCopy.ImageIndex">
            <summary>
            Индекс иконки в глобальной коллекции именованных значков NamedImageList
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDataFormatFilter">
            <summary>
            Интерфейс фильтра, позволяющий определить, удовлетворяют ли данные
            определенного формата заданным в фильтре условиям. Основное применение
            этого интерфейса - фильтрация иерархии дерева навигатора при обработке
            событий обновления.
            Примечание! Объекты, реализующие этот интерфейс должны также 
            реализовывать ICloneable. В определенных ситуациях навигатор создает
            несколько копий одного и того же фильтра, которые должны изменяться
            методами Join и Disjoin независимо друг от друга.
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.IDataFormatFilter.Join(Intermech.DataFormats.IDataFormatFilter)">
            <summary>
            Объединяет условия данного фильтра с условиями фильтра, переданного
            в качестве параметра.
            </summary>
            <param name="filter">Фильтр, условия которого должны быть объединены с условиями данного фильтра/// </param>
            <returns>Возращает true, если условия удалось объединить, инача - false</returns>
        </member>
        <member name="M:Intermech.DataFormats.IDataFormatFilter.Disjoin(Intermech.DataFormats.IDataFormatFilter)">
            <summary>
            Исключает из условий данного фильтра условия фильтра, переданного в
            качестве параметра.
            </summary>
            <param name="filter">Фильтр, условия которого должны быть исключены</param>
            <returns>Возращает true, если условия удалось исключить, инача - false</returns>
        </member>
        <member name="M:Intermech.DataFormats.IDataFormatFilter.CanPassData(System.Object)">
            <summary>
            Проверяет, удовлетворяет ли объект условиям фильтра.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.DataFormats.IDBAttributeGroupID">
            <summary>
            Интерфейс-формат для передачи данных идентификаторах атрибутов // и о типах 
            базы данных через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBAttributeGroupIDCollection">
            <summary>
            Коллекция идентификаторов атрибутов базы данных
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBAttributeID">
            <summary>
            Интерфейс-формат для передачи данных идентификаторах атрибутов // и о типах 
            базы данных через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBAttributeIDCollection">
            <summary>
            Коллекция идентификаторов атрибутов базы данных
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBCheckedOutByID">
            <summary>
            Интерфейс-формат для передачи данных об идентификаторах связей
            базы данных через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBCheckedOutByID.ObjectID">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBCheckedOutByID.CheckedOutBy">
            <summary>
            Идентификатор пользователя, взявшего указанный объект на изменение
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBCheckedOutByID.Owner">
            <summary>
            Владелец объекта
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBLCStepID">
            <summary>
            Интерфейс-формат для передачи данных шаге жизненного цикла
            через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBLCStepID.LCStepID">
            <summary>
            Шаг жизненного цикла
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBLCStepID.LCStep">
            <summary>
            Название шага жизненного цикла
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBObjectID">
            <summary>
            Интерфейс-формат для передачи данных об идентификаторах объектов
            базы данных через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBObjectID.Value">
            <summary>
            Идентификатор версии объекта (F_OBJECT_ID)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBObjectID.ID">
            <summary>
            Идентификатор объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBObjectID.Caption">
            <summary>
            Заголовок объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBObjectID.Owner">
            <summary>
            Владелец объекта
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBObjectTypeID">
            <summary>
            Интерфейс-формат для передачи данных об идентификаторах типов объектов
            базы данных через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBObjectTypeID.Value">
            <summary>
            Идентификатор типа объекта (F_OBJECT_TYPE)
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBProjRelationID">
            <summary>
            Идентифицирует связь с помощью ее глобального идентификатора и идентификатора
            версии объекта, из которого эта связь выходит.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBProjRelationID.ProjectId">
            <summary>
            Возвращает идентификатор версии объекта, из которого связь выходит.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBProjRelationID.RelationGuid">
            <summary>
            Возвращает глобальный идентификатор связи.
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBRelationID">
            <summary>
            Интерфейс-формат для передачи данных об идентификаторах связей
            базы данных через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBRelationID.Value">
            <summary>
            Идентификатор связи между объектами
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBRelationID.PartID">
            <summary>
            Идентификатор версии объекта, входящего по этой связи в другой объект
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBRelationID.RelationType">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBRelationID.Sorting">
            <summary>
            Значение атрибута "Сортировка"
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBRelationID.ProjID">
            <summary>
            Идентификатор версии родительского объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBRelationID.RelGuid">
            <summary>
            Guid связи
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBObjectFiltrationState">
            <summary>
            Интерфейс для получения статуса подбора версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBObjectFiltrationState.State">
            <summary>
            Статус фильтрации текущего объекта по правилу подбора версий
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBSelectionID">
            <summary>
            Интерфейс-формат для передачи данных об идентификаторах выборок
            базы данных через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSelectionID.ObjectID">
            <summary>
            Идентификатор версии объекта (выборки)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSelectionID.ID">
            <summary>
            Идентификатор объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSelectionID.HandSelection">
            <summary>
            Является ли выборка ручной
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSelectionID.Type">
            <summary>
            Принадлежность выборки
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBObjectTypeSelectionID">
            <summary>
            Интерфейс-формат для передачи данных о типах объектов, с которыми связаны выборки
            базы данных через clipboard, а также между различными частями универсального клиента.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBObjectTypeSelectionID.BindedObjectTypeID">
            <summary>
            Идентификатор типа объекта, с которым связана выборка
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBSpecificationObjectID">
            <summary>
            Интерфейс объекта-формат для передачи сведений о дочерних объектах спецификации
            между различными частями системы
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.RelationID">
            <summary>
            Идентификатор связи
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.RelationTypeID">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.ProjID">
            <summary>
            Идентификатор версии родительского объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.Designation">
            <summary>
            Обозначение объекта (атрибут объекта)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.Name">
            <summary>
            Наименование объекта (атрибут объекта)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.Zone">
            <summary>
            Зона (атрибут связи)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.Position">
            <summary>
            Позиция (атрибут связи)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.Format">
            <summary>
            Формат (атрибут объекта)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.Quantity">
            <summary>
            Количество (атрибут связи)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.Remark">
            <summary>
            Примечание (атрибут связи)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBSpecificationObjectID.SectionID">
            <summary>
            Идентификатор раздела спецификации, в котором находится объект (атрибут связи)
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBTypedObjectID">
            <summary>
            Интерфейс-формат для передачи данных о типах и идентификаторах объектов
            базы данных через clipboard, а также между различными частями
            универсального клиента.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBTypedObjectID.ObjectType">
            <summary>
            Тип объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBTypedObjectID.ObjectID">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBTypedObjectID.Version">
            <summary>
            Номер версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBTypedObjectID.BaseVersion">
            <summary>
            Признак базовой версии объекта (1). В дальнейшем
            может содержать дополнительные признаки (битовые флажки)
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBTypedObjectID.SiteID">
            <summary>
            Узлы информационной системы
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBTypedObjectID.ModificationID">
            <summary>
            Номер группы изменений (не равна 0 - объект принадлежит контексту редактирования)
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBTypeIDs">
            <summary>
            Интерфейс-формат для передачи данных об идентификаторах типов объектов и связей
            базы данных через clipboard, а также между различными частями универсального клиента.
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBTypeIDs.ObjectTypeIDs">
            <summary>
            Список идентификаторов типов объектов
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IDBTypeIDs.RelationTypeIDs">
            <summary>
            Список идентификаторов типов связей
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.INavigatorIconInformation">
            <summary>
            Интерфейс какой-то информации для определения значков узлам в "Навигаторе"
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.INavigatorIconInformation.data">
            <summary>
            Какие-то данные, на основании которых может выполняться изменение стандартного значка
            для узла "Навигатора"
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.ObjectAction">
            <summary>
            Действия, выполняемые над объектами
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.Create">
            <summary>
            Объект был создан
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.CheckOut">
            <summary>
            Объект был взят на изменение
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.CheckIn">
            <summary>
            Изменения в объекте были завершены
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.CancelChanges">
            <summary>
            Изменения в объекте были отменены
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.SaveChanges">
            <summary>
            Изменения в объекте были сохранены
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.OpenInNewWindow">
            <summary>
            Объект был открыт в новом окне
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.Open">
            <summary>
            Объект был открыт
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.Edit">
            <summary>
            Объект редактировался
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.View">
            <summary>
            Объект просматривался
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.Print">
            <summary>
            Объект распечатывался
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.DisabledActions">
            <summary>
            Все действия запрещены
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.ObjectAction.AllActions">
            <summary>
            Все допустимые действия
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IRecentObjectID">
            <summary>
            Интерфейс, позволяющий получить информацию о недавнем объекте
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IRecentObjectID.ObjectID">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IRecentObjectID.Action">
            <summary>
            Действие, выполненное над объектом
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.IRecentObjectID.Date">
            <summary>
            Дата и время (UTC) выполнения этого действия
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.ITypedIDCollection">
            <summary>
            Коллекция типизированных идентификаторов всевозможных объектов (не
            только объектов БД) для передачи через clipboard, а также между
            различными частями системы. Типизация выполняется с помощью 
            интерфейсов-форматов данных.
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.IDBObjectTypedIDCollection">
            <summary>
            Коллекция типизированных идентификаторов объектов базы данных
            </summary>
        </member>
        <member name="T:Intermech.DataFormats.NavigatorIconInformation">
            <summary>
            Класс какой-то информации для определения значков узлам в "Навигаторе"
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.NavigatorIconInformation._data">
            <summary>
            Какие-то данные, на основании которых может выполняться изменение стандартного значка
            для узла "Навигатора"
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.NavigatorIconInformation.#ctor(System.Object)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="data">Какие-то данные, на основании которых может выполняться изменение стандартного значка
            для узла "Навигатора"</param>
        </member>
        <member name="P:Intermech.DataFormats.NavigatorIconInformation.data">
            <summary>
            Какие-то данные, на основании которых может выполняться изменение стандартного значка
            для узла "Навигатора"
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.NavigatorIconInformation.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.NavigatorIconInformation.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="T:Intermech.DataFormats.ObjectsArrayFilter">
            <summary>
            Проверяет, описывают ли данные в некотором формате объект БД, тип
            которого указан условиях фильтра. 
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.ObjectsArrayFilter.#ctor(Intermech.DataFormats.ObjectsArrayFilter)">
            <summary>
            Закрытый конструктор, предназначенный для создания клона фильтра.
            </summary>
            <param name="filter"></param>
        </member>
        <member name="M:Intermech.DataFormats.ObjectsArrayFilter.#ctor(System.Int32[])">
            <summary>
            Конструктор, позволяющий создать фильтр и указать типы объектов,
            которые он будет пропускать.
            </summary>
            <param name="objTypeIDs">Список id-ков типов объектов, пропускаемых фильтром</param>
        </member>
        <member name="T:Intermech.DataFormats.ObjectTypesArrayFilter">
            <summary>
            Проверяет, описывают ли данные в некотором формате тип объекта БД, 
            указанный в условиях фильтра. 
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.ObjectTypesArrayFilter.#ctor(Intermech.DataFormats.ObjectTypesArrayFilter)">
            <summary>
            Закрытый конструктор, предназначенный для создания клона фильтра
            </summary>
            <param name="filter"></param>
        </member>
        <member name="M:Intermech.DataFormats.ObjectTypesArrayFilter.#ctor(System.Int32[])">
            <summary>
            Конструктор, позволяющий создать фильтр и указать типы объектов,
            которые он будет пропускать.
            </summary>
            <param name="objTypeIDs">Список id-ков типов объектов, пропускаемых фильтром</param>
        </member>
        <member name="T:Intermech.DataFormats.RecentObjectID">
            <summary>
            Класс, позволяющий получить информацию о недавнем объекте
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.RecentObjectID._objectID">
            <summary>
            ID версии объекта
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.RecentObjectID._action">
            <summary>
            Действие, выполненное над объектом
            </summary>
        </member>
        <member name="F:Intermech.DataFormats.RecentObjectID._date">
            <summary>
            Дата и время (UTC) выполнения этого действия
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.RecentObjectID.ObjectID">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.RecentObjectID.Action">
            <summary>
            Действие, выполненное над объектом
            </summary>
        </member>
        <member name="P:Intermech.DataFormats.RecentObjectID.Date">
            <summary>
            Дата и время (UTC) выполнения этого действия
            </summary>
        </member>
        <member name="M:Intermech.DataFormats.RecentObjectID.CompareTo(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>-1, 0 или 1</returns>
        </member>
        <member name="M:Intermech.DataFormats.RecentObjectID.CompareTo(Intermech.DataFormats.RecentObjectID)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>-1, 0 или 1</returns>
        </member>
        <member name="M:Intermech.DataFormats.RecentObjectID.#ctor(System.Int64,Intermech.DataFormats.ObjectAction,System.DateTime)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="action">Действие, выполненное над объектом</param>
            <param name="date">Дата и время (UTC) выполнения этого действия</param>
        </member>
        <member name="M:Intermech.DataFormats.RecentObjectID.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.DataFormats.RecentObjectID.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра объекта
            </summary>
            <returns>32-битный хэш-код экземпляра объекта</returns>
        </member>
        <member name="T:Intermech.DataFormats.RejectingFilter">
            <summary>
            Отбрасывает данные любого формата. Используется элементами пространства
            навигации для исключения своих подиерархий из процесса обработки
            событий обновления в дереве навигатора.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IObligatoryAndBannedColumns">
            <summary>
            Интерфейс предоставляющий идентификаторы <see cref="P:Intermech.Navigator.Interfaces.NodeColumn.ID"/> обязательных и запрещённых наборов колонок.
            Может использоваться для указания требований по обязательному наличию или отсутствию
            определённых колонок и для получения их идентификаторов <see cref="P:Intermech.Navigator.Interfaces.NodeColumn.ID"/>.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IObligatoryAndBannedColumns.GetObligatoryColumnIDs">
            <summary>
            Возвращает перечисление идентификаторов <see cref="P:Intermech.Navigator.Interfaces.NodeColumn.ID"/> обязательных колонок.
            </summary>
            <returns>IEnumerable or null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IObligatoryAndBannedColumns.GetBannedColumnIDs">
            <summary>
            Возвращает перечисление идентификаторов <see cref="P:Intermech.Navigator.Interfaces.NodeColumn.ID"/> запрещённых колонок.
            </summary>
            <returns>IEnumerable or null</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.ParentNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.ImgList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.NeedTimerForServerRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.MaxElementCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.TimeDelay">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.Search(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.StopSearch">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.SelectNode(Intermech.Navigator.Interfaces.QuickSearch.QuickSearchResultItem)">
            <summary>
            
            </summary>
            <param name="resultNode"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.ServerRequestCallback(System.Action{System.Collections.Generic.List{Intermech.Navigator.Interfaces.QuickSearch.QuickSearchResultItem}})">
            <summary>
            
            </summary>
            <param name="resultCallback"></param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.ClientSearch(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.ClientSelectNode(Intermech.Navigator.Interfaces.QuickSearch.QuickSearchResultItem)">
            <summary>
            
            </summary>
            <param name="resultNode"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.ServerSearch(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="elementCount"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.On_serverTimer_Tick(System.Object)">
            <summary>
            
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.Start(System.Int32)">
            <summary>
            
            </summary>
            <param name="elementCount"></param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.BaseQuickSearchProvider.StartSearch(System.Int32)">
            <summary>
            
            </summary>
            <param name="elementCount"></param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.QuickSearch.IQuickSearch">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.QuickSearch.IQuickSearch.QuickSearchProvider">
            <summary>
            
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.QuickSearch.QuickSearchResultItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.QuickSearch.QuickSearchResultItem.Caption">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.QuickSearch.QuickSearchResultItem.ImageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.QuickSearch.QuickSearchResultItem.Item">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.QuickSearch.QuickSearchResultItem.#ctor(System.String,System.Int32,System.Object)">
            <summary>
            Конструктор.
            </summary>
            <param name="caption"></param>
            <param name="imgIndex"></param>
            <param name="item"></param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IConditionController">
            <summary>
            Интерфейс описывает контроллер условия выборки.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionController.VisibleName">
            <summary>
            Имя для отображения пользователю
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionController.SupportedDataSource">
            <summary>
            Поддерживаемые условием источники данных
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionController.SupportedTypes">
            <summary>
            Поддерживаемые типы выборок 
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionController.CreateCondition(System.Int64,System.Int32[])">
            <summary>
            Создание нового условия
            </summary>
            <param name="selectionID">Идентификатор выборки</param>
            <param name="obectTypeIDs"></param>
            <returns>Новое условие</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionController.EditCondition(System.Int64,Intermech.Kernel.Search.ConditionStructure,System.Int32[])">
            <summary>
            Создание нового условия
            </summary>
            <param name="selectionID">Идентификатор выборки</param>
            <param name="current">Текущее условие</param>
            <param name="obectTypeIDs"></param>
            <returns>Измененное условие</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionController.IsHandleConditionStructure(Intermech.Kernel.Search.ConditionStructure)">
            <summary>
            Возвращает признак, обрабатывает ли контроллер conditionStructure
            </summary>
            <param name="conditionStructure"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionController.HandleConditionCaption(Intermech.Kernel.Search.ConditionStructure,System.String@,System.String@)">
            <summary>
            Обработка отображения условия в списке условий
            </summary>
            <param name="conditionStructure"></param>
            <param name="condition">Текст для колонки Условие</param>
            <param name="value">Текст для колонки Значение</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionController.AttributesCondition">
            <summary>
            Условие работает со значениями атрибутов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionController.IsInnerSupported">
            <summary>
            Возможно ли использование условия во вложенных условиях
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IConditionControllersService">
            <summary>
            Сервис зарегистрированных в системе контроллеров условий выборок
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IConditionDataProvider">
            <summary>
            Провайдер данных для условия выборки с атрибутом.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetFieldType(System.Object)">
            <summary>
            Функция возвращает тип атрибута по его идентификатору
            </summary>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetListAttributes(Intermech.Kernel.Search.AttributeSourceTypes,System.Int32[])">
            <summary>
            Получить список допустимых атрибутов для условия выборки
            </summary>
            <param name="sourceType">Принадлежность атрибута</param>
            <returns>Идентификатор выбранного атрибута или Intermech.Consts.UnknownAttributeId</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.AnyAttributes(Intermech.Kernel.Search.AttributeSourceTypes,System.Int32[])">
            <summary>
            Возможен ли выбор любого атрибута для текущей выборки
            </summary>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetAttributeName(System.Object)">
            <summary>
            Получить имя атрибута по его идентификатору
            </summary>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetPossibleValues(System.Object)">
            <summary>
            Получить допустимые значения атрибута по его идентификатору
            </summary>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetAttributeGuid(System.Object)">
            <summary>
            Получить глобальный идентификатор атрибута
            </summary>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetAttributeID(System.Object)">
            <summary>
            Получить идентификатор атрибута
            </summary>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.ConvertToString(System.Object,Intermech.Kernel.Search.RelationalOperators,Intermech.Interfaces.SelectionService.SelectionParameterTypes,System.Object,System.Collections.Generic.Dictionary{System.Object,System.String},System.Object)">
            <summary>
            Получить строковое представление значения
            </summary>
            <param name="selParType"></param>
            <param name="objValue"></param>
            <param name="possibleValues"></param>
            <param name="tag">доп параметры</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.ChoiseObjectType(System.Object@,Intermech.SelectionType)">
            <summary>
            Выбрать тип объектов посредством диалога
            </summary>
            <param name="objectType"></param>
            <param name="selectionType"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.ChoiseRelationType(System.Object@)">
            <summary>
            Выбрать тип связей
            </summary>
            <param name="relationType"></param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionDataProvider.EnabledParameterTypes">
            <summary>
            Список разрешенных типов данных для провайдера
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetObjectCaption(System.Object)">
            <summary>
            Получить заголовок объекта
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetObjectCaptionByID(System.Int64)">
            <summary>
            Получить заголовок объекта по ID
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetID(System.Int64)">
            <summary>
            Получить ID по ObjectID
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionDataProvider.UserTypeID">
            <summary>
            Идентификатор типа пользователей
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionDataProvider.UserGroupTypeIDs">
            <summary>
            Список идентификаторов типов объектов, в которых сгруппированы объекты-пользователи,
            например Группы пользователей, Подразделения..
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetObjectTypeCaption(System.Object)">
            <summary>
            Получить название типа объектов
            </summary>
            <param name="objectType"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetRelationTypeCaption(System.Object)">
            <summary>
            Получить название типа связей
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GenerateConditionCaption(Intermech.Kernel.Search.ConditionStructure,System.String,System.String)">
            <summary>
            Сгенерировать описание условия
            </summary>
            <param name="conditionStructure">Структура, описывающая условие поиска объектов в базе</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetAttributesForObjectTypes(System.Int32[])">
            <summary>
            Получить атрибуты для типов объектов
            </summary>
            <param name="objTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetObligatoryAttributes(Intermech.Kernel.Search.AttributeSourceTypes)">
            <summary>
            Получить обязательные атрибуты
            </summary>
            <param name="sourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.SelectDialog(System.Object@,Intermech.Interfaces.SelectionService.SelectionParameterTypes,System.Object,System.Int32,System.Int32[])">
            <summary>
            Отобразить диалог для выбора 
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <param name="addInfo">Доп инфо, для ссылок тип объекта</param>
            <param name="attrID"> Идентификатор атрибута, для редактирования значения которого открывается диалог</param>
            <param name="selection4Types">Типы объектов, для которых создана выборка</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionDataProvider.GetObjectType4ObjectLink(System.Int32)">
            <summary>
            Получить идентификатор типа объектов для атрибута-ссылки
            </summary>
            <param name="attributeID"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IConditionsFormService">
            <summary>
            Сервис предоставляет готовые компоненты для форм редактирования условий выборки
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ConditionAttributeInfo">
            <summary>
            Описание атрибута
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ConditionAttributeInfo.Id">
            <summary>
            Идентификатор атрибута (ID или GUID)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ConditionAttributeInfo.Name">
            <summary>
            Наименование
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ConditionAttributeInfo.FieldType">
            <summary>
            Тип данных
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ConditionAttributeInfo.#ctor(System.Object,System.String)">
            <summary>
            Конструктор
            </summary>
            <param name="id">Идентификатор атрибута (ID или GUID)</param>
            <param name="name">Наименование</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ConditionAttributeInfo.#ctor(System.Object,System.String,Intermech.FieldTypes)">
            <summary>
            Конструктор
            </summary>
            <param name="id">Идентификатор атрибута (ID или GUID)</param>
            <param name="name">Наименование</param>
            <param name="fieldType">Тип данных</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.SelectionDataSource">
            <summary>
            Источник данных для выборки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.SelectionDataSource.Unknown">
            <summary>
            Неизвестно
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.SelectionDataSource.DataBase">
            <summary>
            База данных IPS
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.SelectionDataSource.Portal">
            <summary>
            Портал
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INormaCSService">
            <summary>
            Сервис для работы с NormaCS
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INormaCSService.Start">
            <summary>
            Запускает NormaCS, если еще не запущена. 
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INormaCSService.FindByNumber(System.String)">
            <summary>
            Отправляет запрос в NormaCS на поиск по номеру нормативного документа 
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INormaCSService.FindByName(System.String)">
            <summary>
            Отправляет запрос в NormaCS на поиск по имени нормативного документа
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INormaCSService.FindByText(System.String)">
            <summary>
            Отправляет запрос в NormaCS на поиск по тексту нормативного документа.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISaveToDiskOptions">
            <summary>
            Интерфейс чтения настроек из главной страницы настроек окна команды "Сохранить на диск"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISaveToDiskPage">
            <summary>
            Интерфейс управления страницей дополнительных настроек окна команды "Сохранить на диск"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISaveToDiskPage.PageName">
            <summary>
            Имя страницы, напр "CertSheetOptions" 
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISaveToDiskPage.Index">
            <summary>
            Индекс страницы; > 0
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISaveToDiskPage.Caption">
            <summary>
            Название страницы дополнительных настроек
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISaveToDiskPage.Control">
            <summary>
            Визуальный компонент страницы дополнительных настроек
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISaveToDiskPage.CommitEnabled">
            <summary>
            Разрешает сохранение дополнительных настроек данной страницы
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISaveToDiskPage.Commit">
            <summary>
            Фиксация настроек для последующегго сохранения, возможно в другом потоке.  
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISaveToDiskPage.Cancel">
            <summary>
            Отмена сохранения настроек
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISaveToDiskPageProvider">
            <summary>
            Интерфейс провайдера страницы дополнительных настроек для окна команды "Сохранить на диск"
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISaveToDiskPageProvider.CheckItems(Intermech.Navigator.Interfaces.ISelectedItems)">
            <summary>
            Проверка, выдаст ли интерфейс контрол по InitPage для выбранных элементов
            </summary>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISaveToDiskPageProvider.InitPage(Intermech.Navigator.Interfaces.ISelectedItems,Intermech.Navigator.Interfaces.ISaveToDiskOptions)">
            <summary>
            Инициализировать страницу дополнительных настроек и вернуть интерфейс управления страницей.
            </summary>
            <param name="items"></param>
            <param name="options">интерфейс чтения основных настроек; после окончания редактирования (ISaveToDiskPage.Commit/Cancel) обращаться к ISaveToDiskOptions options не рекомендуется - соответствующий контрол может быть уже освобождён</param>
            <returns>null, если для указанных items нет поддержки</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISaveToDiskProcessor">
            <summary>
            Интерфейс, сохраняющий дополнительные файлы на диск для указанного объекта.
            Должен быть потокобезопасным.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISaveToDiskProcessor.Save(Intermech.Navigator.Interfaces.ISaveToDiskClass,System.String,System.Int64)">
            <summary>
            Сохраняет файлы на диск
            </summary>
            <param name="iSaveToDiskClass">базовые опции обработки, здесь, например, может быть указана папка c:\docs</param>
            <param name="folder">конкретизированная папка для сохранения файлов объекта, напр. c:\docs\000.000.001</param>
            <param name="objectID">идентификатор версии объекта для дополнительного сохранения</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISaveToDiskService">
            <summary>
            Интерфейс управления страницами дополнительных настроек в окно команды "Сохранить на диск" 
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISaveToDiskService.RegisterProvider(Intermech.Navigator.Interfaces.ISaveToDiskPageProvider)">
            <summary>
            Зарегистрировать провайдер страницы дополнительных настроек
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISaveToDiskService.UnregisterProvider(Intermech.Navigator.Interfaces.ISaveToDiskPageProvider)">
            <summary>
            Разрегистрировать провайдер страницы дополнительных настроек
            </summary>
            <param name="provider"></param>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISaveToDiskService.Providers">
            <summary>
            Список зарегистрированных в клиенте провайдеров страниц дополнительных настроек
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.VirtualNodeColumn">
             <summary>Потомок NodeColumn для отображения в нём "виртуальных значений", то есть значений, не являющихся отображением реально существующих атрибутов
                      (значение заполняется уже на клиенте)
            
                      Главное отличие от базового класса на данный момент - отключенная возможность сортировки по этому полю
                      Потому как для поэтапной загрузки запросов сортировка по ним не будет работать.
                      Как вариант - сортировать всё на клиенте и запрещать поэтапную загрузку результатов запроса, но это страшный грех.</summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.VirtualNodeColumn.#ctor(System.Object)">
            <summary>Создать колонку, заполнить её информацией из указанного объекта-источника</summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.VirtualNodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String)">
            <summary>Конструктор, позволяющий создать колонку без сортировки.</summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.VirtualNodeColumn.SortOrder">
            <summary>Возвращает или устанавливает направление сортировки данных в колонке</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.VirtualNodeColumn.SortIndex">
            <summary>Порядковый номер колонки в списке сортируемых колонок или -1, если колонка не участвует в сортировке.</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.VirtualNodeColumn.DisableSorting">
            <summary>Запрет сортировки по данной колонке</summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.VirtualNodeColumn.Clone">
            <summary>
            Создать копию объекта, идентичную натуральному
            </summary>
            <returns>Копия объекта, идентичная натуральному</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IObjectNodeID">
            <summary>Интерфейс идентификатора ноды объекта (не обязательно реально существующего в БД)</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectNodeID.ObjectVersionID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectNodeID.ObjectID">
            <summary>Идентификатор объекта (НЕ ВЕРСИИ!!!)</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectNodeID.ObjTypeId">
            <summary>Тип объекта</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectNodeID.Caption">
            <summary>Заголовок объекта</summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IRelatedObjectNodeID">
            <summary>Интерфейс идентификатора ноды объекта (не обязательно реально существующего в БД) в составе другого объекта</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IRelatedObjectNodeID.PrjLinkID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IRelatedObjectNodeID.RelationTypeID">
            <summary>Идентификатор типа связи</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IRelatedObjectNodeID.ProjID">
            <summary>Идентификатор версии родительского объекта (для связи)</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IRelatedObjectNodeID.RelGuid">
            <summary>Guid связи</summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISavedObjectNodeID">
            <summary>Интерфейс ноды объекта, сохранённого не-важно-каким-способом (но например в итерации)
                     то есть уникально идентифицирует объект, который может или существовать в БД, или уже нет (удалён)
                     Параметры такого объекта требуется читать не в БД, а там, где он был сохранён</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISavedObjectNodeID.ObjectExistInDB">
            <summary>Присутствует ли объект с таким идентификатором версии в БД</summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISavedObjectNodeID.RelationExistInDB">
            <summary>Присутствует ли связь с таким идентификатором версии в БД</summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISaveToDiskClass">
            <summary>
            Класс для взаимосвязи дополнительных параметров сохранения с основными при выполнении команды "Сохранить на диск" 
            (процесс непосредственного сохранения)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISaveToDiskClass.SelectedPath">
            <summary>
            Путь к папке, куда выполняется сохранение
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISaveToDiskClass.DocumentFormat">
            <summary>
            Формат документа для сохранения
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ImDocumentFormat">
            <summary>
            Форматы сохранения документов Интермех
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ImDocumentFormatHelper.GetExtension(Intermech.Navigator.Interfaces.ImDocumentFormat)">
            <summary>
            Вернуть расширение в виде ".pdf"
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.CellTransformationMode">
            <summary>
            Перечислитель указывает, каким образом будут преобразовываться ячейки в колонке
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CellTransformationMode.WithoutTransformation">
            <summary>
            Значения преобразовываться не будут
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CellTransformationMode.ConvertToString">
            <summary>
            Значения будут преобразованы в строки для отображения на экране
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CellTransformationMode.ConvertToCellValue">
            <summary>
            Значения будут преобразованы в составной класс - [Оригинальное значение] + [Значение для отображения на экране]
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Данный класс предназначен для хранения пары значений ячейки – оригинального значения, полученного у 
            источника данных, и преобразованного значения для отображения на экране.
            Экземпляры данного класса создаются интерфейсом INodeColumnTransform. Экземпляры данного класса реализуют 
            все операторы для явного (explicit) и неявного (implicit) преобразования типов своих значений в 
            стандартные типы .NET Framework, а также реализуют интерфейсы ICloneable, IConvertible и IComparable.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CellValue._value">
            <summary>
            Оригинальное значение элемента
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CellValue._caption">
            <summary>
            Текстовое значение элемента для отображения на экране.
            Если значение равно null, то ToString() попытается вернуть _value.ToString()
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CellValue.Value">
            <summary>
            Оригинальное значение ячейки "Навигатора", полученное из источника данных
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CellValue.Caption">
            <summary>
            Текстовое значение элемента для отображения на экране.
            Если значение равно null, то ToString() попытается вернуть Value.ToString()
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.#ctor">
            <summary>
            Создать пустой экземпляр класса CellValue
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.#ctor(System.Object,System.Object)">
            <summary>
            Создать заполненный экземпляр класса CellValue
            </summary>
            <param name="value">Значение элемента</param>
            <param name="caption">Текстовое описание элемента</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.GetValue(System.Object,Intermech.Navigator.Interfaces.NodeColumn,System.Object)">
            <summary>
            Метод анализирует значение column.Contents, если оно равно Text, 
            возвращает значение newValue, иначе возвращает экземпляр класса CellValue(sourceValue, newValue).
            </summary>
            <param name="sourceValue">Исходное значение</param>
            <param name="column">Колонка</param>
            <param name="newValue">Новое значение</param>
            <returns>Значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.ToString">
            <summary>
            Перекрытый метод для возвращения заголовка
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.Clone">
            <summary>
            Сделать клон объекта
            </summary>
            <returns>Вернёт 100% копию объекта</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.Boolean)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.Byte)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.Char)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.DateTime)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.Decimal)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.Double)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.Int16)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.Int32)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.Int64)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.SByte)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.Single)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.String)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.UInt16)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.UInt32)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Implicit(System.UInt64)~Intermech.Navigator.Interfaces.CellValue">
            <summary>
            Создать и вернуть экземпляр класса
            </summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.Boolean">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.Byte">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.Char">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.DateTime">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.Decimal">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.Double">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.Int16">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.Int32">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.Int64">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.SByte">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.Single">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.String">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.UInt16">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.UInt32">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.op_Explicit(Intermech.Navigator.Interfaces.CellValue)~System.UInt64">
            <summary>
            Выполнить явное преобразование типов
            </summary>
            <param name="value">Значение</param>
            <returns>Преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CellValue.System#IComparable#CompareTo(System.Object)">
            <summary>
            Выполнить сравнение с объектом
            </summary>
            <param name="obj">Объект</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeColumnScheme">
            <summary>
            Описывает схему виртуальных колонок, используемых в навигаторе. Схема
            отвечает за создание, сериализацию и десериализацию колонок, а также
            предоставляет для колонок преобразование по умолчанию, которое может
            использоваться для вывода значений колонок в гридах.
            Схема виртуальных колонок Навигатора INodeColumnScheme позволяет выполнять следующие действия:
            - создаёт колонки;
            - выполняет их сериализацию/десериализацию;
            - отыскивает для колонки интерфейс преобразования значений ячеек INodeColumnTransform.
            ВНИМАНИЕ! Класс, реализующий данный интерфейс, должен быть потокобезопасным.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeColumnScheme.Name">
            <summary>
            Возвращает название схемы колонок, которое выводится в диалоге настройки отображения колонок.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeColumnScheme.ColumnIDToPersistName(System.Object)">
            <summary>
            Возвращает постоянное имя колонки, которое можно использовать
            для долговременного хранения (т.е. между сеансами работы
            универсального клиента).
            </summary>
            <param name="columnID">Идентификатор виртуальной колонки</param>
            <returns>Постоянное имя колонки</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeColumnScheme.PersistNameToColumnID(System.String)">
            <summary>
            Восстанавливает идентификатор виртуальной колонки по ее 
            постоянному имени, которое действительно только на текущий сеанс
            работы универсального клиента. Если восстанавливаемая колонка не
            существует, то метод должен вернуть null.
            </summary>
            <param name="persistName">Постоянное имя колонки</param>
            <returns>Идентификатор виртуальной колонки</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeColumnScheme.CreateColumn(System.Guid,System.Object)">
            <summary>
            Создает виртуальную колонку без сортировки по указанному 
            идентификатору. Если колонки с заданным идентификатором в схеме нет - 
            то метод вернет null.
            </summary>
            <param name="schemeGuid">Guid схемы</param>
            <param name="columnID">Идентификатор виртуальной колонки</param>
            <returns>Виртуальная колонка</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeColumnScheme.CreateColumn(System.Guid,System.Object,Intermech.Navigator.Interfaces.NodeColumnSortOrder,System.Int32)">
            <summary>
            Создает виртуальную колонку с заданным направлением сортировки по
            указанному идентификатору. Если колонки с такми идентификатором в 
            схеме нет - то метод вернет null.
            </summary>
            <param name="schemeGuid">Guid схемы</param>
            <param name="columnID">Идентификатор виртуальной колонки</param>
            <param name="sortOrder">Направление сортировки</param>
            <param name="sortIndex">Очерёдность сортировки (-1 - не сортируется)</param>
            <returns>Виртуальная колонка</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeColumnScheme.GetDefaultTransform(System.Object)">
            <summary>
            Возвращает преобразование по умолчанию для указанной виртуальной 
            колонки. Если преобразование не задано, то метод вернет null.
            </summary>
            <param name="columnID">Идентификатор виртуальной колонки</param>
            <returns>Преобразование по умолчанию</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeColumnTransform">
            <summary>
            Данный интерфейс предназначен для преобразования значений колонок в значения для отображения на экране, 
            например, для расшифровки идентификаторов пользователей в их имена и т.п. 
            ВНИМАНИЕ! Класс, реализующий этот интерфейс должен быть потокобезопасным.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeColumnTransform.DataType">
            <summary>
            Возвращает тип значения, образуемого при выполнении преобразования.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeColumnTransform.Apply(System.Object,Intermech.Navigator.Interfaces.NodeColumn,System.Object,System.Object[])">
            <summary>
            Метод выполняет преобразование исходного значения колонки в новое значение, если оно требуется какими-либо 
            правилами. Если содержимое колонки column.Contetns отлично от значения по умолчанию Text, либо у колонки метод 
            трансформации задан как CellTransformationMode.ConvertToCellValue, то преобразование вернёт значение в виде 
            экземпляра класса CellValue, в котором хранятся одновременно два значения – оригинальное и новое значения.
            </summary>
            <param name="sourceValue">Исходное значение колонки</param>
            <param name="column">Описание колонки</param>
            <param name="adapter">Ссылка на объект типа Intermech.Navigator.Queries.RecordAdapter</param>
            <param name="allValues">Все допустимые значения в строке с данными</param>
            <returns>Преобразованное значение колонки</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IDisplayValueTransform">
            <summary>
            Интерфейс позволяет выполнять дополнительные преобразования значений, отображаемых
            в гридах и деревьях
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IDisplayValueTransform.Transform(System.Object,System.Object,Intermech.Navigator.Interfaces.NodeColumn,System.IServiceProvider,Intermech.Navigator.Interfaces.INode,Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Выполнить преобразование значения перед его отображением на экране
            </summary>
            <param name="sender">Элемент управления, для которого выполняются преобразования</param>
            <param name="sourceValue">Исходное значение</param>
            <param name="column">Колонка</param>
            <param name="services">Контейнер сервисов</param>
            <param name="handler">Обработчик для узла, содержимое которого отображается</param>
            <param name="nodeID">Идентификатор отображаемого элемента пространства навигации</param>
            <returns>Значение для вывода на экран</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IAttributeTransform">
            <summary>
            Базовый интерфейс для преобразователя, который работает с произвольными атрибутами,
            которому на "лету" можно указывать ID типа обрабатываемого атрибута
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IListAttributeTransform">
            <summary>
            Интерфейс для преобразователя, который работает со списковыми атрибутами
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IBoolAttributeTransform">
            <summary>
            Интерфейс для преобразователя, который работает со логическими атрибутами
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NavigatorColumns">
            <summary>
            Класс для хранения настроек вида (колонки "Навигатора", порядок сортировки, группы, т.п.)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NavigatorColumns._category">
            <summary>
            Категория
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NavigatorColumns._type">
            <summary>
            Тип
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NavigatorColumns._suffix">
            <summary>
            Дополнение к названию схемы
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NavigatorColumns._columns">
            <summary>
            Коллекция колонок "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NavigatorColumns._groups">
            <summary>
            Порядковые номера колонок, участвующих в группировании
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NavigatorColumns._inherited">
            <summary>
            Является ли данная настройка вида унаследованной
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumns.Category">
            <summary>
            Категория
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumns.Type">
            <summary>
            Тип
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumns.Suffix">
            <summary>
            Дополнение к названию схемы
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumns.Columns">
            <summary>
            Коллекция колонок "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumns.Groups">
            <summary>
            Порядковые номера колонок, участвующих в группировании
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumns.Empty">
            <summary>
            Являются ли настройки пустыми
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumns.Inherited">
            <summary>
            Является ли данная настройка вида унаследованной
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.#ctor">
            <summary>
            Создать пустой экземпляр класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Создать экземпляр класса для указанных категории и типа
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="suffix">Дополнительное имя</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.#ctor(System.Object)">
            <summary>
            Создать экземпляр класса, заполнить его информацией
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true - объекты равны</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.GetHashCode">
            <summary>
            Получить 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.Clone">
            <summary>
            Создать точную копию экземпляра класса
            </summary>
            <returns>Точная копия экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.CompareTo(Intermech.Navigator.Interfaces.NavigatorColumns)">
            <summary>
            Выполнить сравнение с указанным объектом
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.SerializeToStream(Intermech.ZLibCompressLevels)">
            <summary>
            Сериализовать класс в поток
            </summary>
            <param name="packMode">Степень сжатия</param>
            <returns>Сериализованный класс</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumns.DeserializeFromStream(System.IO.Stream)">
            <summary>
            Десериализовать класс из указанного потока
            </summary>
            <param name="stream">Поток</param>
            <returns>true - десериализация выполнена успешно</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NavigatorColumnsKey">
            <summary>
            Ключ для описания настроек вида
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NavigatorColumnsKey._category">
            <summary>
            Категория
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NavigatorColumnsKey._type">
            <summary>
            Тип
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NavigatorColumnsKey._suffix">
            <summary>
            Дополнение к названию схемы
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumnsKey.Category">
            <summary>
            Категория
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumnsKey.Type">
            <summary>
            Тип
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NavigatorColumnsKey.Suffix">
            <summary>
            Дополнение к названию схемы
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumnsKey.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Создать ключ для описания настроек вида
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="suffix">Дополнение к названию схемы</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumnsKey.#ctor(System.Object)">
            <summary>
            Создать ключ для описания настроек вида на основе объекта-источника
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumnsKey.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumnsKey.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumnsKey.Clone">
            <summary>
            Вернуть точную копию экземпляра класса
            </summary>
            <returns>Точная копия экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NavigatorColumnsKey.CompareTo(Intermech.Navigator.Interfaces.NavigatorColumnsKey)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeColumn">
            <summary>
            Данный класс представляет собой колонку «Навигатора». 
            Основное свойство – идентификатор атрибута, получаемого из источника данных, 
            например, атрибута объекта или связи.
            ВНИМАНИЕ! КЛАСС СЕРИЛИЗУЕМЫЙ, ПОЛЯ НЕ ПЕРЕИМЕНОВЫВАТЬ
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._schemeGuid">
            <summary>
            Глобальный идентификатор схемы, к которой относится колонка
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._id">
            <summary>
            Виртуальный идентификатор колонки внутри схемы. При выполнении
            запросов к источникам данных этот идентификатор отображается в
            идентификатор реального поля, присутствующего в источнике данных.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._dataType">
            <summary>
            Тип данных, содержащихся в колонке.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._attrType">
            <summary>
            Тип данных атрибута, связанного с колонкой
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._sortOrder">
            <summary>
            Направление сортировки данных, содержащихся в колонке
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._sortIndex">
            <summary>
            Номер колонки в списке отсортированных колонок
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._caption">
            <summary>
            Название колонки для вывода в элементах визуального интерфейса.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._shortCaption">
            <summary>
            Краткое название колонки для вывода в элементах визуального интерфейса.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._hint">
            <summary>
            Хинт, который будет отображаться дя колонки, если включен режим отображения краткого названия колонки.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._width">
            <summary>
            Ширина колонки в пикселах в элементах визульного интерфейса.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._groupIndex">
            <summary>
            Порядковый номер в коллекции сгруппированных колонок
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._key">
            <summary>
            Ключ колонки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._systemAttr">
            <summary>
            Является ли атрибут системным
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._contents">
            <summary>
            Содержимое ячеек в колонке
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._transformationMode">
            <summary>
            Режим преобразования значений ячеек колонки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._disableSorting">
            <summary>
            Запрет сортировки по данной колонке
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._disableGrouping">
            <summary>
            Запрет группировки по данной колонке
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._priority">
            <summary>
            Приоритет колонки в коллекции колонок
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumn._tag">
            <summary>
            Тег
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Object)">
            <summary>
            Создать колонку, заполнить её информацией из указанного объекта-источника
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String)">
            <summary>
            Конструктор, позволяющий создать колонку без сортировки.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String,Intermech.Kernel.Search.ColumnContents)">
            <summary>
            Конструктор, позволяющий создать колонку без сортировки.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
            <param name="contents">Содержимое ячеек колонки</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String,System.String,System.String)">
            <summary>
            Конструктор, позволяющий создать колонку без сортировки.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
            <param name="shortCaption">Краткое наименование колонки</param>
            <param name="hint">Подсказка</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String,System.String,System.String,Intermech.Kernel.Search.ColumnContents)">
            <summary>
            Конструктор, позволяющий создать колонку без сортировки.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
            <param name="hint">Подсказка</param>
            <param name="shortCaption">Краткое наименование колонки</param>
            <param name="contents">Содержимое ячеек колонки</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String,Intermech.Navigator.Interfaces.NodeColumnSortOrder,System.Int32)">
            <summary>
            Конструктор колонки, позволяющий задать все ее свойства.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
            <param name="sortOrder">Направление сортировки</param>
            <param name="sortIndex">Номер колонки в списке отсортированных колонок</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String,Intermech.Navigator.Interfaces.NodeColumnSortOrder,System.Int32,Intermech.Kernel.Search.ColumnContents)">
            <summary>
            Конструктор колонки, позволяющий задать все ее свойства.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
            <param name="sortOrder">Направление сортировки</param>
            <param name="sortIndex">Номер колонки в списке отсортированных колонок</param>
            <param name="contents">Содержимое ячеек колонки</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String,Intermech.Navigator.Interfaces.NodeColumnSortOrder,System.Int32,System.String,System.String)">
            <summary>
            Конструктор колонки, позволяющий задать все ее свойства.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
            <param name="sortOrder">Направление сортировки</param>
            <param name="sortIndex">Номер колонки в списке отсортированных колонок</param>
            <param name="shortCaption">Краткое наименование колонки</param>
            <param name="hint">Подсказка</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String,Intermech.Navigator.Interfaces.NodeColumnSortOrder,System.Int32,System.String,System.String,Intermech.Kernel.Search.ColumnContents)">
            <summary>
            Конструктор колонки, позволяющий задать все ее свойства.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
            <param name="sortOrder">Направление сортировки</param>
            <param name="sortIndex">Номер колонки в списке отсортированных колонок</param>
            <param name="shortCaption">Краткое наименование колонки</param>
            <param name="hint">Подсказка</param>
            <param name="contents">Содержимое ячеек колонки</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String,Intermech.Navigator.Interfaces.NodeColumnSortOrder,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Конструктор колонки, позволяющий задать все ее свойства.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
            <param name="sortOrder">Направление сортировки</param>
            <param name="sortIndex">Номер колонки в списке отсортированных колонок</param>
            <param name="shortCaption">Краткое наименование колонки</param>
            <param name="hint">Подсказка</param>
            <param name="systemAttr">Является ли атрибут колонки системным</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.#ctor(System.Guid,System.Object,System.Type,Intermech.FieldTypes,System.String,Intermech.Navigator.Interfaces.NodeColumnSortOrder,System.Int32,System.String,System.String,System.Boolean,Intermech.Kernel.Search.ColumnContents)">
            <summary>
            Конструктор колонки, позволяющий задать все ее свойства.
            </summary>
            <param name="schemeGuid">Идентификатор схемы колонки</param>
            <param name="id">Идентификатор колонки</param>
            <param name="dataType">Тип данных, содержащихся в колонке</param>
            <param name="attrType">Тип данных атрибута, связанного с колонкой</param>
            <param name="caption">Заголовок колонки</param>
            <param name="sortOrder">Направление сортировки</param>
            <param name="sortIndex">Номер колонки в списке отсортированных колонок</param>
            <param name="shortCaption">Краткое наименование колонки</param>
            <param name="hint">Подсказка</param>
            <param name="systemAttr">Является ли атрибут колонки системным</param>
            <param name="contents">Содержимое ячеек колонки</param>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.Key">
            <summary>
            Уникальный строковой ключ колонки для её быстрого поиска в коллекции колонок.
            Ключ состоит из идентификатора схемы, которой принадлежит колонка, и идентификатора самой колонки.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.SchemeGuid">
            <summary>
            Идентификатор схемы, которой принадлежит колонка.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.ID">
            <summary>
            Идентификатор колонки. Например, может быть равен идентификатору или названию атрибута источника данных.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.DataType">
            <summary>
            Тип данных, содержащихся в ячейках колонки.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.AttrType">
            <summary>
            Тип данных атрибута, связанного с колонкой.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.Caption">
            <summary>
            Возвращает заголовок колонки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.ShortCaption">
            <summary>
            Возвращает краткий заголовок колонки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.Hint">
            <summary>
            Возвращает подсказку для заголовка колонки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.SortOrder">
            <summary>
            Возвращает или устанавливает направление сортировки данных в колонке
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.GroupIndex">
            <summary>
            Порядковый номер в группе колонок или -1, если колонка не участвует в группировке колонок.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.SortIndex">
            <summary>
            Порядковый номер колонки в списке сортируемых колонок или -1, если колонка не участвует в сортировке.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.Width">
            <summary>
            Возвращает или устанавливает ширину колонки в пикселах
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.SystemAttr">
            <summary>
            Если true, то атрибут, который описан в колонке, является системным.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.Contents">
            <summary>
            Содержимое ячеек колонки, которое будет запрашиваться у источника данных.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.TransformationMode">
            <summary>
            Данное свойство определяет, каким образом значения ячеек данной колонки должны обрабатываться 
            преобразователем (INodeColumnTransform), назначенным данной колонке.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.Tag">
            <summary>
            Дополнительные данные для колонки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.DisableSorting">
            <summary>
            Запрет сортировки по данной колонке
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.DisableGrouping">
            <summary>
            Запрет группировки по данной колонке
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.Priority">
            <summary>
            Приоритет колонки в коллекции колонок
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.Equals(System.Object)">
            <summary>
            Сравнить текущий экземпляр колонки атрибута с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если текущий экземпляр колонки атрибута равен указанному объекту</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.FullEquals(System.Object)">
            <summary>
            Сравнить текущий экземпляр колонки атрибута с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если текущий экземпляр колонки атрибута равен указанному объекту</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.GetHashCode">
            <summary>
            Рассчитать 32-битный хэш-код для текущего экземпляра класса
            </summary>
            <returns>32-битный хэш-код для текущего экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.ToString">
            <summary>
            Вернуть строковое представление колонки
            </summary>
            <returns>Строковое представление колонки</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.Clone">
            <summary>
            Создать копию объекта, идентичную натуральному
            </summary>
            <returns>Копия объекта, идентичная натуральному</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.CompareTo(System.Object)">
            <summary>
            Сравнить колонку атрибута с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.CompareTo(Intermech.Navigator.Interfaces.NodeColumn)">
            <summary>
            Сравнить колонку атрибута с указанным объектом
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumn.GetAttributeID(System.Object)">
            <summary>
            По некоему объектному идентификатору попробовать получить идентификатор типа атрибута
            </summary>
            <param name="id">Объектный идентификатор типа атрибута</param>
            <returns>Идентификатор типа атрибута или Intermech.Consts.UnknownAttributeId</returns>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.Attribute">
            <summary>
            Информация о типе атрибута
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeColumn.AttrSource">
            <summary>
            Информация об источнике атрибута. Допустимы только значения Object и Relation.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IColumnAttributeInfo">
            <summary>
            Интерфейс с информацией о типе атрибута, для которого сформирована колонка
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IColumnAttributeInfo.Attribute">
            <summary>
            Информация о типе атрибута
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IColumnAttributeInfo.AttrSource">
            <summary>
            Информация об источнике атрибута. Допустимы только значения Object и Relation.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.SchemeColumnPriority">
            <summary>
            Приоритет схемы колонок для определения, какую колонку из набора одинаковых колонок
            оставлять в окне по настройке отображения, если несколько разных схем возвращают
            одну и ту же колонку
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.SchemeColumnPriority.Standard">
            <summary>
            Стандартный приоритет. В список попадает первая попавшаяся колонка
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.SchemeColumnPriority.High">
            <summary>
            Высокий приоритет. В список попадает первая попавшаяся колонка такого приоритета, либо заменит колонку приоритета Standard
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.SchemeColumnPriority.Highest">
            <summary>
            Наивысший приоритет. В список попадает первая попавшаяся колонка такого приоритета, либо заменит колонку приоритетов Standard/High
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeColumnCollection">
            <summary>
            Коллекция предназначена для хранения и управления списком колонок пространства навигации NodeColumn. 
            Класс унаследован от типизированного списка List[NodeColumn], реализует интерфейс ICloneable.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.#ctor">
            <summary>
            Создать коллекцию
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.#ctor(System.Collections.Generic.IEnumerable{Intermech.Navigator.Interfaces.NodeColumn})">
            <summary>
            Создать коллекцию на основе другой коллекции
            </summary>
            <param name="collection">Коллекция-прототип</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.#ctor(System.Int32)">
            <summary>
            Создать коллекцию, указать её ёмкость
            </summary>
            <param name="capacity">Ёмкость коллекции</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.#ctor(System.Object)">
            <summary>
            Создать коллекцию, заполнить её информацией из указанного объекта-источника
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeColumnCollection.IDSchemeKey">
            <summary>
            Класс-ключ, состоящий из идентификатора колонки и Guid схемы
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnCollection.IDSchemeKey._hash32">
            <summary>
            Хэш-код Int32
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnCollection.IDSchemeKey._hash64">
            <summary>
            Хэш-код Int64
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.IDSchemeKey.#ctor(System.Object,System.Guid)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="id">Идентификатор колонки</param>
            <param name="guid">Guid её схемы</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.IDSchemeKey.Equals(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.IDSchemeKey.GetHashCode">
            <summary>
            Получить 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.IDSchemeKey.CompareTo(System.Object)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.IDSchemeKey.CompareTo(Intermech.Navigator.Interfaces.NodeColumnCollection.IDSchemeKey)">
            <summary>
            Сравнить с указанным объектом
            </summary>
            <param name="other">Объект для сравнения</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnCollection.columnSchemes">
            <summary>
            Сервис по управлению схемами колонок
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnCollection._idschemeColumns">
            <summary>
            Кэш для быстрого поиска колонок по их ID и Guid схемы
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnCollection._keyColumns">
            <summary>
            Кэш для быстрого поиска колонок по их ключам
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnCollection._idColumns">
            <summary>
            Кэш для быстрого поиска колонок по их идентификаторам
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnCollection._captionColumns">
            <summary>
            Кэш для быстрого поиска колонок по их заголовкам
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.RebuildDictionaries">
            <summary>
            Перестроить внутренние кэши
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.AddRange(System.Collections.Generic.IEnumerable{Intermech.Navigator.Interfaces.NodeColumn})">
            <summary>
            Добавить коллекцию колонок в состав текущей коллекции
            </summary>
            <param name="collection">Добавляемая коллекция колонок</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Contains(Intermech.Navigator.Interfaces.NodeColumn)">
            <summary>
            Проверить наличие колонки в коллекции
            </summary>
            <param name="item">Искомая колонка</param>
            <returns>true, если найдена</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Remove(Intermech.Navigator.Interfaces.NodeColumn)">
            <summary>
            Удалить указанную колонку из коллекции
            </summary>
            <param name="item">Удаляемая колонка</param>
            <returns>true, если колонка была удалена</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Удалить колонку с указанным индексом из коллекции
            </summary>
            <param name="index">Индекс удаляемой колонки</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Add(Intermech.Navigator.Interfaces.NodeColumn)">
            <summary>
            Добавить колонку в коллекцию
            </summary>
            <param name="item">Колонка</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.FindByAttrID(System.Int32)">
            <summary>
            Отыскать колонки, которые содержат значение указанного атрибута
            (объект, связи, т.п.)
            </summary>
            <param name="attrID">Идентификатор типа атрибута</param>
            <returns>Колонки, которые содержат значение указанного атрибута, либо пустой массив</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.FindByAttrID(System.Guid)">
            <summary>
            Отыскать колонки, которые содержат значение указанного атрибута
            (объект, связи, т.п.)
            </summary>
            <param name="attrGuid">Глобальный идентификатор типа атрибута</param>
            <returns>Колонки, которые содержат значение указанного атрибута, либо пустой массив</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Find(System.String)">
            <summary>
            Отыскать колонку по её ключу
            </summary>
            <param name="key">Ключ колонки</param>
            <returns>Колонка или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.FindCaption(System.String)">
            <summary>
            Отыскать колонку по её уникальному заголовку
            </summary>
            <param name="caption">Уникальный заголовок колонки</param>
            <returns>Колонка или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Find(System.Object)">
            <summary>
            Отыскать колонку по её идентификатору
            </summary>
            <param name="columnID">Идентификатор колонки</param>
            <returns>Колонка или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.ColumnIDExists(System.Object)">
            <summary>
            Проверяет, есть ли в коллекции колонка с указанным идентификатором, либо любая из колонок с перечисленными идентификаторами.
            </summary>
            <param name="columnID">Идентификатор колонки</param>
            <returns>true, если колонка с указанным идентификатором найдена</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Find(System.Object,System.Guid)">
            <summary>
            Отыскать колонку по её идентификатору
            </summary>
            <param name="columnID">Идентификатор колонки</param>
            <param name="schemeGuid">Идентификатор схемы</param>
            <returns>Колонка или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.ColumnIDExists(System.Object,System.Guid)">
            <summary>
            Проверяет, есть ли в коллекции колонка с указанным идентификатором, либо любая из колонок с перечисленными идентификаторами.
            </summary>
            <param name="columnID">Идентификатор колонки</param>
            <param name="schemeGuid">Идентификатор схемы</param>
            <returns>true, если колонка с указанным идентификатором найдена</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.ColumnIDsExists(System.Collections.IList)">
            <summary>
            Проверяет, есть ли в коллекции колонка с указанным идентификатором, либо любая из колонок с перечисленными идентификаторами.
            </summary>
            <param name="columnIDs">Идентификаторы колонок</param>
            <returns>true, если колонка с любым из указанных идентификаторов найдена</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.ColumnIDsExists(System.Collections.Generic.IList{System.Int32})">
            <summary>
            Проверяет, есть ли в коллекции колонка с указанным идентификатором, либо любая из колонок с перечисленными идентификаторами.
            </summary>
            <param name="columnIDs">Идентификаторы колонок</param>
            <returns>true, если колонка с любым из указанных идентификаторов найдена</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Sort(System.Boolean)">
            <summary>
            Выполнить сортировку
            </summary>
            <param name="ascending">true - по возрастанию</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.SortByIndex">
            <summary>
            Упорядочить колонки в коллекции согласно их свойству SortIndex - очерёдности сортировки
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.SortBySchemesAndNames">
            <summary>
            Упорядочить колонки в коллекции согласно названиям схем, а затем по названию колонок
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.RemoveNonSortedColumns">
            <summary>
            Удалить из коллекции колонки, которые не сортируются, проверить у остальных свойство SortIndex
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.GetSortedColumns(Intermech.Navigator.Interfaces.NodeColumnCollection)">
            <summary>
            Метод выбирает из указанной коллекции все сортируемые колонки и возвращает новую коллекцию колонок, 
            в которую входят сортируемые колонки, упорядоченные по возрастанию их свойства SortIndex
            </summary>
            <param name="columns">Список колонок навигатора</param>
            <returns>Упорядоченная коллекция сортируемых колонок</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.HasSortedColumns">
            <summary>
            Есть ли в коллекции хотя бы одна сортируемая колонка
            </summary>
            <returns>true, если в коллекции есть хотя бы одна сортируемая колонка</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.CorrectSortIndex(Intermech.Navigator.Interfaces.NodeColumnCollection)">
            <summary>
            Если из коллекции колонок были удалены колонки, участвующие в сортировке, то, вызвав данный метод, 
            можно откорректировать значения свойств SortIndex у оставшихся сортируемых колонок, причём эти значения 
            будут коректно упорядочены по возрастанию. 
            </summary>
            <param name="columns">Список колонок навигатора, у которых следует откорректировать значения свойства SortIndex</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.RemoveSortInfo">
            <summary>
            Удалить у всех колонок информацию о сортировке (все колонки становятся несортируемыми)
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Add(Intermech.Navigator.Interfaces.NodeColumn,System.Int32)">
            <summary>
            Добавить колонку, с учётом её новой ширины
            </summary>
            <param name="column">Колонка</param>
            <param name="width">Новая ширина колонки</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Add(Intermech.Navigator.Interfaces.NodeColumn,Intermech.Kernel.Search.ColumnContents)">
            <summary>
            Добавить колонку, с учётом её новой ширины
            </summary>
            <param name="column">Колонка</param>
            <param name="content">Содержимое колонки</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeColumnCollection.SchemeAndNameColumnComparer">
            <summary>
            Класс для упорядочивания сортируемых колонок по очерёдности их сортировки
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.SchemeAndNameColumnComparer.Compare(System.Object,System.Object)">
            <summary>
            Сравнить между собой две колонки
            </summary>
            <param name="x">Первая колонка</param>
            <param name="y">Вторая колонка</param>
            <returns>-1 - колонка x меньше колонки y, 0 - колонки равны, 1 - колонка x больше колонки y</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.SchemeAndNameColumnComparer.Compare(Intermech.Navigator.Interfaces.NodeColumn,Intermech.Navigator.Interfaces.NodeColumn)">
            <summary>
            Сравнить между собой две колонки
            </summary>
            <param name="x">Первая колонка</param>
            <param name="y">Вторая колонка</param>
            <returns>-1 - колонка x меньше колонки y, 0 - колонки равны, 1 - колонка x больше колонки y</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeColumnCollection.SortIndexColumnComparer">
            <summary>
            Класс для упорядочивания сортируемых колонок по очерёдности их сортировки
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.SortIndexColumnComparer.Compare(System.Object,System.Object)">
            <summary>
            Сравнить между собой две колонки
            </summary>
            <param name="x">Первая колонка</param>
            <param name="y">Вторая колонка</param>
            <returns>-1 - колонка x меньше колонки y, 0 - колонки равны, 1 - колонка x больше колонки y</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.SortIndexColumnComparer.Compare(Intermech.Navigator.Interfaces.NodeColumn,Intermech.Navigator.Interfaces.NodeColumn)">
            <summary>
            Сравнить между собой две колонки
            </summary>
            <param name="x">Первая колонка</param>
            <param name="y">Вторая колонка</param>
            <returns>-1 - колонка x меньше колонки y, 0 - колонки равны, 1 - колонка x больше колонки y</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeColumnCollection.NodeColumnComparer">
            <summary>
            Внутренний класс по сортировке колонок
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnCollection.NodeColumnComparer.factor">
            <summary>
            Порядок сортировки (1 - по возрастанию, -1 - по убыванию)
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.NodeColumnComparer.#ctor(System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="ascending">true - по возрастанию</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.NodeColumnComparer.Compare(Intermech.Navigator.Interfaces.NodeColumn,Intermech.Navigator.Interfaces.NodeColumn)">
            <summary>
            Сравнить две указанные колонки атрибутов
            </summary>
            <param name="x">Колонка x</param>
            <param name="y">Колонка y</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.Clone">
            <summary>
            Создать копию объекта, идентичную натуральной
            </summary>
            <returns>Копия объекта, идентичная натуральной</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.SyncWithMaster(Intermech.Navigator.Interfaces.NodeColumnCollection)">
            <summary>
            Выполнить синхронизацию коллекции допустимых колонок (текущий экземпляр)
            с коллекцией выбранных колонок (параметр master). Колонки в коллекции master
            будут сверены с аналогичными колонками текущей коллекции и при необходимости
            заменены на более приоритетные колонки. Затем из текущей коллекции будут
            удалены все дубликаты колонок, кроме самых приоритетных
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.LoadData(System.Xml.XmlNode)">
            <summary>
            Загрузка состояния из XML
            </summary>
            <param name="xmlNode">Нод с настройками столбцов</param>
            <returns>Результат операции</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnCollection.SaveData(System.Xml.XmlNode)">
            <summary>
            Сохранение состояния в XML
            </summary>
            <param name="xmlNode">Нод для настроек столбцов</param>
            <returns>Результат опереции</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeColumnRenameEventArgs">
            <summary>
            Аргументы события, позволяющего переименовывать колонки в гридах Навигатора
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnRenameEventArgs.Column">
            <summary>
            Колонка Навигатора
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnRenameEventArgs.NewName">
            <summary>
            Новое имя колонки. Значение String.Empty - имя колонки останется без изменений
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnRenameEventArgs.#ctor(Intermech.Navigator.Interfaces.NodeColumn,System.String)">
            <summary>
            Создать аргументы события
            </summary>
            <param name="column">Колонка Навигатора</param>
            <param name="newName">Новое имя колонки. Значение String.Empty - имя колонки останется без изменений</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnRenameEventArgs.#ctor(System.Object)">
            <summary>
            Создать экземпляр класса и заполнить его информацией из объекта-источника
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnRenameEventArgs.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnRenameEventArgs.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeColumnRenameEventArgs.Clone">
            <summary>
            Создать точную копию экземпляра класса
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeColumnRenameEventHandler">
            <summary>
            Делегат для вызова
            </summary>
            <param name="sender">Отправитель</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeColumnSortOrder">
            <summary>
            Возможные направления сортировки данных в виртуальных колонках "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnSortOrder.None">
            <summary>
            Колонка не участвует в сортировке
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnSortOrder.Ascending">
            <summary>
            Содержимое колонки сортируется по возрастанию
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeColumnSortOrder.Descending">
            <summary>
            Содержимое колонки сортируется по убыванию
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ContentType">
            <summary>
            Данный перечислитель (набор битовых флажков, [Flags]) позволяет указать, 
            какое содержимое находится в составе элемента пространства навигации.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ContentType.None">
            <summary>
            Содержимое узла неизвестно.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ContentType.Folders">
            <summary>
            В содержимое узла могут входить папки.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ContentType.NonFolders">
            <summary>
            В содержимое узла могут входить не папки (аналог файлов в файловой системе).
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ContentType.Hidden">
            <summary>
            В содержимое узла могут скрытые узлы.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IGroupingObjectsCache">
            <summary>
            Интерфейс кэша для хранения списков идентификаторов найденных группирующих объектов для 
            указанных идентификаторов элементов пространства навигации
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IGroupingObjectsCache.GetGroupingObjects(Intermech.Navigator.Interfaces.INodeID,System.String)">
            <summary>
            Получить из кэша список идентификаторов ранее найденных группирующих объектов
            для указанного идентификатора элемента пространства навигации с указанным режимом поиска
            </summary>
            <param name="nodeID">Идентификатор элемента пространства навигации</param>
            <param name="searchMode">Режим поиска</param>
            <returns>Список группирующих объектов или null, если значение не было найдено или данные устарели</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IGroupingObjectsCache.SetGroupingObjects(Intermech.Navigator.Interfaces.INodeID,System.String,Intermech.Interfaces.SearchGroupingObjects)">
            <summary>
            Сохранить в кэше новые данные по группирующим объектам
            для указанного идентификатора элемента пространства навигации с указанным режимом поиска
            </summary>
            <param name="nodeID">Идентификатор элемента пространства навигации</param>
            <param name="searchMode">Режим поиска</param>
            <param name="groupingObjects">Список найденных группирующих объектов</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IGroupingObjectsCache.RemoveGroupingObjects(Intermech.Navigator.Interfaces.INodeID,System.String)">
            <summary>
            Удалить из кэша данные по группирующим объектам
            для указанного идентификатора элемента пространства навигации с указанным режимом поиска
            </summary>
            <param name="nodeID">Идентификатор элемента пространства навигации</param>
            <param name="searchMode">Режим поиска</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IGroupingObjectsCache.Reset">
            <summary>
            Полностью очистить кэш
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.GroupingObjectsCacheKey">
            <summary>
            Ключ в кэше группирующих объектов
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GroupingObjectsCacheKey.NodeID">
            <summary>
            Идентификатор элемента пространства навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GroupingObjectsCacheKey.SearchMode">
            <summary>
            Режим поиска, по которому были найдены группирующие объекты
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.GroupingObjectsCacheKey.#ctor(Intermech.Navigator.Interfaces.INodeID,System.String)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="nodeID">Идентификатор элемента пространства навигации</param>
            <param name="searchMode">Режим поиска, по которому были найдены группирующие объекты</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.GroupingObjectsCacheKey.Equals(System.Object)">
            <summary>
            Выполнить сравнение с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns>true, если объекты равны</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.GroupingObjectsCacheKey.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.GroupingObjectsCache">
            <summary>
            Кэш для хранения списков идентификаторов найденных группирующих объектов для 
            указанных идентификаторов элементов пространства навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GroupingObjectsCache.SyncRoot">
            <summary>
            Объект для синхронизации доступа к кэшу
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GroupingObjectsCache._cache">
            <summary>
            Кэш найденных группирующих объектов
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.GroupingObjectsCache.#ctor">
            <summary>
            Создать кэш
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.GroupingObjectsCache.GetGroupingObjects(Intermech.Navigator.Interfaces.INodeID,System.String)">
            <summary>
            Получить из кэша список идентификаторов ранее найденных группирующих объектов
            для указанного идентификатора элемента пространства навигации с указанным режимом поиска
            </summary>
            <param name="nodeID">Идентификатор элемента пространства навигации</param>
            <param name="searchMode">Режим поиска</param>
            <returns>Список идентификаторов или null, если значение не было найдено или данные устарели</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.GroupingObjectsCache.SetGroupingObjects(Intermech.Navigator.Interfaces.INodeID,System.String,Intermech.Interfaces.SearchGroupingObjects)">
            <summary>
            Сохранить в кэше новые данные по группирующим объектам
            для указанного идентификатора элемента пространства навигации с указанным режимом поиска
            </summary>
            <param name="nodeID">Идентификатор элемента пространства навигации</param>
            <param name="searchMode">Режим поиска</param>
            <param name="groupingObjects">Список идентификаторов версий найденных группирующих объектов</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.GroupingObjectsCache.RemoveGroupingObjects(Intermech.Navigator.Interfaces.INodeID,System.String)">
            <summary>
            Удалить из кэша данные по группирующим объектам
            для указанного идентификатора элемента пространства навигации с указанным режимом поиска
            </summary>
            <param name="nodeID">Идентификатор элемента пространства навигации</param>
            <param name="searchMode">Режим поиска</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.GroupingObjectsCache.Reset">
            <summary>
            Полностью очистить кэш
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IDescriptorElementStatuses">
            <summary>
            Интерфейс позволяет получать и назначать статусы у дескриптора узла.
            Предназначен для реализации в дескрипторах корневых узлов, которые могут иметь состав.
            Обращение к интерфейсу будет выполняться в случае, если на основании дескриптора
            будет строиться содержимое дерева "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IDescriptorElementStatuses.RootDescriptor">
            <summary>
            Дескриптор элемента пространства навигации, чьи статусы управляются данным интерфейсом
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IDescriptorElementStatuses.Statuses">
            <summary>
            Статусы элемента пространства навигации. Установка и чтение отдельных полей должно выполняться
            с помощью службы IElementStatusesClientService
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IDescriptorElementStatusesService">
            <summary>
            Интерфейс службы, которая позволяет подписаться на событие для добавления
            статусов в дескрипторы корневых узлов дерева "Навигатора"
            </summary>
        </member>
        <member name="E:Intermech.Navigator.Interfaces.IDescriptorElementStatusesService.SetDescriptorStatuses">
            <summary>
            Событие "Установить/изменить значения в статусах дескриптора корневого элемента пространства навигации"
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IDescriptorElementStatusesService.FireSetDescriptorStatuses(Intermech.Navigator.Interfaces.IDescriptorElementStatuses)">
            <summary>
            Сгенерировать событие "Установить/изменить значения в статусах дескриптора корневого элемента пространства навигации"
            </summary>
            <param name="descriptor">Интерфейс, позволяющий управлять статусами дескриптора корневого элемента пространства навигации</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.SetDescriptorStatusesEventArgs">
            <summary>
            Аргументы для события "Установить/изменить значения в статусах дескриптора корневого элемента пространства навигации"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.SetDescriptorStatusesEventArgs._descriptor">
            <summary>
            Интерфейс, позволяющий управлять статусами дескриптора корневого элемента пространства навигации
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.SetDescriptorStatusesEventArgs.RootDescriptor">
            <summary>
            Интерфейс, позволяющий управлять статусами дескриптора корневого элемента пространства навигации
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.SetDescriptorStatusesEventArgs.#ctor(Intermech.Navigator.Interfaces.IDescriptorElementStatuses)">
            <summary>
            Создать аргументы события "Установить/изменить значения в статусах дескриптора корневого элемента пространства навигации"
            </summary>
            <param name="descriptor">Интерфейс, позволяющий управлять статусами дескриптора корневого элемента пространства навигации</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.SetDescriptorStatuses">
            <summary>
            Делегат - установить/изменить значения в статусах дескриптора корневого элемента пространства навигации
            </summary>
            <param name="sender">Отправитель события</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IIODestination">
            <summary>
            Интерфейс обработчика событий
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IIODestination.SupportedEvents">
            <summary>
            Список поддерживаемых обработчиком событий
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IIODestination.ProcessEvent(Intermech.Navigator.Interfaces.IIOEvent)">
            <summary>
            Выполнить обработку события
            </summary>
            <param name="Event">Событие</param>
            <returns>true, если обработка выполнена успешно, false, если событие не обработано</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IIODispatcher">
            <summary>
            Интерфейс диспетчера событий
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IIODispatcher.RegisterDestination(Intermech.Navigator.Interfaces.IIODestination)">
            <summary>
            Зарегистрировать обработчик событий
            </summary>
            <param name="Destination">Добавляемый обработчик событий</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IIODispatcher.UnregisterDestination(Intermech.Navigator.Interfaces.IIODestination)">
            <summary>
            Удалить из внутренних списков обработчик событий
            </summary>
            <param name="Destination">Удаляемый обработчик событий</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IIODispatcher.ProcessEvent(Intermech.Navigator.Interfaces.IIOEvent)">
            <summary>
            Выполнить обработку события
            </summary>
            <param name="Event">Событие</param>
            <returns>true, если хотя бы один из зарегистрированных обработчиков обработал сообщение</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IOEventFlags">
            <summary>
            Флажки события
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventFlags.efNone">
            <summary>
            Никаких флажков нет
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventFlags.efProcessed">
            <summary>
            Событие уже обработано
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventFlags.efBroadcast">
            <summary>
            Событие является широковещательным
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IOEventType">
            <summary>
            Событие
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventType.evNone">
            <summary>
            Нет события
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventType.evKeyDown">
            <summary>
            Нажата клавиша
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventType.evKeyUp">
            <summary>
            Отпущена клавиша
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventType.evMouseClick">
            <summary>
            Нажата кнопка мыши
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventType.evMouseDoubleClick">
            <summary>
            Двойной клик мышью
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventType.evDragDropEnter">
            <summary>
            Событие drag'n'drop - пришло в клиентскую область контрола
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventType.evDragDropOver">
            <summary>
            Событие drag'n'drop - выполняется перетаскивание в клиентской области контрола
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventType.evDragDropLeave">
            <summary>
            Событие drag'n'drop - перетаскивание ушло из клиентской области контрола
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventType.evDragDrop">
            <summary>
            Событие drag'n'drop - перетаскивание завершилось в клиентской области контрола
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IOEventTypes">
            <summary>
            Допустимые события
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventTypes.evNone">
            <summary>
            Никакие события не интересуют
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventTypes.evKeyDown">
            <summary>
            Обработка нажатий клавиш
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventTypes.evKeyUp">
            <summary>
            Обработка поднятий клавиш
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventTypes.evMouseClick">
            <summary>
            Обработка кликов мышью
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventTypes.evMouseDoubleClick">
            <summary>
            Обработка двойных кликов мышью
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventTypes.evDragDropEnter">
            <summary>
            Событие drag'n'drop - пришло в клиентскую область контрола
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventTypes.evDragDropOver">
            <summary>
            Событие drag'n'drop - выполняется перетаскивание в клиентской области контрола
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventTypes.evDragDropLeave">
            <summary>
            Событие drag'n'drop - перетаскивание ушло из клиентской области контрола
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.IOEventTypes.evDragDrop">
            <summary>
            Событие drag'n'drop - перетаскивание завершилось в клиентской области контрола
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IIOSourceInfo">
            <summary>
            Интерфейс с информацией об источнике события
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IIOSourceInfo.Source">
            <summary>
            Источник события
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IIOEvent">
            <summary>
            Интерфейс события
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IIOEvent.EventFlags">
            <summary>
            Флажки сообщения
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IIOEvent.EventType">
            <summary>
            Событие
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IIOEvent.EventData">
            <summary>
            Данные события. Трактуются в зависимости от значения Event:
            evKeyDown, evKeyUp: в поле хранится объект типа KeyEventArgs,
            evMouseClick, evMouseDoubleClick: в поле хранится объект типа MouseEventArgs или EventArgs,
            evDragDrop*: в поле хранится объект типа DragEventArgs
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IIOEvent.Tag">
            <summary>
            Пользовательские данные
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IIOSource">
            <summary>
            Интерфейс источника событий
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IIOSource.Control">
            <summary>
            Элемент управления, который является источником событий
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IIOSource.Services">
            <summary>
            Контейнер сервисов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IIOSource.SelectedItems">
            <summary>
            Коллекция выделенных в элементе управления элементов
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NavigatorException">
            <summary>
            Базовый класс исключений, служащий основой для построения иерархии
            исключенией навигатора.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NavigatorFactoryException">
            <summary>
            Класс исключений, сбрасываемых сервисом IFactory при невозможности
            зарегистрировать какое-либо дополнение к навигатору.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IContextAware">
            <summary>
            Контекст (контейнер сервисов) для элемента пространства навигации
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IContextAware.Services">
            <summary>
            Контекст (контейнер сервисов) для элемента пространства навигации
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IDescriptor">
            <summary>
            Интерфейс, который должен реализовываться классами, описывающими различные
            типы элементов из пространства навигации, которые можно включать в состав
            различных виртуальных элементов (например, в корень всего дерева 
            навигатора).
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IDescriptor.MapColumnToField(Intermech.Navigator.Interfaces.NodeColumn)">
            <summary>
            Возвращает идентификатор поля источника данных для указанной
            виртуальной колонки. Если данная колонка не поддерживается, то
            метод возвращает null.
            </summary>
            <param name="column">Виртуальная колонка навигатора</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IDescriptor.GetRecordNodeID">
            <summary>
            Возвращает актуальный на момент вызова метода идентификатор объекта, который
            описывается дескриптором. Метод может возвращать null, если объект не доступен или
            не существует.
            </summary>
            <returns>Унифицированный идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IDescriptor.GetRecordValues(Intermech.Navigator.Interfaces.INodeID,System.Object[])">
            <summary>
            Возвращает значения полей для объекта, описываемого унифицированным дескриптором.
            Метод может возвращать null, если объект не доступен или не существует.
            </summary>
            <param name="nodeID">Унифицированный дескриптор.</param>
            <param name="fields">Массив идентификаторов полей данных, значения которых
            должны быть получены в результате выполнения запроса.</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISpecialFieldsSupported.GetSpecialFields">
            <summary>
            Возвращает список идентификаторов полей источника данных, значения
            которых обязательно должны быть получены в результате выполнения
            запроса.
            </summary>
            <returns>Список идентификаторов полей источника данных</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ICanOpenInNewWindow">
            <summary>
            Вот такой вот загадочый интерфейс нужно просить у ISelectedItems, вместо того,
            чтобы просить IDescriptor (при создании которого идут обращения в базу данных)
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.CanOpenInNewWindow">
            <summary>
            Вот такой вот загадочый класс реализует не менее загадочный интерфейс ICanOpenInNewWindow
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IFocusedItem">
            <summary>
            Интерфейс сфокусированного узла в списке
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IFocusedItem.FocusedColumn">
            <summary>
            Колонка сфокусированного узла
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IFocusedItem.ItemID">
            <summary>
            Идентификатор сфокусированного узла
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IFocusedItem.ParentPath">
            <summary>
            Путь к родительскому узлу
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFocusedItem.GetItemData(System.Type)">
            <summary>
            Извлечь из узла данные указанного типа
            </summary>
            <param name="dataFormat">Тип данных</param>
            <returns>Данные указанного типа или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFocusedItem.GetParentData(System.Type)">
            <summary>
            Извлечь из родительского узла данные указанного типа
            </summary>
            <param name="dataFormat">Тип данных</param>
            <returns>Данные указанного типа или null</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ProviderInfo">
            <summary>
            Класс, служащий базой для создания классов-контейнеров сведений, получаемых от провайдеров
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ProviderInfo._possibleItemsTable">
            <summary>
            Допустимые элементы
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ProviderInfo._possibleItems">
            <summary>
            Названия допустимых элементов
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ProviderInfo._suppressedItemsList">
            <summary>
            Подавляемые элементы
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ProviderInfo._suppressedItems">
            <summary>
            Названия подавляемых элементов
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ProviderInfo.#ctor">
            <summary>
            Создать экземпляр класса
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ProviderInfo.PossibleItems">
            <summary>
            Получить список допустимых элементов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ProviderInfo.SuppressedItems">
            <summary>
            Получить список подавляемых элементов
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ProviderInfo.AddPossibleItem(System.String,System.Object)">
            <summary>
            Добавить допустимый элемент
            </summary>
            <param name="itemName">Название допустимого элемента</param>
            <param name="item">Допустимый элемент</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ProviderInfo.RemovePossibleItem(System.String)">
            <summary>
            Удалить допустимый элемент
            </summary>
            <param name="itemName">Название удаляемого допустимого элемента</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ProviderInfo.AddSuppressedItem(System.String)">
            <summary>
            Добавить подавляемый элемент
            </summary>
            <param name="itemName">Название подавляемого элемента</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ProviderInfo.IsItemPossible(System.String)">
            <summary>
            Является ли указанный элемент допустимым
            </summary>
            <param name="itemName">Название проверяемого элемента</param>
            <returns>true, если указанный элемент является допустимым</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ProviderInfo.IsItemSuppressed(System.String)">
            <summary>
            Является ли указанный элемент подавляемым
            </summary>
            <param name="itemName">Название проверяемого элемента</param>
            <returns>true, если указанный элемент является подавляемым</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ProviderInfo.GetPossibleItem(System.String)">
            <summary>
            Получить элемент по его имени
            </summary>
            <param name="itemName">Имя элемента</param>
            <returns>Элемент или null</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INode">
            <summary>
            Основной интерфейс элемента из пространства навигации.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INode.Options">
            <summary>
            Набор дополнительных свойств, которые присущи указанному элементу пространства навигации
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INode.GetQuery(Intermech.Navigator.Interfaces.ContentType)">
            <summary>
            Возвращает интерфейс объекта-запроса, с помощью которого можно
            прочитать список дочерних элементов. Если у данного элемента нет
            дочерних, то метод вернет null.
            </summary>
            <param name="content">Набор флагов, описывающих тип читаемых дочерних элементов</param>
            <returns>Интерфейс запроса</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INode.GetDefaultColumns(Intermech.Navigator.Interfaces.ContentType)">
            <summary>
            Возвращает коллекцию колонок, которые должны отображаться в гриде
            для данного элемента. Используется только в том случае, если для
            данного элемента нет сохраненных в конфиграции пользователя
            настроек отображения грида.
            </summary>
            <param name="content">Набор флагов, описывающих тип содержимого грида</param>
            <returns>Коллекция виртуальных колонок навигатора</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INode.GetSupportedColumns(Intermech.Navigator.Interfaces.ContentType,System.String)">
            <summary>
            Возвращает коллекцию всех поддерживаемых данным элементом 
            виртуальных колонок навигатора. Этот метод используется диалогом
            настройки отображения грида.
            </summary>
            <param name="content">Набор флагов, описывающих тип содержимого грида</param>
            <param name="ColumnSetName">Название набора колонок. 
            Intermech.Navigator.Consts.NavigatorDefaultColumnSetName - набор колонок по умолчанию</param>
            <returns>Коллекция виртуальных колонок навигатора</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INode.GetSupportedColumnSetNames">
            <summary>
            Вернуть список поддерживаемых названий наборов колонок. 
            Если null - есть только название по умолчанию (Intermech.Navigator.Consts.NavigatorDefaultColumnSetName)
            </summary>
            <returns>Список поддерживаемых названий наборов колонок</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INode.Refresh">
            <summary>
            Обновляет внутренние структуры элемента навигации.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeOptions">
            <summary>
            Набор дополнительных свойств элемента пространства навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeOptions.None">
            <summary>
            Никаких опций нет
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeOptions.CanContainsComposition">
            <summary>
            Узел может иметь состав
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeOptions.CanContainsObjectsList">
            <summary>
            Узел может содержать список объектов
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeOptions.CanContainsRelationsList">
            <summary>
            Узел может содержать список связей
            (например, виртуальный узел)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeOptions.CanContainsObjectTypesList">
            <summary>
            Узел может содержать список типов объектов
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeOptions.Default">
            <summary>
            Значение свойств по умолчанию - "Никаких опций нет"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeIDCreator">
            <summary>
            Интерфейс, позволяющий создавать частично заполненные описания узлов (INodeID) по идентификаторам связей
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeIDCreator.Create(System.Int64)">
            <summary>
            Создать частично заполненное описание узла по идентификатору связи
            </summary>
            <param name="prjLinkID">Идентификатор связи</param>
            <returns>Частично заполненное описание узла</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeItems">
            <summary>
            Интерфейс для работы с дочерними элементами пространства навигации
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.GetAttributesOf(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Возвращает набор атрибутов указанного дочернего элемента.
            </summary>
            <param name="nodeID">Идентификатор дочернего элемента</param>
            <returns>Набор флагов атрибутов</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.GetChild(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Возвращает основной интерфейс элемента из пространства навигации
            для указанного дочернего элемента.
            </summary>
            <param name="nodeID">Идентификатор дочернего элемента</param>
            <returns>Интерфейс элемента навигации</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.GetAddress(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Возвращает адрес дочернего элемента, который может быть использован
            в адресной строке.
            </summary>
            <param name="nodeID">Идентификатор дочернего элемента</param>
            <returns>Адрес дочернего элемента</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.ParseAddress(System.String)">
            <summary>
            Восстанавливает идентификатор дочернего элемента по указанному
            имени из адресной строки. Если найти адресуемый элемент не удается,
            то метод должен вернуть null.
            </summary>
            <param name="address">Адрес дочернего элемента</param>
            <returns>Идентификатор дочернего элемента</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.Serialize(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Сериализует идентификатор дочернего элемента.
            </summary>
            <param name="nodeID">Идентификатор дочернего элемента.</param>
            <returns>Сериализованное представление идентификатора.</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.Deserialize(Intermech.Navigator.Persistence.PersistentState)">
            <summary>
            Восстанавливает идентификатор дочернего элемента из 
            сериализованного представления. Проверять наличие этого элемента
            не нужно.
            </summary>
            <param name="persistNodeID">Сериализованное представление идентификатора элемента.</param>
            <returns>Идентификатор дочернего элемента.</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.GetData(Intermech.Navigator.Interfaces.INodeID,System.Type)">
            <summary>
            Возвращает данные дочернего элемента в указанном формате. Если
            формат не поддерживается, то результатом будет null.
            </summary>
            <param name="nodeID">Идентификатор дочернего элемента.</param>
            <param name="dataFormat">Тип формата данных.</param>
            <returns>Результирующий объект указанного типа.</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.GetData(Intermech.Navigator.Interfaces.NodeIDCollection,System.Type)">
            <summary>
            Возвращает данные в указанном формате для каждого дочернего элемента
            из коллекции. Если формат не поддерживается, то соответствующий
            элемент результата будет содержать null.
            </summary>
            <param name="nodeIDs">Коллекция идентификаторов дочерних элементов.</param>
            <param name="dataFormat">Тип формата данных.</param>
            <returns>Массив объектов указанного типа.</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.GetAnalyser(Intermech.Navigator.Interfaces.NodeViewCapabilities,System.Object,Intermech.Interfaces.Client.NotificationEventArgs)">
            <summary>
            Возвращает анализатора, который поможет визуальному элементу обработать
            событие обновления.
            </summary>
            <param name="capabilities">Сведения о возможностях визуального элемента.</param>
            <param name="sender">Объект, отправивший событие обновления.</param>
            <param name="e">Параметры события обновления.</param>
            <returns>Анализатор изменений.</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeItems.GetService(System.Type)">
            <summary>
            Возвращает сервис указанного типа или null, если он не реализован.
            </summary>
            <param name="service">Тип сервиса</param>
            <returns>Сервис</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeNotifications">
            <summary>
            Позволяет элементу навигации реагировать на события обновления.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeNotifications.Process(Intermech.Interfaces.Client.NotificationEventArgs,System.Object)">
            <summary>
            Вернуть код реагирования на событие обновления
            </summary>
            <param name="e">Аргументы возникшего события</param>
            <param name="AdditionalInfo">Дополнительная информация</param>
            <returns>Код реагирования на событие</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ProcessResult">
            <summary>
            Код реагрирования узла на событие
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ProcessResult.None">
            <summary>
            Никаких действий не предпринимать
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ProcessResult.RefreshNodeFields">
            <summary>
            Узел должен перечитать только своё содержимое, список дочерних узлов остаётся неизменным
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ProcessResult.RefreshNode">
            <summary>
            Узел должен перечитать своё содержимое, а также список своих дочерних узлов
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ProcessResult.RefreshNodeAndColumns">
            <summary>
            Узел должен перестроить свои колонки, перечитать своё содержимое, а также список своих дочерних узлов
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeQueryOptions">
            <summary>
            Перечислитель (набор битовых флажков, [Flags]) позволяет задать некоторые 
            опции для интерфейса-запроса к источнику данных INodeQuery.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeQueryOptions.None">
            <summary>
            Нет никаких опций
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeQueryOptions.ReceiveTotalRecordsCount">
            <summary>
            Перед первым пакетным чтением определить, сколько всего записей может быть получено
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeQuery">
            <summary>
            Интерфейс объекта-запроса к источнику данных, используемого
            для чтения содержимого элементов из пространства навигации
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeQuery.AddColumn(Intermech.Navigator.Interfaces.NodeColumn,Intermech.Navigator.Interfaces.INodeColumnTransform)">
            <summary>
            Добавляет колонку, значение которой должно быть получено в
            результате выполнения запроса. Дополнительно может быть указано
            преобразование, которое должно быть применено к содержимому колонки.
            Если преобразовывать содержимое колонки не требуется, то в качестве
            преобразования следует указать null.
            </summary>
            <param name="column">Виртуальная колонка навигатора</param>
            <param name="transform">Преобразование содержимого колонки</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeQuery.Execute(System.Object,System.Int32)">
            <summary>
            Выполняет запрос на чтение порции дочерних элементов. Позиция для
            чтения определяется закладкой (bookmark). Если закладка = null,
            то будет прочитана первая порция, иначе будет прочитана порция с
            позиции, указанной в закладке. 
            </summary>
            <param name="bookmark">Закладка, указывающая позицию для чтения</param>
            <param name="count">Количество записей в порции.</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeQuery.Execute(Intermech.Navigator.Interfaces.NodeIDCollection)">
            <summary>
            Выполняет запрос на чтение значений колонок для указанных
            дочерних элементов. Этот метод используется навигатором при 
            операциях обновления содержимого дерева и других элементов
            визуального интерфейса.
            </summary>
            <param name="nodeIDs">Коллекция идентификаторов дочерних элементов</param>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeQuery.Bookmark">
            <summary>
            Возвращает закладку, определяющую позицию для чтения следующей
            порции дочерних элементов или null, если была прочитана
            последняя порция.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeQuery.RecordCount">
            <summary>
            Возвращает количество прочитанных в результате выполнения запроса дочерних элементов.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeQuery.Options">
            <summary>
            Условия выполнения запросов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeQuery.TotalRecordCount">
            <summary>
            Возвращает количество всех элементов, которые могут быть получены с помощью данного запроса.
            Значение свойства будет определено только после первого пакетного чтения, при условии, что
            в опциях задан флажок ReceiveTotalRecordsCount. Иначе свойство будет равно значению RecordCount.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeQuery.GetRecordNodeID(System.Int32)">
            <summary>
            Возвращает идентификатор дочернего элемента по его порядковому номеру.
            </summary>
            <param name="index">Порядковый номер дочернего элемента</param>
            <returns>Идентификатор дочернего элемента</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeQuery.GetRecordValues(System.Int32)">
            <summary>
            Возвращает значения колонок дочернего элемента по его порядковому номеру.
            </summary>
            <param name="index">Порядковый номер дочернего элемента</param>
            <returns>Массив значений колонок</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeQuery.GetRawRecordValues(System.Int32)">
            <summary>
            Возвращает исходные значения колонок дочернего элемента по его порядковому номеру.
            </summary>
            <param name="index">Порядковый номер дочернего элемента</param>
            <returns>Массив исходных значений колонок</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeStatusesInfo">
            <summary>
            Необязательный интерфейс, предназначенный для обработки виртуальной
            колонки навигатора "Статусы элемента". Эта колонка предназначена для
            отображения группы иконок размером 16x16, каждая из которых представляет
            один из статусов элемента навигации. При наведении мышки любую из иконок
            навигатор показывает ее описание во всплывающей подсказке. Этот интерфейс
            позволяет навигатору получать иконки для отображения, а также их описания.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeStatusesInfo.Reload">
            <summary>
            Перечитать состояние сервиса, список статусов, значки и описания
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeStatusesInfo.GetIcons(Intermech.Navigator.Interfaces.INodeID,System.Object,System.String[])">
            <summary>
            Возвращает массив иконок размером 16x16, каждая из которых 
            представляет один из статусов элемента навигации.
            </summary>
            <param name="nodeId">Идентификатор элемента навигации</param>
            <param name="columnValue">Значение колонки</param>
            <param name="excludedStatusesGuids">Список идентификаторов статусов, которые требуется исключить из списка</param>
            <returns>Массив иконок статусов</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeStatusesInfo.GetDescription(System.IServiceProvider,Intermech.Navigator.Interfaces.INodeID,System.Object,System.Int32)">
            <summary>
            Возвращает текстовое описание иконки статуса. Если описания нет,
            то возвращает пустую строку.
            </summary>
            <remarks>
            Индекс иконки может быть больше количества иконок, отображенных
            на экране, т.к. навигатор вычисляет индекс указанной пользователем
            иконки по положению указателя мышки на экране.
            </remarks>
            <param name="services">Контейнер сервисов</param>
            <param name="nodeId">Идентификатор элемента навигации</param>
            <param name="columnValue">Значение колонки</param>
            <param name="iconIndex">Порядковый номер иконки</param>
            <returns>Текстовое описание статуса</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeStatusesInfo.GetFont(System.IServiceProvider,Intermech.Navigator.Interfaces.INodeID,System.Object,System.Drawing.Font)">
            <summary>
            Возвращает шрифт для указанной ячейки, если есть какие-то проблемы с её содержимым, или null
            </summary>
            <param name="services">Контейнер сервисов</param>
            <param name="nodeId">Идентификатор элемента навигации</param>
            <param name="columnValue">Значение колонки</param>
            <param name="parentFont">Текущий шрифт</param>
            <returns>Шрифт или null, если не требуется выделение особым шрифтом</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeView">
            <summary>
            Интерфейс позволяет получать доступ к коллекции узлов INodeID у элемента управления
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeView.Count">
            <summary>
            Количество узлов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeView.Item(System.Int32)">
            <summary>
            Получить узел с указанным индексом
            </summary>
            <param name="index">Индекс узла</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeView.Append(Intermech.Navigator.Interfaces.NodeIDCollection)">
            <summary>
            Добавить в коллекцию дополнительные узлы
            </summary>
            <param name="partialNodeIDs">Коллекция дополнительных узлов</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeView.Update(System.Collections.IList)">
            <summary>
            Обновить коллекцию узлов с указанными индексами
            </summary>
            <param name="indexes">Коллекция индексов узлов, которые требуется обновить</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeView.Replace(System.Collections.IList,Intermech.Navigator.Interfaces.NodeIDCollection)">
            <summary>
            Выполнить замену узлов с указанными индексами данными из дополнительной коллекции
            </summary>
            <param name="indexes">Коллекция индексов узлов, которые требуется заменить</param>
            <param name="replacementNodeIDs">Коллекция новых узлов взамен старых</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodeView.Remove(System.Collections.IList)">
            <summary>
            Удалить узлы с указанными индексами
            </summary>
            <param name="indexes">Коллекция индексов узлов, которые требуется удалить</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IReportView">
            <summary>
            Интерфейс позволяет элементу управления работать с отчётами
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IReportView.NodeQuery">
            <summary>
            Интерфейс запроса к источнику данных для элемента навигации, чьё содержимое отображается в элементе управления
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISimpleSelectedItems">
            <summary>
            Интерфейс предоставляет доступ к упрощённой коллекции выбранных пользователем элементов пространства навигации.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISimpleSelectedItems.Count">
            <summary>
            Возвращает количество идентификаторов элементов навигации в коллеции.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISimpleSelectedItems.GetItemData(System.Int32,System.Type)">
            <summary>
            Возвращает данные указанного формата для элемента коллекции. Если элемент
            не поддерживает указанный формат, то результатом будет null.
            </summary>
            <param name="index">Индекс идентификатора элемента в коллекции.</param>
            <param name="dataFormat">Тип формата данных.</param>
            <returns>Данные в указанном формате.</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISelectedItems">
            <summary>
            Интерфейс предоставляет доступ к коллекции выбранных пользователем элементов пространства навигации
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISelectedItems.IsCollage">
            <summary>
            Возвращает true, если коллекция содержит разнородные идентификаторы
            элементов (т.е. созданные разными элементами навигации). Такие
            разнородные коллекции образуются при множественном выделении в дереве
            навигатора и других подобных этой ситуациях.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISelectedItems.GetItemID(System.Int32)">
            <summary>
            Возвращает идентификатор элемента в коллекции.
            </summary>
            <param name="index">Индекс идентификатора элемента в коллекции.</param>
            <returns>Идентификатор элемента.</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISelectedItems.GetParentData(System.Int32,System.Type)">
            <summary>
            Возвращает данные требуемого формата для родительского элемента,
            создавшего указанный идентификатор элемента. Если родительский элемент
            не поддерживает запрошенный формат данных, то результатом будет null.
            </summary>
            <param name="index">Индекс идентификатора элемента в коллекции.</param>
            <param name="dataFormat">Тип формата данных.</param>
            <returns>Данные в указанном формате.</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISelectedItems.GetParentPath(System.Int32)">
            <summary>
            Возвращает полный путь родительского элемента для указанного
            идентификатора в коллекции.
            </summary>
            <param name="index">Индекс идентификатора элемента в коллекции.</param>
            <returns>Путь родительского элемента.</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IKeyedSelectedItems">
            <summary>
            Интерфейс предоставляет доступ к коллекции выбранных пользователем элементов пространства навигации,
            при этом каждый выделенный элемент снабжён своим уникальным ключом, по которому коллекция может
            найти его абсолютный индекс
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IKeyedSelectedItems.GetItemIndex(System.String)">
            <summary>
            Отыскать индекс элемента коллекции, которому назначен указанный ключ
            </summary>
            <param name="key">Ключ искомого элемента коллекции</param>
            <returns>Индекс или -1, если элемент с указанным ключом не найден в коллекции</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IKeyedSelectedItems.GetItemKey(System.Int32)">
            <summary>
            Отыскать ключ элемента коллекции с указанным индексом
            </summary>
            <param name="index">Индекс элемента коллекции</param>
            <returns>Ключ элемента коллекции</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ITreeListColumns">
            <summary>
            Интерфейс,  позволяющий управлять списком колонок дерева основного окна "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ITreeListColumns.RootDescriptor">
            <summary>
            Дескриптор корневого узла в дереве окна "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ITreeListColumns.Services">
            <summary>
            Общий контейнер сервисов окна "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ITreeListColumns.TreeListColumns">
            <summary>
            Список видимых колонок
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IUpdateAnalyser">
            <summary>
            Интерфейс анализатора, позволяющий выполнить обработать интерфейс плана действий
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IUpdateAnalyser.Preprocess(Intermech.Navigator.Interfaces.IUpdatePlan)">
            <summary>
            Метод вызывается перед анализом списка элементов для выполнения предварительных действий
            </summary>
            <param name="plan">Интерфейс плана по обновлению элементов пространства навигации</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IUpdateAnalyser.Process(Intermech.Navigator.Interfaces.INodeID,Intermech.Navigator.Interfaces.IUpdatePlan)">
            <summary>
            Метод вызывается для анализа каждого элемента из списка
            </summary>
            <param name="nodeID">Идентификатор очередного элемента пространства навигации</param>
            <param name="plan">Интерфейс плана по обновлению элементов пространства навигации</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IUpdateAnalyser.Postprocess(Intermech.Navigator.Interfaces.IUpdatePlan)">
            <summary>
            Метод вызывается после анализа списка элементов для выполнения окончательных действий
            </summary>
            <param name="plan">Интерфейс плана по обновлению элементов пространства навигации</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IUpdatePlan">
            <summary>
            Интерфейс плана по обновлению элементов пространства навигации
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IUpdatePlan.Append(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Требуется добавить дочерний элемент пространства навигации
            </summary>
            <param name="partialNodeID">Частично заполненный идентификатор элемента пространства навигации</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IUpdatePlan.Update">
            <summary>
            Требуется обновить информацию о текущем элементе
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IUpdatePlan.Replace(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Заменить текущий элемент указанным
            </summary>
            <param name="replacementNodeID">Идентификатор элемента пространства навигации</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IUpdatePlan.Remove">
            <summary>
            Удалить текущий элемент
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ViewStateFlags">
            <summary>
            Флажки состояния узла
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.None">
            <summary>
            Никаких флажков нет
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.InDialog">
            <summary>
            Вьюшка располагается в диалоговом окне
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.ReadOnly">
            <summary>
            Вьюшка должна работать в режиме "только чтение"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.NoCompositionView">
            <summary>
            Запретить показываться вьюшке "Состоит из"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.NoContainsInView">
            <summary>
            Запретить показываться вьюшке "Состав\Применяемость"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.NoEventsView">
            <summary>
            Запретить показываться вьюшке "Действия над объектом"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.NoPluginsViews">
            <summary>
            Запретить показываться вьюшкам плагинов (плагин сам должен решать, игнорировать флажок или нет)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.NoGroupingObjectsViews">
            <summary>
            Запретить показываться закладке "Группирующие объекты"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.NodeInTree">
            <summary>
            Узел находится в составе дерева
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.NodeInViews">
            <summary>
            Узел находится в составе закладок
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.NodeUnderTree">
            <summary>
            Узел находится в составе закладок, расположенных под деревом Навигатора
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.InParametersCard">
            <summary>
            Узел находится в элементе управления, размещённом в окне "Карточка"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.InObjectCreatorDialog">
            <summary>
            Узел находится в мастере по созданию объектов и связей
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.InSelectionWindow">
            <summary>
            Узел находится в окне по выбору элементов Навигатора
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.ViewStateFlags.DisableGlobalCommandProviders">
            <summary>
            Запретить загрузку глобальных комманд для категории/типа в данном контексте         
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IViewState">
            <summary>
            Интерфейс состояния вьюшки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IViewState.ViewState">
            <summary>
            Флажки состояния вьюшки
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.CreateObjectNodeParams">
            <summary>
            Параметры для создания описания узла
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.objTypeId">
            <summary>
            Идентификатор типа объекта
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.objId">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.id">
            <summary>
            Идентификатор объекта
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.prjLinkId">
            <summary>
            Идентификатор связи
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.checkedOutBy">
            <summary>
            Идентификатор пользователя, взявшего объект на изменение
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.lcStepID">
            <summary>
            Шаг жизненного цикла
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.caption">
            <summary>
            Заголовок объекта
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.relTypeID">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.projID">
            <summary>
            Идентификатор версии родительского объекта (для связи)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.relGuid">
            <summary>
            Guid связи
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.owner">
            <summary>
            Идентификатор владельца объекта
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.sorting">
            <summary>
            Значение атрибута связи "Сортировка" (если объект - в составе)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.state">
            <summary>
            Состояние фильтрации версии
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.version">
            <summary>
            Номер версии объекта
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.baseVersion">
            <summary>
            Признак базовой версии
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.siteID">
            <summary>
            Узлы информационной системы
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams.modificationID">
            <summary>
            Номер группы изменений (не равна 0 - объект принадлежит контексту редактирования)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.CreateObjectNodeParams._fontStyle">
            <summary>
            Стиль шрифта
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.ObjectID">
            <summary>
            Идентификатор версии объекта
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.ID">
            <summary>
            Идентификатор объекта
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.ObjectTypeID">
            <summary>
            Идентификатор типа объекта
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.PrjLinkID">
            <summary>
            Идентификатор связи объекта
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.CheckedOutBy">
            <summary>
            Идентификатор пользователя, взявшего объект на изменение
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.LCStepID">
            <summary>
            Шаг жизненного цикла
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.Caption">
            <summary>
            Заголовок объекта
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.RelationTypeID">
            <summary>
            Идентификатор типа связи
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.Owner">
            <summary>
            Владелец объекта
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.Sorting">
            <summary>
            Значение атрибута "Сортировка" (если объект - в составе)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.State">
            <summary>
            Состояние фильтрации версии
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.Version">
            <summary>
            Номер версии объекта
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.BaseVersion">
            <summary>
            Признак базовой версии
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.SiteID">
            <summary>
            Узлы информационной системы
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.ProjID">
            <summary>
            Идентификатор версии родительского объекта (для связи)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.RelGuid">
            <summary>
            Guid связи
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.CreateObjectNodeParams.ModificationID">
            <summary>
            Номер группы изменений (не равна 0 - объект принадлежит контексту редактирования)
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CreateObjectNodeParams.#ctor">
            <summary>
            Создать пустые параметры, описывающие узел, связанный с объектом, связью
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CreateObjectNodeParams.#ctor(System.Object)">
            <summary>
            Создать параметры, описывающие узел, связанный с объектом, связью
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CreateObjectNodeParams.#ctor(System.Int32,System.Int64,System.Int64,System.Int64,System.Int64,System.Int32,System.String,System.Int32,System.Int64,System.Int64,Intermech.Interfaces.ObjectFiltrationState,System.Int64,System.Int64,System.String,System.Int64,System.Guid,System.Int64,System.Drawing.FontStyle)">
            <summary>
            Создать параметры, описывающие узел, связанный с объектом, связью
            </summary>
            <param name="objTypeId">Идентификатор типа объекта</param>
            <param name="objId">Идентификатор версии объекта</param>
            <param name="id">Идентификатор объекта</param>
            <param name="prjLinkId">Идентификатор связи</param>
            <param name="checkedOutBy">Кем объект взят на изменение</param>
            <param name="lcStepID">Шаг жизненного цикла</param>
            <param name="caption">Заголовок объекта</param>
            <param name="relTypeID">Идентификатор типа связи</param>
            <param name="owner">Идентификатор владельца объекта</param>
            <param name="sorting">Значение атрибута "Сортировка" (если объект - в составе)</param>
            <param name="state">Состояние фильтрации версии</param>
            <param name="version">Номер версии объекта</param>
            <param name="baseVersion">Признак базовой версии</param>
            <param name="siteID">Узлы информационной системы</param>
            <param name="projID">Идентификатор родительского объекта</param>
            <param name="relGuid">Guid связи</param>
            <param name="modificationID">Номер группы изменений (не равна 0 - объект принадлежит контексту редактирования)</param>
            <param name="fontStyle">Стиль шрифта для ноды</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CreateObjectNodeParams.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CreateObjectNodeParams.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.CreateObjectNodeParams.Clone">
            <summary>
            Создать точную копию экземпляра класса
            </summary>
            <returns>Точная копия экземпляра класса</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeID">
            <summary>
            Унифицированный идентификатор элемента пространства навигации
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeID.CategoryID">
            <summary>
            Идентификатор категории элемента пространства навигации
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeID.TypeID">
            <summary>
            Индентификатор типа элемента пространства навигации внутри категории
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.INodeID.Cookie">
            <summary>
            Возвращает или записывает в идентификатор элемента навигации объект произвольной природы.
            Это поле используется внутренними механизмами "Навигатора" и заполняться извне не должно
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodeIDExtended">
            <summary>
            Создан для того, чтобы можно было корректировать путь к узлу.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeIDCollection">
            <summary>
            Коллекция унифицированных идентификаторов элементов пространства навигации.
            При необходимости позволяет связывать с элементами коллекции ключи
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeIDCollection._keysByNodes">
            <summary>
            Словарь для поиска ключей по INodeID
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeIDCollection._nodesByKeys">
            <summary>
            Словарь для поиска INodeID по ключам
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeIDCollection._indexesByKeys">
            <summary>
            Словарь для поиска индексов INodeID по ключам
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeIDCollection._keysByIndexes">
            <summary>
            Словарь для поиска ключей по индексам
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeIDCollection._indexesByNodes">
            <summary>
            Словарь для поиска индексов INodeID по узлам
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.CreateDictionaries">
            <summary>
            Создать словари при необходимости
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.CheckDictionaries">
            <summary>
            Удалить словари при необходимости
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.SyncIdxDictionaries">
            <summary>
            Перестроить словари, содержащие индексы узлов и ключей
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.Add(Intermech.Navigator.Interfaces.INodeID,System.String)">
            <summary>
            Добавить пару значений [Элемент пространства навигации] - [его ключ] в коллекцию
            </summary>
            <param name="nodeID">Элемент пространства навигации</param>
            <param name="key">Ключ (String.Empty или null - ключи не используются)</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.Add(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Добавить новый элемент пространства навигации в коллекцию
            </summary>
            <param name="item">Добавляемый элемент пространства навигации в коллекцию</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.AddRange(System.Collections.Generic.IEnumerable{Intermech.Navigator.Interfaces.INodeID})">
            <summary>
            Добавить элементы из указанной коллекции в текущую
            </summary>
            <param name="collection">Добавляемые в текущую коллекцию элементы</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.AddRange(System.Collections.Generic.IEnumerable{System.Tuple{Intermech.Navigator.Interfaces.INodeID,System.String}})">
            <summary>
            Добавить элементы из указанной коллекции в текущую
            </summary>
            <param name="collection">Добавляемые в текущую коллекцию элементы</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.IndexOf(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Отыскать первое вхождение указанного элемента в коллекции
            </summary>
            <param name="item">Искомый элемент</param>
            <returns>Индекс или -1, если элемент не найден</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.IndexOfKey(System.String)">
            <summary>
            Отыскать первое вхождение указанного ключа элемента в коллекции
            </summary>
            <param name="key">Искомый ключ элемента</param>
            <returns>Индекс или -1, если ключ элемента не найден</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.KeyOfIndex(System.Int32)">
            <summary>
            Найти ключ элемента с указанным индексом
            </summary>
            <param name="index">Индекс</param>
            <returns>Ключ или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.Contains(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Проверить наличие указанного элемента в коллекции
            </summary>
            <param name="item">Искомый элемент</param>
            <returns>true - элемент найден в коллекции</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.ContainsKey(System.String)">
            <summary>
            Проверить наличие указанного ключа в коллекции
            </summary>
            <param name="key">искомый ключ</param>
            <returns>true - ключ найден в коллекции</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.Remove(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Удалить первый найденный указанный элемент из списка
            </summary>
            <param name="item">Удаляемый элемент</param>
            <returns>true - удаление выполнено успешно</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.RemoveAll(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Удалить все вхождения указанного элемента из списка
            </summary>
            <param name="item">Удаляемый элемент</param>
            <returns>Количество удалённых элементов</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.CheckItem(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Проверить значение указанного элемента на null.
            При ошибке будет сгенерировано исключение ArgumentNullException
            </summary>
            <param name="item">Проверяемый элемент</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDCollection.CheckKey(System.String)">
            <summary>
            Проверить соответствие указанного ключа общей политике экземпляра коллекции по работе с ключами.
            При ошибке будет сгенерировано исключение ArgumentException
            </summary>
            <param name="key">Проверяемый ключ</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeIDPath">
            <summary>
            Путь к элементу пространства навигации. Путь основан на дескрипторе корневого узла и 
            массиве унифицированных идентификаторов родительских элементов.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeIDPath._rootDescriptor">
            <summary>
            Описание корневого элемента пространства навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeIDPath._items">
            <summary>
            Список унифицированных идентификаторов родительских элементов пространства навигации
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDPath.#ctor(Intermech.Navigator.Interfaces.IDescriptor)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="rootDescriptor">Описание корневого элемента пространства навигации</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDPath.#ctor(Intermech.Navigator.Interfaces.NodeIDPath)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="path">Путь к элементу пространства навигации</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDPath.#ctor(Intermech.Navigator.Interfaces.NodeIDPath,Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="path">Путь к элементу пространства навигации</param>
            <param name="nodeID">Идентификатор элемента пространства навигации, который будет добавлен в путь</param>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeIDPath.RootDescriptor">
            <summary>
            Описание корневого элемента пространства навигации
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeIDPath.Length">
            <summary>
            Количество идентификаторов элементов пространства навигации, которое содержится в пути
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeIDPath.Item(System.Int32)">
            <summary>
            Получить унифицированный идентификатор элемента пространства навигации с указанным индексом
            </summary>
            <param name="Index">Индекс унифицированного идентификатора элемента пространства навигации</param>
            <returns>Унифицированный идентификатор элемента пространства навигации с указанным индексом</returns>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeIDPath.FirstID">
            <summary>
            Получить унифицированный идентификатор первого элемента пространства навигации из пути
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeIDPath.LastID">
            <summary>
            Получить последний унифицированный идентификатор элемента пространства навигации из пути
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDPath.Clear">
            <summary>
            Очистить элементы в пути, сохранив дескриптор
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDPath.Add(Intermech.Navigator.Interfaces.INodeID)">
            <summary>
            Добавить в путь очередной идентификатор элемента пространства навигации
            </summary>
            <param name="NodeID">Добавляемый идентификатор элемента пространства навигации</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDPath.Add(Intermech.Navigator.Interfaces.INodeID,System.Boolean)">
            <summary>
            Добавить описание идентификатора элемента пространства навигации в начало или конец пути
            </summary>
            <param name="NodeID">Добавляемый идентификатор элемента пространства навигации</param>
            <param name="ToEnd">true - добавить описание узла в конец пути, иначе вставить его в начало пути</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDPath.RemoveLast">
            <summary>
            Удалить последний идентификатор элемента пространства навигации из пути
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDPath.GetEnumerator">
            <summary>
            Вернуть перечислитель для элементов пути
            </summary>
            <returns>Перечислитель для элементов пути</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeIDPath.Clone">
            <summary>
            Создать точную копию экземпляра класса
            </summary>
            <returns>Точная копия экземпляра класса</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.NodeViewCapabilities">
            <summary>
            Содержит сведения о возможностях вида, который для получения выводимой информации использует элементы навигации.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeViewCapabilities._contentType">
            <summary>
            Содержимое узла
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeViewCapabilities._columns">
            <summary>
            Коллекция колонок атрибутов узла
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.NodeViewCapabilities._canAppend">
            <summary>
            Можно ли дополнять
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.NodeViewCapabilities.#ctor(Intermech.Navigator.Interfaces.ContentType,Intermech.Navigator.Interfaces.NodeColumnCollection,System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="contentType">Содержимое узла</param>
            <param name="columns">Коллекция колонок атрибутов узла</param>
            <param name="canAppend">Можно ли дополнять</param>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeViewCapabilities.ContentType">
            <summary>
            Содержимое узла
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeViewCapabilities.Columns">
            <summary>
            Коллекция колонок атрибутов узла
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.NodeViewCapabilities.CanAppend">
            <summary>
            Можно ли дополнять
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ICategoryInheritance">
            <summary>
            Интерфейс для получения идентификаторов родительских типов для указанного
            типа в рамках одной категории. Этот интерфейс используется сервисом 
            IFactory для поиска различных провайдеров для элемента из пространства
            навигации.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICategoryInheritance.GetParentTypes(System.Int32)">
            <summary>
            Возвраращает массив идентификаторов родительских типов для указанного
            типа.
            </summary>
            <param name="typeID">Идентификатор типа элемента навигации</param>
            <returns>Массив идентификаторов родительских типов</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IColumnSchemes">
            <summary>
            Интерфейс, управляющий коллекцией схем колонок
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IColumnSchemes.Register(System.Guid,Intermech.Navigator.Interfaces.INodeColumnScheme)">
            <summary>
            Зарегистрировать указанную схему колонок по её Guid
            </summary>
            <param name="schemeGuid">Guid регистрируемой схемы колонок</param>
            <param name="scheme">Схема колонок</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IColumnSchemes.Unregister(System.Guid)">
            <summary>
            Удалить указанную схему колонок из внутренней коллекции
            </summary>
            <param name="schemeGuid">Guid удаляемой схемы колонокs</param>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IColumnSchemes.Item(System.Guid)">
            <summary>
            Отыскать схему колонок по её Guid
            </summary>
            <param name="schemeGuid">Guid схемы колонок</param>
            <returns>Найденная схема колонок или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IColumnSchemes.ColumnIDToPersistName(System.Guid,System.Object)">
            <summary>
            Преобразовать указанный ID колонки указанной схемы в постоянное имя
            </summary>
            <param name="schemeGuid">Guid схемы колонок</param>
            <param name="columnID">ID колонки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IColumnSchemes.PersistNameToColumnID(System.Guid,System.String)">
            <summary>
            Преобразовать постоянное имя указанной схемы в ID колонки
            </summary>
            <param name="schemeGuid">Guid схемы колонок</param>
            <param name="persistName">Постоянное имя колонки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IColumnSchemes.CreateColumn(System.Guid,System.Object)">
            <summary>
            Создать новую колонку в указанной схеме
            </summary>
            <param name="schemeGuid">Guid схемы колонок</param>
            <param name="columnID">ID колонки</param>
            <returns>Новая колонка в схеме</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IColumnSchemes.CreateColumn(System.Guid,System.Object,Intermech.Navigator.Interfaces.NodeColumnSortOrder,System.Int32)">
            <summary>
            Создать новую колонку в указанной схеме, с учётом направления сортировки
            </summary>
            <param name="schemeGuid">Guid схемы колонок</param>
            <param name="columnID">ID колонки</param>
            <param name="sortOrder">Направление сортировки</param>
            <returns>Новая колонка в схеме</returns>
            <param name="sortIndex">Очерёдность сортировки (-1 - не сортируется)</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IColumnSchemes.GetDefaultTransform(System.Guid,System.Object)">
            <summary>
            Найти интерфейс преобразователя значений указанной схемы для указанной колонки
            </summary>
            <param name="schemeGuid">Guid схемы колонок</param>
            <param name="columnID">ID колонки</param>
            <returns>Преобразователь значений или null</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IConditionEditorAttributeService">
            <summary>
            Интерфейс на службу обработки условий для специальных атрибутов
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionEditorAttributeService.Register(System.Guid,Intermech.Navigator.Interfaces.IConditionEditorAttribute)">
            <summary>
            Регистрация обработчика на специальный атрибут
            </summary>
            <param name="attributeGuid">Глобальный идентификатор атрибута</param>
            <param name="handler">Ссылка на обработчик</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IConditionEditorAttributeService.GetHandler(System.Guid)">
            <summary>
            Получить обработчик для атрибута
            </summary>
            <param name="attributeGuid">Глобальный идентификатор атрибута</param>
            <returns>Интерфейс на обработчик спец. атрибута или null если обработчик для атрибута не зарегистрирован</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IConditionEditorAttribute">
            <summary>
            Интерфейс на обработчик спец. атрибута
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionEditorAttribute.NodeValueType">
            <summary>
            Тип данных для параметров в узлах условий выборки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IConditionEditorAttribute.Operators">
            <summary>
            Допустимые операторы отношений
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodesFactory">
            <summary>
            Интерфейс сервиса для регистрации расширений навигатора, а также для
            создания зарегистрированных объектов-расширений.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodesFactory.GetNode(System.Int32,System.Int32)">
            <summary>
            Возвращает элемент из пространства навигации указанной категории и типа.
            </summary>
            <param name="categoryID">Идентификатор категории элемента</param>
            <param name="typeID">Идентификатор типа элемента</param>
            <returns>Ссылка на основной интерфейс элемента навигации.</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodesFactory.GetNode(Intermech.Navigator.Interfaces.INodeID,System.Object[])">
            <summary>
            Возвращает элемент из пространства навигации указанной категории и типа.
            </summary>
            <param name="nodeID">Унифицированный идентификатор элемента.</param>
            <param name="args">Массив параметров, которые будут переданы конструктору элемента.</param>
            <returns>Ссылка на основной интерфейс элемента навигации.</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IFactory">
            <summary>
            Интерфейс сервиса для регистрации расширений навигатора, а также для
            создания зарегистрированных объектов-расширений.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddNodeType(System.Int32,System.Type)">
            <summary>
            Регистрирует базовый тип элемента из пространства навигации для
            указанной категории.
            </summary>
            <param name="categoryID">Идентификатор категории</param>
            <param name="nodeType">Тип элемента навигации</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddNodeType(System.Int32,System.Type,Intermech.Navigator.Interfaces.ICategoryInheritance)">
            <summary>
            Регистрирует базовый тип элемента из пространства навигации для
            указанной категории.
            </summary>
            <param name="categoryID">Идентификатор категории</param>
            <param name="nodeType">Тип элемента навигации</param>
            <param name="inheritance">Интерфейс получения идентификаторов родительских типов</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddNodeType(System.Int32,System.Int32,System.Type)">
            <summary>
            Регистрирует специализированный тип элемента из пространства навигации
            для указанной категории
            </summary>
            <param name="categoryID">Идентификатор категории</param>
            <param name="typeID">Идентификатор типа</param>
            <param name="nodeType">Тип элемента навигации</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddViewsProvider(Intermech.Navigator.Views.IViewsProvider)">
            <summary>
            Регистрирует провайдер закладок, который будет использоваться для 
            элементов навигации любой категории и типа.
            </summary>
            <param name="provider">Провайдер закладок</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddViewsProvider(System.Int32,Intermech.Navigator.Views.IViewsProvider)">
            <summary>
            Регистрирует провайдер закладок, которых будет использоватсья для
            элементов навигации любого типа из указанной категории.
            </summary>
            <param name="categoryID">Идентификатор категории</param>
            <param name="provider">Провайдер закладок</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddViewsProvider(System.Int32,System.Int32,Intermech.Navigator.Views.IViewsProvider)">
            <summary>
            Регистрирует провайдер закладок, который будет использоваться для 
            элементов навигации указанной категории и типа.
            </summary>
            <param name="categoryID">Идентификатор категории</param>
            <param name="typeID">Идентификатор типа</param>
            <param name="provider">Провайдер закладок</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddCommandsProvider(Intermech.Navigator.ContextMenu.ICommandsProvider)">
            <summary>
            Регистрирует провайдер команд контекстного меню, который будет 
            использоваться для элементов навигации любой категории и типа.
            </summary>
            <param name="provider">Провайдер команд</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddCommandsProvider(System.Int32,Intermech.Navigator.ContextMenu.ICommandsProvider)">
            <summary>
            Регистрирует провайдер команд контекстного меню, который будет 
            использоваться для элементов навигации любого типа из указанной
            категории.
            </summary>
            <param name="categoryID">Идентификатор категории</param>
            <param name="provider">Провайдер команд</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddCommandsProvider(System.Int32,System.Int32,Intermech.Navigator.ContextMenu.ICommandsProvider)">
            <summary>
            Регистрирует провайдер команд контекстного меню, который будет 
            использоваться для элементов навигации указанной категории и типа.
            категории.
            </summary>
            <param name="categoryID">Идентификатор категории</param>
            <param name="typeID">Идентификатор типа</param>
            <param name="provider">Провайдер команд</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.RemoveCommandsProvider(Intermech.Navigator.ContextMenu.ICommandsProvider)">
            <summary>
            Удаляет провайдер команд контекстного меню, который 
            использовался для элементов навигации любой категории и типа.
            </summary>
            <param name="provider">Провайдер команд</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.RemoveCommandsProvider(System.Int32,Intermech.Navigator.ContextMenu.ICommandsProvider)">
            <summary>
            Удаляет провайдер команд контекстного меню, который
            использовался для элементов навигации любого типа из указанной
            категории.
            </summary>
            <param name="categoryID">Идентификатор категории</param>
            <param name="provider">Провайдер команд</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.RemoveCommandsProvider(System.Int32,System.Int32,Intermech.Navigator.ContextMenu.ICommandsProvider)">
            <summary>
            Удаляет провайдер команд контекстного меню, который 
            использовался для элементов навигации указанной категории и типа.
            </summary>
            <param name="categoryID">Идентификатор категории</param>
            <param name="typeID">Идентификатор типа</param>
            <param name="provider">Провайдер команд</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.AddGlobalNode(System.Guid,Intermech.Navigator.Interfaces.IDescriptor,System.Int32)">
            <summary>
            Регистрирует элемент из пространства навигации, которых должен быть
            включен в корень основной иерархии навигатора "Информационное 
            пространство".
            </summary>
            <param name="descriptorGuid">Глобальный идентификатор дескриптора</param>
            <param name="descriptor">Дескриптор, описывающий элемент</param>
            <param name="orderID">Положение дескриптора в списке дескрипторов.</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.GetViewsProviders(System.Int32,System.Int32)">
            <summary>
            Возвращает массив провайдеров закладок для элемента навигации указанной 
            категории и типа. Если ни одного зарегистрированного провайдера
            найти не удалось, то метод возвращает null.
            </summary>
            <param name="categoryID">Идентификатор категории элемента</param>
            <param name="typeID">Идентификатор типа элемента</param>
            <returns>Массив провайдеров</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.GetViewsProviders(System.Int32)">
            <summary>
            Возвращает массив провайдеров закладок для элемента навигации указанной 
            категории. Если ни одного зарегистрированного провайдера
            найти не удалось, то метод возвращает null.
            </summary>
            <param name="categoryID">Идентификатор категории элемента</param>
            <returns>Массив провайдеров</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.GetViewsProviders">
            <summary>
            Возвращает массив провайдеров закладок. Если ни одного зарегистрированного провайдера
            найти не удалось, то метод возвращает null.
            </summary>
            <returns>Массив провайдеров</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.GetCommandsProviders(System.Int32,System.Int32)">
            <summary>
            Возвращает массив провайдеров команд контекстного меню для элемента навигации указанной 
            категории и типа. Если ни одного зарегистрированного провайдера
            найти не удалось, то метод возвращает null.
            </summary>
            <param name="categoryID">Идентификатор категории элемента</param>
            <param name="typeID">Идентификатор типа элемента</param>
            <returns>Массив провайдеров</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.GetCommandsProviders(System.Int32)">
            <summary>
            Возвращает массив провайдеров команд контекстного меню для элемента навигации указанной 
            категории. Если ни одного зарегистрированного провайдера
            найти не удалось, то метод возвращает null.
            </summary>
            <param name="categoryID">Идентификатор категории элемента</param>
            <returns>Массив провайдеров</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.GetCommandsProviders">
            <summary>
            Возвращает массив провайдеров команд контекстного меню. Если ни одного зарегистрированного провайдера
            найти не удалось, то метод возвращает null.
            </summary>
            <returns>Массив провайдеров</returns>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IFactory.ContextMenuTemplate">
            <summary>
            Текущий шаблон контекстного меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IFactory.ContextMenuTemplateDefault">
            <summary>
            Шаблон контекстного меню по умолчанию
            </summary>
        </member>
        <member name="E:Intermech.Navigator.Interfaces.IFactory.OnMenuTemplateNodeTransformEventHandler">
            <summary>
            Событие генерируется перед каждым построением контекстных меню. Позволяет
            выполнять изменение элементов шаблона контекстного меню перед тем, как на
            их основе будет сформировано контекстное меню.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IFactory.MenuTemplateNodeTransform(Intermech.Navigator.ContextMenu.MenuTemplateNode,Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider)">
            <summary>
            Выполнить преобразование элемента шаблона контекстного меню, если есть обработчик
            </summary>
            <param name="node">Преобразуемый элемент шаблона контекстного меню</param>
            <param name="items">Коллекция выделенных элементов, на основе которых строится команда контекстного меню</param>
            <param name="services">Контейнер сервисов</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INodesFactorySupported">
            <summary>Поддержка контекстом фабрики нод</summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INodesFactorySupported.GetNodesFactory(System.IServiceProvider,Intermech.Navigator.Interfaces.INodeID)">
            <summary>Получение фабрики нод в указанном контексте для идентификатора ноды</summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IGuidMapper">
            <summary>
            Интерфейс для отображения Guid в положительные числовые идентификаторы,
            уникальные для текущего сеанса работы программы. Отображение предназначено
            для ускорения работы программы и уменьшения объема используемой оперативной
            памяти.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.INavigatorColumnsService">
            <summary>
            Сервис для хранения настроек видов для различных категорий и типов
            </summary>
        </member>
        <member name="E:Intermech.Navigator.Interfaces.INavigatorColumnsService.OnGetCategoryTypeParentEventHandler">
            <summary>
            Событие "Найти родительскую категорию и тип"
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.CreateNavigatorColumns(Intermech.Navigator.Interfaces.NavigatorColumns)">
            <summary>
            Создать (перезаписать) настройки вида
            </summary>
            <param name="columns">Новые настройки вида</param>
            <returns>true - настройки вида были успешно добавлены в словарик</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.CreateNavigatorColumns(Intermech.Navigator.Interfaces.NavigatorColumns,System.Collections.Generic.Dictionary{Intermech.Navigator.Interfaces.NavigatorColumnsKey,Intermech.Navigator.Interfaces.NavigatorColumns})">
            <summary>
            Создать (перезаписать) настройки вида
            </summary>
            <param name="columns">Новые настройки вида</param>
            <param name="navStreams">Словарь, в котором хранятся настройки видов</param>
            <returns>true - настройки вида были успешно добавлены в словарик</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.CreateNavigatorColumns(System.Int32)">
            <summary>
            Создать (перезаписать) настройки вида для указанной категории
            </summary>
            <param name="category">Категория</param>
            <returns>Настройки вида для указанной категории</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.CreateNavigatorColumns(System.Int32,System.Int32)">
            <summary>
            Создать (перезаписать) настройки вида для указанных категории и типа
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <returns>Настройки вида для указанных категории и типа</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.CreateNavigatorColumns(System.Int32,System.Int32,System.String)">
            <summary>
            Создать (перезаписать) настройки вида для указанных категории, типа и дополнительного имени
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="suffix">Дополнительное имя</param>
            <returns>Настройки вида для указанных категории, типа и дополнительного имени</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.CreateNavigatorColumns(System.Int32,System.Int32,System.String,System.Collections.Generic.Dictionary{Intermech.Navigator.Interfaces.NavigatorColumnsKey,Intermech.Navigator.Interfaces.NavigatorColumns})">
            <summary>
            Создать (перезаписать) настройки вида для указанных категории, типа и дополнительного имени
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="suffix">Дополнительное имя</param>
            <param name="navStreams">Словарь, в котором хранятся настройки видов</param>
            <returns>Настройки вида для указанных категории, типа и дополнительного имени</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.GetNavigatorColumns(System.Int32,System.Boolean)">
            <summary>
            Получить настройки вида для указанной категории. Если поток не
            существует, будет возвращен null
            </summary>
            <param name="category">Категория</param>
            <param name="useInheritance">Использовать наследование схем</param>
            <returns>Настройки вида для указанной категории или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.GetNavigatorColumns(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Получить настройки вида для указанных категории и типа. Если поток не
            существует, будет возвращен null
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="useInheritance">Использовать наследование схем</param>
            <returns>Настройки вида для указанных категории и типа, или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.GetNavigatorColumns(System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Получить настройки вида для указанных категории, типа и дополнительного имени. Если поток не
            существует, будет возвращен null
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="suffix">Дополнительное имя</param>
            <param name="useInheritance">Использовать наследование схем</param>
            <returns>Настройки вида для указанных категории, типа и дополнительного имени, или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.GetNavigatorColumns(System.Int32,System.Int32,System.String,System.Boolean,System.Collections.Generic.Dictionary{Intermech.Navigator.Interfaces.NavigatorColumnsKey,Intermech.Navigator.Interfaces.NavigatorColumns})">
            <summary>
            Получить настройки вида для указанных категории, типа и дополнительного имени. Если поток не
            существует, будет возвращен null
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="suffix">Дополнительное имя</param>
            <param name="useInheritance">Использовать наследование схем</param>
            <param name="navStreams">Словарь, в котором хранятся настройки видов</param>
            <returns>Настройки вида для указанных категории, типа и дополнительного имени, или null</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.RemoveNavigatorColumns(System.Int32)">
            <summary>
            Удалить настройки вида для указанной категории
            </summary>
            <param name="category">Категория</param>
            <returns>true - настройки вида для указанной категории удалён</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.RemoveNavigatorColumns(System.Int32,System.Int32)">
            <summary>
            Удалить настройки вида для указанных категории и типа
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <returns>true - настройки вида для указанных категории и типа удалён</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.RemoveNavigatorColumns(System.Int32,System.Int32,System.String)">
            <summary>
            Удалить настройки вида для указанных категории, типа и дополнительного имени
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="suffix">Дополнительное имя</param>
            <returns>true - настройки вида для указанных категории, типа и дополнительного имени удалён</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.RemoveNavigatorColumns(System.Int32,System.Int32,System.String,System.Collections.Generic.Dictionary{Intermech.Navigator.Interfaces.NavigatorColumnsKey,Intermech.Navigator.Interfaces.NavigatorColumns})">
            <summary>
            Удалить настройки вида для указанных категории, типа и дополнительного имени
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="suffix">Дополнительное имя</param>
            <param name="navStreams">Словарь, в котором хранятся настройки видов</param>
            <returns>true - настройки вида для указанных категории, типа и дополнительного имени удалён</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.Reset">
            <summary>
            Полностью очистить все настройки отображения
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.LoadFromUserConfig">
            <summary>
            Загрузить настройки из конфигурации текущего пользователя
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.SaveToUserConfig">
            <summary>
            Сохранить настройки в конфигурацию текущего пользователя
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.LoadFromObject(System.Int64,System.Int32)">
            <summary>
            Загрузить настройки видов Навигатора из атрибута указанного объекта
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Настройки видов Навигатора или пустой словарик</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.SaveToObject(System.Int64,System.Int32,System.Collections.Generic.Dictionary{Intermech.Navigator.Interfaces.NavigatorColumnsKey,Intermech.Navigator.Interfaces.NavigatorColumns})">
            <summary>
            Сохранить настройки видов Навигатора в атрибут указанного объекта
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="navStreams">Настройки видов Навигатора</param>
            <returns>true - сохранение выполнено успешно</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.LoadFromFile(System.String)">
            <summary>
            Загрузить настройки из указанного файла
            </summary>
            <param name="fileName">Файл, в котором находятся настройки</param>
            <returns>true - настройки успешно загружены</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.INavigatorColumnsService.SaveToFile(System.String)">
            <summary>
            Сохранить настройки в указанный файл
            </summary>
            <param name="fileName">Файл, в который будут записаны настройки</param>
            <returns>true - настройки успешно сохранены</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs">
            <summary>
            Аргументы для события "Найти родительскую категорию и тип"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs._category">
            <summary>
            Категория
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs._type">
            <summary>
            Тип
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs._suffix">
            <summary>
            Дополнительное имя
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs.ParentCategory">
            <summary>
            Родительская категория
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs.ParentType">
            <summary>
            Родительский тип
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs.ParentSuffix">
            <summary>
            Родительское дополнительное имя
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs.Processed">
            <summary>
            Выполнена ли обработка аргументов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs.Category">
            <summary>
            Категория
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs.Type">
            <summary>
            Тип
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs.Suffix">
            <summary>
            Дополнительное имя
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventArgs.#ctor(System.Int32,System.Int32,System.String)">
            <summary>
            Создать аргументы события
            </summary>
            <param name="category">Категория</param>
            <param name="type">Тип</param>
            <param name="suffix">Дополнительное имя</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.GetCategoryTypeParentEventHandler">
            <summary>
            Делегат события "Найти родительскую категорию и тип"
            </summary>
            <param name="sender">Отправитель</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IObjectListFiltration">
            <summary>
            Сервис позволяет управлять фильтрацией списков объектов на основании
            специальным образом подготовленных выборок
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectListFiltration.FilterByCurrentVersionsRule">
            <summary>
            Разрешено ли использовать дополнительно основные критерии от текущего правила подбора версий объектов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectListFiltration.IsGlobalIndexSearchActived">
            <summary>
            Активен ли поиск по индексу
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectListFiltration.SelectedFilterGuid">
            <summary>
            Guid выборки, по которой будет выполняться фильтрация.
            Guid.Empty - фильтрация отключена
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectListFiltration.GlobalIndexSearchValue">
            <summary>
            Значение для поиска по индексу
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IObjectListFiltrationHolder">
            <summary>
            Сервис позволяет временно сохранять выбранный фильтр списка объектов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectListFiltrationHolder.SelectionID">
            <summary>
            Идентификаторы выборок, по которым будут выполняться фильтрации
            в разных закладках "Навигатора"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IDatabaseLoadSave">
            <summary>
            Интерфейс, позволяющий выполнять сохранение и загрузку данных в базе данных
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IDatabaseLoadSave.Load(System.Int64)">
            <summary>
            Загрузить данные из настроек указанного пользователя
            </summary>
            <param name="userID">Идентификатор пользователя</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IDatabaseLoadSave.Save(System.Int64)">
            <summary>
            Сохранить данные в настройки указанного пользователя
            </summary>
            <param name="userID">Идентификатор пользователя</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IXMLFilterStorageLoadSave">
            <summary>
            Интерфейс, позволяющий выполнять сохранение и загрузку данных в хранилище XML
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IXMLFilterStorageLoadSave.LoadFilter(Intermech.Interfaces.XMLSettingsStorage,System.Xml.XmlNode)">
            <summary>
            Загрузить фильтр из указанного узла настроек
            </summary>
            <param name="xmlStorage">Хранилище настроек</param>
            <param name="filterNode">Узел с настройками фильтра</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IXMLFilterStorageLoadSave.SaveFilter(Intermech.Interfaces.XMLSettingsStorage,System.Xml.XmlNode)">
            <summary>
            Сохранить фильтр в указанные настройки
            </summary>
            <param name="xmlStorage">Хранилище настроек</param>
            <param name="filtersNode">Родительский узел или null</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter">
            <summary>
            Интерфейс фильтра составов по типам родительских и дочерних типов объектов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Name">
            <summary>
            Название фильтра составов по типам родительских и дочерних типов объектов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.GUID">
            <summary>
            Уникальный глобальный идентификатор фильтра составов по типам родительских и дочерних типов объектов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.ParentTypesCount">
            <summary>
            Количество родительских типов в коллекции
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.ParentObjectTypes">
            <summary>
            Список уникальных глобальных идентификаторов родительских типов объектов, составы которых фильтруются
            (возвращается КОПИЯ внутренней коллекции)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.ChildObjectTypes">
            <summary>
            Словарь всех допустимых дочерних типов (верхнего уровня), которые не должны отображаться
            (возвращается КОПИЯ внутренней коллекции)
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Clear">
            <summary>
            Полностью очистить содержимое фильтра
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Assign(Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter)">
            <summary>
            Скопировать содержимое указанного фильтра в свои поля
            </summary>
            <param name="source">Фильтр-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Add(System.Guid)">
            <summary>
            Добавить указанный родительский тип в фильтр
            </summary>
            <param name="parentType">Guid родительского типа объекта</param>
            <returns>true, если тип был успешно добавлен</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Add(System.Guid,System.Guid)">
            <summary>
            Добавить скрытый дочерний тип объектов в фильтр
            </summary>
            <param name="parentType">Guid родительского типа объекта</param>
            <param name="childrenType">Скрываемый дочерний тип объектов</param>
            <returns>true, если тип был успешно добавлен</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Remove(System.Guid)">
            <summary>
            Удалить указанный родительский тип объекта из фильтра
            </summary>
            <param name="parentType">Guid удаляемого родительского типа объекта</param>
            <returns>true, если тип был успешно удалён</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Remove(System.Guid,System.Guid)">
            <summary>
            Удалить указанный скрываемый дочерний тип объекта из фильтра
            </summary>
            <param name="parentType">Guid родительского типа объекта</param>
            <param name="childrenType">Guid удаляемого дочернего типа объекта</param>
            <returns>true, если тип был успешно удалён</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Exists(System.Guid)">
            <summary>
            Проверить наличие указанного родительского типа в коллекции
            </summary>
            <param name="parentType">Guid искомого родительского типа объекта</param>
            <returns>true, если указанный родительский тип найден в коллекции</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Exists(System.Guid,System.Guid)">
            <summary>
            Проверить наличие указанного скрытого дочернего типа объекта у родительского типа объекта
            </summary>
            <param name="parentType">Guid родительского типа объекта</param>
            <param name="childrenType">Guid искомого скрытого дочернего типа объекта</param>
            <returns>true, если указанный скрытый дочерний тип найден в коллекции</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.IndexOf(System.Guid)">
            <summary>
            Получить индекс указанного родительского типа в коллекции
            </summary>
            <param name="parentType">Guid искомого родительского типа объекта</param>
            <returns>-1, если указанный родительский тип не найден в коллекции</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.IndexOf(System.Guid,System.Guid)">
            <summary>
            Получить индекс указанного дочернего типа в коллекции
            </summary>
            <param name="parentType">Guid родительского типа объекта</param>
            <param name="childrenType">Guid искомого дочернего типа объекта</param>
            <returns>-1, если указанный дочерний тип не найден в коллекции</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Swap(System.Int32,System.Int32)">
            <summary>
            Обменять местами указанные родительские типы объектов
            </summary>
            <param name="idx1">Индекс первого родительского типа объектов</param>
            <param name="idx2">Индекс второго родительского типа объектов</param>
            <returns>true, если обмен успешно выполнен</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter.Swap(System.Guid,System.Int32,System.Int32)">
            <summary>
            Обменять местами указанные дочерние типы объектов
            </summary>
            <param name="parentType">Guid родительского типа объектов</param>
            <param name="idx1">Индекс первого дочернего типа объектов</param>
            <param name="idx2">Индекс второго дочернего типа объектов</param>
            <returns>true, если обмен успешно выполнен</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters">
            <summary>
            Интерфейс списка фильтров составов по типам родительских и дочерних типов объектов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters.Count">
            <summary>
            Количество фильтров в коллекции
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters.Item(System.Guid)">
            <summary>
            Получить фильтр по его уникальному глобальному идентификатору
            </summary>
            <param name="filterGuid">Guid фильтра</param>
            <returns>Фильтр по его Guid, или null, если такой фильтр не найден</returns>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters.Item(System.Int32)">
            <summary>
            Получить фильтр по его индексу в коллекции
            </summary>
            <param name="index">Индекс фильтра в коллекции</param>
            <returns>Фильтр</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters.Add">
            <summary>
            Добавить в список новый фильтр. Имя и Guid для фильтра генерируются автоматически
            </summary>
            <returns>Ссылка на интерфейс нового фильтра</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters.Add(System.String,System.Guid)">
            <summary>
            Добавить в список новый фильтр
            </summary>
            <param name="name">Название нового фильтра</param>
            <param name="guid">Guid нового фильтра</param>
            <returns>Ссылка на интерфейс нового фильтра</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters.Remove(System.Guid)">
            <summary>
            Удалить из коллекции фильтр с указанным уникальным глобальным идентификатором
            </summary>
            <param name="guid">Guid удаляемого фильтра</param>
            <returns>true, если фильтр был найден и удалён</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters.Assign(Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters)">
            <summary>
            Скопировать содержимое коллекции в свои поля
            </summary>
            <param name="source">Коллекция-источник</param>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters.IndexOf(Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilter)">
            <summary>
            Отыскать индекс указанного фильтра
            </summary>
            <param name="filter">Искомый фильтр</param>
            <returns>Индекс указанного фильтра или -1</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFilters.IndexOf(System.Guid)">
            <summary>
            Отыскать индекс фильтра по его Guid
            </summary>
            <param name="guid">Guid фильтра</param>
            <returns>Индекс фильтра или -1</returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFiltration">
            <summary>
            Интерфейс для работы с текущим фильтром составов по родительским и дочерним типам объектов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFiltration.Filters">
            <summary>
            Коллекция фильтров
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ICompositionByObjectTypesFiltration.ActiveFilterGuid">
            <summary>
            Guid активного фильтра по родительским и дочерним типам объектов. Если
            значение равно Guid.Empty, то фильтрация отключена
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IObjectTypeAndRelationFiltrationSupported">
            <summary>
            Если узел "Навигатора" поддерживает данный интерфейс, а также этот узел
            является корневым узлом в окне "Навигатора", то окно отобразит элементы
            управления фильтрацией составов по типам объектов и связей
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IObjectTypeNodeFilter">
            <summary>
            Интерфейс, позволяющий получить список допустимых или запрещённых типов объектов для узлов деревьев
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectTypeNodeFilter.EnabledObjectTypes">
            <summary>
            Список разрешённых типов объектов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IObjectTypeNodeFilter.DisabledObjectTypes">
            <summary>
            Список запрещённых типов объектов
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.SelectionDialogTabCreateHandler">
            <summary>
            Делегат для события, которое возникает на запрос закладок из формы выборки.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.SelectionDialogTabEventArgs">
            <summary>
            Аргументы для события, которое возникает на запрос закладок из формы выборки.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISelectionDialogTabsService">
            <summary>
            Сервис дополнительных закладок для формы выборки
            </summary>
        </member>
        <member name="E:Intermech.Navigator.Interfaces.ISelectionDialogTabsService.SelectionDialogTabEvent">
            <summary>
            Событие возникает на запрос закладок из формы выборки.
            Подписчики должны вернуть ISelectionDialogTab
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISelectionDialogTabsService.Tabs">
            <summary>
            Получить все дополнительные закладки для формы выборки
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISelectionDialogTab">
            <summary>
            Дополнительная закладка для формы выборки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISelectionDialogTab.Caption">
            <summary>
            Заголовок
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISelectionDialogTab.Index">
            <summary>
            Индекс в списке закладок
            0 - Табличные отчеты
            1 - Скрипты генерации документов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.ISelectionDialogTab.TabControl">
            <summary>
            Контрол для закладки
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISelectionDialogTab.Initialize(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>
            Загрузка данных в контрол в закладке
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.ISelectionDialogTab.Save(Intermech.Interfaces.IUserSession,System.Int64)">
            <summary>
            Сохранение результатов
            </summary>
            <param name="session"></param>
            <param name="selectionID"></param>
        </member>
        <member name="E:Intermech.Navigator.Interfaces.ISelectionDialogTab.OnChanged">
            <summary>
            Событие, генерируется закладкой при изменениях
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.ISelectObjectDialogService">
            <summary>
            Служба вызова диалога выбора объектов различных типов
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IStateStreams">
            <summary>
            Сервис, предоставляемый навигатором, позволяющий его составным частям (закладкам и др.)
            сохранять свое состояние, а также восстанавливать его из потока.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IStateStreams.Create(System.String)">
            <summary>
            Создает и возвращает новый пустой поток, который можно использовать для сохранения
            состояния. Если поток с таким именем уже существует, то метод вернет null.
            </summary>
            <param name="name">Имя потока.</param>
            <returns>Поток состояния.</returns>
        </member>
        <member name="P:Intermech.Navigator.Interfaces.IStateStreams.Item(System.String)">
            <summary>
            Возвращает существующий поток, который можно использовать для восстановления
            состояния. Если поток с таким именем не существует, то метод вернет null.
            </summary>
            <param name="name">Имя потока.</param>
            <returns>Поток состояния.</returns>
        </member>
        <member name="M:Intermech.Navigator.Interfaces.IStateStreams.Remove(System.String)">
            <summary>
            Удаляет существующий поток состояния с указанным именем.
            </summary>
            <param name="name">Имя потока.</param>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.IStringMapper">
            <summary>
            Интерфейс для отображения строк в положительные числовые идентификаторы,
            уникальные для текущего сеанса работы программы. Отображение предназначено
            для ускорения работы программы и уменьшения объема используемой оперативной
            памяти.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Interfaces.TriggerPriority">
            <summary>
            Приоритет команд контекстных меню "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.TriggerPriority.Basic">
            <summary>
            Приоритет базовый - команда назначается при наличии выделенных элементов навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.TriggerPriority.ItemCategory">
            <summary>
            Команда назначается после проверки категории выделенных элементов навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.TriggerPriority.ItemType">
            <summary>
            Команда назначается после проверки типа выделенных элементов навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.TriggerPriority.ItemData">
            <summary>
            Команда назначается после проверки данных выделенных элементов навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.TriggerPriority.ParentCategory">
            <summary>
            Команда назначается после проверки категории родительских выделенных элементов навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.TriggerPriority.ParentType">
            <summary>
            Команда назначается после проверки типа родительских выделенных элементов навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.TriggerPriority.ParentData">
            <summary>
            Команда назначается после проверки данных родительских выделенных элементов навигации
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Interfaces.TriggerPriority.ViewServices">
            <summary>
            Команда назначается после проверки контейнера сервисов (контекста выделенных элементов навигации)
            </summary>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.DragAndDropCommandInfo">
            <summary>
            Команда контекстного меню, которую можно отобразить в меню после DragAndDrop в NavigatorTreeView и может быть вызвана перед командой "Paste"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.IDragAndDropCommand">
            <summary>
            Интерфейс команды контекстного меню, которую можно отобразить в меню после DragAndDrop в NavigatorTreeView и команда может быть вызвана перед командой "Paste"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.ClickEventHandler">
            <summary>
            Делегат метода, который вызывается для выполнения команды контекстного меню.
            </summary>
            <param name="items">Коллекция выделенных элементов пространства навигации</param>
            <param name="viewServices">Контейнер сервисов для выделенных элементов пространства навигации</param>
            <param name="additionalInfo"></param>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.DrawEventHandler">
            <summary>
            Делегат метода, который вызывается для выполнения пользовательской отрисовки
            пункта контекстного меню, соответствующего команде.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.ContextMenuCheckState">
            <summary>
            Состояние переключателя у элемента контекстного меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.ContextMenuCheckState.Default">
            <summary>
            У элемента контекстного меню нет переключателя
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.ContextMenuCheckState.Unchecked">
            <summary>
            Элемент отображается с переключателем состояния. Значение переключателя - "[ ]"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.ContextMenuCheckState.Checked">
            <summary>
            Элемент отображается с переключателем состояния. Значение переключателя - "[x]"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.ContextMenuItemState">
            <summary>
            Дополнительные настройки состояния элемента контекстного меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.ContextMenuItemState._state">
            <summary>
            Состояние переключателя у элемента контекстного меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.ContextMenuItemState._default">
            <summary>
            Дополнительные настройки состояния элемента контекстного меню - по умолчанию
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.ContextMenuItemState._unchecked">
            <summary>
            Дополнительные настройки состояния элемента контекстного меню - переключатель есть, состояние [ ]
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.ContextMenuItemState._checked">
            <summary>
            Дополнительные настройки состояния элемента контекстного меню - переключатель есть, состояние [x]
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.ContextMenuItemState.State">
            <summary>
            Состояние переключателя у элемента контекстного меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.ContextMenuItemState.Default">
            <summary>
            Дополнительные настройки состояния элемента контекстного меню - по умолчанию
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.ContextMenuItemState.Unchecked">
            <summary>
            Дополнительные настройки состояния элемента контекстного меню - переключатель есть, состояние [ ]
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.ContextMenuItemState.Checked">
            <summary>
            Дополнительные настройки состояния элемента контекстного меню - переключатель есть, состояние [x]
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.ContextMenuItemState.#ctor(Intermech.Navigator.ContextMenu.ContextMenuCheckState)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="state">Состояние переключателя у элемента контекстного меню</param>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.CommandInfo">
            <summary>
            Класс описывает команду контекстного меню – её приоритет, делегаты для обработчика команды и 
            для её отрисовки (если требуется). Экземпляры данного класса используются в коллекции CommandsInfo.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.CommandInfo._priority">
            <summary>
            Возвращает приоритет команды. Он используется сборщиком контекстного меню только в том случае, 
            если несколько провайдеров одного уровня представляют одну и ту же команду. 
            В этом случае будет выбрана команда с максимальным приоритетом.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.CommandInfo._clickHandler">
            <summary>
            Возвращает делегат метода, который вызывается для выполнения команды контекстного меню.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.CommandInfo._drawHandler">
            <summary>
            Возвращает делегат метода, который вызывается для отрисовки пункта контекстного меню, соответствующего команде.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.CommandInfo._additionalInfo">
            <summary>
            Возвращает дополнительные сведения, которые должны быть переданы методу, вызываемому для выполнения команды контекстного меню.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.CommandInfo._state">
            <summary>
            Дополнительные настройки элемента контекстного меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.CommandInfo.Priority">
            <summary>
            Возвращает приоритет команды. Он используется сборщиком контекстного меню только в том случае, 
            если несколько провайдеров одного уровня представляют одну и ту же команду. 
            В этом случае будет выбрана команда с максимальным приоритетом.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.CommandInfo.ClickHandler">
            <summary>
            Возвращает делегат метода, который вызывается для выполнения команды контекстного меню.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.CommandInfo.DrawHandler">
            <summary>
            Возвращает делегат метода, который вызывается для отрисовки пункта контекстного меню, соответствующего команде.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.CommandInfo.AdditionalInfo">
            <summary>
            Возвращает дополнительные сведения, которые должны быть переданы методу, вызываемому для выполнения команды контекстного меню.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.CommandInfo.State">
            <summary>
            Дополнительные настройки элемента контекстного меню
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandInfo.#ctor(System.Int32)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="priority">Приоритет команды</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandInfo.#ctor(System.Int32,Intermech.Navigator.ContextMenu.ContextMenuItemState)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="priority">Приоритет команды</param>
            <param name="state">Дополнительные настройки элемента контекстного меню</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandInfo.#ctor(System.Int32,Intermech.Navigator.ContextMenu.ClickEventHandler)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="priority">Приоритет команды</param>
            <param name="clickHandler">Делегат обработчика данной команды</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandInfo.#ctor(System.Int32,Intermech.Navigator.ContextMenu.ClickEventHandler,System.Object)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="priority">Приоритет команды</param>
            <param name="clickHandler">Делегат обработчика данной команды</param>
            <param name="additionalInfo">Дополнительная информация</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandInfo.#ctor(System.Int32,Intermech.Navigator.ContextMenu.ClickEventHandler,Intermech.Navigator.ContextMenu.DrawEventHandler)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="priority">Приоритет команды</param>
            <param name="clickHandler">Делегат обработчика данной команды</param>
            <param name="drawHandler">Делегат для отрисовки данной команды в контекстном меню</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandInfo.#ctor(System.Int32,Intermech.Navigator.ContextMenu.ClickEventHandler,Intermech.Navigator.ContextMenu.ContextMenuItemState)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="priority">Приоритет команды</param>
            <param name="clickHandler">Делегат обработчика данной команды</param>
            <param name="state">Дополнительные настройки элемента контекстного меню</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandInfo.#ctor(System.Int32,Intermech.Navigator.ContextMenu.ClickEventHandler,Intermech.Navigator.ContextMenu.DrawEventHandler,System.Object)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="priority">Приоритет команды</param>
            <param name="clickHandler">Делегат обработчика данной команды</param>
            <param name="drawHandler">Делегат для отрисовки данной команды в контекстном меню</param>
            <param name="additionalInfo">Дополнительная информация</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandInfo.#ctor(System.Int32,Intermech.Navigator.ContextMenu.ClickEventHandler,Intermech.Navigator.ContextMenu.DrawEventHandler,System.Object,Intermech.Navigator.ContextMenu.ContextMenuItemState)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="priority">Приоритет команды</param>
            <param name="clickHandler">Делегат обработчика данной команды</param>
            <param name="drawHandler">Делегат для отрисовки данной команды в контекстном меню</param>
            <param name="additionalInfo">Дополнительная информация</param>
            <param name="state">Дополнительные настройки элемента контекстного меню</param>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.CommandsInfo">
            <summary>
            Класс CommandsInfo является контейнером сведений о допустимых и подавляемых командах контекстных меню. 
            Экземпляры данного класса возвращаются в методах классов, реализующих интерфейс ICommandsProvider.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.CommandsInfo._empty">
            <summary>
            Если провайдер команд контекстных меню должен вернуть пустую таблицу с командами, 
            он может вернуть значение статического свойства CommandsInfo.Empty, вместо того, чтобы 
            создавать и возвращать пустые экземпляры данного класса.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.CommandsInfo.Empty">
            <summary>
            Если провайдер команд контекстных меню должен вернуть пустую таблицу с командами, 
            он может вернуть значение статического свойства CommandsInfo.Empty, вместо того, чтобы 
            создавать и возвращать пустые экземпляры данного класса.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.CommandsInfo.CommandNames">
            <summary>
            Возвращает массив имен допустимых команд. Если в контейнер не было 
            добавлено ни одной такой команды, то результатом будет null.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandsInfo.Add(System.String,Intermech.Navigator.ContextMenu.CommandInfo)">
            <summary>
            Добавляет в контейнер команду и соответствующий ей метод, 
            появление которой в меню допустимо для данного контекста
            </summary>
            <param name="commandName">Имя добавляемой команды.</param>
            <param name="commandInfo">Информация о методе, реализующем выполнение команды.</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandsInfo.Suppress(System.String,System.Int32)">
            <summary>
            Добавляет в контейнер команду, появление которой должно быть подавлено.
            </summary>
            <param name="commandName">Имя подавляемой команды.</param>
            <param name="priority">Приоритет команды.</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandsInfo.Remove(System.String)">
            <summary>
            Удаляет из сведения о команде с заданным именем.
            </summary>
            <param name="commandName">Имя команды.</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.CommandsInfo.GetInfo(System.String)">
            <summary>
            Возвращает информацию о методе, реализующем выполнение допустимой команды с указанным именем
            </summary>
            <param name="commandName">Имя допустимой команды.</param>
            <returns>Информация о методе, реализующем выполнение команды.</returns>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.AdjustableMenuCommand">
            <summary>
            Описание настраиваемой команды меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._Parent">
            <summary>
            Родительская коллекция
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._Command">
            <summary>
            Уникальная в пределах всей системы команда контекстного меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._Caption">
            <summary>
            Краткое текстовое описание команды
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._Hint">
            <summary>
            Более подробное текстовое описание команды
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._ImageListSource">
            <summary>
            указывает, из какой коллекции брать иконку 
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._ImageIndex">
            <summary>
            Индекс значка команды (из коллекции указанной в ImageListSource)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._Visible">
            <summary>
            Флажок позволяет прятать или показывать данную команду в контекстных меню "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._Group">
            <summary>
            Номер группы
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._OrderID">
            <summary>
            Порядковый номер в группе
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._Items">
            <summary>
            Коллекция дочерних команд
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._Shortcut">
            <summary>
            Горячие клавиши
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommand._Tag">
            <summary>
            для хранения различной информации
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.#ctor(Intermech.Navigator.ContextMenu.AdjustableMenuCommands,System.String,System.String,System.Boolean,System.String,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Keys,Intermech.Navigator.ContextMenu.ImageListSource,System.Object)">
            <summary>
            Создать экземпляр настраиваемой команды контекстного меню
            </summary>
            <param name="parent">Родительская коллекция</param>
            <param name="command">Уникальная в пределах системы команда</param>
            <param name="caption">Краткое текстовое описание команды</param>
            <param name="visible">Показывать ли указанную команду в контекстных меню</param>
            <param name="hint">Подробное текстовое описание команды</param>
            <param name="imageIndex">Индекс изображения команды (в списке именованных значков)</param>
            <param name="group">Номер группы команды</param>
            <param name="orderID">Порядковый номер в группе</param>
            <param name="shortcut">Горячие клавиши</param>
            <param name="imageListSource">С помощью какого сервиса получать иконку: INamedImageList или ICategoryTypeIconService</param>
            <param name="tag">Дополнительная информация</param>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Parent">
            <summary>
            Родительская коллекция
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Command">
            <summary>
            Уникальная в пределах всей системы команда контекстного меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Caption">
            <summary>
            Краткое текстовое описание команды
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Hint">
            <summary>
            Более подробное текстовое описание команды
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.ImageListSource">
            <summary>
            указывает, из какой коллекции брать иконку 
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.ImageIndex">
            <summary>
            Индекс значка команды (из коллекции указанной в ImageListSource)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Visible">
            <summary>
            Флажок позволяет прятать или показывать данную команду в контекстных меню "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Group">
            <summary>
            Номер группы команды
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.OrderBy">
            <summary>
            Порядковый номер внутри группы
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Items">
            <summary>
            Коллекция дочерних команд
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Item(System.Int32)">
            <summary>
            Дочерняя команда с указанным индексом
            </summary>
            <param name="index">Индекс</param>
            <returns>Дочерняя команда с указанным индексом</returns>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Count">
            <summary>
            Количество дочерних команд
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Shortcut">
            <summary>
            Горячие клавиши
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Tag">
            <summary>
            для хранения различной информации
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.FindCommand(System.String)">
            <summary>
            Отыскать в коллекции команду с указанным именем. Поиск также будет проходить в дочерних коллекциях.
            </summary>
            <param name="command">Уникальное в пределах системы имя команды</param>
            <returns>null, если команда не найдена</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.BatchPropertiesSet(System.Object[])">
            <summary>
            Пакетная установка свойств
            </summary>
            <param name="options">Массив опций</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.ExtractCommands(Intermech.Navigator.ContextMenu.AdjustableMenuCommand,System.Collections.Generic.Dictionary{System.String,Intermech.Navigator.ContextMenu.AdjustableMenuCommand}@)">
            <summary>
            Извлечение списка копий команд в словарь (Dictionary)
            </summary>
            <param name="command">Коллекция команд</param>
            <param name="list">Словарик с командами</param>
            <returns>Список команд меню</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.ExtractCommands(Intermech.Navigator.ContextMenu.AdjustableMenuCommand,System.Collections.Generic.List{Intermech.Navigator.ContextMenu.AdjustableMenuCommand}@)">
            <summary>
            Извлечение списка копий команд в список
            </summary>
            <param name="command">Коллекция команд</param>
            <param name="list">Список с командами</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.SyncWithCommands(System.Collections.Generic.Dictionary{System.String,Intermech.Navigator.ContextMenu.AdjustableMenuCommand})">
            <summary>
            Выполнить синхронизацию команды меню с командами из указанного списка
            </summary>
            <param name="commands">Список команд, с которыми надо выполнить синхронизацию</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Equals(System.Object)">
            <summary>
            Сравнить экземпляр класса с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.Clone">
            <summary>
            Создать копию экземпляра класса
            </summary>
            <returns>Копия экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommand.CompareTo(Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Сравнить с другой настраиваемой командой меню
            </summary>
            <param name="other">Другая настраиваемая команда меню</param>
            <returns>-1, 0, 1</returns>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.AdjustableMenuCommands">
            <summary>
            Коллекция настраиваемых команд контекстных меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.RoleSettingsGuid">
            <summary>
            Guid настроек роли
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.UserSettingsGuid">
            <summary>
            Guid настроек пользователя
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.AdjustableMenuCommands._Parent">
            <summary>
            Родительская коллекция
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.#ctor">
            <summary>
            Создать пустой экземпляр класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.#ctor(Intermech.Navigator.ContextMenu.AdjustableMenuCommands)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="parent">Родительская коллекция</param>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.Parent">
            <summary>
            Родительская коллекция
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.FindCommand(System.Collections.ArrayList,System.String)">
            <summary>
            Отыскать описание команды по её имени в списке
            </summary>
            <param name="commands">Список команд</param>
            <param name="command">Имя разыскиваемой команды</param>
            <returns>Найденное описание команды или null</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.FindCommandFromRoot(System.String)">
            <summary>
            Отыскать в коллекции (начиная с её корневой записи) команду с указанным именем. 
            Поиск также будет проходить в дочерних коллекциях.
            </summary>
            <param name="command">Уникальное в пределах системы имя команды</param>
            <returns>null, если команда не найдена</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.FindCommand(System.String)">
            <summary>
            Отыскать в коллекции команду с указанным именем. Поиск также будет проходить в дочерних коллекциях.
            </summary>
            <param name="command">Уникальное в пределах системы имя команды</param>
            <returns>null, если команда не найдена</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.FindPrevCommand(Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Найти предыдущую команду
            </summary>
            <param name="command">Команда в коллекции</param>
            <returns>Предыдущая команда в коллекции</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.FindNextCommand(Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Найти следующую команду
            </summary>
            <param name="command">Команда в коллекции</param>
            <returns>Следующая команда в коллекции</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.IsCommandFirstInGroup(Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Проверить, является ли команда первой в группе
            </summary>
            <param name="command">Команда в коллекции</param>
            <returns>true - команда является первой в группе</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.IsCommandLastInGroup(Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Проверить, является ли команда последней в группе
            </summary>
            <param name="command">Команда в коллекции</param>
            <returns>true - команда является последней в группе</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.Add(System.String,System.String,System.String,System.Int32,System.Boolean,System.Int32,System.Int32,System.Windows.Forms.Keys,Intermech.Navigator.ContextMenu.ImageListSource)">
            <summary>
            Добавить новую настраиваемую команду
            </summary>
            <param name="command">Уникальная в пределах системы команда</param>
            <param name="caption">Краткое текстовое описание команды</param>
            <param name="hint">Подробное текстовое описание команды</param>
            <param name="imageIndex">Индекс изображения команды (из списка именованных значков)</param>
            <param name="visible">Показывать ли указанную команду в контекстных меню</param>
            <param name="group">Номер группы команды</param>
            <param name="orderBy">Порядковый номер команды в группе</param>
            <param name="shortcut">Горячие клавиши</param>
            <param name="imageListSource">С помощью какого сервиса получать иконку: INamedImageList или ICategoryTypeIconService</param>
            <returns>Ссылка на новую настраиваемую команду</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.BatchPropertiesSet(System.Object[])">
            <summary>
            Пакетная установка свойств всем командам
            </summary>
            <param name="options">Массив опций</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.ExtractCommands(Intermech.Navigator.ContextMenu.AdjustableMenuCommands,System.Collections.Generic.Dictionary{System.String,Intermech.Navigator.ContextMenu.AdjustableMenuCommand}@)">
            <summary>
            Извлечение списка копий команд в словарь (Dictionary)
            </summary>
            <param name="commands">Коллекция команд</param>
            <param name="list">Словарик с командами</param>
            <returns>Список команд меню</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.ExtractCommands(Intermech.Navigator.ContextMenu.AdjustableMenuCommands,System.Collections.Generic.List{Intermech.Navigator.ContextMenu.AdjustableMenuCommand}@)">
            <summary>
            Извлечение списка копий команд в список
            </summary>
            <param name="commands">Коллекция команд</param>
            <param name="list">Список с командами</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.Assign(Intermech.Navigator.ContextMenu.AdjustableMenuCommands)">
            <summary>
            Полное присваивание другого списка команд
            </summary>
            <param name="source">Источник</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.SyncWithCommands(Intermech.Navigator.ContextMenu.AdjustableMenuCommands)">
            <summary>
            Выполнить синхронизацию настроек коллекции команд меню с командами из указанного списка
            </summary>
            <param name="commands">Список команд, с которыми надо выполнить синхронизацию</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.SyncWithCommands(System.Collections.Generic.Dictionary{System.String,Intermech.Navigator.ContextMenu.AdjustableMenuCommand})">
            <summary>
            Выполнить синхронизацию настроек коллекции команд меню с командами из указанного списка
            </summary>
            <param name="commands">Список команд, с которыми надо выполнить синхронизацию</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.SyncWithRoleSettings(System.Int64)">
            <summary>
            Выполнить синхронизацию с настройками команд меню у указанной роли
            </summary>
            <param name="RoleID">Идентификатор роли</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.SaveToRoleSettings(System.Int64)">
            <summary>
            Сохранить настройки команд контекстных меню в настройки указанной роли
            </summary>
            <param name="RoleID">Идентификатор роли</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.SyncWithUserSettings(System.Int64)">
            <summary>
            Выполнить синхронизацию с настройками команд меню у указанного пользователя
            </summary>
            <param name="UserID">Идентификатор пользователя</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.SaveToUserSettings(System.Int64)">
            <summary>
            Сохранить настройки команд контекстных меню в настройки указанного пользователя
            </summary>
            <param name="UserID">Идентификатор пользователя</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.Clone">
            <summary>
            Создать копию экземпляра класса
            </summary>
            <returns>Копия экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.Sort">
            <summary>
            Сортировка коллекции
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.RebuildNumbers">
            <summary>
            Перестроить номера групп и внутри групп
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.CanMoveUp(Intermech.Navigator.ContextMenu.AdjustableMenuCommand,System.Boolean)">
            <summary>
            Можно ли переместить команду меню вверх
            </summary>
            <param name="command">Команда меню</param>
            <param name="onlyInGroup">true - перемещение допустимо только в рамках группы команды, 
            иначе - в пределах всей коллекции</param>
            <returns>true - переместить вверх можно</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.CanMoveDown(Intermech.Navigator.ContextMenu.AdjustableMenuCommand,System.Boolean)">
            <summary>
            Можно ли переместить команду меню вниз
            </summary>
            <param name="command">Команда меню</param>
            <param name="onlyInGroup">true - перемещение допустимо только в рамках группы команды, 
            иначе - в пределах всей коллекции</param>
            <returns>true - переместить вниз можно</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.MoveUp(Intermech.Navigator.ContextMenu.AdjustableMenuCommand,System.Boolean)">
            <summary>
            Переместить команду меню вверх
            </summary>
            <param name="command">Команда меню</param>
            <param name="onlyInGroup">true - перемещение допустимо только в рамках группы команды, 
            иначе - в пределах всей коллекции</param>
            <returns>true - команда была успешно перемещена вверх</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.MoveDown(Intermech.Navigator.ContextMenu.AdjustableMenuCommand,System.Boolean)">
            <summary>
            Переместить команду меню вниз внутри своей группы
            </summary>
            <param name="command">Команда меню</param>
            <param name="onlyInGroup">true - перемещение допустимо только в рамках группы команды, 
            иначе - в пределах всей коллекции</param>
            <returns>true - команда была успешно перемещена вниз</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.AddGroup(Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Добавить группу в указанной команде
            Внимание! При выполнении удаления группы все команды её группы перемещаются
            в новую группу
            </summary>
            <param name="command">Настраиваемая команда контекстного меню</param>
            <returns>true - создание группы (перемещение команды в новую группу) выполнено успешно</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.CanRemoveGroup(Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Можно ли удалить группу у указанной команды  (переместить её в предыдущую группу).
            Внимание! При выполнении удаления группы все команды удаляемой группы перемещаются
            в предыдущую группу
            </summary>
            <param name="command">Настраиваемая команда контекстного меню</param>
            <returns>true - можно удалить группу (переместить команду в предыдущую группу)</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenuCommands.RemoveGroup(Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Удалить группу у указанной команды  (переместить её в предыдущую группу).
            Внимание! При выполнении удаления группы все команды удаляемой группы перемещаются
            в предыдущую группу
            </summary>
            <param name="command">Настраиваемая команда контекстного меню</param>
            <returns>true - удаление группы (перемещение команды в предыдущую группу) выполнено успешно</returns>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.AdjustableMenusHelper">
            <summary>
            Вспомогательный статический класс для работы с коллекциями настраиваемых команд
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenusHelper.BuildFromMenuTemplate(Intermech.Navigator.ContextMenu.MenuTemplate)">
            <summary>
            Построить коллекцию настраиваемых команд на основании указанного шаблона меню
            </summary>
            <param name="menuTemplate">Шаблон меню</param>
            <returns>Коллекция настраиваемых команд</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenusHelper.BuildFromMenuTemplateNode(Intermech.Navigator.ContextMenu.AdjustableMenuCommands,Intermech.Navigator.ContextMenu.MenuTemplateNode)">
            <summary>
            Построить коллекцию настраиваемых команд на основании указанного шаблона узла меню
            </summary>
            <param name="parent">Родительская коллекция настраиваемых команд</param>
            <param name="menuTemplateNode">Шаблон узла меню</param>
            <returns>Коллекция настраиваемых команд или null</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenusHelper.BuildMenuTemplate(Intermech.Navigator.ContextMenu.AdjustableMenuCommands)">
            <summary>
            Построить шаблон контекстного меню на основании указанной коллекции настраиваемых команд
            </summary>
            <param name="menuCommands">Коллекция настраиваемых команд</param>
            <returns>Шаблон контекстного меню</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenusHelper.BuildMenuTemplateNode(Intermech.Navigator.ContextMenu.MenuTemplateNode,Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Построить узел шаблона контекстного меню на основе настраиваемой команды
            </summary>
            <param name="parent">Шаблон узла контекстного меню</param>
            <param name="command">Настраиваемая команда контекстного меню</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.AdjustableMenusHelper.BuildMenuTemplateNodeTop(Intermech.Navigator.ContextMenu.MenuTemplate,Intermech.Navigator.ContextMenu.AdjustableMenuCommand)">
            <summary>
            Построить узел верхнего уровня в шаблоне контекстного меню на основании настраиваемой команды
            </summary>
            <param name="parent">Шаблон контекстного меню</param>
            <param name="command">Настраиваемая команда контекстного меню</param>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand">
            <summary>
            Описание настраиваемой команды меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand.Parent">
            <summary>
            Родительская коллекция
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand.Command">
            <summary>
            Уникальная в пределах всей системы команда контекстного меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand.Caption">
            <summary>
            Краткое текстовое описание команды
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand.Hint">
            <summary>
            Более подробное текстовое описание команды
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand.ImageIndex">
            <summary>
            Индекс значка команды (из коллекции именованных значков)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand.Visible">
            <summary>
            Флажок позволяет прятать или показывать данную команду в контекстных меню "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand.Group">
            <summary>
            Номер группы команды
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand.OrderBy">
            <summary>
            Порядковый номер внутри группы
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.IAdjustableMenuCommand.Items">
            <summary>
            Коллекция дочерних команд
            </summary>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.ICommandsProvider">
            <summary>
            Позволяет реализовать провайдер команд для контекстного меню навигатора.
            Провайдер должен проанализировать информацию о контексте, в котором будет показано
            меню, и вернуть контейнер со сведениями о допустимых командах.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.ICommandsProvider.GetMergedCommands(Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider)">
            <summary>
            Метод вызывается для получения допустимых и подавляемых команд контекстного меню для 
            выделенных элементов навигации одной категории и типа. 
            Например, если в «Навигаторе» выделены элементы навигации нескольких разных категорий и типов, 
            то данная команда будет вызываться для каждой из подгрупп этих элементов, сгруппированных 
            по их категориям и типам. Наиболее применяемый метод даного интерфейса. 
            Позволяет перекрывать команды контекстного меню для элементов навигации определённых категорий, 
            типов, задавая более высокий приоритет описаниям этих команд.
            ВНИМАНИЕ! Основное требование к данному методу – нельзя выполнять обращения к базе даных  для того, 
            чтобы проверить, можно ли отображать команду меню или нет!
            </summary>
            <param name="items">Коллекция выбранных пользователем элементов навигации.</param>
            <param name="viewServices">Контейнер сервисов, которыми могут пользоваться команды.</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.ICommandsProvider.GetGroupCommands(Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider)">
            <summary>
            Метод вызывается для получения допустимых и подавляемых команд контекстного меню для всей группы выделенных 
            элементов навигации. Особенности данного метода:
            1. Если команда зарегистрирована на все категории, то метод вызывается один раз и получает в качестве параметра 
            items все выделенные в «Навигаторе» элементы навигации;
            2. Если команда зарегистрирована на конкретную категорию, то метод будет вызван один раз для всех выделенных 
            элементов навигации только в том случае, если все они принадлежат одной категории; для всех выделенных 
            элементов навигации только в том случае, если все они принадлежат указанной категории;
            3. Если команда зарегистрирована на конкретные категорию и тип, то метод будет вызван один раз для всех 
            выделенных элементов навигации только в том случае, если все они принадлежат указанной категории и типу.
            </summary>
            <param name="items">Коллекция выбранных пользователем элементов навигации.</param>
            <param name="viewServices">Контейнер сервисов, которыми могут пользоваться команды.</param>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.MenuTemplateNodeTransformEventArgs">
            <summary>
            Аргументы события "Выполнить преобразование шаблона контекстного меню"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNodeTransformEventArgs.MenuTemplateNode">
            <summary>
            Элемент шаблона контекстного меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNodeTransformEventArgs._items">
            <summary>
            Коллекция выделенных элементов, на основе которых строится команда контекстного меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNodeTransformEventArgs.Items">
            <summary>
            Коллекция выделенных элементов, на основе которых строится команда контекстного меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNodeTransformEventArgs._services">
            <summary>
            Контейнер сервисов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNodeTransformEventArgs.Services">
            <summary>
            Контейнер сервисов
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeTransformEventArgs.#ctor(Intermech.Navigator.ContextMenu.MenuTemplateNode,Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider)">
            <summary>
            Создать аргументы события "Выполнить преобразование шаблона контекстного меню"
            </summary>
            <param name="menuTemplateNode">Элемент шаблона контекстного меню</param>
            <param name="items">Коллекция выделенных элементов, на основе которых строится команда контекстного меню</param>
            <param name="services">Контейнер сервисов</param>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.MenuTemplateNodeTransformEventHandler">
            <summary>
            Делегат "Выполнить преобразование шаблона контекстного меню"
            </summary>
            <param name="sender">Отправитель</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.ICreateObjectButton">
            <summary>
            Интерфейс, управляющий кнопкой "Создать ..." на панели главной формы
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.ICreateObjectButton.BtnNewObjTypeIcon(System.Int32,Intermech.Interfaces.Client.IMRUItem)">
            <summary>
            Назначить кнопке "Создать ..." значок, соответствующий указанному типу объектов
            </summary>
            <param name="objTypeID">Тип объекта</param>
            <param name="MRUItem">Описание</param>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.ICreateObjectButton.BtnNewImageIndex">
            <summary>
            Индекс значка кнопки "Создать ..."
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.ICreateObjectButton.BtnNewImage">
            <summary>
            Изображение (Image) кнопки "Создать ..."
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.ICreateObjectButton.BtnNewIcon">
            <summary>
            Значок (Icon) кнопки "Создать ..."
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.ICreateObjectButton.ResetIcon">
            <summary>
            Сбросить значок на стандартный, удалить ссылку на MRUItem из тега кнопки
            </summary>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.MenuTemplate">
            <summary>
            Содержит коллекцию корневых узлов и отвечает за управление
            общим состоянием шаблона (включение/выключение автоматической
            сортировки и др).
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplate._nodes">
            <summary>
            Коллекция узлов в шаблоне меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplate._namedNodes">
            <summary>
            Таблица названий узлов меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplate._updateCount">
            <summary>
            Количество обновлений
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.#ctor">
            <summary>
            Создать шаблон меню
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.#ctor(System.Object)">
            <summary>
            Создать шаблон меню, заполнить его информацией из объекта-источника
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplate.Nodes">
            <summary>
            Коллекция узлов для шаблона
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplate.Item(System.String)">
            <summary>
            Шаблон элемента меню с указанным именем
            </summary>
            <param name="name">Имя элемента меню</param>
            <returns>Шаблон элемента меню с указанным именем или null</returns>
        </member>
        <member name="E:Intermech.Navigator.ContextMenu.MenuTemplate.OnChanged">
            <summary>
            Событие генерируется каждый раз, когда завершается изменение шаблона меню вызовом метода EndUpdates
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.FireOnChanged">
            <summary>
            Сгенерировать событие ObChanged, если есть подписчики
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.BeginUpdate">
            <summary>
            Начать обновление шаблона
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.EndUpdate">
            <summary>
            Завершить обновление шаблона
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.UpdateNameHash(Intermech.Navigator.ContextMenu.MenuTemplateNode,System.String,System.String)">
            <summary>
            Обновить шаблон элемента меню в словарике
            </summary>
            <param name="node">Шаблон элемента меню</param>
            <param name="oldName">Старое имя</param>
            <param name="newName">Новое имя</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.RecursiveRebuildNameHash(Intermech.Navigator.ContextMenu.MenuTemplateNode)">
            <summary>
            Перестроить хэш имён
            </summary>
            <param name="node">Узел</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.RebuildNameHash">
            <summary>
            Перестроить хэш имён
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplate.Clone">
            <summary>
            Создать точную копию экземпляра класса
            </summary>
            <returns>Точная копия экземпляра класса</returns>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.ImageListSource">
            <summary>
            Определяет imagelist, из которого будет браться иконка
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.ImageListSource.NamedImageList">
            <summary>
            Глобальный список именованных изображений
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.ImageListSource.CategoryImageList">
            <summary>
            Глобальный список изображений для категорий и типов
            </summary>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.MenuTemplateNode">
            <summary>
            Шаблон элемента контекстного меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._hotKeysManager">
            <summary>
            Служба поддержки "горячих клавиш"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._name">
            <summary>
            Название команды контекстного меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._text">
            <summary>
            Текстовое пояснение
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._imageListSource">
            <summary>
            Определяет imagelist, из которого будет браться иконка
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._imageIndex">
            <summary>
            Индекс изображения
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._image">
            <summary>
            Изображение (более высокий приоритет, чем ImageIndex)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._groupID">
            <summary>
            Номер группы команды
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._orderID">
            <summary>
            Номер в группе
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._tag">
            <summary>
            Пользовательские данные
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._shortcut">
            <summary>
            Комбинация горячих клавиш
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._nodes">
            <summary>
            Коллекция дочерних элементов
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._parent">
            <summary>
            Родительский элемент
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNode._template">
            <summary>
            Шаблон меню
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNode.#ctor">
            <summary>
            Пустой элемент меню
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNode.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Инициализированный элемент меню
            </summary>
            <param name="text">Текстовое пояснение команды</param>
            <param name="iconIndex">Индекс изображения</param>
            <param name="groupID">Номер группы</param>
            <param name="orderID">Номер в группе</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNode.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Инициализированный элемент меню
            </summary>
            <param name="name">Команда контекстного меню</param>
            <param name="text">Текстовое пояснение команды</param>
            <param name="imageIndex">Индекс изображения</param>
            <param name="groupID">Номер группы</param>
            <param name="orderID">Номер в группе</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNode.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Keys)">
            <summary>
            Инициализированный элемент меню
            </summary>
            <param name="name">Команда контекстного меню</param>
            <param name="text">Текстовое пояснение команды</param>
            <param name="imageIndex">Индекс изображения</param>
            <param name="groupID">Номер группы</param>
            <param name="orderID">Номер в группе</param>
            <param name="shortcut">Горячая клавиша для команды</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNode.#ctor(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Windows.Forms.Keys,System.Boolean,Intermech.Navigator.ContextMenu.ImageListSource)">
            <summary>
            Инициализированный элемент меню
            </summary>
            <param name="name">Команда контекстного меню</param>
            <param name="text">Текстовое пояснение команды</param>
            <param name="imageIndex">Индекс изображения</param>
            <param name="groupID">Номер группы</param>
            <param name="orderID">Номер в группе</param>
            <param name="shortcut">Горячая клавиша для команды</param>
            <param name="visible">Видима ли команда в шаблоне</param>
            <param name="imageListSource"> imagelist, из которого будет браться иконка </param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNode.#ctor(System.Object)">
            <summary>
            Создать узел шаблона меню, заполнить информацией из указанного объекта-источника
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.Name">
            <summary>
            Команда контекстного меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.Text">
            <summary>
            Текстовое пояснение к команде меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.ImageListSource">
            <summary>
            Определяет imagelist, из которого будет браться значок
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.ImageIndex">
            <summary>
            Индекс изображения
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.Image">
            <summary>
            Изображение (более высокий приоритет, чем ImageIndex)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.Tag">
            <summary>
            Пользовательские данные
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.GroupID">
            <summary>
            Номер группы
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.OrderID">
            <summary>
            Номер в группе
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.Shortcut">
            <summary>
            Комбинация "горячих клавиш"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.Nodes">
            <summary>
            Список дочерних элементов меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.Parent">
            <summary>
            Родительский элемент меню
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNode.Template">
            <summary>
            Шаблон меню
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNode.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNode.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNode.Clone">
            <summary>
            Создать точную копию экземпляра класса
            </summary>
            <returns>Точная копия экземпляра класса</returns>
        </member>
        <member name="T:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection">
            <summary>
            Коллекция узлов для шаблона меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection._template">
            <summary>
            Шаблон меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection._owner">
            <summary>
            Шаблон элемента меню
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection._children">
            <summary>
            Дочерние узлы
            </summary>
        </member>
        <member name="F:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection._sortThreshold">
            <summary>
            Разброс при сортировке
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.#ctor(Intermech.Navigator.ContextMenu.MenuTemplate,Intermech.Navigator.ContextMenu.MenuTemplateNode)">
            <summary>
            Создать экземпляр коллекции
            </summary>
            <param name="template">Шаблон меню</param>
            <param name="owner">Шаблон элемента меню</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.#ctor(System.Object)">
            <summary>
            Создать экземпляр коллекции, заполнить его информацией из указанного объекта-источника
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.Count">
            <summary>
            Количество дочерних элементов в коллекции
            </summary>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.Item(System.Int32)">
            <summary>
            Дочерний элемент коллекции с указанным индексом
            </summary>
            <param name="index">Индекс элемента в коллекции</param>
            <returns>Дочерний элемент коллекции с указанным индексом</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.Add(Intermech.Navigator.ContextMenu.MenuTemplateNode)">
            <summary>
            Добавить элемент в коллекцию
            </summary>
            <param name="node">Добавляемый шаблон элемента меню</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.AddRange(System.Collections.ICollection)">
            <summary>
            Добавить узлы из коллекции
            </summary>
            <param name="nodes">Коллекция узлов</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.Remove(Intermech.Navigator.ContextMenu.MenuTemplateNode)">
            <summary>
            Удалить узел из коллекции
            </summary>
            <param name="node">Удаляемый узел</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.RemoveAt(System.Int32)">
            <summary>
            Удалит узел с указанным индексом из коллекции
            </summary>
            <param name="index">Индекс удаляемого из коллекции узла</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.IndexOf(Intermech.Navigator.ContextMenu.MenuTemplateNode)">
            <summary>
            Отыскать индекс указанного узла в коллекции
            </summary>
            <param name="node">Указанный узел</param>
            <returns>Индекс узла</returns>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.Sort">
            <summary>
            Выполнить сортировку элементов коллекции
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.RelocateNode(Intermech.Navigator.ContextMenu.MenuTemplateNode)">
            <summary>
            Выполнить перемещение узла внутри коллекции
            </summary>
            <param name="node">Перемещаемый узел</param>
        </member>
        <member name="P:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.MenuTemplate">
            <summary>
            Шаблон меню
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.RemoveFromNamedNodes(Intermech.Navigator.ContextMenu.MenuTemplateNode)">
            <summary>
            Удалить из именованных узлов
            </summary>
            <param name="node">Удаляемый узел</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.InsertIntoNamedNodes(Intermech.Navigator.ContextMenu.MenuTemplateNode)">
            <summary>
            Добавить в именованные узлы
            </summary>
            <param name="node">Добавляемый узел</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.Clear">
            <summary>
            Очистить поля класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.Assign(System.Object)">
            <summary>
            Скопировать в текущий объект поля из другого объекта.
            </summary>
            <param name="source">Объект-источник</param>
        </member>
        <member name="M:Intermech.Navigator.ContextMenu.MenuTemplateNodeCollection.Clone">
            <summary>
            Создать точную копию экземпляра класса
            </summary>
            <returns>Точная копия экземпляра класса</returns>
        </member>
        <member name="T:Intermech.Navigator.Views.AdjustableView">
            <summary>
            Описание настраиваемой закладки ("вьюшки") "Навигатора"
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableView.#ctor(System.String,System.String,System.Boolean,System.String,System.String,System.String,System.Int32)">
            <summary>
            Создать экземпляр настраиваемой команды контекстного меню
            </summary>
            <param name="name">Уникальное в пределах всей системы имя закладки</param>
            <param name="caption">Краткое текстовое название заладки</param>
            <param name="visible">Флажок позволяет прятать или показывать данную закладку на панелях "Навигатора"</param>
            <param name="hint">Более подробное текстовое описание закладки</param>
            <param name="imageName">Название значка закладки (из коллекции именованных значков)</param>
            <param name="module">Название модуля (плагина), который создаёт закладку</param>
            <param name="orderID">Порядковый номер закладки на менеджере закладок "Навигатора"</param>
        </member>
        <member name="P:Intermech.Navigator.Views.AdjustableView.ObjectTypes">
            <summary>
            Список типов объектов, для которых данная закладка будет автоматически выбираться активной
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableView.Check">
            <summary>
            Проверить корректность полей
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableView.BatchPropertiesSet(System.Object[])">
            <summary>
            Пакетная установка свойств
            </summary>
            <param name="options">Массив опций.
            [0] - (string)Name,
            [1] - (string)Caption,
            [2] - (string)Hint,
            [3] - (string)Module,
            [4] - (string)ImageName,
            [5] - (bool)Visible,
            [6] - (int)OrderID
            [7] - (List[Int32])ObjectTypes</param>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableView.Equals(System.Object)">
            <summary>
            Сравнить экземпляр класса с указанным объектом
            </summary>
            <param name="obj">Объект для сравнения</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableView.GetHashCode">
            <summary>
            Вернуть 32-битный хэш-код экземпляра класса
            </summary>
            <returns>32-битный хэш-код экземпляра класса</returns>
        </member>
        <member name="P:Intermech.Navigator.Views.AdjustableView.Name">
            <summary>
            Уникальное в пределах всей системы имя закладки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.AdjustableView.Caption">
            <summary>
            Краткое текстовое название заладки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.AdjustableView.Hint">
            <summary>
            Более подробное текстовое описание закладки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.AdjustableView.Module">
            <summary>
            Название модуля (плагина), который создаёт закладку
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.AdjustableView.ImageName">
            <summary>
            Название значка закладки (из коллекции именованных значков)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.AdjustableView.Visible">
            <summary>
            Флажок позволяет прятать или показывать данную закладку на панелях "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.AdjustableView.OrderID">
            <summary>
            Порядковый номер закладки на менеджере закладок "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableView.DefModuleName">
            <summary>
            Название модуля по умолчанию - "Универсальный клиент"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableView._Name">
            <summary>
            Уникальное в пределах всей системы имя закладки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableView._Caption">
            <summary>
            Краткое текстовое название заладки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableView._Hint">
            <summary>
            Более подробное текстовое описание закладки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableView._Module">
            <summary>
            Название модуля (плагина), который создаёт закладку
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableView._ImageName">
            <summary>
            Название значка закладки (из коллекции именованных значков)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableView._Visible">
            <summary>
            Флажок позволяет прятать или показывать данную закладку на панелях "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableView._OrderID">
            <summary>
            Порядковый номер закладки на менеджере закладок "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableView._ObjectTypes">
            <summary>
            Список типов объектов, для которых данная закладка будет автоматически выбираться активной
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.AdjustableViewsHelper">
            <summary>
            Вспомогательный статический класс для работы с коллекциями настраиваемых закладок
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViewsHelper.ProcessViews(System.Collections.Generic.List{Intermech.Navigator.Views.AdjustableView})">
            <summary>
            Метод собирает всю информацию из закладок и размещает её в кэш
            </summary>
            <param name="views">Коллекция закладок</param>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViewsHelper.RegisterView4ObjectType(System.Int32,Intermech.Navigator.Views.AdjustableView,System.Boolean)">
            <summary>
            Зарегистрировать закладку по умолчанию для указанного типа объекта
            </summary>
            <param name="objectTypeID">Идентификатор типа объекта</param>
            <param name="view">Закладка по умолчанию</param>
            <param name="canOverride">true - выполнять замену ранее зарегистрированной закладки</param>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViewsHelper.UnregisterViewObjectTypes(Intermech.Navigator.Views.AdjustableView)">
            <summary>
            Удалить привязку типов объектов для закладки
            </summary>
            <param name="view">Закладка</param>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViewsHelper.GetDefaultView(System.Int32)">
            <summary>
            Отыскать закладку по умолчанию для указанного типа объекта (или ближайшего по иерархии)
            </summary>
            <param name="objectTypeID">Тип объекта</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViewsHelper.RegisterView(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Добавить новую настраиваемую закладку ("вьюшку") "Навигатора" в коллекцию
            </summary>
            <param name="name">Уникальное в пределах всей системы имя закладки.
            ВНИМАНИЕ! Если имя закладки начинается с символа "@", то под фильтрацию попадут
            все закладки, имя которых будет начинаться с указанной строки (с учётом регистра, пробелов, т.п.).
            Это можно использовать в тех случаях, когда имя закладки генерируется автоматически.</param>
            <param name="caption">Краткое текстовое название заладки</param>
            <param name="hint">Более подробное текстовое описание закладки</param>
            <param name="module">Название модуля (плагина), который создаёт закладку</param>
            <param name="imageName">Название значка закладки (из коллекции именованных значков)</param>
            <param name="visible">Флажок позволяет прятать или показывать данную закладку на панелях "Навигатора"</param>
            <param name="orderID">Порядковый номер закладки на менеджере закладок "Навигатора"</param>
            <returns>Ссылка на новую настраиваемую закладку</returns>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableViewsHelper.DefaultViews">
            <summary>
            Словарь содержит перечень типов объектов и назначенные им закладки по умолчанию
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.AdjustableViews">
            <summary>
            Коллекция настраиваемых закладок "Навигатора"
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViews.FindView(System.String)">
            <summary>
            Отыскать в коллекции закладку с указанным именем. 
            </summary>
            <param name="name">Уникальное в пределах системы имя закладки</param>
            <returns>null, если закладка не найдена</returns>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViews.Add(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Добавить новую (обновить существующую) настраиваемую закладку ("вьюшку") "Навигатора" в коллекцию
            </summary>
            <param name="name">Уникальное в пределах всей системы имя закладки</param>
            <param name="caption">Краткое текстовое название заладки</param>
            <param name="hint">Более подробное текстовое описание закладки</param>
            <param name="module">Название модуля (плагина), который создаёт закладку</param>
            <param name="imageName">Название значка закладки (из коллекции именованных значков)</param>
            <param name="visible">Флажок позволяет прятать или показывать данную закладку на панелях "Навигатора"</param>
            <param name="orderID">Порядковый номер закладки на менеджере закладок "Навигатора"</param>
            <returns>Ссылка на новую настраиваемую закладку</returns>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViews.Assign(Intermech.Navigator.Views.AdjustableViews)">
            <summary>
            Синхронизация настроек закладки с другой коллекцией настроек
            </summary>
            <param name="source">Источник</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intermech.Navigator.Views.AdjustableViews.BatchPropertiesSet(System.Object[])" -->
        <member name="M:Intermech.Navigator.Views.AdjustableViews.SyncWithRoleSettings(System.Int64)">
            <summary>
            Выполнить синхронизацию с настройками закладок у указанной роли
            </summary>
            <param name="RoleID">Идентификатор роли</param>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViews.SaveToRoleSettings(System.Int64)">
            <summary>
            Сохранить настройки закладок в настройки указанной роли
            </summary>
            <param name="RoleID">Идентификатор роли</param>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViews.SyncWithUserSettings(System.Int64)">
            <summary>
            Выполнить синхронизацию с настройками команд меню у указанного пользователя
            </summary>
            <param name="UserID">Идентификатор пользователя</param>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViews.SaveToUserSettings(System.Int64)">
            <summary>
            Сохранить настройки закладок в настройки указанного пользователя
            </summary>
            <param name="UserID">Идентификатор пользователя</param>
        </member>
        <member name="M:Intermech.Navigator.Views.AdjustableViews.Clone">
            <summary>
            Создать копию экземпляра класса
            </summary>
            <returns>Копия экземпляра класса</returns>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableViews.Wildcard">
            <summary>
            Символ в начале строки с названием закладки, который говорит о том,
            что имя закладки может начинаться с этой строки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableViews.RoleSettingsGuid">
            <summary>
            Guid настроек роли
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.AdjustableViews.UserSettingsGuid">
            <summary>
            Guid настроек пользователя
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.DisableDelayedUpdates">
            <summary>
            Наличие этого класса в сервисах обязывает закладки выполнять немедленное обновление своих контролов
            (проблема проявляется при восстановлении вложенных закладок и их выделенных строк - отложенное обновление
            генерирует перечитывание списка строк и сбрасывает восстановленные выделенные строки)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.DisableDelayedUpdates._disabled">
            <summary>
            Если true, то отложенное обновление закладок запрещено
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.DisableDelayedUpdates.#ctor(System.Boolean)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="disabled">Если true, то отложенное обновление закладок запрещено</param>
        </member>
        <member name="P:Intermech.Navigator.Views.DisableDelayedUpdates.Disabled">
            <summary>
            Если true, то отложенное обновление закладок запрещено
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.IAdjustableView">
            <summary>
            Описание настраиваемой закладки (вьюшки) "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdjustableView.Name">
            <summary>
            Уникальное в пределах всей системы имя закладки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdjustableView.Caption">
            <summary>
            Краткое текстовое название заладки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdjustableView.Hint">
            <summary>
            Более подробное текстовое описание закладки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdjustableView.Module">
            <summary>
            Название модуля (плагина), который создаёт закладку
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdjustableView.ImageName">
            <summary>
            Название значка закладки (из коллекции именованных значков)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdjustableView.Visible">
            <summary>
            Флажок позволяет прятать или показывать данную закладку на панелях "Навигатора"
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdjustableView.OrderID">
            <summary>
            Порядковый номер закладки на менеджере закладок "Навигатора"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.IAdvancedView">
            <summary>
            Интерфейс закладки, которая умеет сохранять/восстанавливать текущую колллекцию выделенных элементов
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdvancedView.FocusAndSelection">
            <summary>
            Свойство позволяет получать/устанавливать выделенные элементы в закладке
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdvancedView.FullFocusAndSelection">
            <summary>
            Свойство позволяет получать/устанавливать выделенные элементы в закладке,
            включая выделенные элементы во вложенных закладках
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.IAdvancedView.Reload(Intermech.Navigator.Views.iFocusAndSelection)">
            <summary>
            Перечитать содержимое грида. Если задано состояние state, грид попробует восстановить выделенные строки
            </summary>
            <param name="state">Состояние или null, если требуется только перечитать грид</param>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdvancedView.DisableAutoselectFirstRow">
            <summary>
            Запретить выделять первую строку в гриде
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IAdvancedView.DisableDelayedUpdates">
            <summary>
            Запретить или разрешить отложенное обновление
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.IAdvancedView.HideHint">
            <summary>
            Спрятать хинт, если он в данный момент отображается
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.IAdvancedView.GetState">
            <summary>
            Получить текущее состояние закладки в виде XML-документа
            </summary>
            <returns>Текущее состояние закладки в виде XML-документа</returns>
        </member>
        <member name="M:Intermech.Navigator.Views.IAdvancedView.RestoreState(System.Xml.XmlDocument)">
            <summary>
            Восстановить состояние закладки из XML-документа
            </summary>
            <param name="xmlDoc">XML-документ с состоянием закладки</param>
        </member>
        <member name="T:Intermech.Navigator.Views.ICanCloseViews">
            <summary>
            Интерфейс позволяет элементу управления, реализующему закладку IView,
            запретить или подтвердить возможность закрытия формы, на которой
            расположен менеджер закладок
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.ICanCloseViews.CanClose(System.Object)">
            <summary>
            Выполнить запрос, можно ли закрывать форму, на которой расположены закладки
            </summary>
            <param name="sender">Отправитель запроса</param>
            <returns>true - закладка разрешает закрытие формы, false - закладка запрещает закрытие формы</returns>
        </member>
        <member name="T:Intermech.Navigator.Views.ICanDeactivateView">
            <summary>
            Интерфейс позволяет элементу управления, реализующему закладку IView,
            запретить или подтвердить возможность деактивации закладки
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.ICanDeactivateView.CanDeactivate(System.Object)">
            <summary>
            Выполнить запрос, можно ли деактивировать текущую закладку
            </summary>
            <param name="sender">Отправитель запроса</param>
            <returns>true - закладку можно деактивировать, false - закладку нельзя деактивировать</returns>
        </member>
        <member name="T:Intermech.Navigator.Views.IDisableDelayedUpdates">
            <summary>
            Наличие этого интерфейса в сервисах обязывает закладки выполнять немедленное обновление своих контролов
            (проблема проявляется при восстановлении вложенных закладок и их выделенных строк - отложенное обновление
            генерирует перечитывание списка строк и сбрасывает восстановленные выделенные строки)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IDisableDelayedUpdates.Disabled">
            <summary>
            Если true, то отложенное обновление закладок запрещено
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.IEmbeddedViews">
            <summary>
            Интерфейс, позволяющий управлять вложенными вьюшками (реализован в ChildrenView)
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IEmbeddedViews.IsOpen">
            <summary>
            Открыта ли панель с дополнительными видами.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IEmbeddedViews.EmbeddedFocusAndSelection">
            <summary>
            Позволяет управлять сфокусированной и выделенными записями во вложенных закладках
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.IEmbeddedViews.OpenEmbeddedViews">
            <summary>
            Выводит на экран панель с дополнительными видами. Размер области вложенных закладок - по умолчанию.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.IEmbeddedViews.OpenEmbeddedViews(System.Double)">
            <summary>
            Выводит на экран панель с дополнительными видами с пропорцией embeddedViewsSizeRatio размера (ширина или высота в зависимости от текущего Dock'а)
            относительно общего доступного размера контейнера в котором отображаются вложенные закладки.
            </summary>
            <param name="embeddedViewsSizeRatio">Отношение размера вложенных закладок (ширина или длина в зависимости от текущего Dock'а)
            к общему доступному размеру в контейнере, в котором отображаются вложенные закладки.
            Диапазон допустимых значений от (больше) 0.0 до (меньше) 0.1</param>
        </member>
        <member name="M:Intermech.Navigator.Views.IEmbeddedViews.OpenEmbeddedViews(System.Int32)">
            <summary>
            Выводит на экран панель с дополнительными видами.
            !!! WARNING !!! Лучше использовать метод <see cref="M:OpenEmbeddedViews(double embeddedViewsSizeRatio)"/>
            в который передаётся не абсолютное значение размера, а отношение размера области вложенных закладок
            к общему размеру доступному в их контейнере.
            </summary>
            <param name="emvSize">Размер области отображения вложенных закладок по высоте или ширине в пикселях,
            в зависимости от используемого DockStyle.
            </param>
        </member>
        <member name="M:Intermech.Navigator.Views.IEmbeddedViews.CloseEmbeddedViews">
            <summary>
            Убирает с экрана панель с дополнительными видами.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.iFocusAndSelection">
            <summary>
            Хранит идентификаторы сфокусированной и выделенных в гриде/дереве записей.
            Используется для сохранения/восстановления состояния грида/дерева.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.iFocusAndSelection.FocusedRow">
            <summary>
            Идентификатор сфокусированной строки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.iFocusAndSelection.SelectedRows">
            <summary>
            Список идентификаторов выделенных строк
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.iFocusAndSelection.FocusedIndex">
            <summary>
            Индекс сфокусированной строки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.iFocusAndSelection.SelectedIndexes">
            <summary>
            Список индексов выделенных строк
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.iFocusAndSelection.ActivePage">
            <summary>
            Название активной вложенной странички (String.Empty - вложенные закладки были закрыты)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.iFocusAndSelection.SubviewSelection">
            <summary>
            Настройки сфокусированной и выделенной записей во вложенных закладках
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.iFocusAndSelection.ChildrenViewSizeRatio">
            <summary>
            Отношение размера (ширина или высота, в зависимости от DockStyle Dock) дочернего вида
            к полному доступному в контейнере размеру где теоретически может быть размещен дочерний вид.
            Юзается для сохранения и восстановления пропорции размера дочернего вида.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.iFocusAndSelection.#ctor(Intermech.Navigator.Interfaces.INodeID,System.Collections.Generic.List{Intermech.Navigator.Interfaces.INodeID},System.Int32,System.Collections.Generic.List{System.Int32},System.String,Intermech.Navigator.Views.iFocusAndSelection)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="focusedRow">Идентификатор сфокусированной строки</param>
            <param name="selectedRows">Список идентификаторов выделенных строк</param>
            <param name="focusedIndex">Индекс сфокусированной строки</param>
            <param name="selectedIndexes">Список индексов выделенных строк</param>
            <param name="activePage">Название активной вложенной странички (String.Empty - вложенные закладки были закрыты)</param>
            <param name="subviewSelection">Настройки сфокусированной и выделенной записей во вложенных закладках</param>
        </member>
        <member name="T:Intermech.Navigator.Views.IFoldersView">
            <summary>
            Интерфейс закладки, в которой навигация выполняется аналогично папкам в "Проводнике".
            Закладка может указать, восстанавливать ли её как активную закладку при переходе между
            уровнями дерева "Навигатора", либо включать стандартный механизм выбора активной закладки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IFoldersView.RemainActiveView">
            <summary>
            Если true, то оставлять закладку активной
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.INavigatorView">
            <summary>
            Позволяет реализовать закладку, встраиваемую в дерево Навигатора
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.NavigatorViewPlacement">
            <summary>
            Допустимые места для отображения закладки
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.NavigatorViewPlacement.InMainViews">
            <summary>
            Закладку можно отображать в основном списке закладок
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.NavigatorViewPlacement.InTreeViews">
            <summary>
            Закладку можно отображать в списке закладок, расположенном под деревом "Навигатора"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.NavigatorViewContext">
            <summary>
            Режим отображения закладок
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.NavigatorViewContext.MainViews">
            <summary>
            Закладки, расположенные справа от дерева "Навигатора" (основная коллекция закладок)
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.NavigatorViewContext.TreeViews">
            <summary>
            Закладки, расположенные под деревом "Навигатора"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.NavigatorViewOptions">
            <summary>
            Контекст, в рамках которого создана и отображается закладка
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.NavigatorViewOptions._context">
            <summary>
            Режим отображения закладок
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.NavigatorViewOptions.Context">
            <summary>
            Режим отображения закладок
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.NavigatorViewOptions.#ctor">
            <summary>
            Создать пустой экземпляр класса
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.NavigatorViewOptions.#ctor(Intermech.Navigator.Views.NavigatorViewContext)">
            <summary>
            Создать заполненный экземпляр класса
            </summary>
            <param name="context">Режим отображения закладок</param>
        </member>
        <member name="T:Intermech.Navigator.Views.IView">
            <summary>
            Позволяет реализовать закладку, встраиваемую в навигатор. Закладка представляет собой
            элемент управления (потомок от System.Windows.Forms), поддерживающий этот интерфейс.
            С его помощью навигатор инициализирует закладку, сообщает о переключении между закладками,
            а также получает справочную информацию о названии закладки, ее иконке и положении среди
            других закладок.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.IView.Initialize(Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider)">
            <summary>
            Выполняет инициализацию закладки после ее создания. Реализация
            этого метода должна работать быстро, т.е. все длительные операции
            желательно выполнять при первом вызове метода Activate.
            </summary>
            <param name="items">Коллекция выбранных пользователем элементов навигации.</param>
            <param name="provider">Контейнер сервисов, которыми может пользоваться закладка.</param>
        </member>
        <member name="M:Intermech.Navigator.Views.IView.Activate(Intermech.Navigator.Views.IView)">
            <summary>
            Уведомляет закладку о том, что она стала видима на экране. Этот метод вызывается при
            первом показе закладки, а также при переключении на нее с другой закладки.
            </summary>
            <param name="previousView">
            Закладка, с которой осуществляется переключение. Может быть null для самой первой 
            показываемой на экране закладки.
            </param>
        </member>
        <member name="M:Intermech.Navigator.Views.IView.Deactivate(Intermech.Navigator.Views.IView)">
            <summary>
            Уведомляет закладку о том, что она перестала быть видима на экране. Этот метод 
            вызывается при переключении на другую закладку, а также удалении всех закладок.
            </summary>
            <param name="nextView">
            Закладка, на которую осуществляется переключение. Может быть null, если выполяется
            не переключение, а удаление закладок.
            </param>
        </member>
        <member name="P:Intermech.Navigator.Views.IView.Caption">
            <summary>
            Возвращает название закладки, которое будет отображаться на экране. Навигатор
            получает значение этого свойства после того, как закладка будет проинициализирована
            в методе Initialize.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.IView.ImageIndex">
            <summary>
            Возвращает индекс иконки, которая будет отображаться на экране, 
            в именованном списке иконок. Навигатор получает значение этого свойства после того,
            как закладка будет проинициализирована в методе Initialize.
            </summary>
            
        </member>
        <member name="P:Intermech.Navigator.Views.IView.OrderID">
            <summary>
            Возвращает индекс расположения закладки среди других закладок 
            при выводе на экран. Навигатор сортирует отображаемые закладки в
            порядке возрастания этого значения. Значение этого свойства 
            навигатор получает после того, как закладка будет проинициализирована в
            методе Initialize.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.IViewData">
            <summary>
            Интерфейс для обновления данных у закладки
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.IViewData.Refresh">
            <summary>
            Обновить содержимое закладки (перечитать данные, обновить элементы управления)
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.IViewsProvider">
            <summary>
            Позволяет реализовать провайдер закладок, встраиваемых в навигатор.
            Провайдер должен проанализировать информацию о контексте, в котором будут 
            показаны закладки, и вернуть контейнер со сведениями о допустимых закладках.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.IViewsProvider.GetViews(Intermech.Navigator.Interfaces.ISelectedItems,System.IServiceProvider)">
            <summary>
            Возвращает контейнер со сведениями о закладках, которые должны быть 
            выведены на экран в указанном контексте, а также о закладках других
            провайдеров, вывод которых должен быть подавлен.
            </summary>
            <param name="items">Коллекция выбранных пользователем элементов навигации.</param>
            <param name="services">Контейнер сервисов, которыми может пользоваться закладка.</param>
        </member>
        <member name="T:Intermech.Navigator.Views.ViewCreatorCallback">
            <summary>
            Делегат метода, который создает закладку.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.ViewInfo">
            <summary>
            Контейнер информации о закладке, предоставляемой провайдером.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.ViewInfo.defaultHelpID">
            <summary>
            раздел справки для контрола по умолчанию
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.ViewInfo.defaultHelpPath">
            <summary>
            путь к файлу справки по умолчанию
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.ViewInfo.#ctor(System.Int32)">
            <summary>
            Создает контейнер информации, который можно использовать для подавления закладки.
            </summary>
            <param name="priority">Приоритет закладки.</param>
        </member>
        <member name="M:Intermech.Navigator.Views.ViewInfo.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="priority"></param>
            <param name="topicID"> id раздела справки для закладки. 
            если раздел справки не известен, не указывайте 0, -1, 100500 - воспользуйтесь другим конструктором!</param>
        </member>
        <member name="M:Intermech.Navigator.Views.ViewInfo.#ctor(System.Int32,System.Int32,System.Type)">
            <summary>
            
            </summary>
            <param name="priority"></param>
            <param name="topicID"> id раздела справки для закладки. 
            если раздел справки не известен, не указывайте 0, -1, 100500 - воспользуйтесь другим конструктором!</param>
            <param name="controlType"></param>
        </member>
        <member name="M:Intermech.Navigator.Views.ViewInfo.#ctor(System.Int32,System.Int32,Intermech.Navigator.Views.ViewCreatorCallback,System.Object)">
            <summary>
            
            </summary>
            <param name="priority"></param>
            <param name="topicID"> id раздела справки для закладки. 
            если раздел справки не известен, не указывайте 0, -1, 100500 - воспользуйтесь другим конструктором!</param>
            <param name="creatorCallback"></param>
            <param name="additionalInfo"></param>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewInfo.Priority">
            <summary>
            Возвращает приоритет, присвоенный закладке провайдером. Среди закладок с одинаковым именем будет
            выбрана та, приоритет которой больше.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewInfo.CreatorCallback">
            <summary>
            Возвращает делегат метода, который создает закладку.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewInfo.AdditionalInfo">
            <summary>
            Возвращает дополнительные сведения, которые должны быть переданы методу, создающему закладку.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.ViewInfo._helpTopicID">
            <summary>
            id раздела хелпа для данной закладки
            по умолчанию показываем страницу про
            Рабочую область навигатора
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.ViewInfo._helpPath">
            <summary>
             путь к хелпу справки
            по умолчанию Help\Rus\        
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewInfo.HelpTopicID">
            <summary>
            возвращает id раздела хелпа для данной закладки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewInfo.HelpPath">
            <summary>
            Путь к файлу справки
            </summary>        
        </member>
        <member name="F:Intermech.Navigator.Views.ViewDescription.DefaultHelpTopicId">
            <summary>
            раздел справки для контрола по умолчанию
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewDescription.DefaultHelpPath">
            <summary>
            путь к файлу справки по умолчанию
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewDescription.Caption">
            <summary>
            Возвращает название закладки, которое будет отображаться на экране. Навигатор
            получает значение этого свойства после того, как закладка будет проинициализирована
            в методе Initialize.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewDescription.ImageIndex">
            <summary>
            Возвращает индекс иконки, которая будет отображаться на экране, 
            в именованном списке иконок. Навигатор получает значение этого свойства после того,
            как закладка будет проинициализирована в методе Initialize.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewDescription.OrderID">
            <summary>
            Возвращает индекс расположения закладки среди других закладок 
            при выводе на экран. Навигатор сортирует отображаемые закладки в
            порядке возрастания этого значения. Значение этого свойства 
            навигатор получает после того, как закладка будет проинициализирована в
            методе Initialize.
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewDescription.HelpTopicId">
            <summary>
            возвращает id раздела хелпа для данной закладки
            </summary>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewDescription.HelpPath">
            <summary>
            Путь к файлу справки
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Views.ViewsInfo">
            <summary>
            Контейнер сведений о допустимых закладках, а также о закладках других 
            провайдеров, появление которых должно быть подавлено.
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Views.ViewsInfo._empty">
            <summary>
            Пустой контейнер сведений о закладках, который может возвращаться
            провайдерами в тех случаях, когда для некоторого контекста нет
            допустимых закладок.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.ViewsInfo.Add(System.String,Intermech.Navigator.Views.ViewInfo)">
            <summary>
            Добавляет в контейнер информацию о закладке, появление которой на экране 
            допустимо для данного контекста.
            </summary>
            <param name="viewName">Имя закладки.</param>
            <param name="viewInfo">Информация о закладке.</param>
        </member>
        <member name="M:Intermech.Navigator.Views.ViewsInfo.Suppress(System.String,System.Int32)">
            <summary>
            Добавляет в контейнер сведения о закладке, предоставляемой другим провайдером,
            появление которой на экране должно быть подавлено.
            </summary>
            <param name="viewName">Имя закладки.</param>
            <param name="priority">Приоритет закладки.</param>
        </member>
        <member name="M:Intermech.Navigator.Views.ViewsInfo.Remove(System.String)">
            <summary>
            Удаляет из контейнера сведения о закладке с указанным именем.
            </summary>
            <param name="viewName">Имя закладки.</param>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewsInfo.ViewNames">
            <summary>
            Возвращает массив имен закладок, сведения о которых находятся в контейнере.
            Если в контейнер не было добавлено ни одной закладки, то результатом будет null.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Views.ViewsInfo.GetInfo(System.String)">
            <summary>
            Возвращает сведения о закладке с указанным именем.
            с указанным именем.
            </summary>
            <param name="viewName">Имя закладки.</param>
            <returns>Контейнер сведений о закладке.</returns>
        </member>
        <member name="P:Intermech.Navigator.Views.ViewsInfo.Empty">
            <summary>
            Возвращает пустой контейнер сведений о закладках, который может
            возвращаться провайдерами в тех случаях, когда для некоторого 
            контекста нет допустимых закладок.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Snapshots.IObjectInSnapshotContext">
            <summary>Интерфейс ноды объекта, сохранённого в итерации</summary>
        </member>
        <member name="P:Intermech.Navigator.Snapshots.IObjectInSnapshotContext.ObjectVersionID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.NavigatorColumnSchemeGuid">
            <summary>
            Схема колонок дерева "Навигатора"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.NameColumnSchemeGuid">
            <summary>
            Схема с одной колонкой - "Заголовок"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.ObjectTypeColumnSchemeGuid">
            <summary>
            Схема колонок для типов объектов
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.CurrentObjectColumnSchemeGuid">
            <summary>
            Схема колонок для атрибутов определённого типа объекта
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.ObjectColumnSchemeGuid">
            <summary>
            Схема колонок для всех атрибутов объектов
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.ObjectObligatoryColumnSchemeGuid">
            <summary>
            Схема колонок для обязательных атрибутов объектов
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.CurrentRelationColumnSchemeGuid">
            <summary>
            Схема колонок для атрибутов определённого типа связи
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.RelationColumnSchemeGuid">
            <summary>
            Схема колонок для всех атрибутов связей
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.RelationObligatoryColumnSchemeGuid">
            <summary>
            Схема колонок для обязательных атрибутов связей
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.ColumnSetNameAllAttrs">
            <summary>
            Название набора колонок со всеми атрибутами - "Все атрибуты"
            </summary>
        </member>
        <member name="F:Intermech.Navigator.Consts.ColumnSetNameDefault">
            <summary>
            Название стандартного набора колонок - "Допустимые атрибуты"
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Persistence.BinaryStateFormatter">
            <summary>
            Реализует бинарный форматтер объектов.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Persistence.IPersistable">
            <summary>
            Интерфейс, который должны реализовывать сериализуемые объекты.
            </summary>
        </member>
        <member name="M:Intermech.Navigator.Persistence.IPersistable.GetObjectData(Intermech.Navigator.Persistence.PersistentState)">
            <summary>
            Формирует сериализованное представление объекта.
            </summary>
            <param name="state">Контейнер значений для хранения сериализованного представления объекта</param>
        </member>
        <member name="T:Intermech.Navigator.Persistence.IStateFormatter">
            <summary>
            Позволяет реализовать форматтер объектов, позволяющий выполнять
            эффективную сериализацию простых объектов.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Persistence.PersistentState">
            <summary>
            Реализует контейнер значений, предназначенный для хранения сериализованного представления объекта.
            </summary>
        </member>
        <member name="T:Intermech.Navigator.Persistence.StateFormatterException">
            <summary>
            Базовый класс для исключений форматтера объектов.
            </summary>
        </member>
        <member name="T:Intermech.UI.ExceptionHandling.ExceptionVM">
            <summary>
            Модель вида, предназначенная для отображения информации о возникшей исключительной ситуации (Exception)
            </summary>
        </member>
        <member name="M:Intermech.UI.ExceptionHandling.ExceptionVM.#ctor">
            <summary>
            Создает объект
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.FontSize">
            <summary>
            Возвращает и задает базовый размер шрифта для текстовых элементов
            Значение по умолчанию 11 соответствует размеру шрифта по умолчанию 
            (8,25 pt в GDI+)
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.ShowAbortCommand">
            <summary>
            Возвращает или задает признак, что в интерфейсе пользователя должна быть доступной 
            команда экстренного завершения приложения.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.CloseCommandName">
            <summary>
            Возвращает отображаемое имя закрытия окна отображения исключения
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.CloseCommandIsAbort">
            <summary>
            Возвращает режим поведения команды закрытия окна отображения исключения.
            Если значение равно true, то команда закрывает и окно, и приложение.
            Если false - команда закрывает окно, а приложение продолжает работать
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.Exception">
            <summary>
            Возвращает или задает отображаемый объект исключения.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.DateTime">
            <summary>
            Возвращает или задает дату падения исключения.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.Message">
            <summary>
            Возвращает или задает текст исключения.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.TechnicalInfo">
            <summary>
            Возвращает или задает текст с техническими сведениями об исключении (stack trace и др.)
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.HasTechnicalInfo">
            <summary>
            Возвращает признак, что у исключения есть технические сведения для отображения
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.ShowTechnicalInfo">
            <summary>
            Возвращает признак, надо ли раскрывать техническую информацию
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.NeedErrorInfoAutoSave">
            <summary>
            Возвращает признак, надо ли автоматически сохранять на диск данные об ошибке
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.LogPathForErrorAutoSave">
            <summary>
            По какому пути сохранять ошибки автоматически
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.SaveHandler">
            <summary>
            Возвращает или задает обработчик для записи отчета и для отправки отчета по email.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.RecoveryHandler">
            <summary>
            Возвращает или задает обработчик для действий восстановления после исключения.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.IsClosed">
            <summary>
            Возвращает или задает признак, что модель вида закрыта.
            Изменение этого свойства в true приведет к закрытию окна.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.IsAborted">
            <summary>
            Возвращает или задает признак, что была выполнена команда экстренного завершения приложения.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.SaveToFileCommand">
            <summary>
            Возвращает объект команды для записи отчета в файл.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.EmailReportCommand">
            <summary>
            Возвращает объект команды для отправки отчета по email.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.AbortCommand">
            <summary>
            Возвращает объект команды для закрытия окна и приложения.
            </summary>
        </member>
        <member name="P:Intermech.UI.ExceptionHandling.ExceptionVM.CloseCommand">
            <summary>
            Возвращает объект команды для закрытия только окна.
            </summary>
        </member>
        <member name="E:Intermech.UI.ExceptionHandling.ExceptionVM.SaveToFile">
            <summary>
            Возвращает или задает обработчик команды "Записать в файл"
            </summary>
        </member>
        <member name="E:Intermech.UI.ExceptionHandling.ExceptionVM.EmailReport">
            <summary>
            Возвращает или задает обработчик команды "Отправить отчет"
            </summary>
        </member>
        <member name="M:Intermech.UI.ExceptionHandling.ExceptionVM.Abort">
            <summary>
            Закрывает окно и приложение.
            </summary>
        </member>
        <member name="M:Intermech.UI.ExceptionHandling.ExceptionVM.Close">
            <summary>
            Закрывает только окно.
            </summary>
        </member>
        <member name="M:Intermech.UI.ExceptionHandling.ExceptionVM.ConfigureCloseCommandAsIgnoreAction">
            <summary>
            Конфигурирует команду закрытия окна как действие "Пропустить".
            </summary>
        </member>
        <member name="M:Intermech.UI.ExceptionHandling.ExceptionVM.ConfigureCloseCommandAsAbortAction">
            <summary>
            Конфигурирует команду закрытия окна как действие "Прервать".
            </summary>
        </member>
        <member name="M:Intermech.UI.ExceptionHandling.ExceptionVM.UnlockStackTraceExpander">
            <summary>
            Сообщаем, что можно раскрывать доп.информацию, если надо
            </summary>
        </member>
        <member name="M:Intermech.ECO.Client.RevReqHelper.GetRRDictionary(System.Int32)">
            <summary>
            Вернуть словарь "тип объекта - настройка" для данного шага ЖЦ
            </summary>
            <param name="LCId">ИД шага ЖЦ</param>
            <returns>Словарь соответствий "тип объекта - настройка"</returns>
        </member>
        <member name="T:Intermech.ECO.Client.ReqRevision">
            <summary>
            Способ создания версии (и модификации) объекта
            </summary>
        </member>
        <member name="F:Intermech.ECO.Client.ReqRevisionClass.data">
            <summary>
            Способ создания версии объекта - по умолчанию извещение не требуем
            </summary>
        </member>
        <member name="M:Intermech.ECO.Client.ReqRevisionClass.SaveStep(System.Int32)">
            <summary>
            Сохранить изменения в атрибут объекта - контейнера
            </summary>
            <param name="stepID">Шаг жизненного цикла</param>
            <returns>True если все ок</returns>
        </member>
        <member name="M:Intermech.ECO.Client.ReqRevisionClass.ReportReqChange(Intermech.ECO.Client.ReqRevision,Intermech.ECO.Client.ReqRevision)">
            <summary>
            Выдать сообщение в лог об изменении свойства (#1744611)
            </summary>
            <param name="prevReq">Старое значение</param>
            <param name="newReq">Новое значение</param>
        </member>
        <member name="M:Intermech.ECO.Client.ReqRevisionClass.LoadAttrValues(Intermech.Interfaces.IDBAttribute)">
            <summary>
            Загрузить все значения атрибута шага ЖЦ "способ изменения" в словарь
            </summary>
            <param name="idbAT">Обработчик атрибута</param>
            <returns>Словарь ReqRevision'ов для каждого типа объекта</returns>
        </member>
        <member name="M:Intermech.ECO.Client.ReqRevisionClass.LoadStep(System.Int32,System.Boolean)">
            <summary>
            Загрузить данные из контейнера
            </summary>
            <param name="step">Шаг жизненного цикла</param>
            <param name="isReadOnly">Только для чтения</param>
        </member>
        <member name="M:Intermech.ECO.Client.ReqRevisionClass.GetDefaultValue(System.Int32)">
            <summary>
            Получение значение флага по умолчанию для типа объекта
            </summary>
            <param name="objectType">Ид. типа ообъекта</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.ECO.Client.RevType">
            <summary>
            Тип извещения
            </summary>
        </member>
        <member name="T:Intermech.Archives.Common.ICopiesClientService">
            <summary>
            Клиентский сервис для работы с копиями и листами рассылки
            </summary>
        </member>
        <member name="M:Intermech.Archives.Common.ICopiesClientService.CopyDeliveryList(System.Int64,System.Collections.Generic.List{System.Int64})">
            <summary>
            Копировать лист рассылки.
            </summary>
            <param name="copiedDeliveryListID">ИД копируемого листа рассылки</param>
            <param name="docsDeliveryLists">Список листов рассылки, в которые будут скопированы абоненты</param>
        </member>
        <member name="T:Intermech.Redline.IClientRxmlService">
            <summary>
            Интерфейс сервиса для операций, специфических для редактора замечаний "ИНТЕРМЕХ" (rxml).
            </summary>
        </member>
        <member name="M:Intermech.Redline.IClientRxmlService.TryOpenRxmlViewer(System.Int64)">
            <summary>
            Открывает в файл замечаний в редакторе.
            </summary>
            <param name="documentId">Идентификатор версии документа с файлом замечаний</param>
            <returns>Признак успешного/неуспешного выполнения</returns>
        </member>
        <member name="T:Intermech.Redline.IExternalRedliningEditorService">
            <summary>
            Интерфейс сервиса для взаимодействия в внешним редактором замечаний "ИНТЕРМЕХ".
            </summary>
        </member>
        <member name="M:Intermech.Redline.IExternalRedliningEditorService.ReportFileOpenAction(System.Int64,System.Boolean)">
            <summary>
            Сообщает об открытии файла объекта во внешнем приложении. Этот метод предназначен для ведения истории открытия файлов документов,
            которая используется редакторов замечаний "ИНТЕРМЕХ".
            </summary>
            <param name="objectId">Идентификатор версии объекта, чей файл был открыт во внешнем приложении</param>
            <param name="isViewAction">Признак, что файл объекта был открыт командой 'Смотреть' или ее аналогом</param>
        </member>
        <member name="M:Intermech.Redline.IExternalRedliningEditorService.GetFileOpenHistory">
            <summary>
            Возвращает список объектов, для которых был выполнен запуск приложений для редактирования или просмотра в текущем сеансе работы.
            Следует учитывать, что версии объектов из этого списка перед использованием следует проверять на существование, так как они могут 
            уже отсутствовать в базе данных.
            </summary>
            <returns>Список идентификаторов версий объектов</returns>
        </member>
        <member name="M:Intermech.Redline.IExternalRedliningEditorService.ClearFileOpenHistory">
            <summary>
            Очищает список объектов, для которых был выполнен запуск приложений для редактирования или просмотра в текущем сеансе работы.
            </summary>
        </member>
        <member name="M:Intermech.Redline.IExternalRedliningEditorService.LaunchScreenShooter">
            <summary>
            Запускает приложение для снятия скриншотов, если оно установлено.
            </summary>
            <returns>true - приложение было запущено; false - приложение не было запущено, так как оно не установлено</returns>
        </member>
        <member name="T:Intermech.Redline.IRedliningAPI">
            <summary>
            Интерфейс COM-объекта, используемого для интеграции с редактором замечаний ИНТЕРМЕХ.
            </summary>
        </member>
        <member name="P:Intermech.Redline.IRedliningAPI.FileExtension">
            <summary>
            Возвращает или задает расширение для файла замечаний. По умолчанию содержит .rxml.
            </summary>
        </member>
        <member name="P:Intermech.Redline.IRedliningAPI.IsReady">
            <summary>
            Позволяет проверить, завершена ли загрузка приложения.
            </summary>
            <returns>Возвращает true, если пользователь аутентифицировался, и загрузка приложения завершена, иначе - false</returns>
        </member>
        <member name="P:Intermech.Redline.IRedliningAPI.CurrentUserID">
            <summary>
            Возвращает идентификатор пользователя, вошедшего в IPS.
            </summary>
        </member>
        <member name="P:Intermech.Redline.IRedliningAPI.CurrentUserGuid">
            <summary>
            Возвращает глобальный идентификатор пользователя, вошедшего в IPS.
            </summary>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.WaitReady(System.Int32)">
            <summary>
            Позволяет дождаться полной загрузки приложения.
            </summary>
            <param name="timeout">Таймаут ожидания в миллисекундах. Значение меньшее или равное 0 может быть использовано для задания бесконечного таймаута</param>
            <returns>Возвращает true, если пользователь аутентифицировался, и загрузка приложения завершена. Возвращает false, если приложение не завершило загрузку за указанное время.</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.GetCurrentUserRanks">
            <summary>
            Возвращает полный список граф для всех должностей, которыми обладает текущий пользователь.
            Список разделён переводами строк.
            </summary>
            <returns>Список граф для подписи, разделенный переводами строк</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.GetUserIDFromGuid(System.String)">
            <summary>
            Возвращает идентификатор пользователя по его глобальному идентификатору. Если пользователь с указанным глобальным идентификатором не существует в базе IPS,
            то метод вернет Intermech.Consts.UnknownObjectId.
            </summary>
            <param name="userGuid">Глобальный идентификатор пользователя</param>
            <returns>Идентификатор пользователя или Intermech.Consts.UnknownObjectId</returns>
            <exception cref="T:System.ArgumentException">Глобальный идентификатор пользователя не может быть пустым</exception>
            <exception cref="T:System.FormatException">Указанное значение не является глобальным идентификатором</exception>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.GetUserFullName(System.Int64)">
            <summary>
            Возвращает выводимое имя указанного пользователя.
            </summary>
            <param name="userId">Идентификатор пользователя</param>
            <returns>Выводимое имя пользователя</returns>
            <exception cref="T:System.ArgumentException">Идентификатор пользователя не может быть пустым</exception>
            <exception cref="T:System.Exception">Не удалось найти пользователя с указанным идентификатором</exception>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.SelectLastViewedDocument">
            <summary>
            Показывает диалог выбора документа из тех документов, для которых были вызваны команды просмотра, редактирования или печати в этом сеансе работы приложения.
            </summary>
            <returns>Идентификатор выбранного документа, или 0, если пользователь отказался выбирать документ, или -1, если нет доступных для выбора документов</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.SelectDocument">
            <summary>
            Показывает диалог выбора любого документа PDM-системы.
            </summary>
            <returns>Идентификатор выбранного документа или 0, если пользователь отказался выбирать документ</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.FindDocumentByFilePath(System.String)">
            <summary>
            Возвращает идентификатор документа, которому принадлежит указанный файл. Если файл никому не принадлежит, то метод вернет 0.
            </summary>
            <param name="filePath">Путь к файлу</param>
            <returns>Идентификатор документа или 0</returns>
            <exception cref="T:System.ArgumentException">Путь к файлу не задан, либо задан не в абсолютной форме</exception>
            <exception cref="T:System.InvalidOperationException">Указанный файл находится вне рабочей области файлового хранилища пользователя</exception>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.OpenDocument(System.Int64)">
            <summary>
            Делает указанную версию документа текущей. Это значит, что остальные функции данного интерфейса работают с этим текущим документом.
            </summary>
            <param name="documentId">Идентификатор версии документа</param>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.GetDocumentAttribute(System.String)">
            <summary>
            Возвращает значение для указанного атрибута текущего документа.
            </summary>
            <param name="attributeName">Имя атрибута документа</param>
            <returns>Значение атрибута или null, если такого атрибута у документа нет</returns>
            <exception cref="T:System.ArgumentException">Имя атрибута документа не задано</exception>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.GetDocumentFilePath">
            <summary>
            Возвращает абсолютный путь к мастер-файлу текущего документа.
            </summary>
            <returns>Абсолютный путь к мастер-файлу текущего документа</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.GetDocumentRanks">
            <summary>
            Возвращает список граф, в которых текущий пользователь может подписать текущий документ. Список разделён переводами строк.
            </summary>
            <returns>Список граф для подписи, разделенный переводами строк</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.SelectDocumentRank">
            <summary>
            Показывает диалог выбора графы подписи, в которой будет создано замечание.
            </summary>
            <returns>Имя графы или пустая строка, если пользователь отказался от выбора, либо нет доступных для пользователя граф</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.GetDocumentWorkflowInfo(System.String@,System.String@)">
            <summary>
            Возвращает информацию об участии текущего документа в документообороте.
            </summary>
            <param name="processName">Имя процесса документооборота</param>
            <param name="activityName">Имя шага процесса документооборота</param>
            <returns>true, если указанный документ учавствует в данный момент в документообороте</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.ViewDocument(System.Boolean)">
            <summary>
            Вызывает команду просмотра для текущего документа.
            </summary>
            <param name="copyToDiskOnly">Признак, что нужно только извлечь файлы документа на диск, а приложение запускать не требуется</param>
            <returns>Абсолютный путь к мастер-файлу извлеченного текущего документа. Может быть пустым, если команда просмотра не извлекает файлы на диск, а открывает их непосредственно из базы IPS</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.UpdateRedliningFile(System.String)">
            <summary>
            Добавляет или заменяет файл замечаний для текущего документа.
            </summary>
            <param name="redliningFilePath">Абсолютный путь к файлу замечаний</param>
            <exception cref="T:System.ArgumentException">Путь к файлу не задан, либо задан не в абсолютной форме</exception>
            <exception cref="T:System.IO.FileNotFoundException">Указанный файл не найден на диске</exception>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.GetRedliningFile(System.String)">
            <summary>
            Копирует файл замечаний текущего документа в указанную папку.
            </summary>
            <param name="dirPath">Путь к папке, куда следует скопировать файл замечаний</param>
            <returns>Абсолютный путь к извлеченному файлу замечаний или null, если у документа нет файла замечаний</returns>
            <exception cref="T:System.ArgumentException">Путь к папке не задан, либо задан не в абсолютной форме</exception>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.ViewDocumentFile(System.Boolean,System.String)">
            <summary>
            Вызывает команду просмотра для текущего документа.
            </summary>
            <param name="copyToDiskOnly">Признак, что нужно только извлечь файлы документа на диск, а приложение запускать не требуется</param>
            <param name="fileName">Относительное имя файла документа (без пути)</param>
            <returns>Абсолютный путь к файлу извлеченного текущего документа. Может быть пустым, если команда просмотра не извлекает файлы на диск, а открывает их непосредственно из базы IPS</returns>
        </member>
        <member name="M:Intermech.Redline.IRedliningAPI.GetDocumentFileList">
            <summary>
            Получить список файлов документа
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Redline.IClientRedliningService">
            <summary>
            Сервис, позволяющий работать с файлами "Red Line" для объектов IPS
            </summary>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.Sync">
            <summary>
            Выполнить синхронизацию файлов "Red Line" с базой данных IPS
            </summary>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.Sync(System.Collections.Generic.List{System.Tuple{System.Int64,System.String}})">
            <summary>
            Синхронизировать указанных файлов "Red Line" с базой данных IPS
            </summary>
            <param name="items">Список идентификаторов версий объектов и их файлов, 
            для которых требуется выполнить синхронизацию</param>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.Clear">
            <summary>
            Полностью очистить список синхронизации
            </summary>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.AddObject(System.Int64,System.String)">
            <summary>
            Добавить в службу объект, файлы "Red Line" которого требуется синхронизировать с базой IPS
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="path">Папка, в которую выгружены файлы данного объекта</param>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.AddObject(System.Int64,System.Collections.Generic.IList{System.String})">
            <summary>
            Добавить в службу объект, файлы "Red Line" которого требуется синхронизировать с базой IPS
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="paths">Папки, в которые выгружены файлы указанного объекта</param>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.AddObjects(System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.String})">
            <summary>
            Добавить в службу объекты, файлы "Red Line" которых требуется синхронизировать с базой IPS
            </summary>
            <param name="objectIDs">Идентификаторы версий объектов</param>
            <param name="paths">Папки, в которые выгружены файлы данных объектов</param>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.Remove(System.Int64,System.String)">
            <summary>
            Удалить указанную версию объекта из списка синхронизации
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="path">Папка, в которую выгружен указанный объект</param>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.Remove(System.Collections.Generic.IList{System.Int64},System.Collections.Generic.IList{System.String})">
            <summary>
            Удалить указанные версии объектов из списка синхронизации
            </summary>
            <param name="objectIDs">Идентификаторы версий объектов</param>
            <param name="paths">Папки, в которые выгружены указанные объекты</param>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.Remove(System.Int64)">
            <summary>
            Удалить указанную версию объекта из списка синхронизации (из всех найденных папок)
            </summary>
            <param name="objectID">Идентификатор версии объекта</param>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.Remove(System.Collections.Generic.IList{System.Int64})">
            <summary>
            Удалить указанные версии объектов из списка синхронизации (из всех найденных папок)
            </summary>
            <param name="objectIDs">Идентификаторы версий объектов</param>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.Remove(System.String)">
            <summary>
            Удалить из списка синхронизации все версии объектов, выгруженные в указанную папку
            </summary>
            <param name="path">Папка, в которую выгружена одна или несколько версий объектов</param>
        </member>
        <member name="M:Intermech.Redline.IClientRedliningService.Remove(System.Collections.Generic.IList{System.String})">
            <summary>
            Удалить из списка синхронизации все версии объектов, выгруженные в указанные папки
            </summary>
            <param name="paths">Папки, в которые выгружена одна или несколько версий объектов</param>
        </member>
        <member name="T:Intermech.Search.IMainMenuService">
            <summary>
            Сервис для работы с главным меню IPS, регистрирует и автоматически размещает пункты меню в указанные позиции
            </summary>
        </member>
        <member name="M:Intermech.Search.IMainMenuService.RegisterMenuItems(Intermech.Search.MainMenuItemSite,Intermech.Search.MainMenuItemPosition,Intermech.Bars.MenuButtonItem[])">
            <summary>
            Зарегистрирвовать пункты меню
            </summary>
            <param name="mainMenuItemSite">Место</param>
            <param name="mainMenuItemPosition">Позиция</param>
            <param name="menuItems">Пункты меню</param>
        </member>
        <member name="M:Intermech.Search.IMainMenuService.RegisterMenuItemsGroup(Intermech.Search.MainMenuItemSite,Intermech.Search.MainMenuItemPosition,System.Boolean,Intermech.Bars.MenuButtonItem[])">
            <summary>
            Зарегистрировать группу пунктов меню (порядок пунктов в группе не меняется при обновлении меню)
            </summary>
            <param name="mainMenuItemSite">Место</param>
            <param name="mainMenuItemPosition">Позиция</param>
            <param name="disableAutoBeginGroup">Запретить автоматическую установку свойства BeginGroup для первого элемента в группе</param>
            <param name="menuItems">Пункты меню</param>
        </member>
        <member name="M:Intermech.Search.IMainMenuService.UnregiterMenuItems(Intermech.Bars.MenuButtonItem[])">
            <summary>
            Снять пункты меню с регистрации
            </summary>
            <param name="menuItems">Пункты меню</param>
        </member>
        <member name="T:Intermech.Search.MainMenuItemSite">
            <summary>
            Разрешенные для вставки места в главном меню IPS
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.Applications">
            <summary>
            Меню "Приложения"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.Composition">
            <summary>
            Меню "Состав"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.TuningTop">
            <summary>
            Верхняя группа элементов меню "Настройка"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.TuningMiddle">
            <summary>
            Средняя группа элементов меню "Настройка"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.TuningBottom">
            <summary>
            Нижняя группа элементов меню "Настройка"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.AdministratorUtilities">
            <summary>
            Меню "Утилиты администратора"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.ExportImport">
            <summary>
            Меню "Экспорт/Импорт"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.ViewTop">
            <summary>
            Верняя группа элементов меню "Вид"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.ViewMiddle">
            <summary>
            Средняя группа элементов меню "Вид"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.ViewBottom">
            <summary>
            Нижняя группа элементов меню "Вид"
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemSite.Edit">
            <summary>
            Меню "Редактирование"
            </summary>
        </member>
        <member name="T:Intermech.Search.MainMenuItemPosition">
            <summary>
            Возможные позиции пунктов главного меню
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemPosition.Default">
            <summary>
            По умолчанию - между третими и предпоследними
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemPosition.First">
            <summary>
            Первые
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemPosition.Second">
            <summary>
            Вторые
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemPosition.Third">
            <summary>
            Третьи
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemPosition.Penultimate">
            <summary>
            Предпоследние
            </summary>
        </member>
        <member name="F:Intermech.Search.MainMenuItemPosition.Last">
            <summary>
            Последние
            </summary>
        </member>
        <member name="T:Intermech.Search.Navigator.ColumnPack">
            <summary>
            Пакет колонок
            </summary>
        </member>
        <member name="P:Intermech.Search.Navigator.ColumnPack.Item(Intermech.Navigator.Interfaces.NavigatorColumnsKey)">
            <summary>
            Индексатор
            </summary>
            <param name="key">Ключ коллекции колонок</param>
            <returns>Коллекция колонок</returns>
        </member>
        <member name="M:Intermech.Search.Navigator.ColumnPack.Remove(Intermech.Navigator.Interfaces.NavigatorColumnsKey)">
            <summary>
            Удалить коллекцию колонок из пакета
            </summary>
            <param name="key">Ключ коллекции колонок</param>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.IWindowSettingsManager">
            <summary>
            Интерфейс менеджера настроек окон навигатора
            </summary>
        </member>
        <member name="M:Intermech.Search.Navigator.Windows.IWindowSettingsManager.Get(System.Int32,System.Int32)">
            <summary>
            Взять
            </summary>
            <param name="categoryID">Категория узла навигатора</param>
            <param name="typeID">Тип узла навигатора</param>
            <returns>Настройки окон навигатора</returns>
        </member>
        <member name="M:Intermech.Search.Navigator.Windows.IWindowSettingsManager.Set(System.Int32,System.Int32,Intermech.Search.Navigator.Windows.WindowSettingsBase)">
            <summary>
            Пакласть
            </summary>
            <param name="categoryID">Категория узла навигатора</param>
            <param name="typeID">Тип узла навигатора</param>
            <param name="settings">Настройки окон навигатора</param>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.IWindowSettingsProvider">
            <summary>
            <para>Интерфейс провайдера настроек окон навигатора</para>
            <para>Используется для переопределения алгоритма извлечения/палажения настроек из/в коллекции/ю для категории узлов</para>
            </summary>
        </member>
        <member name="M:Intermech.Search.Navigator.Windows.IWindowSettingsProvider.Get(System.Int32,Intermech.Search.Navigator.Windows.WindowSettingsCollection)">
            <summary>
            Взять
            </summary>
            <param name="typeID">Тип узла навигатора</param>
            <param name="collection">Коллекция всех настроек окон навигатора</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Search.Navigator.Windows.IWindowSettingsProvider.Set(System.Int32,Intermech.Search.Navigator.Windows.WindowSettingsBase,Intermech.Search.Navigator.Windows.WindowSettingsCollection)">
            <summary>
            Положить
            </summary>
            <param name="typeID">Тип узла навигатора</param>
            <param name="settings">Настройки окон навигатора</param>
            <param name="collection">Коллекция всех настроек окон навигатора</param>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.IWindowSettingsProviderFactory">
            <summary>
            Интерфейс фабрики провайдеров настроек окон навигатора
            </summary>
        </member>
        <member name="M:Intermech.Search.Navigator.Windows.IWindowSettingsProviderFactory.Get(System.Int32)">
            <summary>
            Взять
            </summary>
            <param name="categoryID">Категория узла навигатора</param>
            <returns>Провайдер настроек окон навигатора</returns>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.IWindowSettingsProviderManager">
            <summary>
            Интерфейс менеджера провайдеров настроек окон навигатора
            </summary>
        </member>
        <member name="M:Intermech.Search.Navigator.Windows.IWindowSettingsProviderManager.Get(System.Int32)">
            <summary>
            Взять провайдер настроек окон навигатора
            </summary>
            <param name="categoryID">Категория узла навигатора</param>
            <returns>Провайдер настроек окон навигатора</returns>
        </member>
        <member name="M:Intermech.Search.Navigator.Windows.IWindowSettingsProviderManager.Register(System.Int32,Intermech.Search.Navigator.Windows.IWindowSettingsProvider)">
            <summary>
            Зарегистрировать провайдер настроек окон навигатора
            </summary>
            <param name="categoryID">Категория узла навигатора</param>
            <param name="provider">Провайдер настроек окон навигатора</param>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.ObjectVersionCategoryWindowSettingsProvider">
            <summary>
            <para>Провайдер настроек окон навигатора для категории узлов "Типы объектов"</para>
            <para>Алгоритм работы предусматривает прохождение по всей цепочке наследования до нахождения нужных настроек</para>
            </summary>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.WindowSettingsBase">
            <summary>
            Базовый класс для настроек окон навигатора
            </summary>
        </member>
        <member name="P:Intermech.Search.Navigator.Windows.WindowSettingsBase.TreeWidth">
            <summary>
            Ширина дерева 
            </summary>
        </member>
        <member name="P:Intermech.Search.Navigator.Windows.WindowSettingsBase.TreeColumns">
            <summary>
            Колонки дерева
            </summary>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.WindowSettingsCollection">
            <summary>
            Коллекция настроек окон навигатора
            </summary>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.WindowSettings">
            <summary>
            Настройки окна навигатора
            </summary>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.WindowSettingsProviderFactory">
            <summary>
            Фабрика провайдеров настроек окон навигатора
            </summary>
        </member>
        <member name="T:Intermech.Search.Navigator.Windows.WindowSettingsProviderManager">
            <summary>
            Менеджер провайдеров настроек окон навигатора
            </summary>
        </member>
        <member name="T:Intermech.Search.IRoleConfigurationManager">
            <summary>
            Менеджер конфигурации роли
            </summary>
        </member>
        <member name="M:Intermech.Search.IRoleConfigurationManager.LoadNavigatorDefaultColumnPack(System.Int64)">
            <summary>
            Загрузить пакет колонок по-умолчанию навигатора
            </summary>
            <param name="roleConfigurationVersionID">Идентификатор версии конфигурации роли</param>
            <returns>Пакет колонок</returns>
        </member>
        <member name="M:Intermech.Search.IRoleConfigurationManager.SaveNavigatorDefaultColumnPack(System.Int64,Intermech.Search.Navigator.ColumnPack)">
            <summary>
            Сохранить пакет колонок по-умолчанию навигатора
            </summary>
            <param name="roleConfigurationVersionID">Идентификатор версии конфигурации роли</param>
            <param name="columnPack">Пакет колонок</param>
        </member>
        <member name="P:Intermech.PropertyEditors.IElementInfoEx.ElementType">
            <summary>
            тип (объекта/связи)
            </summary>
        </member>
        <member name="M:Intermech.PropertyEditors.IElementInfoEx.CheckAttributeLock(System.Int32)">
            <summary>
            проверка на блокировку атрибута у сервиса проверки блокировки атрибутов объектов/связей IAttributesLockService
            </summary>
            <param name="attrId"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.PropertyEditors.IBaseTabPage">
            <summary>
            Интерфейс TabPage для страниц DatabaseConfigurator
            </summary>
        </member>
        <member name="M:Intermech.PropertyEditors.IBaseTabPage.DockToPanel(System.Windows.Forms.Panel)">
            <summary>
            Выполнить док в панель
            </summary>
            <param name="panel"></param>
        </member>
        <member name="P:Intermech.PropertyEditors.IBaseTabPage.TabPageProcessingForm">
            <summary>
            Вернуть интерфейс формы в TabPage
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.IEventsDispatcher">
            <summary>
            Интерфейс регистрации событий на команды меню DatabaseConfigurator.
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.ActionResult">
            <summary>
            результат выполнения операции
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.IFolder">
            <summary>
            Интерфейс папок в DatabaseConfigurator
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.ILCSchema4ObjTypeFormProvider">
            <summary>
            Интерфейс, возвращающий форму редактирования схемы ЖЦ 
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.ILCStep">
            <summary>
            Интерфейс получения информации о шаге ЖЦ
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.IPositionAssigner">
            <summary>
            Интерфейс позиционирования в форме
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.ITabPageForm">
            <summary>
            Интерфейс работы с формой входящей в TabPage
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.AttrProcessor.AfterSaveEventHandler">
            <summary>
            Делегат индикации сохранения атрибутов в AttributeProcessor
            </summary>
            <param name="sender"></param>
            <param name="args">список значений, измененный сервером после сохранения</param>
        </member>
        <member name="T:Intermech.PropertyEditors.AttrProcessor.AttributeValuesList">
            <summary>
            список AttributeValues 
            </summary>
        </member>
        <member name="M:Intermech.PropertyEditors.AttrProcessor.AttributeValuesList.SyncronizeWith(Intermech.PropertyEditors.AttrProcessor.AttributeValuesList)">
            <summary>
            синхронизировать данный список с list: 
            		то чего не было, добавить; то, что было - заменить.
            значения из list не клонируются, а берутся ссылки
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:Intermech.PropertyEditors.AttrProcessor.AttributeValuesList.ReturnDelta(Intermech.PropertyEditors.AttrProcessor.AttributeValuesList)">
            <summary>
            вернуть разницу списков.
            если атрибут изменен, то выводятся все значения атрибута (для многозначных).
            для удаленных в Values пишется: new object[] { DeleteModesEnum.None }.
            </summary>
            <param name="previousList"></param>
            <returns>null - изменения отсутствуют</returns>
        </member>
        <member name="T:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl">
            <summary>
             Интерфейс общения с контролами редактирования атрибутов
            </summary>
        </member>
        <member name="P:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.AttributeId">
            <summary>
            Идентификатор атрибута
            </summary>
        </member>
        <member name="P:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.AttributeProcessor">
            <summary>
            Intermech.PropertyEditors.AttrProcessor.AttributeProcessor
            </summary>
        </member>
        <member name="P:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.Index">
            <summary>
            Индекс значения. 
            null для многозначных.
            </summary>
        </member>
        <member name="M:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.InitControl(System.Int32,System.Object,System.Nullable{System.Int32})">
            <summary>
            Инициализация контрола, для инициализации значения требуется вызов Refresh()
            </summary>
            <param name="attributeId"></param>
            <param name="attributeProcessor"></param>
            <param name="index">может быть null если неизвестно чем инициализировать</param>
        </member>
        <member name="P:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.InContainer">
            <summary>
            указывает, что контрол находится в контейнере (форме-панели) и что самостоятельные действия по назначению данных не требуются.
            по умолчанию должен быть false.
            инициализируется до редактирования.
            </summary>
        </member>
        <member name="M:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.RefreshControl">
            <summary>
            Загрузить значение атрибута по инициализированным данным (через InitControl) и принять меры к отражению значения в контроле
            </summary>
        </member>
        <member name="M:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.Apply">
            <summary>
            применить извне или изнутри, производя сохранение в AttributeProcessor.
            вызвать AttributeValueChanged.
            null -> apply не произошел
            </summary>
            <returns></returns>
        </member>
        <member name="E:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.OnAttributeValueChanged">
            <summary>
            срабатывает на изменении значений атрибута, редактируемого в контроле, значение еще не попадает в списки AttributeProcessor'а.
            (при Apply происходит вызов AttributeValuesChanged от AttributeProcessor 
            из-за назначения значений атрибутов через соответствующих функции AttributeProcessor )
            </summary>
        </member>
        <member name="E:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.OnCloseDemand">
            <summary>
            срабатывает, когда контролу требуется закрытие. 
            имеет смысл для DropDown контролов, чтобы для контрола была вызвана команда CloseDropdown
            </summary>
        </member>
        <member name="P:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.WasChanged">
            <summary>
            есть ли непримененные изменения в контроле (форма дергает за это контрол при закрытии и вызывает Apply у контрола)
            </summary>
        </member>
        <member name="M:Intermech.PropertyEditors.AttrProcessor.IAttributeEditorControl.Cancel">
            <summary>
            отменить изменения
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.AttrProcessor.AttributeValuesAction">
            <summary>
            действие по изменению
            </summary>
        </member>
        <member name="F:Intermech.PropertyEditors.AttrProcessor.AttributeValuesAction.Remove">
            <summary>
            AttributeValues удален // info = AttributeValues
            </summary>
        </member>
        <member name="F:Intermech.PropertyEditors.AttrProcessor.AttributeValuesAction.ModifyValue">
            <summary>
            добавлено значение в простом/многозначном AttributeValues, вызывается также при добавлении AttributeValues
            info = new object[] { index, value } || info = new object[] { -1, value[] }
            </summary>
        </member>
        <member name="F:Intermech.PropertyEditors.AttrProcessor.AttributeValuesAction.InsertValue">
            <summary>
            добавлено значение в многозначном AttributeValues ; info = new object[] { index, value }
            </summary>		
        </member>
        <member name="F:Intermech.PropertyEditors.AttrProcessor.AttributeValuesAction.RemoveValue">
            <summary>
            удалено значение в многозначном AttributeValues	; info = new object[] { index, value }
            </summary>		
        </member>
        <member name="M:Intermech.PropertyEditors.AttrProcessor.AttributeValuesChangedEventArgs.#ctor(System.Int32,Intermech.PropertyEditors.AttrProcessor.AttributeValuesAction,System.Object)">
            <summary>
            
            </summary>
            <param name="attributeId"></param>
            <param name="action"></param>
            <param name="info">дополнительная информация:
            
            1.для AttributeValuesAction.Remove info = удаляемый AttributeValues
            
            2.для всех остальных AttributeValuesAction info=object[]{ index, value },
            
            при этом для AttributeValuesAction.ModifyValue и AttributeValuesAction.RemoveValue 
            при множественном изменении значений index=-1, value=object[]{}; 
            при одиночном index=индекс, value=object
            
            для AttributeValuesAction.InsertValue info=object[]{ index, value }
            при вставке index=индекс вставки, при добавлении index=-1, 
            value=object в любом случае. </param>
        </member>
        <member name="P:Intermech.PropertyEditors.AttrProcessor.CloseControlEventArgs.DialogResult">
            <summary>
            результат закрытия формы
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.AttrProcessor.AttributeValuesValidationHandler">
            <summary>
            Делегат валидации значений атрибутов.
            Информация по несвалидированным атрибутам AttributeValuesValidationEventArgs.AttributeValues добавляется в список AttributeValuesValidationEventArgs.ValidationResult
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Intermech.PropertyEditors.AttrProcessor.AttributeValuesValidationEventArgs.#ctor(Intermech.PropertyEditors.AttrProcessor.AttributeValuesList,System.Collections.Generic.List{Intermech.PropertyEditors.AttrProcessor.ValidationResult})">
            <summary>
            
            </summary>
            <param name="attributeValues">Валидируемые значения атрибутов</param>
            <param name="validationResult">Предварительные результаты валидации, дополняются в случае необходимости</param>
        </member>
        <member name="T:Intermech.PropertyEditors.IAttributePropertyDescriber">
            <summary>
            Интерфейс для обработки атрибутов, цепляемых к ObjectPropertyGrid
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.IAttributePropertyDescriberService">
            <summary>
            Служба регистрации обработчиков атрибутов для ObjectPropertyGrid
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.IElementInfo">
            <summary>
            для поддержки идентификации о объекте/связи и их идентификаторе
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.ISelectorFilter">
            <summary>
            Для передачи в SelectorForm для фильтрации в дереве выбора 
            </summary>
        </member>
        <member name="M:Intermech.PropertyEditors.ISelectorFilter.IsInFilter(System.Int32,System.Object)">
            <summary>
            проверка на попадание в фильтр
            </summary>
            <param name="category">категория</param>
            <param name="id">идентификатор</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.PropertyEditors.INodeSelectorFilter">
            <summary>
            Фильтр используется для проверки, можно ли выбирать указанный узел в окне
            </summary>
        </member>
        <member name="M:Intermech.PropertyEditors.INodeSelectorFilter.CanSelectNode(System.Int32,System.Object,System.String@)">
            <summary>
            Можно ли выбирать указанный узел
            </summary>
            <param name="category">Категория</param>
            <param name="id">Идентификатор</param>
            <param name="errorMessage">Если значение не равно String.Empty, то оно будет отображено в статусной строке окна</param>
            <returns>true, если выбор узла разрешён</returns>
        </member>
        <member name="T:Intermech.PropertyEditors.PropDescriptor">
            <summary>
            Дескриптор поля, назначаемого в PropertyDescriptorCollection PropDescriptorHolder'a для назначения в PropertyGrid
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.PropDescriptorHolder">
            <summary>
            Базовый тип для Holder'ов, назначаемых в PropertyGrid
            </summary>
        </member>
        <member name="T:Intermech.PropertyEditors.AreaPropID">
            <summary>
            Список enum для идентификации внутренних PropDescriptor'ов в DatabaseConfigurator
            </summary>
        </member>
        <member name="T:Intermech.Signs.Interfaces.RankGraphsInfo">
            <summary>
            Класс для хранения результатов выбора пользователем должности и граф для подписей в данной должности
            </summary>
        </member>
        <member name="M:Intermech.Signs.Interfaces.RankGraphsInfo.#ctor(System.Int64,System.String,System.Tuple{System.String,System.String}[])">
            <summary>
            Конструктор
            </summary>
            <param name="rankID">ObjectID должности</param>
            <param name="rankCaption">Заголовок должности</param>
            <param name="graphs">Список граф для подписи</param>
        </member>
        <member name="P:Intermech.Signs.Interfaces.RankGraphsInfo.RankID">
            <summary>
            ObjectID должности
            </summary>
        </member>
        <member name="P:Intermech.Signs.Interfaces.RankGraphsInfo.RankCaption">
            <summary>
            Заголовок должности
            </summary>
        </member>
        <member name="P:Intermech.Signs.Interfaces.RankGraphsInfo.Graphs">
            <summary>
            Массив граф для подписи в данной должности (строковый ид. графы, строковая расшифровка графы)
            </summary>
        </member>
        <member name="T:Intermech.Signs.Interfaces.ISignsClientService">
            <summary>
            Интерфейс для доступа к клиентской службе подписей
            </summary>
        </member>
        <member name="M:Intermech.Signs.Interfaces.ISignsClientService.GetUserGraphs(System.Int64)">
            <summary>
            Возвращает массив граф, в которых текущий пользователь может подписать объект objectID. Если objectID == 0, то возвращает весь список граф для данного юзера от всех его должностей.
            </summary>
            <param name="objectID">Ид. версии объекта.</param>
            <returns>Массив граф в виде строкового идентификатора графы и его расшифровки.</returns>
        </member>
        <member name="M:Intermech.Signs.Interfaces.ISignsClientService.ShowUserGraphsDialog(System.Int64)">
            <summary>
            Предлагает юзеру выбрать в каких графах и должностях нужно подписывать или создавать замечания для объекта objectID.
            </summary>
            <param name="objectID">Идентификатор версии объекта.</param>
            <returns>Массив с информацией о выбранных должностях и графах. Массив пустой, если юзер ничего не выбрал или отменил выбор.</returns>
        </member>
        <member name="T:Intermech.Tools.Integrators.ExtendedSaveResult">
            <summary>
            Содержит данные о результате выполнения расширенного сохранения документа.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.ExtendedSaveResult.#ctor(System.Boolean,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.ExtendedSaveResult.#ctor(System.Boolean,System.Collections.Generic.List{System.Int64},System.Collections.Generic.List{System.String})">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveResult.IsSuccessful">
            <summary>
            Признак успеха выполнения сохранения изменений.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveResult.OpenObjects">
             <summary>
            Нужно ли открывать объекты в IPS.
             </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveResult.AffectedObjectIds">
            <summary>
            Список идентификаторов объектов.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveResult.Errors">
            <summary>
            Список ошибок.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.CaptureChangesOptions">
            <summary>
            Опции для операции захвата изменений в объекте.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.CaptureChangesOptions.#ctor(Intermech.Interfaces.Client.SaveChangesMode)">
            <summary>
            Создает объект.
            </summary>
            <param name="context">Режим выполнения сохранения изменений</param>
        </member>
        <member name="P:Intermech.Tools.Integrators.CaptureChangesOptions.Mode">
            <summary>
            Возвращает режим выполнения сохранения изменений.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.CaptureChangesOptions.ProgressSink">
            <summary>
            Возвращает или задает индикатор хода выполнения операции.
            Значение свойства может быть не задано.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.EmbedAttributesActionOptions">
            <summary>
            Опции операции по записи в файловую копию объекта значений атрибутов объекта.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.EmbedAttributesActionOptions.ProgressSink">
            <summary>
            Возвращает или задает индикатор хода выполнения операции.
            Значение свойства может быть не задано.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.IApplicationLauncherService">
            <summary>
            Позволяет реализовать сервис интегратора, позволяющий настроить приложение для работы в паре c IPS.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IApplicationLauncherService.GetCommands">
            <summary>
            Возвращает список команд для запуска приложения и настройки его для работы в паре с IPS.
            Как правило, список содержит только одну команду, чье название совпадает с названием приложения.
            </summary>
            <returns>Список команд запуска приложения</returns>
        </member>
        <member name="T:Intermech.Tools.Integrators.IEmbedAttributesService">
            <summary>
            Необязательный сервис интегратора, отвечающий за передачу изменений из карточки объекта в его файлы.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IEmbedAttributesService.EmbedAttributeValues(System.Int64,System.Collections.Generic.IList{Intermech.Interfaces.AttributeValues})">
            <summary>
            Записывает в файловую копию объекта указанные значения атрибутов объекта.
            Как правило, этот метод вызывается из карточки документа для сохранения изменных атрибутов в файле документа.
            </summary>
            <param name="objectId">Идентификатор версии объекта</param>
            <param name="attributeValues">Коллекция значений атрибутов</param>
            <exception cref="T:System.ArgumentException">Параметр <paramref name="objectId"/> не задан</exception>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="attributeValues"/> не должен быть равен null</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.IEmbedAttributesService.EmbedAttributeValues(System.Int64,System.Collections.Generic.IList{Intermech.Interfaces.AttributeValues},Intermech.Tools.Integrators.EmbedAttributesActionOptions)">
            <summary>
            Записывает в файловую копию объекта указанные значения атрибутов объекта.
            Как правило, этот метод вызывается из карточки документа для сохранения изменных атрибутов в файле документа.
            </summary>
            <param name="objectId">Идентификатор версии объекта</param>
            <param name="attributeValues">Коллекция значений атрибутов</param>
            <param name="options">Опции выполнения операции</param>
            <exception cref="T:System.ArgumentException">Параметр <paramref name="objectId"/> не задан</exception>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="attributeValues"/> не должен быть равен null. Параметр <paramref name="options"/> не должен быть равен null.</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.IExternalApiService">
            <summary>
            Позволяет реализовать сервис интегратора, предоставляющий доступ к API интегрируемого приложения.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IExternalApiService.OpenApiSession">
            <summary>
            Открывает сессию доступа к API интегрируемого приложения и конфигурирует приложение для работы в паре с IPS,.
            Доступ к API будет предоставлен только для того потока, который вызвал этот метод. 
            Допускается использование вложенных сессий из одного и того же потока.
            </summary>
            <exception cref="T:Intermech.Tools.Integrators.IntegratorNotInstalledException">Интеграция с приложением не настроена</exception>
            <exception cref="T:Intermech.Tools.Integrators.BadIntegratorSettingsException">Настройки интегратора содержат ошибки, препятствующие его использованию</exception>
            <exception cref="T:Intermech.Tools.Integrators.AppNotInstalledException">Не удалось найти приложение на компьютере</exception>
            <exception cref="T:Intermech.Tools.Integrators.BadAppSettingsException">Не удалось настроить приложение на работу в паре с IPS</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.IExternalApiService.CloseApiSession">
            <summary>
            Закрывает сессию доступа к API интегрируемого приложения. Если сессия не была открыта, то метод не имеет эффекта, но и не сбрасывает ошибок.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.IExternalApiService.IsApiSessionOpen">
            <summary>
            Возвращает true, если для текущего потока была открыта сессия доступа к API интегрируемого приложения.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IExternalApiService.CheckApiSessionOpen">
            <summary>
            Проверяет, есть ли для текущего потока открытая сессия доступа к API интегрируемого приложения. Если это не так, то метод сбрасывает исключение.
            </summary>
            <exception cref="T:System.InvalidOperationException">Требуется предварительное открытие сессии к API интегрируемого приложения</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.IDocumentAttributesSettingsService">
            <summary>
            Сервис интегратора для получения проекции настроек интегратора, которая содержит параметры синхронизации атрибутов документов.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.IDocumentAttributesSettingsService.SynchronizedDocumentAttributes">
            <summary>
            Возвращает объект, позволяющий получить коллекцию синхронизируемых атрибутов документов.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.IPrepareNewObjectsService">
            <summary>
            Необязательный сервис интегратора, предназначенный для подготовки к использованию новых объектов, создаваемых внутри IPS.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IPrepareNewObjectsService.PrepareNewObject(System.Int64)">
            <summary>
            Позволяет обработать и настроить новый объект (а также его файловую копию, если это документ) сразу после создания.
            Данный метод вызывается для всех объектов, обрабатываемых интегратором.
            </summary>
            <param name="objectId">Идентификатор версии объекта</param>
        </member>
        <member name="M:Intermech.Tools.Integrators.IPrepareNewObjectsService.PreparePrototypedObjectFiles(Intermech.Interfaces.Client.FilesRenamedEventArgs)">
            <summary>
            Позволяет обработать и настроить файлы объекта при создании по прототипу. Метод вызывается сразу после создания заготовки нового объекта.
            Как правило, обработка заключается в удалении из нового объекта идентифицирующих сведений, относящихся к объекту-прототипу.
            К таким сведениям относятся значения атрибутов "Обозначение", "Код ОКП", "Наименование" и др.
            </summary>
            <param name="objectId">Идентификатор версии объекта</param>
            <param name="prototypeId">Идентификатор прототипа объекта</param>
        </member>
        <member name="T:Intermech.Tools.Integrators.ISynchronizedObjectAttributes">
            <summary>
            Интерфейс проекции настроек интегратора, которая содержит список синхронизируемых документов чего-либо - документа, изделия и др.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.ApplicationNotInstalledException">
            <summary>
            Это исключение сбрасывается в том случае, если приложение, с которым осуществляется интеграция, не
            установлено (отсутствует, другая версия этого приложения, приложение поломано и не работает).
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.ApplicationNotInstalledException.#ctor(System.String,System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="integratorName">Название интегратора</param>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="T:Intermech.Tools.Integrators.BadApplicationSettingsException">
            <summary>
            Это исключение сбрасывается в том случае, если при настройке приложения на работу в паре с IPS
            произошла ошибка.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.BadApplicationSettingsException.#ctor(System.String,System.String,System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="integratorName">Название интегратора с приложением</param>
            <param name="applicationName">Название приложения, с которым осуществляется интеграция</param>
            <param name="message">Подробное описание проблемы</param>
        </member>
        <member name="T:Intermech.Tools.Integrators.BadIntegratorSettingsException">
            <summary>
            Это исключение сбрасывается в том случае, если настройки интегратора в базе отсутствуют, либо содержат
            ошибку. Администратор должен переконфигурировать объект интегратора.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.BadIntegratorSettingsException.#ctor(System.String,System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="integratorName">Название интегратора</param>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="T:Intermech.Tools.Integrators.ExtendedSaveOnCheckinSettings">
            <summary>
            Реализует контейнер для режимов работы расширенного сохранения при выполнении команды "Завершить редактирование".
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveOnCheckinSettings.Instance">
            <summary>
            Возвращает глобальный объект с настройками. Свойства этого объекта автоматически загружаются и сохраняются в базе IPS.
            Инициализация выполняется при первом обращении к этому свойству.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.ExtendedSaveOptions">
            <summary>
            Содержит опции выполнения расширенного сохранения документа.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.ExtendedSaveOptions.#ctor(Intermech.Interfaces.Client.SaveChangesMode)">
            <summary>
            Создает объект.
            </summary>
            <param name="context">Режим выполнения сохранения изменений</param>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveOptions.Mode">
            <summary>
            Возвращает режим выполнения сохранения изменений.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveOptions.CreateNewArticlesOnly">
            <summary>
            Включает и выключает режим, при котором создание изделий выполняется только в том случае, если у документа вообще нет изделий в базе IPS.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveOptions.UpdateExistingArticlesOnly">
            <summary>
            Включает и выключает режим, при котором обновление изделий выполняется только в том случае, если у документа они уже есть в базе IPS.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveOptions.RecalculateMass">
            <summary>
            Включает и выключает режим пересчета массы изделий на основе физических свойств документа.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveOptions.WorkAreaPolicy">
            <summary>
            Возвращает или задает политику замены файлов в рабочей области пользователя. 
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.ExtendedSaveOptions.ProgressSink">
            <summary>
            Возвращает или задает индикатор хода выполнения операции.
            Значение свойства может быть не задано.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.IApplicationApiService">
            <summary>
            Позволяет реализовать сервис интегратора, предоставляющий доступ к состоянию и API-объекту интегрируемого приложения.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.IApplicationApiService.ApplicationName">
            <summary>
            Возвращает название приложения, с которым осуществляется интеграция.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.IApplicationApiService.IsApplicationInstalled">
            <summary>
            Возвращает true, если версия приложения, указанная в настройках интегратора, установлена на компьютере.
            Если интеграция не настроена, либо настройки интегратора содержат ошибки, то метод возвращает false.
            Ошибки, связанные с определением наличия приложения на компьютере, подавляются и отображаются на закладке
            "Вывод".
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.IApplicationApiService.IsApplicationRunning">
            <summary>
            Возвращает true, если версия приложения, указанная в настройках интегратора, выполняется в данный момент.
            Если интеграция не настроена, либо настройки интегратора содержат ошибки, то метод возвращает false.
            Ошибки, связанные с определением наличия/работоспособности приложения, подавляются и отображаются на закладке
            "Вывод".
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IApplicationApiService.GetApplicationObject">
            <summary>
            Возвращает API-объект приложения. Этот метод требует предварительного открытия сессии доступа к API интегрируемого приложения.
            </summary>
            <returns>API-объект приложения</returns>
            <exception cref="T:System.InvalidOperationException">Требуется предварительное открытие сессии доступа к API интегрируемого приложению</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.IApplicationApiService.ReleaseApplicationObject">
            <summary>
            Закрывает подключение к приложению и освобождает API-объект приложения. Этот метод можно использовать только тогда, когда нет открытых сессий доступа к API интегрируемого приложения.
            </summary>
            <exception cref="T:System.InvalidOperationException">Невозможно освободить API-объект приложения, пока он используется</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.IApplicationFileTypes">
            <summary>
            Сервис интегратора, позволяющий определять файлы, созданные в приложении, с который осуществляется интеграция.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IApplicationFileTypes.IsApplicationFile(System.String)">
            <summary>
            Позволяет определить по имени файла, является ли он документом приложения.
            </summary>
            <remarks>
            Как правило, другие сервисы интегратора вызывают этот метод перед открытием документа из базы IPS в приложении, чтобы проверить,
            является ли мастер-файл документом приложения. Такая проверка нужна из-за того, что пользователь вручную может изменить список
            файлов любого документа в базе IPS.
            </remarks>
            <param name="fileName">Имя и путь к файлу, путь может быть относительным или отсутствовать</param>
            <returns>true, если это файл приложения, с которым осуществляется интеграция</returns>
        </member>
        <member name="M:Intermech.Tools.Integrators.IApplicationFileTypes.IsApplicationFile(System.IO.FileInfo,System.IO.Stream)">
            <summary>
            Позволяет определить по имени и содержимому файла, является ли он документом приложения. Сначала выполняется проверка по имени, и, если она
            успешно пройдена, то выполняется проверка содержимого файла.
            </summary>
            <remarks>
            Как правило, этот метод используется тогда, когда нужно найти интегратор, ответственный за обработку еще не зарегистрированного в IPS файла.
            Использовать расширение файла нельзя, так как файлы разных приложений могут использовать одинаковые расширения.
            </remarks>
            <param name="fileInfo">Сведения о файле</param>
            <param name="fileContent">Поток с содержимым файла, указатель положения установлен в начало потока</param>
            <returns>true, если это файл приложения, с которым осуществляется интеграция</returns>
            <exception cref="T:System.ArgumentNullException">Ссылка на аргумент метода не может быть null</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.ICaptureChangesService">
            <summary>
            Сервис интегратора, отвечающий за передачу изменений из файловой копии объекта в базу IPS.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.ICaptureChangesService.CaptureChanges(System.Int64)">
            <summary>
            Захватывает и сохраняет в рабочую копию объекта изменения, сделанные пользователем в
            файловой копии объекта. Как правило, этот метод вызывается из обработчика команды
            "Сохранить изменения".
            </summary>
            <param name="objectId">Идентификатор версии объекта</param>
            <exception cref="T:System.ArgumentException">Параметр <paramref name="objectId"/> не задан</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.ICaptureChangesService.CaptureChanges(System.Int64,Intermech.Tools.Integrators.CaptureChangesOptions)">
            <summary>
            Захватывает и сохраняет в рабочую копию объекта изменения, сделанные пользователем в
            файловой копии объекта. Как правило, этот метод вызывается из обработчика команды
            "Сохранить изменения".
            </summary>
            <param name="objectId">Идентификатор версии объекта</param>
            <param name="options">Опции выполнения операции</param>
            <exception cref="T:System.ArgumentException">Параметр <paramref name="objectId"/> не задан</exception>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="options"/> не должен быть равен null</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.IExtendedSaveSupport">
            <summary>
            Позволяет реализовать сервис расширенного сохранения изменений. Как правило, этот сервис
            используется интеграторами с CAD-системами для сохранения изменений с обновлением структуры
            изделия.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IExtendedSaveSupport.GetSupportedDocumentTypes">
            <summary>
            Возвращает коллекцию типов документов, которые поддерживают расширенное сохранение.
            </summary>
            <returns>Коллекция идентификаторов типов документов</returns>
        </member>
        <member name="M:Intermech.Tools.Integrators.IExtendedSaveSupport.CaptureChanges(System.Int64,Intermech.Tools.Integrators.ExtendedSaveOptions)">
            <summary>
            Захватывает и сохраняет в рабочую копию объекта изменения, сделанные пользователем в
            файловой копии объекта.
            </summary>
            <param name="objectId">Идентификатор версии объекта</param>
            <param name="options">Опции выполнения операции</param>
            <returns>Объект с данными о результате выполнения</returns>
            <exception cref="T:System.ArgumentException">Параметр <paramref name="objectId"/> не задан</exception>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="options"/> не должен быть равен null</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.IFileImportSupport">
            <summary>
            Позволяет реализовать интегратор, умеющий импортировать файлы в систему.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IFileImportSupport.CanImportFile(System.IO.FileInfo,System.IO.Stream)">
            <summary>
            Позволяет определить, может ли интегратор импортировать этот файл.
            </summary>
            <param name="fileInfo">Сведения о файле</param>
            <param name="fileContent">Поток с содержимым файла</param>
            <returns>true, если интегратор поддерживает этот файл, false - если файл не знаком интегратору</returns>
        </member>
        <member name="M:Intermech.Tools.Integrators.IFileImportSupport.GetImportFileCapabilities">
            <summary>
            Возвращает флаги особенностей импорта файла.
            </summary>
            <returns>Флаги особенностей импорта файла</returns>
        </member>
        <member name="M:Intermech.Tools.Integrators.IFileImportSupport.ImportFile(System.String)">
            <summary>
            Выполняет импорт файла в систему.
            </summary>
            <param name="fullPath">Абсолютный путь к импортируемому файлу</param>
            <returns>Результат импорта файла</returns>
            <exception cref="T:System.ArgumentException">Не задан путь к имени импортируемого файла</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.IFileImportSupport.ImportFile(System.String,Intermech.Files.FileImportOptions)">
            <summary>
            Выполняет импорт файла в систему.
            </summary>
            <param name="fullPath">Абсолютный путь к импортируемому файлу</param>
            <param name="importOptions">Опции импорта файла</param>
            <returns>Результат импорта файла</returns>
            <exception cref="T:System.ArgumentException">Не задан путь к имени импортируемого файла</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.IIntegratorLicense">
            <summary>
            Сервис, занимающийся выделением лицензии для интегратора с приложением.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegratorLicense.Check">
            <summary>
            Проверяет ключ защиты и выполняет отъем лицензии, если это еще не было сделано.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.IIntegratorOutput">
            <summary>
            Позволяет реализовать сервис интегратора для вывода сообщений в окно "Вывод". Интегратор пользуется этим сервисом для
            общения с пользователем, когда интегратору требуется пояснить принятые им решения или выполненные действия.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegratorService.Initialize">
            <summary>
            Проверяет конфигурацию сервиса и выполняет его окончательную инициализацию.
            После успешного выполнения этого метода сервис интегратора можно использовать.
            </summary>
            <exception cref="T:InvalidOperationException">Конфигурация сервиса некорректна</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.IPersistentIntegratorSettingsService">
            <summary>
            Интерфейс расширения для сервиса настроек интегратора, предоставляющий методы для сохранения/восстановления настроек интегратора из некоторого контейнера.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IPersistentIntegratorSettingsService.EncodeSettings(Intermech.Tools.Settings.ISettingsObject)">
            <summary>
            Выполняет преобразование объекта с настройками в xml-документ.
            </summary>
            <param name="settingsObject">Объект с настройками</param>
            <returns>Настройки в форме xml-документа</returns>
            <exception cref="T:System.ArgumentNullException">Ссылки на объект с настройками не может быть null</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.IPersistentIntegratorSettingsService.DecodeSettings(System.Xml.XmlDocument)">
            <summary>
            Выполняет преобразование xml-документа в объект с настройками.
            </summary>
            <param name="settingsXml">Настройки в форме xml-документа</param>
            <returns>Объект с настройками</returns>
            <exception cref="T:System.ArgumentNullException">Ссылки на xml-документ не могжет быть null</exception>
            <exception cref="T:System.NotSupportedException">Неизвестная версия формата xml-документа</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.IPersistentIntegratorSettingsService.ValidateSettings(Intermech.Tools.Settings.ISettingsObject,Intermech.Tools.Settings.SettingsValidatorContext)">
            <summary>
            Выполняет проверку корректности настроек.
            </summary>
            <param name="settingsObject">Объект с настройками</param>
            <param name="context">Контекст проверки настроек</param>
            <exception cref="T:System.ArgumentNullException">Ссылка на объект с настройками не может быть null</exception>
            <exception cref="T:System.Exception">Настройки содержат ошибку</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.ILaunchActionSupport">
            <summary>
            Позволяет реализовать сервис интегратора, отвечающий за открытие документов приложения для редактирования или просмтора.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.ILaunchActionSupport.IsSupported(Intermech.Tools.LaunchActions.LaunchType)">
            <summary>
            Возвращает true, если интегратор поддерживает тип команды открытия документа в интегрируемом приложении.
            </summary>
            <param name="launchType">Тип команды</param>
            <returns>Признак, что интегратор поддерживает указанный тип команды</returns>
        </member>
        <member name="M:Intermech.Tools.Integrators.ILaunchActionSupport.OpenDocument(Intermech.Tools.LaunchActions.LaunchParams,System.EventHandler{Intermech.Tools.LaunchActions.LaunchHandlerEventArgs})">
            <summary>
            Открывает документ в приложении.
            </summary>
            <param name="launchParams">Параметры команды открытия документа</param>
            <param name="afterPublishFile">Событие публикации открываемого файла на диске. Может быть null</param>
        </member>
        <member name="T:Intermech.Tools.Integrators.IntegratorNotInstalledException">
            <summary>
            Это исключение сбрасывается в том случае, если в базе отсутствует объект интегратора.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IntegratorNotInstalledException.#ctor(System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="integratorName">Название интегратора</param>
        </member>
        <member name="T:Intermech.Tools.Integrators.IntegratorVars">
            <summary>
            Содержит динамические переменные, влияющие на работу интеграторов.
            </summary>
        </member>
        <member name="F:Intermech.Tools.Integrators.IntegratorVars.ConserveAppResources">
            <summary>
            Переключатель, позволяющий активировать режим сохранения ресурсов интегрируемого приложения.
            </summary>
        </member>
        <member name="F:Intermech.Tools.Integrators.IntegratorVars.NakedApiSessions">
            <summary>
            Переключатель, позволяющий открыть "легкую" сессию подключения к API интегрируемого приложения.
            При открытии такой сессии интегратор не выполняет никакой настройки приложения для работы в паре с IPS.
            По умолчанию значение переключателя установлено в false.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.IIntegratorSettingsService">
            <summary>
            Сервис интегратора, который позволяет получать настройки интегратора, а также наблюдать за их изменением.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegratorSettingsService.GetSettingsObject">
            <summary>
            Возвращает объект настроек интегратора. 
            При первом вызове этого метода выполняется кэширование настроек интегратора. Кэш настроек автоматически сбрасывается при их изменении в базе IPS.
            </summary>
            <returns>Объект настроек интегратора</returns>
            <exception cref="T:System.Exception">Объект с настройками еще не создан в базе IPS, либо содержит ошибки</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegratorSettingsService.GetSettingsStateMonitor">
            <summary>
            Возвращает монитор состояния для настроек интегратора. С его помощью можно определить момент переполучения сервисом настроек с сервера приложений IPS.
            </summary>
            <returns>Монитор состояния для настроек интегратора</returns>
        </member>
        <member name="T:Intermech.Tools.Integrators.IStandaloneViewService">
            <summary>
            Сервис интегратора, отвечающий за внедрение в файлы документов сведений, необходимых для режима автономного просмотра.
            Эти сведения включают в себя информацию об актуальных подписях документа, контрольной сумме файла, 
            атрибутах документа, заполняемых после согласования документа, и др.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IStandaloneViewService.InjectViewData(Intermech.Tools.Integrators.StandaloneViewDataInjectionParameters)">
            <summary>
            Записывает в файл документа сведения для автономного просмотра.
            </summary>
            <param name="parameters">Параметры выполнения операции</param>
            <returns>Результат выполнения операции</returns>
            <exception cref="T:ArgumentNullException">parameters</exception>
            <exception cref="T:ArgumentException">Параметры операции содержат некорректные данные</exception>
        </member>
        <member name="T:Intermech.Tools.Integrators.StandaloneViewDataInjectionParameters">
            <summary>
            Параметры операции по записи в файл документа сведения для автономного просмотра.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.StandaloneViewDataInjectionParameters.ObjectId">
            <summary>
            Идентификатор версии документа.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.StandaloneViewDataInjectionParameters.FileName">
            <summary>
            Имя файл документа в файловом атрибуте.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.StandaloneViewDataInjectionParameters.FilePath">
            <summary>
            Абсолютный путь к файлу документа, который будет передан приложению.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.StandaloneViewDataInjectionParameters.ObjectTypeSettings">
            <summary>
            Настройки автономного просмотра для документов данного типа.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.StandaloneViewDataInjectionParameters.InjectSignNamesOnly">
            <summary>
            Модификатор поведения операции подготовки документа, влияющий на запись подписей документа в файл документа. 
            Если он установлен, то в файл записывается только фамилия подписавшего, а дата подписания и сама подпись остаются пустыми.
            </summary>
            <remarks>
            Этот модификатор не относится к настройкам просмотра для типа объектов, он используется только в некоторых специальных
            режимах просмотра (например, по команде "Смотреть...").
            </remarks>
        </member>
        <member name="T:Intermech.Tools.Integrators.StandaloneViewServiceResult">
            <summary>
            Результат работы сервиса интегратора, отвечающего за поддержку автономного просмотра документов.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.StandaloneViewServiceResult.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.StandaloneViewServiceResult.IsSuccessful">
            <summary>
            Признак успешного или неуспешного выполнения операции.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.StandaloneViewServiceResult.Errors">
            <summary>
            Коллекция ошибок, возникших при выполнении операции.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.IIntegrator">
            <summary>
            Позволяет реализовать интегратор с приложением. Все свойства и методы реализации этого интерфейса
            должны быть thread-safe.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.IIntegrator.Id">
            <summary>
            Возвращает глобальный идентификатор объекта интегратора в базе IPS.
            </summary>
        </member>
        <member name="P:Intermech.Tools.Integrators.IIntegrator.DisplayName">
            <summary>
            Возвращает название интегратора.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegrator.GetServerObjectTemplate">
            <summary>
            Возвращает шаблон для серверного объекта интегратора в форме xml-документа.
            Он используется при создании нового объекта интегратора в базе IPS.
            </summary>
            <returns>Шаблон для серверного объекта интегратора в форме xml-документа</returns>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegrator.CreateSettingsEditor">
            <summary>
            Создает и возвращает визуальный редактор настроек интегратора.
            </summary>
            <returns>Элемент управления</returns>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegrator.GetApplicationImage(Intermech.Tools.AppImageSize)">
            <summary>
            Возвращает изображение для иконки приложения, с которым осуществляется интеграция.
            Метод может вернуть null, если изображения запрошенного размера нет.
            </summary>
            <param name="imageSize">Размер изображения</param>
            <returns>Изображение иконки приложения или null</returns>
        </member>
        <member name="P:Intermech.Tools.Integrators.IIntegrator.SyncRoot">
            <summary>
            Возвращает объект для обеспечения сервисами интегратора поточной безопасности (thread-safe).
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegrator.Initialize">
            <summary>
            Инициализирует интегратор перед использованием.
            </summary>
        </member>
        <member name="T:Intermech.Tools.Integrators.IIntegratorRegistry">
            <summary>
            Клиентская служба, обслуживающая интеграторы с CAD-системами и другими приложениями. Предоставляет
            сервисы регистрации клиентских частей интеграторов и доступа к ним.
            </summary>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegratorRegistry.RegisterIntegrator(Intermech.Tools.Integrators.IIntegrator)">
            <summary>
            Регистрирует клиентскую часть интегратора.
            </summary>
            <param name="integrator">Объект интегратора</param>
            <exception cref="T:System.ArgumentNullException">Ссылка на объект интегратора не может быть null</exception>
            <exception cref="T:System.InvalidOperationException">Объект интегратора уже зарегистрирован</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegratorRegistry.UnregisterIntgerator(Intermech.Tools.Integrators.IIntegrator)">
            <summary>
            Отменяет регистрацию клиентской части интегратора. Метод допускает, что объект интегратора может быть
            не зарегистрирован.
            </summary>
            <param name="integrator">Объект интегратора</param>
            <exception cref="T:System.ArgumentNullException">Ссылка на объект интегратора не может быть null</exception>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegratorRegistry.GetIntegrators">
            <summary>
            Возвращает список загруженных и зарегистрированных клиентских частей интеграторов. Содержимое этого списка может
            не соответствовать списку объектов интеграторов в базе IPS.
            </summary>
            <returns>Список клиентских частей интеграторов</returns>
        </member>
        <member name="M:Intermech.Tools.Integrators.IIntegratorRegistry.GetIntegrator(Intermech.Tools.Integrators.IntegratorObject,System.Boolean)">
            <summary>
            Возвращает клиентскую часть интегратора с указанным приложением.
            </summary>
            <param name="iobj">Объект, идентифицирующий интегратор с приложением</param>
            <param name="throwIfNotFound">Признак генерации исключения в случае, если клиентская часть интегратора не загружена</param>
            <returns>Объект интегратора или null, если клиентская часть интегратора не загружена</returns>
            <exception cref="T:System.ArgumentNullException">Ссылка на идентификатор интегратора не может быть null</exception>
            <exception cref="T:Intermech.FaultException">Клиентская часть интегратора не загружена</exception>
        </member>
        <member name="T:Intermech.Tools.LaunchActions.IDynamicLaunchHandler">
            <summary>
            Дополнительный интерфейс для обработчиков, открывающих файлы объектов в сторонних приложениях.
            Этот интерфейс позволяет службе команд запуска динамически подключить обработчик, даже если
            соответствующая обработчику команда запуска не была настроена с помощью диалога настройки команд запуска.
            </summary>
            <remarks>
            Реализация интерфейса должна учитывать, что у динамически подключаемого обработчика нет конфигурации,
            т.е. соответствующий параметр в методе <see cref="M:Intermech.Tools.LaunchActions.ILaunchHandler.Launch(Intermech.Tools.LaunchActions.LaunchParams,System.Xml.XmlDocument)"/> 
            будет содержать пустой объект типа <see cref="T:System.Xml.XmlDocument"/>.
            </remarks>
        </member>
        <member name="M:Intermech.Tools.LaunchActions.IDynamicLaunchHandler.Lookup(Intermech.Tools.LaunchActions.IDynamicLaunchInfo)">
            <summary>
            Выполняет поиск обработчика.
            </summary>
            <param name="dynamicLaunchInfo">Параметры поиска динамически подключаемого обработчика</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="dynamicLaunchInfo"/> содержит null</exception>
        </member>
        <member name="T:Intermech.Tools.LaunchActions.IDynamicLaunchInfo">
            <summary>
            Интерфейс контейнера с параметрами для определения динамически подключаемого обработчика запуска приложения.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Intermech.Tools.LaunchActions.IDynamicLaunchInfo.LaunchParams" -->
        <member name="P:Intermech.Tools.LaunchActions.IDynamicLaunchInfo.HandlerData">
            <summary>
            Возвращает конфигурацию для динамически подключаемого обработчика.
            Значение свойства содержит пустой xml-документ, так как у таких обработчиков не может быть
            декларативно заданной конфигурации.
            </summary>
        </member>
        <member name="P:Intermech.Tools.LaunchActions.IDynamicLaunchInfo.Handler">
            <summary>
            Возвращает или задает объект динамически подключаемого обработчика.
            Исходное значение свойства равно null.
            </summary>
        </member>
        <member name="T:Intermech.Tools.LaunchActions.ILaunchHandlerFileEvents">
            <summary>
            Дополнительный интерфейс события для обработчиков, открывающих файлы объектов в сторонних приложениях.
            Этот интерфейс позволяет другим сервисам системы встроиться в процесс открытия файла.
            </summary>
        </member>
        <member name="E:Intermech.Tools.LaunchActions.ILaunchHandlerFileEvents.AfterPublishFile">
            <summary>
            Событие вызывается после публикации на диске файла объекта, который будет открыт в приложении.
            Используется другими сервисами системы для внедрения в файл информации о состоянии или статусе объекта (подписях и пр.).
            </summary>
        </member>
        <member name="T:Intermech.Tools.LaunchActions.LaunchHandlerEventArgs">
            <summary>
            Аргументы событий для обработчиков команд запуска приложений.
            </summary>
        </member>
        <member name="M:Intermech.Tools.LaunchActions.LaunchHandlerEventArgs.#ctor(Intermech.Tools.LaunchActions.LaunchParams)">
            <summary>
            Создает объект.
            </summary>
            <param name="launchParams">Описатель параметров запуска приложения</param>
        </member>
        <member name="P:Intermech.Tools.LaunchActions.LaunchHandlerEventArgs.LaunchParams">
            <summary>
            Возвращает параметры запуска приложения.
            </summary>
        </member>
        <member name="P:Intermech.Tools.LaunchActions.LaunchParams.ObjectFileName">
            <summary>
            Возвращает или задает имя файла объекта, который должен быть передан приложению. Если это свойство
            не задано или пусто, то обработчик сам выберет файл объекта. По умолчанию всегда используется мастер файл.
            </summary>
        </member>
        <member name="P:Intermech.Tools.LaunchActions.LaunchParams.LaunchContext">
            <summary>
            Возвращает контекст, в котором была вызвана команда запуска приложения и открытия в нем файла объекта. Контекст применяется
            в специализированных вариантах команды "открыть" и используется для дополнительного конфигурирования приложения, а также
            для позиционирования в открытом файле объекта. По умолчанию контекст пуст.
            </summary>
        </member>
        <member name="T:Intermech.Tools.LaunchActions.ILaunchActionService">
            <summary>
            Клиентская служба, обслуживающая команды запуска приложений.
            </summary>
        </member>
        <member name="T:Intermech.Tools.LaunchActions.ILaunchHandler">
            <summary>
            Сервис для запуска инструмента
            </summary>
        </member>
        <member name="P:Intermech.Tools.LaunchActions.ILaunchHandler.Id">
            <summary>
            Уникальный идентификатор
            </summary>
        </member>
        <member name="P:Intermech.Tools.LaunchActions.ILaunchHandler.DisplayName">
            <summary>
            Возвращает имя обработчика запуска. Если обработчик является непараметризованным и обслуживает конкретное приложение, то его имя совпадает с именем приложения.
            Иначе, имя приложения содержится в серверном объекте.
            </summary>
        </member>
        <member name="M:Intermech.Tools.LaunchActions.ILaunchHandler.GetServerObjectTemplate">
            <summary>
            Возвращает шаблон для серверного объекта, описывающего запускаемое приложение, в форме xml-документа.
            Он используется при создании нового объекта интегратора в базе IPS.
            </summary>
        </member>
        <member name="M:Intermech.Tools.LaunchActions.ILaunchHandler.CreateSettingsEditor">
            <summary>
            Создать редактор настроек
            </summary>
            <returns>Контрол с редактором настроек</returns>
        </member>
        <member name="M:Intermech.Tools.LaunchActions.ILaunchHandler.Launch(Intermech.Tools.LaunchActions.LaunchParams,System.Xml.XmlDocument)">
            <summary>
            Стартовать приложение службы инструментов
            </summary>
            <param name="launchParams">Описатель параметров запуска приложения</param>
            <param name="handlerData">Конфигурация для запускаемого приложения</param>
        </member>
        <member name="M:Intermech.Tools.LaunchActions.ILaunchHandler.BeforeLaunch(Intermech.Tools.LaunchActions.LaunchParams,System.Xml.XmlDocument)">
            <summary>
            Метод вызывается перед взятием на изменение объекта и проверками на возможность редактирования
            </summary>
            <param name="launchParams">Описатель параметров запуска приложения</param>
            <param name="handlerData">Конфигурация для запускаемого приложения</param>
        </member>
        <member name="T:Intermech.Tools.AppImageSize">
            <summary>
            Описывает размеры изображений для приложения.
            </summary>
        </member>
        <member name="F:Intermech.Tools.AppImageSize.Image16x16">
            <summary>
            Изображение размером 16 x 16
            </summary>
        </member>
        <member name="F:Intermech.Tools.AppImageSize.Image32x32">
            <summary>
            Изображение размером 32 x 32
            </summary>
        </member>
        <member name="T:Intermech.Tools.IToolsControlPanel">
            <summary>
            Интерфейс сервиса окна "Управление инструментами".
            </summary>
        </member>
        <member name="M:Intermech.Tools.IToolsControlPanel.AddItem(System.String,System.Windows.Forms.Control)">
            <summary>
            Добавляет элемент управления в окно.
            </summary>
            <param name="group">Название группы элементов. Если указана пустая строка, то будет использована группа по умолчанию</param>
            <param name="item">Добавляемый элемент</param>
            <exception cref="T:ArgumentNullException">Параметр <paramref name="group"/> не должен быть равен null; параметр <paramref name="item"/> не должен быть равен null</exception>
        </member>
        <member name="T:Intermech.Tools.DataEditorControl">
            <summary>
            Базовый класс для редакторов настроек, представленных в форме xml-документа.
            </summary>
        </member>
        <member name="M:Intermech.Tools.DataEditorControl.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Tools.DataEditorControl.SetData(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Передает редактору объект с настройками.
            </summary>
            <param name="data">Настройки</param>
            <param name="readOnly">Признак режима отображения настроек без возможности редактирования</param>
        </member>
        <member name="M:Intermech.Tools.DataEditorControl.GetData">
            <summary>
            Редактор возвращает новый объект настроек, содержащий все сделанные пользователем изменения.
            </summary>
            <returns>Объект с настройками</returns>
        </member>
        <member name="F:Intermech.Tools.DataEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Tools.DataEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Tools.DataEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.ClientException">
            <summary>
            Предок для всех исключений, генерируемых клиентской частью системы
            </summary>
            
        </member>
        <member name="T:Intermech.DatabaseConfigurator.DeleteIDEvenArgs">
            <summary>
            Объявим спец класс - наследника от EventArgs для уведомлении о удалении
            элемента в категории
            </summary>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.DeleteIDEvenArgs.#ctor">
            <summary>
            Конструктор
            </summary>
        </member>
        <member name="T:Intermech.DatabaseConfigurator.ICategoryProps">
            <summary>
            Интерфейс дополнительных PropertyDescriptor-ов для регистрации в службе DatabaseConfigurator
            </summary>
        </member>
        <member name="P:Intermech.DatabaseConfigurator.ICategoryProps.SubscriberID">
            <summary>
            идентифицирующая строка (будет включаться в состав сообщений об ошибках в процессе работы функций интерфейса )
            </summary>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.ICategoryProps.GetPropDescriptors(Intermech.PropertyEditors.PropDescriptorHolder,System.Int32,System.Object)">
            <summary>
            вернуть список свойств
            </summary>
            <param name="pdh">PropDescriptorHolder, можно получить PropDescriptorCollection - текущий список PropDescriptor'ов : только для чтения</param>
            <param name="category">категория</param>
            <param name="id">идентификатор в рамках категории</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.ICategoryProps.Apply(Intermech.PropertyEditors.PropDescriptorHolder,System.Int32,System.Object,System.Object)">
            <summary>
            применить; 
            idOld - предварительный идентификатор 
            (для нового отрицательный, при редактировании == id, idOld подается на вход GetPropDescriptors при запросе списка полей) 
            
            Внимание! После сохранения значений у сохраняемых PropDescriptor'ов должны быть выставлены флаги ChangedValueApplied в том случае, если было сохранено изменённое значение по сравнению с предыдущим состоянием.
            </summary>
            <param name="pdh">PropDescriptorHolder, можно получить PropDescriptorCollection - текущий список PropDescriptor'ов : только для чтения</param>  
            <param name="category">категория</param>
            <param name="id">идентификатор в рамках категории</param>
            <param name="idOld">предварительный идентификатор </param>
            <returns></returns>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.ICategoryProps.Cancel(Intermech.PropertyEditors.PropDescriptorHolder,System.Int32,System.Object)">
            <summary>
            отменить. пользовательский обработчик должен переинициализировать выдаваемые PropertyDescriptor's 
            </summary>
            <param name="pdh">PropDescriptorHolder, можно получить PropDescriptorCollection - текущий список PropDescriptor'ов : только для чтения</param>        
            <param name="category">категория</param>
            <param name="id">идентификатор в рамках категории</param>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.ICategoryProps.ChangeEventData(Intermech.PropertyEditors.PropDescriptorHolder,System.Int32,System.Object,System.EventArgs)">
            <summary>
            ретранслятор события об изменении (удалении) ( возможно даже PropertyGrid, в котором редактируются выданные properties, тогда ныжно доп. приведение типа)
            </summary>
            <param name="pdh">PropDescriptorHolder, можно получить PropDescriptorCollection - текущий список PropDescriptor'ов : только для чтения</param>        
            <param name="category">категория</param>
            <param name="id">идентификатор в рамках категории</param>
            <param name="e">аргументы события</param>
            <remarks>В случае удалении параметр "e" типа DeleteIDEvenArgs</remarks>
        </member>
        <member name="T:Intermech.DatabaseConfigurator.ICategoryVerb">
            <summary>
            Интерфейс для Verb-ов в PropertyGrid, предоставляемых службе IDatabaseConfiguratorService 
            </summary>
        </member>
        <member name="P:Intermech.DatabaseConfigurator.ICategoryVerb.Caption">
            <summary>
            заголовок Verbа
            </summary>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.ICategoryVerb.Execute(System.Int32,System.Object)">
            <summary>
            вызов Verba
            </summary>
            <param name="category">категория</param>
            <param name="id">идентификатор в рамках категории</param>
            <returns>true если произошли изменения</returns>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.ICategoryVerb.Apply">
            <summary>
            применить 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.ICategoryVerb.Cancel">
            <summary>
            отменить
            </summary>
        </member>
        <member name="T:Intermech.DatabaseConfigurator.IDatabaseConfiguratorService">
            <summary>
            Интерфейс службы DatabaseConfiguratorControl
            </summary>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.IDatabaseConfiguratorService.AddAttribute(System.String,System.Int32[])">
            <summary>
            Добавление атрибута. 
            </summary>
            <param name="caption">заголовок окна</param>
            <param name="attrGroup">список групп, в которые включить. -1 => ни в какую. null => будет запрос.</param>
            <returns>id созданного атрибута, 0 - не создан</returns>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.IDatabaseConfiguratorService.EditAttribute(System.String,System.Int32)">
            <summary>
            Редактирование атрибута
            </summary>
            <param name="caption">заголовок окна</param>
            <param name="attributeId">id атрибута</param>
            <returns>true если был изменен</returns>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.IDatabaseConfiguratorService.RegisterCategoryProps(System.Int32,Intermech.DatabaseConfigurator.ICategoryProps)">
            <summary>
            зарегистрировать класс работы с пользовательским PropertyDescriptorCollection для категории
            </summary>
            <param name="category">категория</param>
            <param name="iCategoryProps">интерфейс ICategoryProps</param>
            <returns>зарегистрированный идентификатор обработчика ICategoryProps</returns>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.IDatabaseConfiguratorService.UnregisterCategoryProps(System.Int32)">
            <summary>
            разрегистрировать работы с пользовательским PropertyDescriptorCollection
            </summary>
            <param name="propsId">ранее зарегистрированный идентификатор обработчика</param>
        </member>
        <member name="M:Intermech.DatabaseConfigurator.IDatabaseConfiguratorService.RegisterDocumentAdditionalView(Intermech.DatabaseConfigurator.IAdditionalView)">
            <summary>
            Зарегистрировать закладку в конфигураторе для типов документов
            </summary>
            <param name="view"></param>
        </member>
        <member name="P:Intermech.DatabaseConfigurator.IDatabaseConfiguratorService.DocumentAdditionalViews">
            <summary>
            Дополнительные закладки в конфигураторе для типов документов
            </summary>
        </member>
        <member name="T:Intermech.Settings.DBPersistentSettingsObject">
            <summary>
            Реализует базовый класс для объектов клиентских настроек, сохраняемых в базе данных IPS.
            </summary>
        </member>
        <member name="T:Intermech.Security.ISecurityCallback">
            <summary>
            Интерфейс получения информации связанной с настройками безопасности
            Обслуживает, по сути, категорию (типы атрибутов, объектов, объекты).
            </summary>
        </member>
        <member name="M:Intermech.Security.ISecurityCallback.GetSecurity(Intermech.Interfaces.IUserSession,System.Object)">
            <summary>
            Получение интерфейса IDBSecurity по некоторому id 
            </summary>
            <param name="session">сессия</param>
            <param name="id">идентификатор, достаточный обработчику для выдачи результата IDBSecurity</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Security.ISecurityCallback.MaintainedCategory">
            <summary>
            Обслуживаемая категория 
            </summary>
        </member>
        <member name="P:Intermech.Security.ISecurityCallback.Applicability">
            <summary>
            Доп информация о применяемости. Обычно null.
            Но например для MaintainedCategory = Consts.CategoryLCStep может быть в item1=Consts.CategoryObjectType, item2=(int)objectTypeId -
            то есть шаг назначен в схему применительно к типу объекта
            </summary>
        </member>
    </members>
</doc>
