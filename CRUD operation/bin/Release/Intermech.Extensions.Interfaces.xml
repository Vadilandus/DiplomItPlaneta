<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intermech.Extensions.Interfaces</name>
    </assembly>
    <members>
        <member name="T:Intermech.Interfaces.DBObjectTypeHandlerAttribute">
            <summary>Атрибут, указывающий на обслуживание сущностью (классом или интерфейсом)
                     указанного типа объектов в IPS или его фабрики (коллекции)</summary>
            <remarks>Вызов в серверном плагине assembly.RegisterDbCreators() автоматически регистрирует дефолтные Creator-ы для классов,
                     помеченных данным атрибутом</remarks>
        </member>
        <member name="M:Intermech.Interfaces.DBObjectTypeHandlerAttribute.#ctor(System.Guid,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="dbTypeGuid">Guid типа сущности (объекта или связи)</param>
            <param name="recursiveHandle">(По-умолчанию true) Регистрировать ли дефолтный Creator так же для всех потомков данного.
                                          Игнорируется у связей.</param>
        </member>
        <member name="M:Intermech.Interfaces.DBObjectTypeHandlerAttribute.#ctor(System.String,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="dbTypeGuid">Guid типа сущности (объекта или связи)</param>
            <param name="recursiveHandle">(По-умолчанию true) Регистрировать ли дефолтный Creator так же для всех потомков данного.
                                          Игнорируется у связей.</param>
        </member>
        <member name="T:Intermech.Interfaces.DBRelationTypeHandlerAttribute">
            <summary>Атрибут, указывающий на обслуживание сущностью (классом или интерфейсом)
                     указанного типа связей в IPS или его фабрики (коллекции)</summary>
            <remarks>Вызов в серверном плагине assembly.RegisterDbCreators() автоматически регистрирует дефолтные Creator-ы для классов,
                     помеченных данным атрибутом</remarks>
        </member>
        <member name="M:Intermech.Interfaces.DBRelationTypeHandlerAttribute.#ctor(System.Guid)">
            <summary>Конструктор</summary>
            <param name="dbTypeGuid">Guid типа связи</param>
        </member>
        <member name="M:Intermech.Interfaces.DBRelationTypeHandlerAttribute.#ctor(System.String)">
            <summary>Конструктор</summary>
            <param name="dbTypeGuid">Guid типа сущности (объекта или связи)</param>
        </member>
        <member name="T:Intermech.Interfaces.ObjectVersionAndMaybeTypeID">
            <summary>
            Структура описывающая пару "идентификатор версии объекта"+"идентификатор типа объекта"
            Тип объекта может быть не определён
            В случаях, когда тип объекта заведомо (должен быть) определён надо использовать <see cref="T:Intermech.Interfaces.ObjectVersionAndTypeID"/>
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.ObjectVersionAndTypeID">
            <summary>
            Структура описывающая пару "идентификатор версии объекта"+"идентификатор типа объекта"
            Реализована с контролем того, что тип объекта определён (неопределённый тип вызовет выброс исключения)
            В случаях, когда тип объекта может быть не определён надо использовать <see cref="T:Intermech.Interfaces.ObjectVersionAndMaybeTypeID"/>
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.IdbAttributableExtensions">
            <summary>Класс-расширение над IDBAttributable</summary>
            <summary>Класс-расширение над IDBAttributable</summary>
            <summary>Класс-расширение над IDBAttributable</summary>
        </member>
        <member name="M:Intermech.Interfaces.IdbAttributableExtensions.CreateAttributeNotFoundException(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Создать исключительную ситуацию "атрибут не найден" нужного типа.</summary>
        </member>
        <member name="M:Intermech.Interfaces.IdbAttributableExtensions.CreateAttributeNotFoundException(Intermech.Interfaces.IDBAttributable,System.Guid,System.String)">
            <summary>Создать исключительную ситуацию "атрибут не найден" нужного типа.</summary>
        </member>
        <member name="M:Intermech.Interfaces.IdbAttributableExtensions.CreateAttributeValueIsEmptyException(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Создать исключительную ситуацию "атрибут пуст" нужного типа.</summary>
        </member>
        <member name="M:Intermech.Interfaces.IdbAttributableExtensions.CreateAttributeValueIsEmptyException(Intermech.Interfaces.IDBAttributable,System.String,System.Int32,System.String)">
            <summary>Создать исключительную ситуацию "атрибут пуст" нужного типа.</summary>
        </member>
        <member name="M:Intermech.Interfaces.IdbAttributableExtensions.CreateArgumentAttributeValueIsEmptyException(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Создать исключительную ситуацию "атрибут пуст" нужного типа.</summary>
        </member>
        <member name="M:Intermech.Interfaces.IdbAttributableExtensions.CreateArgumentAttributeValueIsEmptyException(Intermech.Interfaces.IDBAttributable,System.String,System.Int32,System.String)">
            <summary>Создать исключительную ситуацию "атрибут пуст" нужного типа.</summary>
        </member>
        <member name="T:Intermech.Interfaces.AttributeWithIdNotFoundException">
            <summary>Не найден атрибут по его идентификатору</summary>
        </member>
        <member name="T:Intermech.Interfaces.AttributeWithGuidNotFoundException">
            <summary>Не найден атрибут по его Guid</summary>
        </member>
        <member name="T:Intermech.Interfaces.IObjectException">
            <summary>Интерфейс исключительной ситуации связанной с объектом системы IPS.</summary>
        </member>
        <member name="T:Intermech.Interfaces.LifeCycleLevelNotFoundException">
            <summary>Не найден уровень продвижения</summary>
        </member>
        <member name="T:Intermech.Interfaces.LifeCycleStepNotFoundException">
            <summary>Не найден шаг жизненного цикла</summary>
        </member>
        <member name="T:Intermech.Interfaces.MeasureNotFoundException">
            <summary>Не найден тип связи по его идентификатору</summary>
        </member>
        <member name="T:Intermech.Interfaces.ObjectTypeNotFoundException">
            <summary>Не найден тип объекта</summary>
        </member>
        <member name="T:Intermech.Interfaces.RelationNotFoundException">
            <summary>Не найден шаг жизненного цикла</summary>
        </member>
        <member name="T:Intermech.Interfaces.RelationTypeNotFoundException">
            <summary>Не найден тип объекта</summary>
        </member>
        <member name="T:Intermech.Interfaces.SiteNotFoundException">
            <summary>Не найден сайт портала</summary>
        </member>
        <member name="T:Intermech.Interfaces.UserSessionExtensions">
            <summary>Методы-расширения для IUserSession</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.SessionGuarantee``1(Intermech.Interfaces.IUserSession,Intermech.Interfaces.UserSessionExtensions.NotNullSessionFunc{``0})">
            <summary>Вызов лямбды с гарантией создания сессии метод проверяет, что сессия не null,
                     а если null, то создаётся SessionKeeper и лямбда вызывается с его сессией</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.SessionGuarantee(Intermech.Interfaces.IUserSession,Intermech.Interfaces.UserSessionExtensions.NotNullSessionAction)">
            <summary>Вызов лямбды с гарантией создания сессии метод проверяет, что сессия не null,
                     а если null, то создаётся SessionKeeper и лямбда вызывается с его сессией</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GuaranteeNotNull``1(Intermech.Interfaces.IUserSession,Intermech.Interfaces.UserSessionExtensions.NotNullSessionFunc{``0})">
            <summary>Вызов лямбды с гарантией создания сессии метод проверяет, что сессия не null,
                     а если null, то создаётся SessionKeeper и лямбда вызывается с его сессией</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GuaranteeNotNull(Intermech.Interfaces.IUserSession,Intermech.Interfaces.UserSessionExtensions.NotNullSessionAction)">
            <summary>Вызов лямбды с гарантией создания сессии метод проверяет, что сессия не null,
                     а если null, то создаётся SessionKeeper и лямбда вызывается с его сессией</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetCustomService``1(Intermech.Interfaces.IUserSession,System.Boolean,System.String)">
            <summary>Попытка извлечения сервиса из пользовательской сессии сервисов</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у
                пользовательской сессии запрашиваемого сервиса (при аргументе throwExceptionIfNotFound == true)</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">Возникает при попытке получения сервиса, тип
                которого не определен не стороне сервера. Возможно из-за того, что на серверной машине нет сборки с запрошенным
                типом. Поэтому обращение к этому методу надо заключать в try-catch с перехватом только этого типа исключения</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="session">Пользовательская сессия</param>
            <param name="throwExceptionIfNotFound">
            (По умолчанию true)
            Выбрасывать ли исключительную ситуацию в случае отсутствия в
            пользовательской сессии запрашиваемого сервиса или неопределённости запрашиваемого типа на стороне сервера</param>
            <param name="exceptionMessageIfFail">(Optional) Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в
                случае отсутствия запрашиваемого сервиса у пользовательской сессии. Если null, то используется стандартное
                сообщение</param>
            <returns>Извлекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetCustomService``1(Intermech.Interfaces.IUserSession,System.String,System.Boolean)">
             <summary>Извлечение сервиса из пользовательской сессии</summary>
             <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у пользовательской сессии запрашиваемого
                                                         сервиса</exception>
             <typeparam name="T">Тип извлекаемого сервиса</typeparam>
             <param name="session">Пользовательская сессия</param>
             <param name="exceptionMessageIfFail">
             Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
             запрашиваемого сервиса у пользовательской сессии. Если null, то используется стандартное сообщение
             </param>
             <param name="throwSerializationException">
             (default false)
             Выбрасывать ли <see cref="T:System.Runtime.Serialization.SerializationException"/> в том случае,
             если запрашиваемый тип не определён на стороне серверы. Иначе метод молча вернёт false.
             </param>
             <returns>Извлекаемый сервис</returns>
             <exception cref="T:System.Runtime.Serialization.SerializationException">
             Выбрасывается только, если <see cref="!:throwSerializationException"/> true
             при попытке получения сервиса, тип которого не определен не стороне сервера.
             Возможно из-за того, что на серверной машине нет сборки с запрошенным типом.
             Поэтому обращение к этому методу надо заключать в try-catch с перехватом только этого
             типа исключения.
             </exception>
             <example>Пример перехвата ...
             <code lang="C#">
             try
             {
              ...
             }
             catch(System.Runtime.Serialization.SerializationException)
             {
             // реакция на отсутствие сборки
             }
            </code>
            </example>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetCustomService``1(Intermech.Interfaces.IUserSession,``0@,System.String,System.Boolean)">
             <summary>Извлечение сервиса из пользовательской сессии</summary>
             <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у пользовательской сессии запрашиваемого
                                                         сервиса</exception>
             <typeparam name="T">Тип извлекаемого сервиса</typeparam>
             <param name="session">Пользовательская сессия</param>
             <param name="service">[out] извлекаемый сервис</param>
             <param name="exceptionMessageIfFail">
             Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
             запрашиваемого сервиса у пользовательской сессии. Если null, то используется стандартное сообщение
             </param>
             <param name="throwSerializationException">
             (default false)
             Выбрасывать ли <see cref="T:System.Runtime.Serialization.SerializationException"/> в том случае,
             если запрашиваемый тип не определён на стороне серверы. Иначе метод молча вернёт false.
             </param>
             <returns>Пользовательская сессия (для построения цепочки вызовов)</returns>
             <exception cref="T:System.Runtime.Serialization.SerializationException">
             Выбрасывается только, если <see cref="!:throwSerializationException"/> true
             при попытке получения сервиса, тип которого не определен не стороне сервера.
             Возможно из-за того, что на серверной машине нет сборки с запрошенным типом.
             Поэтому обращение к этому методу надо заключать в try-catch с перехватом только этого
             типа исключения.
             </exception>
             <example>Пример перехвата ...
             <code lang="C#">
             try
             {
              ...
             }
             catch(System.Runtime.Serialization.SerializationException)
             {
             // реакция на отсутствие сборки
             }
            </code>
            </example>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetCustomService``1(Intermech.Interfaces.IUserSession,``0@,System.Boolean)">
             <summary>Попытка извлечения сервиса из пользовательской сессии</summary>
             <typeparam name="T">Тип извлекаемого сервиса</typeparam>
             <param name="session">Пользовательская сессия</param>
             <param name="service">[out] извлекаемый сервис</param>
             <param name="throwSerializationException">
             (default false)
             Выбрасывать ли <see cref="T:System.Runtime.Serialization.SerializationException"/> в том случае,
             если запрашиваемый тип не определён на стороне серверы. Иначе метод молча вернёт false.
             </param>
             <returns>true если сервис был получен, иначе false</returns>
             <exception cref="T:System.Runtime.Serialization.SerializationException">
             Выбрасывается только, если <see cref="!:throwSerializationException"/> true
             при попытке получения сервиса, тип которого не определен не стороне сервера.
             Возможно из-за того, что на серверной машине нет сборки с запрошенным типом.
             Поэтому обращение к этому методу надо заключать в try-catch с перехватом только этого
             типа исключения.
             </exception>
             <example>Пример перехвата ...
             <code lang="C#">
             try
             {
              ...
             }
             catch(System.Runtime.Serialization.SerializationException)
             {
             // реакция на отсутствие сборки
             }
            </code>
            </example>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.EnsureCustomServiceInitialized``1(Intermech.Interfaces.IUserSession,``0@,System.String)">
            <summary>Контроль того, что сервис был извлечён из пользовательской сессии в переданную переменную. Если нет (она null),
                то извлечь в неё сервис</summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid</exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">Возникает при попытке получения сервиса, тип
                которого не определен не стороне сервера. Возможно из-за того, что на серверной машине нет сборки с запрошенным
                типом. Поэтому обращение к этому методу надо заключать в try-catch с перехватом только этого типа исключения</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="session">Пользовательская сессия</param>
            <param name="service">[in, out] извлекаемый сервис</param>
            <param name="exceptionMessageIfFail">(По-умолчанию true) Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в
                случае отсутствия запрашиваемого сервиса у пользовательской сессии. Если null, то используется стандартное
                сообщение</param>
            <returns>извлекаемый сервис</returns>
            <example>Пример перехвата ...
            <code lang="C#">
            try
            {
            ...
            }
            catch(System.Runtime.Serialization.SerializationException)
            {
            // реакция на отсутствие сборки
            }
            </code>
            </example>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.HasCustomService``1(Intermech.Interfaces.IUserSession,System.Boolean)">
             <summary>Проверка наличия сервиса из пользовательской сессии</summary>
             <typeparam name="T">Тип извлекаемого сервиса</typeparam>
             <param name="session">Пользовательская сессия</param>
             <param name="throwSerializationException">
             (default false)
             Выбрасывать ли <see cref="T:System.Runtime.Serialization.SerializationException"/> в том случае,
             если запрашиваемый тип не определён на стороне серверы. Иначе метод молча вернёт false.
             </param>
             <returns>true если сервис в сервере присутствует, иначе false</returns>
             <exception cref="T:System.Runtime.Serialization.SerializationException">
             Выбрасывается только, если <see cref="!:throwSerializationException"/> true
             при попытке получения сервиса, тип которого не определен не стороне сервера.
             Возможно из-за того, что на серверной машине нет сборки с запрошенным типом.
             Поэтому обращение к этому методу надо заключать в try-catch с перехватом только этого
             типа исключения.
             </exception>
             <example>Пример перехвата ...
             <code lang="C#">
             try
             {
              ...
             }
             catch(System.Runtime.Serialization.SerializationException)
             {
             // реакция на отсутствие сборки
             }
            </code>
            </example>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObject``1(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.Interfaces.ObjectVersionNotFoundException">Если версия объекта с переданным идентификатором не найдена в БД</exception>
            <typeparam name="TDbObjectInterface">Type of the database object interface</typeparam>
            <param name="session">Сессия</param>
            <param name="objectVersionID">Идентификатор версии объекта</param>
            <param name="throwExceptOnError">(По-умолчанию true) Если true, то в случае отсутствия объекта в БД будет сгенерирован
                ObjectNotFoundException</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObject``3(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.ObjectNotFoundException">Если объект с переданным идентификатором не найден в БД</exception>
            <exception cref="T:Intermech.Interfaces.ObjectNotSupportInterfaceException`1">Если объект с переданным идентификатором найден, но он не поддерживает целевой интерфейс TDbObjectInterface унаследованный от IDBObject</exception>
            <param name="session">Сессия</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае ошибки будут сгенерирована соотв. исключительная ситуация</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObject``2(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.Interfaces.ObjectVersionNotFoundException">Если версия объекта с переданным идентификатором не найдена в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectVersionID">Идентификатор объекта</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае ошибки будут сгенерирована соотв. исключительная ситуация</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetObject(Intermech.Interfaces.IUserSession,System.Int64,Intermech.Interfaces.IDBObject@)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.Interfaces.ObjectVersionNotFoundException">Если версия объекта с переданным идентификатором не найдена в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectVersionID">Идентификатор версии объекта</param>
            <param name="result">Интерфейс найденного объекта или null</param>
            <returns>True если объект найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetObject``1(Intermech.Interfaces.IUserSession,System.Int64,``0@)">
            <summary>Получить интерфейс объекта IPS</summary>
            <param name="session">Сессия</param>
            <param name="objectVersionID">Идентификатор версии объекта</param>
            <param name="result">Интерфейс найденного объекта или null</param>
            <returns>True если объект найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObject``1(Intermech.Interfaces.IUserSession,System.Guid,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.Interfaces.ObjectVersionNotFoundException">Если версия объекта с переданным идентификатором не найдена в
                БД</exception>
            <param name="session">Сессия</param>
            <param name="objectVersionGuid">Guid версии объекта</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае отсутствия объекта в БД будет сгенерирован
                ObjectNotFoundException</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObject``2(Intermech.Interfaces.IUserSession,System.Guid,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.Interfaces.ObjectVersionNotFoundException">Если версия объекта с переданным идентификатором не найдена в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectVersionGuid">Guid версии объекта</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае ошибки будут сгенерирована соотв. исключительная ситуация</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetObject(Intermech.Interfaces.IUserSession,System.Guid,Intermech.Interfaces.IDBObject@)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.Interfaces.ObjectVersionNotFoundException">Если версия объекта с переданным идентификатором не найдена в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectVersionGuid">Guid версии объекта</param>
            <param name="result">Интерфейс найденного объекта или null</param>
            <returns>True если объект найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetObject``1(Intermech.Interfaces.IUserSession,System.Guid,``0@)">
            <summary>Получить интерфейс объекта IPS</summary>
            <param name="session">Сессия</param>
            <param name="objectVersionGuid">Guid версии объекта</param>
            <param name="result">Интерфейс найденного объекта или null</param>
            <returns>True если объект найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectByID``1(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.ObjectNotFoundException">Если объект с переданным идентификатором не найден в БД</exception>
            <typeparam name="TDbObjectInterface">Type of the database object interface</typeparam>
            <param name="session">Сессия</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="throwExceptOnError">(По-умолчанию true) Если true, то в случае отсутствия объекта в БД будет сгенерирован
                ObjectNotFoundException</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectByID``3(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.ObjectNotFoundException">Если объект с переданным идентификатором не найден в БД</exception>
            <exception cref="T:Intermech.Interfaces.ObjectNotSupportInterfaceException`1">Если объект с переданным идентификатором найден, но он не поддерживает целевой интерфейс TDbObjectInterface унаследованный от IDBObject</exception>
            <param name="session">Сессия</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае ошибки будут сгенерирована соотв. исключительная ситуация</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectByID``2(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.ObjectNotFoundException">Если объект с переданным идентификатором не найден в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае ошибки будут сгенерирована соотв. исключительная ситуация</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetObjectByID(Intermech.Interfaces.IUserSession,System.Int64,Intermech.Interfaces.IDBObject@)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.ObjectNotFoundException">Если объект с переданным идентификатором не найден в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="result">Интерфейс найденного объекта или null</param>
            <returns>True если объект найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetObjectByID``1(Intermech.Interfaces.IUserSession,System.Int64,``0@)">
            <summary>Получить интерфейс объекта IPS</summary>
            <param name="session">Сессия</param>
            <param name="objectID">Идентификатор объекта</param>
            <param name="result">Интерфейс найденного объекта или null</param>
            <returns>True если объект найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectByID``1(Intermech.Interfaces.IUserSession,System.Guid,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.Interfaces.ObjectWithGuidNotFoundException"> Если объект с переданным идентификатором не найден в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectGuid">Guid объекта (Не версии!)</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае отсутствия объекта в БД будет сгенерирован
                ObjectNotFoundException</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectByID``2(Intermech.Interfaces.IUserSession,System.Guid,System.Boolean)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.Interfaces.ObjectVersionNotFoundException">Если объект с переданным идентификатором не найден в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectGuid">Guid объекта</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае ошибки будут сгенерирована соотв. исключительная ситуация</param>
            <returns>Интерфейс объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetObjectByObjectGuid(Intermech.Interfaces.IUserSession,System.Guid,Intermech.Interfaces.IDBObject@)">
            <summary>Получить интерфейс объекта IPS</summary>
            <exception cref="T:Intermech.Interfaces.ObjectVersionNotFoundException">Если объект с переданным идентификатором не найден в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectGuid">Guid объекта</param>
            <param name="result">Интерфейс найденного объекта или null</param>
            <returns>True если объект найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetObjectByObjectGuid``1(Intermech.Interfaces.IUserSession,System.Guid,``0@)">
            <summary>Получить интерфейс объекта IPS</summary>
            <param name="session">Сессия</param>
            <param name="objectGuid">Guid объекта</param>
            <param name="result">Интерфейс найденного объекта или null</param>
            <returns>True если объект найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetRelation``1(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс связи IPS</summary>
            <exception cref="T:Intermech.Interfaces.RelationNotFoundException">Если связь с переданным идентификатором не найдена в БД</exception>
            <typeparam name="TDbRelationInterface">Type of the database relation interface</typeparam>
            <param name="session">Сессия</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="throwExceptOnError">(По-умолчанию true) Если true, то в случае отсутствия связи в БД будет сгенерирован
                RelationNotFoundException</param>
            <returns>Интерфейс связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetRelation``3(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс связи IPS</summary>
            <exception cref="T:Intermech.Interfaces.RelationNotFoundException">Если связь с переданным идентификатором не найдена в БД</exception>
            <exception cref="T:Intermech.Interfaces.RelationNotSupportInterfaceException`1">Если связь с переданным идентификатором найден, но он не поддерживает целевой интерфейс TDbRelationInterface унаследованный от IDBRelation</exception>
            <param name="session">Сессия</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае ошибки будут сгенерирована соотв. исключительная ситуация</param>
            <returns>Интерфейс связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetRelation``2(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс связи IPS</summary>
            <exception cref="T:Intermech.Interfaces.RelationNotFoundException">Если связь с переданным идентификатором не найдена в БД</exception>
            <param name="session">Сессия</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае ошибки будут сгенерирована соотв. исключительная ситуация</param>
            <returns>Интерфейс связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetRelation(Intermech.Interfaces.IUserSession,System.Int64,Intermech.Interfaces.IDBRelation@)">
            <summary>Получить интерфейс связи IPS</summary>
            <exception cref="T:Intermech.Interfaces.RelationNotFoundException">Если связь с переданным идентификатором не найдена в БД</exception>
            <param name="session">Сессия</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="result">Интерфейс найденного связи или null</param>
            <returns>True если связь найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetRelation``1(Intermech.Interfaces.IUserSession,System.Int64,``0@)">
            <summary>Получить интерфейс связи IPS</summary>
            <param name="session">Сессия</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="result">Интерфейс найденного связи или null</param>
            <returns>True если связь найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetRelation``1(Intermech.Interfaces.IUserSession,System.Guid,System.Boolean)">
            <summary>Получить интерфейс связи IPS</summary>
            <exception cref="T:Intermech.Interfaces.RelationNotFoundException">Если связь с переданным идентификатором не найдена в
                БД</exception>
            <param name="session">Сессия</param>
            <param name="relationGuid">Guid связи</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае отсутствия связи в БД будет сгенерирован
                RelationNotFoundException</param>
            <returns>Интерфейс связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetRelation``2(Intermech.Interfaces.IUserSession,System.Guid,System.Boolean)">
            <summary>Получить интерфейс связи IPS</summary>
            <exception cref="T:Intermech.Interfaces.RelationNotFoundException">Если связь с переданным идентификатором не найдена в БД</exception>
            <param name="session">Сессия</param>
            <param name="relationGuid">Guid связи</param>
            <param name="throwExceptOnError">(Optional) Если true, то в случае ошибки будут сгенерирована соотв. исключительная ситуация</param>
            <returns>Интерфейс связи</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetRelation(Intermech.Interfaces.IUserSession,System.Guid,Intermech.Interfaces.IDBRelation@)">
            <summary>Получить интерфейс связи IPS</summary>
            <exception cref="T:Intermech.Interfaces.RelationNotFoundException">Если связь с переданным идентификатором не найдена в БД</exception>
            <param name="session">Сессия</param>
            <param name="relationGuid">Guid связи</param>
            <param name="result">Интерфейс найденного связи или null</param>
            <returns>True если связь найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetRelation``1(Intermech.Interfaces.IUserSession,System.Guid,``0@)">
            <summary>Получить интерфейс связи IPS</summary>
            <param name="session">Сессия</param>
            <param name="relationGuid">Guid связи</param>
            <param name="result">Интерфейс найденного связи или null</param>
            <returns>True если связь найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectType(Intermech.Interfaces.IUserSession,System.Int32,System.Boolean,System.String)">
            <summary>An IUserSession extension method that gets object type</summary>
            <exception cref="T:Intermech.Interfaces.ObjectTypeNotFoundException">Выбрасывается если throwExceptionIfNotFound=true и тип объекта не найден в БД</exception>
            <param name="session">Сессия</param>
            <param name="objectTypeID">Идентификатор типа объекта</param>
            <param name="throwExceptionIfNotFound">Выбрасывать ли исключительную ситуацию в случае отсутствия в БД соотв. типа объекта</param>
            <param name="exceptionMessage">(Optional) Message describing the exception. This may be null</param>
            <returns>Интерфейс типа объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.TryGetObjectType(Intermech.Interfaces.IUserSession,System.Int32,Intermech.Interfaces.IDBObjectType@)">
            <summary>An IUserSession extension method that gets object type</summary>
            <param name="session">Сессия</param>
            <param name="objectTypeID">Идентификатор типа объекта</param>
            <param name="result">Интерфейс найденного типа объекта или null</param>
            <returns>True если объект найден, иначе false</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectsCollection``1(Intermech.Interfaces.IUserSession,System.Int32)">
            <summary>Получить серверную коллекцию объектов по идентификатору типа объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectsCollection``1(Intermech.Interfaces.IUserSession,System.Guid)">
            <summary>Получить серверную коллекцию объектов по идентификатору типа объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetRelationCollection``1(Intermech.Interfaces.IUserSession,System.Int32,System.String)">
            <summary>Возвращает объект-получатель списка связей типа relationTypeID, при этом будет использоваться фильтрация
                состава на основе указанных настроек фильтрации</summary>
            <param name="session">Пользовательская сессия</param>
            <param name="relationTypeID">Тип связи</param>
            <param name="filtrationOwnerID">Уникальный ID настроек фильтрации, по которым будет проводиться фильтрация состава</param>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetRelationCollection``1(Intermech.Interfaces.IUserSession,System.Int32,Intermech.Interfaces.VersionsRule)">
            <summary>Возвращает объект-получатель списка связей типа relationTypeID, при этом будет использоваться фильтрация
                состава на основе указанных настроек фильтрации</summary>
            <param name="session">Пользовательская сессия</param>
            <param name="relationTypeID">Тип связи</param>
            <param name="rule">Набор правил фильтрации</param>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.ObjectConsistOf(Intermech.Interfaces.IUserSession,System.Int64,System.Int32,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.ObjectConsistOf(Intermech.Interfaces.IUserSession,System.Int64,System.Int32,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectComposition(Intermech.Interfaces.IUserSession,System.Int64,System.Int32,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{System.Int32}@,System.Boolean,Intermech.Interfaces.VersionsRule,System.String,System.Int32)">
            <summary>Получить состав объекта</summary>
            <param name="session">usrSession - пользовательская сессия</param>
            <param name="objectVersionID">ID версии родительского объекта, для которого ищется состав</param>
            <param name="objectTypeID">Тип родительского объекта, для которого ищется состав</param>
            <param name="columns">Коллекция столбцов для запроса состава из базы данных</param>
            <param name="conditions">Условия для запроса</param>
            <param name="searchRelationTypes">Типы связей по которым раскручивается состав</param>
            <param name="searchObjectTypes">Типы искомых объектов</param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="rule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="filtrationOwnerID">Уникальный ключ настроек фильтрации состава. Если фильтрация состава не требуется,
                можно указать константу <see cref="F:Intermech.Metadata.FiltrationRule.UserDefaults"/></param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypes">Если не null, указывает, состав объектов каких типов нужно разворачивать. Данное
                условие применяется только к объектам состава и не распространяется на объект objectID</param>
            <returns>SelectResult с указанными столбцами. Если нет состава или в случае ошибки вернёт пустой SelectResult</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectComposition(Intermech.Interfaces.IUserSession,System.Int64,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{System.Int32}@,System.Boolean,Intermech.Interfaces.VersionsRule,System.String,System.Int32)">
            <summary>Получить состав объекта</summary>
            <param name="session">usrSession - пользовательская сессия</param>
            <param name="objectVersionID">ID версии родительского объекта, для которого ищется состав</param>
            <param name="columns">Коллекция столбцов для запроса состава из базы данных</param>
            <param name="conditions">Условия для запроса</param>
            <param name="searchRelationTypes">Типы связей по которым раскручивается состав</param>
            <param name="searchObjectTypes">Типы искомых объектов</param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="rule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="filtrationOwnerID">Уникальный ключ настроек фильтрации состава. Если фильтрация состава не требуется,
                можно указать константу <see cref="F:Intermech.Metadata.FiltrationRule.UserDefaults"/></param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypes">Если не null, указывает, состав объектов каких типов нужно разворачивать. Данное
                условие применяется только к объектам состава и не распространяется на объект objectID</param>
            <returns>SelectResult с указанными столбцами. Если нет состава или в случае ошибки вернёт пустую DataTable</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.LoadComplexCompositions(Intermech.Interfaces.IUserSession,Intermech.Extensions.OneOrMore{System.Int64}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{System.Int32}@,System.Boolean,System.Boolean,Intermech.Interfaces.VersionsRule,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,System.String,System.Collections.Generic.Dictionary{System.Int64,System.Collections.Specialized.HybridDictionary},System.Int32,Intermech.Extensions.OneOrMore{System.Int32}@)">
            <summary>
            Получить состав/применяемость
            </summary>
            <param name="session">Сессия</param>
            <param name="objectVersionIDs">Объекты, для которых ищется применяемость/состав</param>
            <param name="columns">Коллекция столбцов для запроса состава из базы данных</param>
            <param name="composition">состав/Применяемость</param>
            <param name="searchRelationTypeIDs">Типы связей по которым раскручивается состав/применяемость</param>
            <param name="searchObjectTypeIDs"> Типы искомых объектов.
            Типы указываются непосредственно, дочерние типы не включаются в запрос автоматически.
            </param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="versionsRule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="conditions">Условия для запроса</param>
            <param name="filtrationOwnerId">Уникальный ключ настроек фильтрации состава. 
            Если фильтрация состава не требуется, можно указать константу Intermech.SystemGUIDs.filtrationAllVersions.
            </param>
            <param name="dbParams">Дополнительные параметры, которые будут добавлены к параметрам запроса в базу. 
            Например, для включения режима актуализации состава, для работы в определённых контекстах состава, т.п.</param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypeIDs">Если не null, указывает, состав объектов каких типов нужно разворачивать.
            Данное условие применяется только к объектам состава и не распространяется на объекты objects</param>   
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetRelationsFullInfo(Intermech.Interfaces.IUserSession,Intermech.Extensions.OneOrMore{System.Int64}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{System.Int32}@,System.Boolean,System.Boolean,Intermech.Interfaces.VersionsRule,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,System.String,System.Int32,Intermech.Extensions.OneOrMore{System.Int32}@)">
            <summary>
            Получить состав/применяемость в списке расширенной информации о связях и объектах
            </summary>
            <param name="session">Сессия</param>
            <param name="objectVersionIDs">Объекты, для которых ищется применяемость/состав</param>
            <param name="moreColumns">Дополнительная коллекция столбцов для запроса состава из базы данных</param>
            <param name="composition">состав/Применяемость</param>
            <param name="searchRelationTypeIDs">Типы связей по которым раскручивается состав/применяемость</param>
            <param name="searchObjectTypeIDs"> Типы искомых объектов.
            Типы указываются непосредственно, дочерние типы не включаются в запрос автоматически.
            </param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="versionsRule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="conditions">Условия для запроса</param>
            <param name="filtrationOwnerId">Уникальный ключ настроек фильтрации состава. 
            Если фильтрация состава не требуется, можно указать константу Intermech.SystemGUIDs.filtrationAllVersions.
            </param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypeIDs">Если не null, указывает, состав объектов каких типов нужно разворачивать.
            Данное условие применяется только к объектам состава и не распространяется на объекты objects</param>   
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.ObjectEntersIn(Intermech.Interfaces.IUserSession,System.Int64,System.Int32,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить применяемость версии объекта objectVersionID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.ObjectEntersIn(Intermech.Interfaces.IUserSession,System.Int64,System.Int32,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить применяемость версии объекта objectVersionID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.ObjectEntersInVersion(Intermech.Interfaces.IUserSession,System.Int64,System.Int32,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить применяемость версии объекта objectVersionID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.ObjectEntersInVersion(Intermech.Interfaces.IUserSession,System.Int64,System.Int32,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить применяемость версии объекта номер objectVersionID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectApplicability(Intermech.Interfaces.IUserSession,System.Int64,System.Int32,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{System.Int32}@,System.Boolean,Intermech.Interfaces.VersionsRule,System.String,System.Int32)">
            <summary>Получить применяемость объекта</summary>
            <param name="session">usrSession - пользовательская сессия</param>
            <param name="objectVersionID">ID версии дочернего объекта, для которого ищется применяемость</param>
            <param name="objectTypeID">Тип родительского объекта, для которого ищется применяемость</param>
            <param name="columns">Коллекция столбцов для запроса состава из базы данных</param>
            <param name="conditions">Условия для запроса</param>
            <param name="searchRelationTypes">Типы связей по которым раскручивается применяемость</param>
            <param name="searchObjectTypes">Типы искомых объектов</param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="rule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="filtrationOwnerID">Уникальный ключ настроек фильтрации состава. Если фильтрация состава не требуется,
                можно указать константу <see cref="F:Intermech.Metadata.FiltrationRule.UserDefaults"/></param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypes">Если не null, указывает, состав объектов каких типов нужно разворачивать. Данное
                условие применяется только к объектам состава и не распространяется на объект objectID</param>
            <returns>DataTable с указанными столбцами (если нет состава - вернёт пустую DataTable) или null в случае ошибки</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.GetObjectApplicability(Intermech.Interfaces.IUserSession,System.Int64,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{System.Int32}@,Intermech.Extensions.OneOrMore{System.Int32}@,System.Boolean,Intermech.Interfaces.VersionsRule,System.String,System.Int32)">
            <summary>Получить применяемость объекта</summary>
            <param name="session">usrSession - пользовательская сессия</param>
            <param name="objectVersionID">ID версии дочернего объекта, для которого ищется применяемость</param>
            <param name="columns">Коллекция столбцов для запроса состава из базы данных</param>
            <param name="conditions">Условия для запроса</param>
            <param name="searchRelationTypes">Типы связей по которым раскручивается применяемость</param>
            <param name="searchObjectTypes">Типы искомых объектов</param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="rule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="filtrationOwnerID">Уникальный ключ настроек фильтрации состава. Если фильтрация состава не требуется,
                можно указать константу <see cref="F:Intermech.Metadata.FiltrationRule.UserDefaults"/></param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypes">Если не null, указывает, состав объектов каких типов нужно разворачивать. Данное
                условие применяется только к объектам состава и не распространяется на объект objectID</param>
            <returns>DataTable с указанными столбцами (если нет состава - вернёт пустую DataTable) или null в случае ошибки</returns>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionExtensions.ObjectsSelect(Intermech.Interfaces.IUserSession,System.Int32,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,System.Int64,System.Object,System.Int32,System.Boolean,System.String)">
            <summary>
            Получить таблицу со списком объектов
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.SessionKeeperExtensions">
            <summary>Методы-расширения для SessionKeeper</summary>
        </member>
        <member name="M:Intermech.Interfaces.SessionKeeperExtensions.SessionGuarantee``1(Intermech.Interfaces.SessionKeeper,Intermech.Interfaces.SessionKeeperExtensions.NotNullSessionFunc{``0})">
            <summary>Вызов лямбды с гарантией создания сессии метод проверяет, что сессия не null,
                     а если null, то создаётся SessionKeeper и лямбда вызывается с его сессией</summary>
        </member>
        <member name="M:Intermech.Interfaces.SessionKeeperExtensions.SessionGuarantee(Intermech.Interfaces.SessionKeeper,Intermech.Interfaces.SessionKeeperExtensions.NotNullSessionAction)">
            <summary>Вызов лямбды с гарантией создания сессии метод проверяет, что сессия не null,
                     а если null, то создаётся SessionKeeper и лямбда вызывается с его сессией</summary>
        </member>
        <member name="T:Intermech.Interfaces.ISessionKeeper">
             <example>
             
             public void Example([CanBeNull] IUserSession session = null)
             {
                 using (var sk = UserSessionKeeper.Get(session))
                 {
                      Код работы с сессией sk.Session
                 }
             }
            
             // или
             
             public void Example([CanBeNull] SessionKeeper sessionKeeper = null)
             {
                 using (var sk = UserSessionKeeper.Get(sessionKeeper))
                 {
                     // Код работы с сессией sk.Session
                 }
             }
             
             // или
             
             public void Example([CanBeNull] IDBSessionable sessionable = null)
             {
                 using (var sk = UserSessionKeeper.Get(sessionable))
                 {
                     // Код работы с сессией sk.Session
                 }
             }
             
             </example>
            <remarks>Используется вместо IDBSessionable поскольку явно указана поддержка IDisposable</remarks>
        </member>
        <member name="T:Intermech.Interfaces.UserSessionKeeper">
            <summary>Простая реализация ISessionKeeper на основе SessionKeeper</summary>
            <summary>Простая реализация ISessionKeeper на основе SessionKeeper</summary>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionKeeper.Get(Intermech.Interfaces.IUserSession,System.Action{Intermech.Interfaces.IUserSession})">
            <summary>Гарантировано вернуть контейнер пользовательской сессии</summary>
            <param name="session">
            (По-умолчанию null) Пользовательская сессия. Если null, то будет создана новая сессия с помощью
            нового SessionKeeper-а, которому будет вызван Dispose при вызове Dispose у ISessionKeeper
            </param>
            <param name="callOnDispose">
            (по-умолчанию false)
            Метод, который должен быть вызван во время Dispose ISessionKeeper
            </param>
            <example>
            public void Example([CanBeNull] IUserSession session = null)
            {
                using (var sk = UserSessionKeeper.Get(session))
                {
                    // Код работы с сессией sk.Session
                }
            }
            </example>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionKeeper.Check(Intermech.Interfaces.IUserSession@,System.Action{Intermech.Interfaces.IUserSession})">
            <summary>Гарантировано вернуть контейнер пользовательской сессии</summary>
            <param name="session">
            (По-умолчанию null) Пользовательская сессия. Если null, то будет создана новая сессия с помощью
            нового SessionKeeper-а, которому будет вызван Dispose при вызове Dispose у ISessionKeeper
            </param>
            <param name="callOnDispose">
            (по-умолчанию false)
            Метод, который должен быть вызван во время Dispose ISessionKeeper
            </param>
            <example>
            public void Example([CanBeNull] IUserSession session = null)
            {
                using (var sk = UserSessionKeeper.Get(session))
                {
                    // Код работы с сессией sk.Session
                }
            }
            </example>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionKeeper.Get(Intermech.Interfaces.SessionKeeper,System.Boolean)">
            <summary>Гарантировано вернуть пользовательскую сессию</summary>
            <param name="sessionKeeper">SessionKeeper для которого будет получен интерфейс ISessionKeeper.
                                        Если null, то будет создан новый SessionKeeper, который будет освобождён при Dispose ISessionKeeper-а</param>
            <param name="disposeSessionKeeperOnDisposeISessionKeeper">(по-умолчанию false)
            Вызывать ли Dispose у SessionKeeper-а во время вызова Dispose ISessionKeeper</param>
            <example>
            public void Example([CanBeNull] SessionKeeper sessionKeeper = null)
            {
                using (var sk = UserSessionKeeper.Get(sessionKeeper))
                {
                    // Код работы с сессией sk.Session
                }
            }
            </example>
        </member>
        <member name="M:Intermech.Interfaces.UserSessionKeeper.Get(Intermech.Interfaces.IDBSessionable,System.Boolean)">
            <summary>Гарантировано вернуть пользовательскую сессию</summary>
            <param name="sessionable">IDBSessionable. Если null, то будет создана новая сессия с помощью нового
                                      SessionKeeper-а, которому будет вызван Dispose при вызове Dispose у ISessionKeeper</param>
            <param name="disposeSessionKeeperOnDisposeISessionKeeper">(по-умолчанию false)
            Вызывать ли Dispose у IDBSessionable во время вызова Dispose ISessionKeeper</param>
            <example>
            public void Example([CanBeNull] IDBSessionable sessionable = null)
            {
                using (var sk = UserSessionKeeper.Get(sessionable))
                {
                    // Код работы с сессией sk.Session
                }
            }
            </example>
        </member>
        <member name="T:Intermech.Interfaces.UserSessionKeeper.SessionKeeperWrapper">
            <summary>Простая реализация ISessionKeeper на основе SessionKeeper</summary>
        </member>
        <member name="T:Intermech.Interfaces.UserSessionKeeper.SessionableKeeper">
            <summary>Реализация ISessionKeeper возвращающая сессию из IDBSessionable.Session</summary>
        </member>
        <member name="T:Intermech.Kernel.Search.ColumnDescriptorComparer">
            <summary>Реализация <see><cref>IComparer</cref></see> для <see cref="T:Intermech.Kernel.Search.ColumnDescriptor"/></summary>
        </member>
        <member name="T:Intermech.Kernel.Search.ColumnDescriptorEqualityComparer">
            <summary>Реализация <see><cref>IComparer</cref></see> для <see cref="T:Intermech.Kernel.Search.ColumnDescriptor"/></summary>
        </member>
        <member name="T:Intermech.Extensions.DB.Source">
            <summary>Helper for <see cref="T:Intermech.Kernel.Search.AttributeSourceTypes"/></summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Source.Auto">
            <summary>Источник не указан</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Source.Object">
            <summary>Атрибут объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Source.Relation">
            <summary>Атрибут связи</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Source.Events">
            <summary>AttributeSourceTypes</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Source.History">
            <summary>Атрибут истории значений</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Source.FileStorage">
            <summary>Атрибут файлового шкафа</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Source.Snapshot">
            <summary>Атрибут итерации</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Source.Other">
            <summary>Прочие атрибуты</summary>
        </member>
        <member name="T:Intermech.Extensions.DB.Content">
            <summary>Helper for <see cref="T:Intermech.Kernel.Search.ColumnContents"/></summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Content.Text">
            <summary>Текстовое представление атрибута (например, заголовок объекта для ссылочного атрибута)</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Content.ID">
            <summary>Идентификационная часть атрибута (например, идентификатор объекта, на который ссылается атрибут). Внимание!
                ColumnContents.ID можно указывать только для атрибутов, имеющих идентификационную часть!</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Content.Date">
            <summary>Информация о дате модификации атрибута (только для типов Blob, ShortBlob и File)</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Content.Value">
            <summary>Для Blob и файлов содержит идентификатор файлового шкафа, для ftMeasured - значение атрибута, приведенное к
                базовой единице измерения. Для остальных типов не применимо!</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Content.String">
            <summary>Явное указание на использование строковой составляющей атрибута.</summary>
        </member>
        <member name="T:Intermech.Extensions.DB.Mapping">
            <summary>Helper for <see cref="T:Intermech.Kernel.Search.ColumnNameMapping"/></summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Mapping.Default">
            <summary>Имя атрибута + слова (идентификатор) для ColumnContents.ID, (дата модификации) для ColumnContents.Date и
                (место хранения) или (приведенное значение) для файлов (блобов) или единиц измерения</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Mapping.ID">
            <summary>Целочисленный идентификатор атрибута</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Mapping.Guid">
            <summary>Глобальный идентификатор атрибута</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Mapping.Alias">
            <summary>Псевдоним атрибута</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Mapping.ShortName">
            <summary>Краткое наименование атрибута</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Mapping.Name">
            <summary>Наименование атрибута</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Mapping.FieldName">
            <summary>Имя колонки в базе данных (только для обязательных атрибутов!)</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Mapping.Index">
            <summary>Порядковый номер колонки в DataTable</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Sort.NONE">
            <summary>Не сортировать</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Sort.ASC">
            <summary>Сортировать по возрастанию</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.Sort.DESC">
            <summary>Сортировать по убыванию</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.VersionID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.ObjectID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.ID">
            <summary>Идентификатор объекта (НЕ ВЕРСИИ!!!!!)</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.LcStepID">
            <summary>Идентификатор шага жизненного цикла</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.LcStepName">
            <summary>Наименование шага жизненного цикла</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.VersionNum">
            <summary>Номер версии объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.CheckOutBy">
            <summary>Кем взят на изменение</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.CheckOutByString">
            <summary>Кем взят на изменение</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.TypeID">
            <summary>Идентификатор типа объекта </summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.TypeName">
            <summary>Тип объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.OwnerID">
            <summary>Идентификатор владельца объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.OwnerName">
            <summary>Имя владельца объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.LevelID">
            <summary>Номер уровня продвижения объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.LevelName">
            <summary>Название уровня продвижения объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.ModifyDate">
            <summary>Дата модификации объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.AreaID">
            <summary>Идентификатор предметной области</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.AreaName">
            <summary>Название предметной области</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.VersionGuid">
            <summary>Глобальный идентификатор версии объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.Created">
            <summary>Дата создания объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.ProjectID">
            <summary>Принадлежность проекту (идентификатор)</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.ProjectName">
            <summary>Принадлежность проекту (название проекта)</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.ModificationID">
            <summary>Номер группы изменений</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.ModificationName">
            <summary>Наименование группы изменений</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.BaseVersion">
            <summary>Признак базовой версии</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.SiteID">
            <summary>Узел информационной сети</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.GUID">
            <summary>Глобальный идентификатор объекта (НЕ ВЕРСИИ!!!!)</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.VersionType">
            <summary>Состояние версии объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.Caption">
            <summary>Заголовок объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.Access">
            <summary>Уровень доступа объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.CreatorID">
            <summary>Идентификатор создателя объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.CreatorName">
            <summary>Имя создателя объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.ParentObjectVersionID">
            <summary>Идентификатор родительской версии объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.VersionsCount">
            <summary>Количество версий объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.RefsCount">
            <summary>Количество ссылок на версию объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.NestedInCount">
            <summary>Количество входимостей в версии объектов</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.ObjectAttr.LcStepChanged">
            <summary>Дата изменения шага ЖЦ</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.RelationAttr.PrjLinkID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.RelationAttr.ProjID">
            <summary>Идентификатор родительского объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.RelationAttr.PartID">
            <summary>Идентификатор дочернего объекта</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.RelationAttr.TypeID">
            <summary>Идентификатор типа связи</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.RelationAttr.TypeName">
            <summary>Название типа связи</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.RelationAttr.FromDate">
            <summary>Дата начала действия связи</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.RelationAttr.Guid">
            <summary>Глобальный идентификатор связи</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.RelationAttr.CreatorID">
            <summary>Создатель связи</summary>
        </member>
        <member name="F:Intermech.Extensions.DB.RelationAttr.CreatorName">
            <summary>Имя создателя связи</summary>
        </member>
        <member name="T:Intermech.Extensions.IDbAttributes">
             <summary>
             
             Обёртка над AttributeValues[] имеющая фиксированный словарь, позволяющий получать поля по ColumnDescriptor-у.
             Позволяет отвязываться от индексов полей при чтении значений
             
             </summary>
             <remarks>
             
             В качестве IReadOnlyDictionary выступает очень быстрый и нересурсоёмкий немутабельный словарь,
             у которого в том случае, если записей в словаре менее 15 - ключи и значения хранятся просто полями и поиск по ним идёт линейный.
             Для числа ключей менее 20 (подавляющее число запросов в БД) это более оптимально, чем создание полноценного словаря каждый раз.
             
             </remarks>
             
             <example>
             <code lang="C#">
             
             DbAttributes attrs = session
                .GetObjectAttributesValues(RequirementID,
                new int[] {
                    RequirementAttributes.Caption,
                    RequirementAttributes.RequirementType, // вид
                    RequirementAttributes.RequirementKind}, // тип
                GetAttributeValuesModes.IncludeBlobValues | GetAttributeValuesModes.IncludeCaption,
                true);
            
             string name = attrs[RequirementAttributes.Caption].GetString(/* Значение по-умолчанию string.Empty */);
             string type = attrs[RequirementAttributes.RequirementType].GetString(defaultStringValue /* Вручную указанное значение по-умолчанию */);
             long kind = attrs[RequirementAttributes.RequirementKind].GetLong(-1 /* Вручную указанное значение по-умолчанию */);
             
             </code>
             </example>
        </member>
        <member name="T:Intermech.Extensions.DbColumns.ColumnNameTemplate">
            <summary>
            Дескриптор шаблона заголовка колонки датасета, который генерируется ядром.
            </summary>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.FieldAsObjectID(System.Data.DataRow,System.Int32,System.Boolean)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="throwExceptionIfUnknownObjectId" /> == true и значение поля равно == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="throwExceptionIfUnknownObjectId">(По-умолчанию true) Генерировать ли исключительную ситуацию если поле не ссылается на конкретный объект (равно Consts.UnknownObjectId)</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.FieldAsObjectIdOrUnknown(System.Data.DataRow,System.Int32,System.Int64)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.TryGetFieldAsObjectID(System.Data.DataRow,System.Int32,System.Int64@,System.Boolean)">
            <summary>Попытаться получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="result">[out] Идентификатор объекта или </param>
            <param name="falseIfUnknownObjectId">(По-умолчанию true) Возвращать ли false если поле не ссылается на конкретный объект (равно Consts.UnknownObjectId)</param>
            <returns>True если значение поля отлично от Null и DBNull и <seealso cref="!:falseIfUnknownObjectId"/></returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.FieldAsObjectTypeID(System.Data.DataRow,System.Int32,System.Boolean)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="throwExceptionIfUnknownObjectId" /> == true и значение поля равно == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="throwExceptionIfUnknownObjectId">(По-умолчанию true) Генерировать ли исключительную ситуацию если поле не ссылается на конкретный объект</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.FieldAsObjectTypeIdOrUnknown(System.Data.DataRow,System.Int32,System.Int32)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.TryGetFieldAsObjectTypeID(System.Data.DataRow,System.Int32,System.Int32@,System.Boolean)">
            <summary>Попытаться получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="result">[out] Идентификатор объекта или </param>
            <param name="falseIfUnknownObjectId">(По-умолчанию true) Возвращать ли false если поле не ссылается на конкретный объект (равно Consts.UnknownObjectTypeId)</param>
            <returns>True если значение поля отлично от Null и DBNull и <seealso cref="!:falseIfUnknownObjectId"/></returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.FieldAsRelationID(System.Data.DataRow,System.Int32,System.Boolean)">
            <summary>Получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="throwExceptionIfUnknownRelationId" /> == true и значение поля равно == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="throwExceptionIfUnknownRelationId">(По-умолчанию true) Генерировать ли исключительную ситуацию если поле не ссылается на конкретную связь (равно Consts.UnknownPrjLinkId)</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.FieldAsRelationIdOrUnknown(System.Data.DataRow,System.Int32,System.Int64)">
            <summary>Получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.TryGetFieldAsRelationID(System.Data.DataRow,System.Int32,System.Int64@,System.Boolean)">
            <summary>Попытаться получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="result">[out] Идентификатор связи или </param>
            <param name="falseIfUnknownRelationId">(По-умолчанию true) Возвращать ли false если поле не ссылается на конкретную связь (равно Consts.UnknownPrjLinkId)</param>
            <returns>True если значение поля отлично от Null и DBNull и <seealso cref="!:falseIfUnknownRelationId"/></returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.FieldAsRelationTypeID(System.Data.DataRow,System.Int32,System.Boolean)">
            <summary>Получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="throwExceptionIfUnknownRelationId" /> == true и значение поля равно == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="throwExceptionIfUnknownRelationId">(По-умолчанию true) Генерировать ли исключительную ситуацию если поле не ссылается на конкретную связь</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.FieldAsRelationTypeIdOrUnknown(System.Data.DataRow,System.Int32,System.Int32)">
            <summary>Получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Extensions.DataRowExtensions.TryGetFieldAsRelationTypeID(System.Data.DataRow,System.Int32,System.Int32@,System.Boolean)">
            <summary>Попытаться получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.DataRow.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="dataRow">Строка таблицы</param>
            <param name="fieldIndex">Номер поля</param>
            <param name="result">[out] Идентификатор связи или </param>
            <param name="falseIfUnknownRelationId">(По-умолчанию true) Возвращать ли false если поле не ссылается на конкретную связь (равно Consts.UnknownRelationTypeId)</param>
            <returns>True если значение поля отлично от Null и DBNull и <seealso cref="!:falseIfUnknownRelationId"/></returns>
        </member>
        <member name="T:Intermech.Extensions.IdbAttributableExtensions">
            <summary>Класс-расширение над IDBAttributable</summary>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.UpdateLinkToObjectWithCheck(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64,System.Boolean)">
            <summary>Сохранение в объект или связь ссылки на объект с проверкой существования объекта в БД и удалением ссылки из БД если ссылка
                     пустая или объекта нет</summary>
            <param name="iDbAttributable">Объект или связь, в атрибуты которой должна сохраняться ссылка на объект</param>
            <param name="attributeID">Идентификатор атрибута, в который должна быть сохранена ссылка на объекта</param>
            <param name="objectVersionID">Идентификатор версии объекта, на который должна быть установленна ссылка</param>
            <param name="deleteAttributeIfNoTargetObject">Удалить атрибут из списка атрибутов если attributeID == Intermech.Consts.UnknownObjectId
                                                          либо объект отсутствует в БД</param>
            <returns>Переданный в параметры objectVersionID или Intermech.Consts.UnknownObjectId если объект отсутствует в БД</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrGuidValueOrDefault(Intermech.Interfaces.IDBAttributable,System.Int32,System.Guid)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения Guid</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrGuidValueOrNull(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения Guid</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrGuidValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Guid@)">
            <summary>Попытаться получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения Guid</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureGuidValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Если атрибут у сущности не найден</exception>
            <exception cref="T:Intermech.Interfaces.AttributeValueIsEmptyException">Если значение атрибута отсутствует</exception>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения Guid</exception>
            <exception cref="T:System.FormatException">Если значение атрибута (строка) не допускает конвертации в Guid</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrGuidValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Guid,System.Boolean,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи Guid</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <param name="autoDelAttrIfEmpty">Если true, то атрибут будет удалён в случае передачи Guid.Empty</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrNullableGuidValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Nullable{System.Guid},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи. Если передать null - атрибут удалится</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи Guid</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrIntValueOrDefault(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrIntValueOrNull(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrIntValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrIntValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64@)">
            <summary>Попытаться получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureIntValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Если атрибут у сущности не найден</exception>
            <exception cref="T:Intermech.Interfaces.AttributeValueIsEmptyException">Если значение атрибута отсутствует</exception>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetIntValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrIntValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrNullableIntValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Nullable{System.Int64},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrMeasuredValueOrDefault(Intermech.Interfaces.IDBAttributable,System.Int32,Intermech.Interfaces.MeasureDescriptor,Intermech.Interfaces.MeasuredValue)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения значения в заданном формате</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultMeasure">Единица измерения по-умолчанию, используется если не указана явно</param>
            <param name="defaultValue">(Optional) Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrMeasuredValue(Intermech.Interfaces.IDBAttributable,System.Int32,Intermech.Interfaces.MeasureDescriptor,Intermech.Interfaces.MeasuredValue@)">
            <summary>Попытаться получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения значения в заданном формате</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="defaultMeasure">Единица измерения по-умолчанию, используется если не указана явно</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureMeasuredValue(Intermech.Interfaces.IDBAttributable,System.Int32,Intermech.Interfaces.MeasureDescriptor,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Если атрибут у сущности не найден</exception>
            <exception cref="T:Intermech.Interfaces.AttributeValueIsEmptyException">Если значение атрибута отсутствует</exception>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения значения в заданном формате</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultMeasure">Единица измерения по-умолчанию, используется если не указана явно</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrMeasuredValue(Intermech.Interfaces.IDBAttributable,System.Int32,Intermech.Interfaces.MeasuredValue,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrEnumValueOrDefault``1(Intermech.Interfaces.IDBAttributable,System.Int32,``0)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение атрибута лежит вне диапазона допустимых
                значений типа <see cref="!:TEnum"/></exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrEnumValueOrNull``1(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение атрибута лежит вне диапазона допустимых
                значений типа <see cref="!:TEnum"/></exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrEnumValue``1(Intermech.Interfaces.IDBAttributable,System.Int32,``0@)">
            <summary>Попытаться получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Передан пустой идентификатор атрибута</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение атрибута лежит вне диапазона допустимых
                значений типа <see cref="!:TEnum"/></exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureEnumValue``1(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Передан пустой идентификатор атрибута</exception>
            <exception cref="T:Intermech.AttributeNotFoundException">Если атрибут у сущности не найден</exception>
            <exception cref="T:Intermech.Interfaces.AttributeValueIsEmptyException">Если значение атрибута отсутствует</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение атрибута лежит вне диапазона допустимых
                значений типа <see cref="!:TEnum"/></exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrEnumValue``1(Intermech.Interfaces.IDBAttributable,System.Int32,``0,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Передан пустой идентификатор атрибута</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Переданное значение лежит вне диапазона допустимых
                значений типа <see cref="!:TEnum"/></exception>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrNullableEnumValue``1(Intermech.Interfaces.IDBAttributable,System.Int32,System.Nullable{``0},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Передан пустой идентификатор атрибута</exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Переданное значение лежит вне диапазона допустимых
                значений типа <see cref="!:TEnum"/></exception>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrObjLinkValueOrDefault(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">(Optional) (По умолчанию Consts.UnknownObjectId) Значение по-умолчанию в том случае, если
                атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута или <see cref="F:Intermech.Consts.UnknownObjectId"/></returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrObjLinkValueOrNull(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута или <see cref="F:Intermech.Consts.UnknownObjectId"/></returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrObjLinkValue(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrObjLinkValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64@)">
            <summary>Попытаться получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureObjLinkValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Если атрибут у сущности не найден</exception>
            <exception cref="T:Intermech.Interfaces.AttributeValueIsEmptyException">Если значение атрибута отсутствует</exception>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrObjLinkValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64,System.Boolean,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <param name="autoDelAttrIfEmpty">Если true, то атрибут будет удалён в случае передачи Consts.UnknownObjectID или идентификатора несуществующего объекта</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrObjLinkOrNull``1(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить интерфейс объекта, на который ссылается атрибут</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrObjLinkOrNull(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить интерфейс объекта, на который ссылается атрибут</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута или null</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrObjLinkId(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64@,System.Boolean)">
            <summary>Получить идентификатор объекта, на который ссылается атрибут</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">Идентификатор объекта, на который ссылается аттрибут</param>
            <param name="returnFalseIfUnknownObjectId">
            Если true, то метод вернёт true только в том случе, если атрибут найден и ссылается на реально существующий объект.
            В противном случае метод вернёт true если ссылочный атрибут найден, даже если его значение Consts.UnknownObjectId
            </param>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrObjLink``1(Intermech.Interfaces.IDBAttributable,System.Int32,``0@)">
            <summary>Попытаться получить интерфейс объекта, на который ссылается атрибут объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrObjLink(Intermech.Interfaces.IDBAttributable,System.Int32,Intermech.Interfaces.IDBObject@)">
            <summary>Попытаться получить интерфейс объекта, на который ссылается атрибут объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureObjLink``1(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Если атрибут у сущности не найден</exception>
            <exception cref="T:Intermech.Interfaces.AttributeValueIsEmptyException">Если значение атрибута отсутствует</exception>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureObjLink(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Если атрибут у сущности не найден</exception>
            <exception cref="T:Intermech.Interfaces.AttributeValueIsEmptyException">Если значение атрибута отсутствует</exception>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrObjLink``1(Intermech.Interfaces.IDBAttributable,System.Int32,``0,System.Boolean,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи целочисленного значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <param name="autoDelAttrIfEmpty">Если true, то атрибут будет удалён в случае передачи Consts.UnknownObjectID или идентификатора несуществующего объекта</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrBoolValueOrDefault(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения булевого значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">(Optional) (По умолчанию defaultValue) Значение по-умолчанию в том случае, если атрибут
                отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrBoolValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrBoolValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean@)">
            <summary>Попытаться получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения булевого значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.HasAttrBoolValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean@,System.Boolean)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="defaultValue">Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureBoolValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения булевого значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrBoolValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи булевого значения</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrDateTimeValueOrDefault(Intermech.Interfaces.IDBAttributable,System.Int32,System.DateTime)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения даты-времени</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrDateTimeValueOrNull(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения даты-времени</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrDateTimeValueOrDefault(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения даты-времени</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута. DateTime.MinValue если атрибут отсутствует, или пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrDateTimeValue(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута. DateTime.MinValue если атрибут отсутствует, или пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrDateTimeValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.DateTime@)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения даты-времени</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута или DateTime.MinValue если не удалось прочитать</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.HasAttrDateTimeValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.DateTime@)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.HasAttrDateTimeValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.DateTime@,System.DateTime)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="defaultValue">Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDateTimeValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения даты-времени</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrDateTimeValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.DateTime,System.Boolean,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи даты-времени</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта, этот атрибут будет добавляться</param>
            <param name="autoDelAttrIfEmpty">Если true, то атрибут будет удалён в случае передачи DateTime.MinValue</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrNullableDateTimeValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Nullable{System.DateTime},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи даты-времени</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrStrValueOrEmpty(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения строки</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <returns>Значение атрибута или пустая строка, если атрибут пуст или не найден. В любом случае не null.</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrStrValueOrDefault(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения строки</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">Значение по-умолчанию в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrStrValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.String@)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения строки</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута или пустая строка если атрибут пуст или не найден. В любом случае не null</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureStrValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения строки</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="checkNonEmpty">Проверять ли что значение не равно String.Empty (применяется Trim)</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetStrValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="checkNonEmpty">Проверять ли что значение не равно String.Empty (применяется Trim)</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrStrValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи строки</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrDoubleValueOrDefault(Intermech.Interfaces.IDBAttributable,System.Int32,System.Double)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения числа с плавающей точкой</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="defaultValue">(Optional) (По умолчанию double.NaN) Значение по-умолчанию в том случае, если атрибут
                отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrDoubleValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Double@)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения числа с плавающей точкой</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута или double.NaN если значение отсутствует</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDoubleValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает чтения числа с плавающей точкой</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrDoubleValue(Intermech.Interfaces.IDBAttributable,System.Int32,System.Double,System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <exception cref="T:Intermech.OperationNotApplicableException">Если тип атрибута не допускает записи числа с плавающей точкой</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrMultiIntValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IEnumerable{System.Int64},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValues">Перечисление новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.AddValueToMultiIntAttr(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64,System.Boolean,System.Boolean)">
            <summary>Добавить значение в атрибут объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <param name="dontAddIfAlreadyInList">Если true то перед добавлением будет происходить проверка есть ли уже значение в списке и добавляться только если оно там отсутствует</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrMultiObjLinkValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IEnumerable{System.Int64},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValues">Перечисление новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.AddValueToMultiObjLinkAttr(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64,System.Boolean,System.Boolean)">
            <summary>Добавить значение в атрибут объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <param name="dontAddIfAlreadyInList">Если true то перед добавлением будет происходить проверка есть ли уже значение в списке и добавляться только если оно там отсутствует</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrMultiStrValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValues">Перечисление новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.AddValueToMultiStrAttr(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.Boolean,System.Boolean)">
            <summary>Добавить значение в атрибут объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <param name="dontAddIfAlreadyInList">Если true то перед добавлением будет происходить проверка есть ли уже значение в списке и добавляться только если оно там отсутствует</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrMultiBoolValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IEnumerable{System.Boolean},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValues">Перечисление новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.AddValueToMultiBoolAttr(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Добавить значение в атрибут объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <param name="dontAddIfAlreadyInList">Если true то перед добавлением будет происходить проверка есть ли уже значение в списке и добавляться только если оно там отсутствует</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrMultiDoubleValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IEnumerable{System.Double},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValues">Перечисление новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.AddValueToMultiDoubleAttr(Intermech.Interfaces.IDBAttributable,System.Int32,System.Double,System.Boolean,System.Boolean)">
            <summary>Добавить значение в атрибут объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <param name="dontAddIfAlreadyInList">Если true то перед добавлением будет происходить проверка есть ли уже значение в списке и добавляться только если оно там отсутствует</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttrMultiIntValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IEnumerable{System.DateTime},System.Boolean)">
            <summary>Установить значение атрибуту объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValues">Перечисление новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.AddValueToMultiDateTimeAttr(Intermech.Interfaces.IDBAttributable,System.Int32,System.DateTime,System.Boolean,System.Boolean)">
            <summary>Добавить значение в атрибут объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="newValue">новых значений атрибута. null будет обработан как пустое перечисление</param>
            <param name="autoAddAttrIfNotFound">Если true, то в случае отсутствия атрибута у объекта или связи, этот атрибут будет добавляться</param>
            <param name="dontAddIfAlreadyInList">Если true то перед добавлением будет происходить проверка есть ли уже значение в списке и добавляться только если оно там отсутствует</param>
            <returns>true значение успешно установленно</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrIntValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrIntValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IReadOnlyList{System.Int64}@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureIntValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureIntValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrObjLinkValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrObjLinkValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IReadOnlyList{System.Int64}@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureObjLinkValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureObjLinkValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrStrValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrNotEmptyStrValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список не пустых (применяется Trim) значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrStrValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IReadOnlyList{System.String}@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrNonEmptyStrValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IReadOnlyList{System.String}@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureStrValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="checkNonEmpty">Проверять ли что значение не равно String.Empty (применяется Trim)</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureStrValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="checkNonEmpty">Проверять ли что значение не равно String.Empty (применяется Trim)</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrBoolValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrBoolValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IReadOnlyList{System.Boolean}@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureBoolValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureBoolValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrDoubleValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrDoubleValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IReadOnlyList{System.Double}@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDoubleValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDoubleValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrDateTimeValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrDateTimeValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.Collections.Generic.IReadOnlyList{System.DateTime}@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDateTimeValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDateTimeValues(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrIntValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrIntValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64[]@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="result">[out] Значение атрибута</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureIntValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureIntValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrObjLinkValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrObjLinkValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64[]@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureObjLinkValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureObjLinkValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrStrValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrNotEmptyStrValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список не пустых (применяется Trim) значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrStrValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.String[]@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrNonEmptyStrValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.String[]@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureStrValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="checkNonEmpty">Проверять ли что значение не равно String.Empty (применяется Trim)</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureStrValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="checkNonEmpty">Проверять ли что значение не равно String.Empty (применяется Trim)</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrBoolValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrBoolValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.Boolean[]@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureBoolValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureBoolValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrDoubleValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrDoubleValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.Double[]@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDoubleValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDoubleValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrDateTimeValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider)">
            <summary>Получить список значений атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.TryGetAttrDateTimeValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.DateTime[]@,System.IFormatProvider)">
            <summary>Получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="result">[out] Значение атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <returns>True если атрибут найден и он не пуст</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDateTimeValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.IFormatProvider,System.String)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttrSureDateTimeValuesArray(Intermech.Interfaces.IDBAttributable,System.Int32,System.String,System.IFormatProvider)">
            <summary>Проверить наличие, заполненность и получить значение атрибута объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information</param>
            <param name="exceptionMessage">Сообщение об ошибке в том случае, если атрибут отсутствует, либо не заполнен</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.FormatMessageAttrNotFound(Intermech.Interfaces.IDBAttributable,System.Int32)">
            <summary>Сформировать строку для сообщения о том, что атрибут не найден</summary>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.DeleteAttribute(Intermech.Interfaces.IDBAttributable,System.Int32,System.Int64)">
            <summary>Удаление атрибута у объекта или связи</summary>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута</param>
            <param name="deleteMode">Зарезервировано</param>
            <returns>An IDBAttribute</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.AttributeByID(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Гарантированное получение атрибута по его идентификатору.
                     Если атрибута нет, то генерирует <see cref="T:Intermech.AttributeNotFoundException"/></summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Сообщение об ошибке</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута, в который должна быть сохранена ссылка на объекта</param>
            <param name="exceptionMessage">(Optional) Сообщение об ошибке в том случае, если атрибут отсутствует</param>
            <returns>Интерфейс атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.AttributeByGuid(Intermech.Interfaces.IDBAttributable,System.Guid,System.String)">
            <summary>Гарантированное получение атрибута по его идентификатору. Если атрибута нет, то генерирует AttributeNotFoundException</summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Сообщение об ошибке</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeGuid">Глобальный идентификатор атрибута, в который должна быть сохранена ссылка на объекта</param>
            <param name="exceptionMessage">(Optional) Сообщение об ошибке в том случае, если атрибут отсутствует</param>
            <returns>Интерфейс атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttributeAndCheckNotEmpty(Intermech.Interfaces.IDBAttributable,System.Int32,System.String)">
            <summary>Гарантированное получение непустого атрибута по его идентификатору. Если атрибута нет, то генерирует
                     AttributeNotFoundException, если атрибут пуст - AttributeValueIsEmptyException</summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Если атрибут у сущности не найден</exception>
            <exception cref="T:Intermech.Interfaces.AttributeValueIsEmptyException">Если значение атрибута отсутствует</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeID">Идентификатор атрибута, в который должна быть сохранена ссылка на объекта</param>
            <param name="exceptionMessage">(Optional) Сообщение об ошибке в том случае, если атрибут отсутствует или пуст</param>
            <returns>Интерфейс атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.GetAttributeAndCheckNotEmpty(Intermech.Interfaces.IDBAttributable,System.Guid,System.String)">
            <summary>Гарантированное получение непустого атрибута по его идентификатору. Если атрибута нет, то генерирует AttributeNotFoundException</summary>
            <exception cref="T:Intermech.AttributeNotFoundException">Если атрибут у сущности не найден</exception>
            <exception cref="T:Intermech.Interfaces.AttributeValueIsEmptyException">Если значение атрибута отсутствует</exception>
            <param name="iDbAttributable"></param>
            <param name="attributeGuid">Глобальный идентификатор атрибута, в который должна быть сохранена ссылка на объекта</param>
            <param name="exceptionMessage">(Optional) Сообщение об ошибке в том случае, если атрибут отсутствует или пуст</param>
            <returns>Интерфейс атрибута</returns>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttributesValues(Intermech.Interfaces.IDBAttributable,System.Boolean,System.Boolean,System.Boolean,Intermech.Interfaces.GetAttributeValuesModes,Intermech.Interfaces.AttributeValues[])">
            <summary>
            Записывает значения атрибутам объекта посредством массива valuesList. Недостающие атрибуты
            добавляются объекту. Часть обязательных атрибутов тоже может быть записана данным методом.
            Если valuesList.ReadOnly=true, то запись игнорируется. Блобы также игнорируются.
            Внимание!!! Если deleteNotExistingAttributes=true, то атрибуты, отсутствующие в данном 
            списке, будут удалены (кроме обязательных атрибутов). При этом dontDeleteBlobs=true означает,
            что блобовые атрибуты удаляться не будут.
            Если returnDelta==true, то ф-ция возвращает массив атрибутов, которые были изменены сервером.
            Если таких атрибутов нет (или returnDelta==false), то ф-ция возвращает null.
            </summary>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttributesValues(Intermech.Interfaces.IDBAttributable,System.Boolean,System.Boolean,Intermech.Interfaces.AttributeValues[])">
            <summary>
            returnDelta=false
            </summary>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttributesValues(Intermech.Interfaces.IDBAttributable,Intermech.Interfaces.AttributeValues[])">
            <summary>
            Аналогично предыдущему методу, только deleteNotExistingAttributes=false, dontDeleteBlobs=true,
            returnDelta=false
            </summary>
        </member>
        <member name="M:Intermech.Extensions.IdbAttributableExtensions.SetAttributesValuesEx(Intermech.Interfaces.IDBAttributable,System.Boolean,System.Boolean,System.Boolean,Intermech.Interfaces.GetAttributeValuesModes,Intermech.Interfaces.AttributeValues[])">
            <summary>
             Установить значения атрибутов, вернув список исключений, которые произошли при попытке записи
             значений атрибутов.
            </summary>
            <param name="iDbAttributable">
            Объект или связь, в атрибуты которой должна сохраняться ссылка на объект.
            </param>
            <param name="deleteNotExistingAttributes">Удалять несуществующие атрибуты. </param>
            <param name="dontDeleteBlobs">Не удалять Blob-атрибуты. </param>
            <param name="returnDelta">Вернуть разницу значений атрибутов. </param>
            <param name="modes">Режимы. </param>
            <param name="valuesList">Значения атрибутов. </param>
            <returns>
             Словарь типа: Наименование атрибута=Исключение, произошедшее при записи значения атрибута.
            </returns>
        </member>
        <member name="T:Intermech.Extensions.IDBAttributeExtensions">
            <summary>Расширения интерфейса IDBAttribute</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleIntValues(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleIntValues(Intermech.Interfaces.IDBAttribute,System.Collections.Generic.IReadOnlyList{System.Int64}@,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута.
                     Получить список значений атрибута. В том случае, если атрибут == null или пуст - вернёт null</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleObjLinkValues(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null
                     Из результата исключаются Consts.UnknownObjectId</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleObjLinkValues(Intermech.Interfaces.IDBAttribute,System.Collections.Generic.IReadOnlyList{System.Int64}@,System.IFormatProvider)">
            <summary>Получить список значений атрибута. В том случае, если атрибут == null, пуст, или кол-во заполненных значений == 0 - вернёт null.
                     Из результата исключаются Consts.UnknownObjectId</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleStrValues(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleNotEmptyStrValues(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута отличных от String.Empty. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleStrValues(Intermech.Interfaces.IDBAttribute,System.Collections.Generic.IReadOnlyList{System.String}@,System.IFormatProvider,System.Boolean)">
            <summary>Проверяет наличие и заполненность списка значений атрибута. Получить список значений атрибута.
                     В том случае, если атрибут == null или пуст - вернёт null</summary>
            <param name="result"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
            <param name="onlyNonEmptyStrings">Если true в результате будут присутствовать только значения, отличные от String.Empty</param>
            <param name="iDbAttribute"></param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleStrValues(Intermech.Interfaces.IDBAttribute,System.Collections.Generic.IReadOnlyList{System.String}@,System.Boolean,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута. Получить список значений атрибута.
                     В том случае, если атрибут == null или пуст - вернёт null</summary>
            <param name="result"></param>
            <param name="onlyNonEmptyStrings">Если true в результате будут присутствовать только значения, отличные от String.Empty</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
            <param name="iDbAttribute"></param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleBoolValues(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleBoolValues(Intermech.Interfaces.IDBAttribute,System.Collections.Generic.IReadOnlyList{System.Boolean}@,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута.
                     Получить список значений атрибута. В том случае, если атрибут == null или пуст - вернёт null</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleDateTimeValues(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleDateTimeValues(Intermech.Interfaces.IDBAttribute,System.Collections.Generic.IReadOnlyList{System.DateTime}@,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута.
                     Получить список значений атрибута. В том случае, если атрибут == null или пуст - вернёт null</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleDoubleValues(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleDoubleValues(Intermech.Interfaces.IDBAttribute,System.Collections.Generic.IReadOnlyList{System.Double}@,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута.
                     Получить список значений атрибута. В том случае, если атрибут == null или пуст - вернёт null</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleIntValuesArray(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleIntValuesArray(Intermech.Interfaces.IDBAttribute,System.Int64[]@,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута.
                     Получить список значений атрибута. В том случае, если атрибут == null или пуст - вернёт null</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleObjLinkValuesArray(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null
                     Из результата исключаются Consts.UnknownObjectId</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleObjLinkValuesArray(Intermech.Interfaces.IDBAttribute,System.Int64[]@,System.IFormatProvider)">
            <summary>Получить список значений атрибута. В том случае, если атрибут == null, пуст, или кол-во заполненных значений == 0 - вернёт null.
                     Из результата исключаются Consts.UnknownObjectId</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleStrValuesArray(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleNotEmptyStrValuesArray(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута отличных от String.Empty. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleStrValuesArray(Intermech.Interfaces.IDBAttribute,System.String[]@,System.IFormatProvider,System.Boolean)">
            <summary>Проверяет наличие и заполненность списка значений атрибута. Получить список значений атрибута.
                     В том случае, если атрибут == null или пуст - вернёт null</summary>
            <param name="result"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
            <param name="onlyNonEmptyStrings">Если true в результате будут присутствовать только значения, отличные от String.Empty</param>
            <param name="iDbAttribute"></param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleStrValuesArray(Intermech.Interfaces.IDBAttribute,System.String[]@,System.Boolean,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута. Получить список значений атрибута.
                     В том случае, если атрибут == null или пуст - вернёт null</summary>
            <param name="result"></param>
            <param name="onlyNonEmptyStrings">Если true в результате будут присутствовать только значения, отличные от String.Empty</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
            <param name="iDbAttribute"></param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleBoolValuesArray(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleBoolValuesArray(Intermech.Interfaces.IDBAttribute,System.Boolean[]@,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута.
                     Получить список значений атрибута. В том случае, если атрибут == null или пуст - вернёт null</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleDateTimeValuesArray(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleDateTimeValuesArray(Intermech.Interfaces.IDBAttribute,System.DateTime[]@,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута.
                     Получить список значений атрибута. В том случае, если атрибут == null или пуст - вернёт null</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetMultipleDoubleValuesArray(Intermech.Interfaces.IDBAttribute,System.IFormatProvider)">
            <summary>Получить список значений атрибута. Корректно работает с null</summary>
            <param name="iDbAttribute"></param>
            <param name="formatProvider">An object that supplies culture-specific formatting information.</param>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.TryGetAnyOfMultipleDoubleValuesArray(Intermech.Interfaces.IDBAttribute,System.Double[]@,System.IFormatProvider)">
            <summary>Проверяет наличие и заполненность списка значений атрибута.
                     Получить список значений атрибута. В том случае, если атрибут == null или пуст - вернёт null</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBAttributeExtensions.GetAsMeasuredValueOrDefault(Intermech.Interfaces.IDBAttribute,Intermech.Interfaces.MeasureDescriptor,Intermech.Interfaces.MeasuredValue)">
            <summary>Получить значение атрибута в виде измеряемого в единицах измерения значения</summary>
            <param name="iDbAttribute"></param>
            <param name="defaultMeasure">Едина измерения по-умолчанию. Используется если не указана в атрибуте явно.</param>
            <param name="defaultValue">(По умолчанию null) Значение по умолчанию</param>
            <returns>Прочитанное из атрибута значение, либо null (если атрибут не найден, он пуст, значение не удаётся конвертировать)</returns>
        </member>
        <member name="M:Intermech.Extensions.IDBConfigurationsExtensions.ReadString(Intermech.Interfaces.IDBConfigurations,System.String,System.String,System.String,System.String,Intermech.DBConfigMode)">
            <summary>Прочитать строковый параметр</summary>
            <param name="configuration"/>
            <param name="moduleName">Имя модуля, который сохраняет конфигурации</param>
            <param name="section">Имя секции</param>
            <param name="param">Имя параметра</param>
            <param name="defaultValue">(По-умолчанию null) Значение параметра по умолчанию</param>
            <param name="configMode">(По-умолчанию DBConfigMode.UserAndGlobal) Метод чтения параметра</param>
        </member>
        <member name="M:Intermech.Extensions.IDBConfigurationsExtensions.ReadInteger(Intermech.Interfaces.IDBConfigurations,System.String,System.String,System.String,System.Int64,Intermech.DBConfigMode)">
            <summary>Прочитать целочисленный параметр</summary>
            <param name="configuration"/>
            <param name="moduleName">Имя модуля, который сохраняет конфигурации</param>
            <param name="section">Имя секции</param>
            <param name="param">Имя параметра</param>
            <param name="defaultValue">(По-умолчанию 0) Значение параметра по умолчанию</param>
            <param name="configMode">(По-умолчанию DBConfigMode.UserAndGlobal) Метод чтения параметра</param>
        </member>
        <member name="M:Intermech.Extensions.IDBConfigurationsExtensions.ReadDouble(Intermech.Interfaces.IDBConfigurations,System.String,System.String,System.String,System.Double,Intermech.DBConfigMode)">
            <summary>Прочитать вещественный параметр</summary>
            <param name="configuration"/>
            <param name="moduleName">Имя модуля, который сохраняет конфигурации</param>
            <param name="section">Имя секции</param>
            <param name="param">Имя параметра</param>
            <param name="defaultValue">(По-умолчанию 0.0) Значение параметра по умолчанию</param>
            <param name="configMode">(По-умолчанию DBConfigMode.UserAndGlobal) Метод чтения параметра</param>
        </member>
        <member name="M:Intermech.Extensions.IDBConfigurationsExtensions.ReadBool(Intermech.Interfaces.IDBConfigurations,System.String,System.String,System.String,System.Boolean,Intermech.DBConfigMode)">
            <summary>Прочитать логический параметр</summary>
            <param name="configuration"/>
            <param name="moduleName">Имя модуля, который сохраняет конфигурации</param>
            <param name="section">Имя секции</param>
            <param name="param">Имя параметра</param>
            <param name="defaultValue">(По-умолчанию false) Значение параметра по умолчанию</param>
            <param name="configMode">(По-умолчанию DBConfigMode.UserAndGlobal) Метод чтения параметра</param>
        </member>
        <member name="M:Intermech.Extensions.IDBConfigurationsExtensions.ReadDateTime(Intermech.Interfaces.IDBConfigurations,System.String,System.String,System.String,System.DateTime,Intermech.DBConfigMode)">
            <summary>Прочитать дату</summary>
            <param name="configuration"/>
            <param name="moduleName">Имя модуля, который сохраняет конфигурации</param>
            <param name="section">Имя секции</param>
            <param name="param">Имя параметра</param>
            <param name="defaultValue">(По-умолчанию DateTime.MinValue) Значение параметра по умолчанию</param>
            <param name="configMode">(По-умолчанию DBConfigMode.UserAndGlobal) Метод чтения параметра</param>
        </member>
        <member name="M:Intermech.Extensions.IDBConfigurationsExtensions.ReadDateTime(Intermech.Interfaces.IDBConfigurations,System.String,System.String,System.String,Intermech.DBConfigMode)">
            <summary>Прочитать дату</summary>
            <param name="configuration"/>
            <param name="moduleName">Имя модуля, который сохраняет конфигурации</param>
            <param name="section">Имя секции</param>
            <param name="param">Имя параметра</param>
            <param name="configMode">(По-умолчанию DBConfigMode.UserAndGlobal) Метод чтения параметра</param>
        </member>
        <member name="M:Intermech.Extensions.IDBConfigurationsExtensions.ReadEnum``1(Intermech.Interfaces.IDBConfigurations,System.String,System.String,System.String,``0,Intermech.DBConfigMode)">
            <summary>Прочитать из конфигурации enum</summary>
            <param name="configuration"/>
            <param name="moduleName">Имя модуля, который сохраняет конфигурации</param>
            <param name="section">Имя секции</param>
            <param name="param">Имя параметра</param>
            <param name="defaultValue">(Optional) Значение параметра по умолчанию</param>
            <param name="configMode">(По-умолчанию DBConfigMode.UserAndGlobal) Метод чтения параметра</param>
        </member>
        <member name="T:Intermech.Extensions.IDBObjectExtensions">
            <summary>Класс-расширение над IDBObject</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.IsTypeOrSubtype(Intermech.Interfaces.IDBObject,System.Int32)">
            <summary>Проверяет что объект является объектом переданного типа, либо любого из потомков этого типа</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.CheckIsTypeOrSubtype(Intermech.Interfaces.IDBObject,System.Int32,System.String)">
            <summary>Проверяет что объект является объектом переданного типа, либо любого из потомков этого типа
                     Сваливает Exception в том случае, если проверка не будет пройдена</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.ConsistOf(Intermech.Interfaces.IDBObject,System.Int64,System.Int32,Intermech.Kernel.Search.ColumnDescriptor[],Intermech.Kernel.Search.ConditionStructure[],System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.ConsistOf(Intermech.Interfaces.IDBObject,System.Int64,System.Int32,Intermech.Kernel.Search.ConditionStructure[],Intermech.Kernel.Search.ColumnDescriptor[],System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.GetObjectComposition(Intermech.Interfaces.IDBObject,System.Int64,System.Int32,System.Collections.Generic.IReadOnlyCollection{Intermech.Kernel.Search.ColumnDescriptor},System.Collections.Generic.IReadOnlyCollection{Intermech.Kernel.Search.ConditionStructure},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Boolean,Intermech.Interfaces.VersionsRule,System.String,System.Int32)">
            <summary>Получить состав объекта</summary>
            <param name="iDbObject">Интерфейс объекта</param>
            <param name="objectVersionID">ID версии родительского объекта, для которого ищется состав</param>
            <param name="objectTypeID">Тип родительского объекта, для которого ищется состав</param>
            <param name="columns">Коллекция столбцов для запроса состава из базы данных</param>
            <param name="conditions">Условия для запроса</param>
            <param name="searchRelationTypes">Типы связей по которым раскручивается состав</param>
            <param name="searchObjectTypes">Типы искомых объектов</param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="rule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="filtrationOwnerID">Уникальный ключ настроек фильтрации состава. Если фильтрация состава не требуется,
                можно указать константу <see cref="F:Intermech.Metadata.FiltrationRule.UserDefaults"/></param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypes">Если не null, указывает, состав объектов каких типов нужно разворачивать. Данное
                условие применяется только к объектам состава и не распространяется на объект objectID</param>
            <returns>DataTable с указанными столбцами (если нет состава - вернёт пустую DataTable) или null в случае ошибки</returns>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.GetObjectComposition(Intermech.Interfaces.IDBObject,System.Int64,System.Collections.Generic.IReadOnlyCollection{Intermech.Kernel.Search.ColumnDescriptor},System.Collections.Generic.IReadOnlyCollection{Intermech.Kernel.Search.ConditionStructure},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Boolean,Intermech.Interfaces.VersionsRule,System.String,System.Int32)">
            <summary>Получить состав объекта</summary>
            <param name="iDbObject">Интерфейс объекта</param>
            <param name="objectVersionID">ID версии родительского объекта, для которого ищется состав</param>
            <param name="columns">Коллекция столбцов для запроса состава из базы данных</param>
            <param name="conditions">Условия для запроса</param>
            <param name="searchRelationTypes">Типы связей по которым раскручивается состав</param>
            <param name="searchObjectTypes">Типы искомых объектов</param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="rule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="filtrationOwnerID">Уникальный ключ настроек фильтрации состава. Если фильтрация состава не требуется,
                можно указать константу <see cref="F:Intermech.Metadata.FiltrationRule.UserDefaults"/></param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypes">Если не null, указывает, состав объектов каких типов нужно разворачивать. Данное
                условие применяется только к объектам состава и не распространяется на объект objectID</param>
            <returns>DataTable с указанными столбцами (если нет состава - вернёт пустую DataTable) или null в случае ошибки</returns>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.EntersIn(Intermech.Interfaces.IDBObject,System.Int64,System.Int32,Intermech.Kernel.Search.ColumnDescriptor[],Intermech.Kernel.Search.ConditionStructure[],System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить применяемость версии объекта objectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.EntersIn(Intermech.Interfaces.IDBObject,System.Int64,System.Int32,Intermech.Kernel.Search.ConditionStructure[],Intermech.Kernel.Search.ColumnDescriptor[],System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить применяемость версии объекта objectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.EntersInVersion(Intermech.Interfaces.IDBObject,System.Int64,System.Int32,Intermech.Kernel.Search.ColumnDescriptor[],Intermech.Kernel.Search.ConditionStructure[],System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.EntersInVersion(Intermech.Interfaces.IDBObject,System.Int64,System.Int32,Intermech.Kernel.Search.ConditionStructure[],Intermech.Kernel.Search.ColumnDescriptor[],System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.GetApplicability(Intermech.Interfaces.IDBObject,System.Int64,System.Int32,System.Collections.Generic.IReadOnlyCollection{Intermech.Kernel.Search.ColumnDescriptor},System.Collections.Generic.IReadOnlyCollection{Intermech.Kernel.Search.ConditionStructure},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Boolean,Intermech.Interfaces.VersionsRule,System.String,System.Int32)">
            <summary>Получить применяемость объекта</summary>
            <param name="iDbObject">Интерфейс объекта</param>
            <param name="objectVersionID">ID версии дочернего объекта, для которого ищется применяемость</param>
            <param name="objectTypeID">Тип родительского объекта, для которого ищется применяемость</param>
            <param name="columns">Коллекция столбцов для запроса состава из базы данных</param>
            <param name="conditions">Условия для запроса</param>
            <param name="searchRelationTypes">Типы связей по которым раскручивается применяемость</param>
            <param name="searchObjectTypes">Типы искомых объектов</param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="rule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="filtrationOwnerID">Уникальный ключ настроек фильтрации состава. Если фильтрация состава не требуется,
                можно указать константу <see cref="F:Intermech.Metadata.FiltrationRule.UserDefaults"/></param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypes">Если не null, указывает, состав объектов каких типов нужно разворачивать. Данное
                условие применяется только к объектам состава и не распространяется на объект objectID</param>
            <returns>DataTable с указанными столбцами (если нет состава - вернёт пустую DataTable) или null в случае ошибки</returns>
        </member>
        <member name="M:Intermech.Extensions.IDBObjectExtensions.GetApplicability(Intermech.Interfaces.IDBObject,System.Int64,System.Collections.Generic.IReadOnlyCollection{Intermech.Kernel.Search.ColumnDescriptor},System.Collections.Generic.IReadOnlyCollection{Intermech.Kernel.Search.ConditionStructure},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Collections.Generic.IReadOnlyCollection{System.Int32},System.Boolean,Intermech.Interfaces.VersionsRule,System.String,System.Int32)">
            <summary>Получить применяемость объекта</summary>
            <param name="iDbObject">Интерфейс объекта</param>
            <param name="objectVersionID">ID версии дочернего объекта, для которого ищется применяемость</param>
            <param name="columns">Коллекция столбцов для запроса состава из базы данных</param>
            <param name="conditions">Условия для запроса</param>
            <param name="searchRelationTypes">Типы связей по которым раскручивается применяемость</param>
            <param name="searchObjectTypes">Типы искомых объектов</param>
            <param name="grouping">Группировка объектов в результирующей таблице</param>
            <param name="rule">Правило подбора версий, по которому будет фильтроваться состав</param>
            <param name="filtrationOwnerID">Уникальный ключ настроек фильтрации состава. Если фильтрация состава не требуется,
                можно указать константу <see cref="F:Intermech.Metadata.FiltrationRule.UserDefaults"/></param>
            <param name="loadLevels">Количество уровней, для получения рекурсивного состава -1</param>
            <param name="expandObjectTypes">Если не null, указывает, состав объектов каких типов нужно разворачивать. Данное
                условие применяется только к объектам состава и не распространяется на объект objectID</param>
            <returns>DataTable с указанными столбцами (если нет состава - вернёт пустую DataTable) или null в случае ошибки</returns>
        </member>
        <member name="M:Intermech.Extensions.IDbRelationCollectionSelectHelper.ConsistOf(Intermech.Interfaces.IDBRelationCollection,System.Int64,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDbRelationCollectionSelectHelper.ConsistOf(Intermech.Interfaces.IDBRelationCollection,System.Int64,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDbRelationCollectionSelectHelper.EntersIn(Intermech.Interfaces.IDBRelationCollection,System.Int64,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDbRelationCollectionSelectHelper.EntersIn(Intermech.Interfaces.IDBRelationCollection,System.Int64,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDbRelationCollectionSelectHelper.EntersInVersion(Intermech.Interfaces.IDBRelationCollection,System.Int64,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="M:Intermech.Extensions.IDbRelationCollectionSelectHelper.EntersInVersion(Intermech.Interfaces.IDBRelationCollection,System.Int64,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ConditionStructure}@,Intermech.Extensions.OneOrMore{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean,System.Nullable{System.DateTime})">
            <summary>Получить состав версии объекта номер projectID в соответствии с переданными условиями</summary>
        </member>
        <member name="T:Intermech.Extensions.If">
            <summary>Условие для проверки (для DB.Conditions)</summary>
        </member>
        <member name="T:Intermech.Extensions.SelectResult">
            <summary>
            Обёртка над DataTable имеющая фиксированный словарь, позволяющий получать поля по ColumnDescriptor-у.
            Позволяет отвязываться от индексов полей при чтении значений
            </summary>
            <remarks>
            В качестве IReadOnlyDictionary выступает очень быстрый и нересурсоёмкий немутабельный словарь,
            у которого в том случае, если записей в словаре менее 15 - ключи и значения хранятся просто полями и поиск по ним идёт линейный.
            Для числа ключей менее 20 (подавляющее число запросов в БД) это более оптимально, чем создание полноценного словаря каждый раз.
            </remarks>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsStringListDef(Intermech.Kernel.Search.ColumnDescriptor,System.String,System.IFormatProvider)">
            <summary>Получить список значений поля в виде строки. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <param name="column">Колонка</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>///
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsStringListDef(Intermech.Kernel.Search.ColumnDescriptor,System.IFormatProvider)">
            <summary>Получить список значений поля в виде строки. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает string.Empty</summary>
            <param name="column">Колонка</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsLongListDef(Intermech.Kernel.Search.ColumnDescriptor,System.Int64)">
            <summary>Получить список значений поля в виде Long. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <param name="column">Колонка</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsObjectIDsList(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor},System.Int64)">
            <summary>Получить список значений поля в виде Long. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <param name="column">Колонка</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsIntListDef(Intermech.Kernel.Search.ColumnDescriptor,System.Int32)">
            <summary>Получить список значений поля в виде Int. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <param name="column">Колонка</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsDoubleListDef(Intermech.Kernel.Search.ColumnDescriptor,System.Double)">
            <summary>Получить список значений поля в виде Double. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <param name="column">Колонка</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsBoolListDef(Intermech.Kernel.Search.ColumnDescriptor,System.Boolean)">
            <summary>Получить список значений поля в виде bool. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <param name="column">Колонка</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsDateTimeListDef(Intermech.Kernel.Search.ColumnDescriptor,System.DateTime,System.IFormatProvider)">
            <summary>Получить список значений поля в виде DateTime. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <param name="column">Колонка</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsDateTimeListDef(Intermech.Kernel.Search.ColumnDescriptor,System.IFormatProvider)">
            <summary>Получить список значений поля в виде DateTime. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает DateTime.MinValue</summary>
            <param name="column">Колонка</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsGuidListDef(Intermech.Kernel.Search.ColumnDescriptor,System.IFormatProvider)">
            <summary>Получить список значений поля в виде Guid. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает Guid.Empty</summary>
            <param name="column">Колонка</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsBytesListDef(Intermech.Kernel.Search.ColumnDescriptor,System.Byte[])">
            <summary>Получить список значений поля в виде DateTime. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when no column with the specified name was found</exception>
            <param name="column">Колонка</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.FieldAsObjectDef(Intermech.Kernel.Search.ColumnDescriptor,System.Object)">
            <summary>Получить список значений поля в виде объекта. Если failOnNull == true, выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when no column with the specified name was found</exception>
            <param name="column">Колонка</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.SelectNotNull(Intermech.Kernel.Search.ColumnDescriptor,System.Boolean)">
            <summary>Возвращает последовательность значений поля, отличных от DBNull и null.
                     Если failOnNull == true, то при обнаружении поля с пустым значением выбрасывает FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when no column with the specified name was found</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда failOnNull == true и значение поля равно null или DBNull.Value</exception>
            <param name="column">Имя поля</param>
            <param name="failOnNull">(Optional) Если true, то в случае обнаружения поля со значение null или DBNull будет выброшено исключение FieldIsEmptyException</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.SelectNotNull(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor},System.Boolean)">
            <summary>Возвращает последовательность значений поля, отличных от DBNull и null.
                     Если failOnNull == true, то при обнаружении поля с пустым значением выбрасывает FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when no column with the specified name was found</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда failOnNull == true и значение поля равно null или DBNull.Value</exception>
            <param name="column">Колонка</param>
            <param name="failOnNull">(Optional) Если true, то в случае обнаружения поля со значение null или DBNull будет выброшено исключение FieldIsEmptyException</param>
            <returns>Список значений указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsObjectID(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="throwExceptionIfUnknownObjectId" /> == true и значение поля равно == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="column">Номер поля</param>
            <param name="throwExceptionIfUnknownObjectId">(По-умолчанию true) Генерировать ли исключительную ситуацию если поле не ссылается на конкретный объект (равно Consts.UnknownObjectId)</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsObjectRef(Intermech.Extensions.IdAndTextColumns@,System.Func{System.Int64,System.String},System.Boolean)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="columns">Колонки в которой хранится идентификатор и заголовок объекта ссылки</param>
            <param name="emptyColumnParser">Метод получения заголовка объекта у которого он пуст</param>
            <param name="failIfEmpty">В том случае если равно в true, то в случае если поле пустое будет выброшена исключительная ситуация</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsObjectRef(Intermech.Kernel.Search.ColumnDescriptor@,Intermech.Kernel.Search.ColumnDescriptor@,System.Func{System.Int64,System.String},System.Boolean)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="idColumn">Колонка в которой хранится идентификатор объекта ссылки</param>
            <param name="descriptionColumn">Колонка в которой хранится заголовок объекта ссылки</param>
            <param name="emptyColumnParser">Метод получения заголовка объекта у которого он пуст</param>
            <param name="failIfEmpty">В том случае если равно в true, то в случае если поле пустое будет выброшена исключительная ситуация</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsObjectIdOrUnknown(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int64)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsObjectIdOrUnknown(Intermech.Extensions.IdAndTextColumns@,System.Int64)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="columns">Ссылочное поле</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsObjectID(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int64@,System.Boolean)">
            <summary>Попытаться получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] Идентификатор объекта или </param>
            <param name="falseIfUnknownObjectId">(По-умолчанию true) Возвращать ли false если поле не ссылается на конкретный объект (равно Consts.UnknownObjectId)</param>
            <returns>True если значение поля отлично от Null и DBNull и <seealso cref="!:falseIfUnknownObjectId"/></returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsObjectTypeID(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="throwExceptionIfUnknownObjectId" /> == true и значение поля равно == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="column">Номер поля</param>
            <param name="throwExceptionIfUnknownObjectId">(По-умолчанию true) Генерировать ли исключительную ситуацию если поле не ссылается на конкретный объект</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsObjectTypeIdOrUnknown(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int32)">
            <summary>Получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsObjectTypeID(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int32@,System.Boolean)">
            <summary>Попытаться получить значение поля в виде идентификатора объекта. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] Идентификатор объекта или </param>
            <param name="falseIfUnknownObjectId">(По-умолчанию true) Возвращать ли false если поле не ссылается на конкретный объект (равно Consts.UnknownObjectTypeId)</param>
            <returns>True если значение поля отлично от Null и DBNull и <seealso cref="!:falseIfUnknownObjectId"/></returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsRelationID(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean)">
            <summary>Получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="throwExceptionIfUnknownRelationId" /> == true и значение поля равно == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="column">Номер поля</param>
            <param name="throwExceptionIfUnknownRelationId">(По-умолчанию true) Генерировать ли исключительную ситуацию если поле не ссылается на конкретную связь (равно Consts.UnknownPrjLinkId)</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsRelationIdOrUnknown(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int64)">
            <summary>Получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsRelationID(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int64@,System.Boolean)">
            <summary>Попытаться получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] Идентификатор связи или </param>
            <param name="falseIfUnknownRelationId">(По-умолчанию true) Возвращать ли false если поле не ссылается на конкретную связь (равно Consts.UnknownPrjLinkId)</param>
            <returns>True если значение поля отлично от Null и DBNull и <seealso cref="!:falseIfUnknownRelationId"/></returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsRelationTypeID(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean)">
            <summary>Получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="throwExceptionIfUnknownRelationId" /> == true и значение поля равно == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="column">Номер поля</param>
            <param name="throwExceptionIfUnknownRelationId">(По-умолчанию true) Генерировать ли исключительную ситуацию если поле не ссылается на конкретную связь</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsRelationTypeIdOrUnknown(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int32)">
            <summary>Получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsRelationTypeID(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int32@,System.Boolean)">
            <summary>Попытаться получить значение поля в виде идентификатора связи. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] Идентификатор связи или </param>
            <param name="falseIfUnknownRelationId">(По-умолчанию true) Возвращать ли false если поле не ссылается на конкретную связь (равно Consts.UnknownRelationTypeId)</param>
            <returns>True если значение поля отлично от Null и DBNull и <seealso cref="!:falseIfUnknownRelationId"/></returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsNotNullStringDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.String,System.IFormatProvider)">
            <summary>Получить значение поля в виде строки. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <param name="formatProvider">Культура (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsNotNullString(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.IFormatProvider)">
            <summary>Получить значение поля в виде строки. Выполняет проверку на Null и DBNull и если поле пусто - возвращает string.Empty</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="formatProvider">Культура (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsStringDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.String,System.IFormatProvider)">
            <summary>Получить значение поля в виде строки. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <param name="formatProvider">Культура (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsStringDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.IFormatProvider)">
            <summary>Получить значение поля в виде строки. Выполняет проверку на Null и DBNull и если поле пусто - возвращает string.Empty</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="formatProvider">Культура (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsLongDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int64)">
            <summary>Получить значение поля в виде Long. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsIntDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int32)">
            <summary>Получить значение поля в виде Int. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsEnumDef``1(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,``0)">
            <summary>Получить значение поля в виде Enum. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsDoubleDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Double)">
            <summary>Получить значение поля в виде Double. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsBoolDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean)">
            <summary>Получить значение поля в виде bool. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsDateTimeDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.DateTime,System.IFormatProvider)">
            <summary>Получить значение поля в виде DateTime. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsDateTimeDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.IFormatProvider)">
            <summary>Получить значение поля в виде DateTime. Выполняет проверку на Null и DBNull и если поле пусто - возвращает DateTime.MinValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsGuidDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.IFormatProvider)">
            <summary>Получить значение поля в виде Guid. Выполняет проверку на Null и DBNull и если поле пусто - возвращает Guid.Empty</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsBytesDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Byte[])">
            <summary>Получить значение поля в виде DateTime. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when no column with the specified name was found</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsObjectDef(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Object)">
            <summary>Получить значение поля в виде объекта. Выполняет проверку на Null и DBNull и если поле пусто - возвращает defaultValue</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when no column with the specified name was found</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="defaultValue">Значение по-умолчанию</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldValue(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Object@)">
            <summary>Попытаться получить значение поля указанного имени из записи таблицы</summary>
            <param name="column">Номер поля</param>
            <param name="result">[out] данные</param>
            <returns>True если поля с таким именем присутствует в таблице и его значение отлично от null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldValueAcceptNulls(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Object@)">
            <summary>Попытаться получить значение поля указанного имени из записи таблицы</summary>
            <param name="column">Номер поля</param>
            <param name="result">[out] данные</param>
            <returns>True если поля с таким именем присутствует в таблице и его значение отлично от null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsString(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.IFormatProvider)">
            <summary>Получить значение поля в виде строки.
                Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="formatProvider">(Optional) Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsString(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.String@,System.IFormatProvider)">
            <summary>Попытаться получить значение поля в виде строки. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <param name="formatProvider">(Optional) Культура (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsNotNullString(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.String@,System.IFormatProvider)">
            <summary>Попытаться получить значение поля в виде строки. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <param name="formatProvider">(Optional) Культура (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsLong(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@)">
            <summary>Получить значение поля в виде Long. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsLong(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int64@)">
            <summary>Попытаться получить значение поля в виде long. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsInt(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@)">
            <summary>Получить значение поля в виде Int. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsInt(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Int32@)">
            <summary>Попытаться получить значение поля в виде int. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsEnum``1(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@)">
            <summary>Получить значение поля в виде Enum. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsEnum``1(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,``0@)">
            <summary>Попытаться получить значение поля в виде Enum. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsDouble(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@)">
            <summary>Получить значение поля в виде Double. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsDouble(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Double@)">
            <summary>Попытаться получить значение поля в виде double. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsBool(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@)">
            <summary>Получить значение поля в виде bool. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsBool(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Boolean@)">
            <summary>Попытаться получить значение поля в виде bool. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsDateTime(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.IFormatProvider)">
            <summary>Получить значение поля в виде DateTime. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsDateTime(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.DateTime@,System.IFormatProvider)">
            <summary>Попытаться получить значение поля в виде DateTime. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsGuid(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.IFormatProvider)">
            <summary>Получить значение поля в виде Guid. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsGuid(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Guid@,System.IFormatProvider)">
            <summary>Попытаться получить значение поля в виде Guid. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <param name="formatProvider">Формат записи Даты-Времени (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.FieldAsBytes(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@)">
            <summary>Получить значение поля в виде массива байтов. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when no column with the specified name was found</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetFieldAsBytes(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Byte[]@,System.IFormatProvider)">
            <summary>Попытаться получить значение поля в виде byte[]. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <param name="formatProvider">(Optional) Культура (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.GetFieldValue(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@)">
            <summary>Получить значение поля в виде объекта. Выполняет проверку на Null и DBNull и если поле пусто - генерирует FieldIsEmptyException</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when no column with the specified name was found</exception>
            <exception cref="T:Intermech.Data.FieldIsEmptyException">Выбрасывается когда значение поля равно null или DBNull.Value</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <returns>Значение указанного поля</returns>
        </member>
        <member name="M:Intermech.Extensions.SelectResult.Row.TryGetGetFieldValue(System.Nullable{Intermech.Kernel.Search.ColumnDescriptor}@,System.Object@,System.IFormatProvider)">
            <summary>Попытаться получить значение поля в виде object. Выполняет проверку на Null и DBNull</summary>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when the index passed was outside the range of 0 through System.Data.SelectResult.Row.FieldCount</exception>
            <exception cref="T:System.InvalidCastException">Конвертация данных в указанный тип не поддерживается</exception>
            <param name="column">Номер поля</param>
            <param name="result">[out] The result</param>
            <param name="formatProvider">(Optional) Культура (если null - используется CultureInfo.InvariantCulture)</param>
            <returns>True если значение поля отлично от Null и DBNull</returns>
        </member>
        <member name="T:Intermech.Extensions.SelectResult.SelectResultDescriptorComparer">
            <summary>Реализация <see><cref>IComparer</cref></see> для <see cref="T:Intermech.Kernel.Search.ColumnDescriptor"/></summary>
        </member>
        <member name="T:Intermech.Extensions.ObjectIDorGUID">
            <summary>
            Чем может уникально идентифицироваться объект или версия объекта IPS
            </summary>
        </member>
        <member name="M:Intermech.Extensions.IContainable`1.Contains(`0)">
            <summary>Проверка принадлежности</summary>
        </member>
        <member name="M:Intermech.Extensions.NamedContextExtensions.GetFullContextName(Intermech.Common.INamedContext,System.Char)">
            <summary>
            Сформировать строковое описание контекста, включая вышестояшие именованные контексты, разделённые знаком разделителя.
            Например "Создание объекта/Форма создания объекта/Контрол выбора типа"
            </summary>
            <param name="namedContext">Контекст вызова</param>
            <param name="delimiter">Разделитель в формируемом пути</param>
            <returns>Полное строковое описание контекста</returns>
        </member>
        <member name="T:Intermech.Extensions.ObjectNamedContextExtensions">
            <summary>Общие методы для формирования имени контекста операции</summary>
        </member>
        <member name="M:Intermech.Extensions.ObjectNamedContextExtensions.GetObjectContextName(System.Object,System.Char,System.Boolean)">
            <summary>
            Сформировать строковое описание контекста, включая вышестояшие именованные контексты, разделённые знаком разделителя.
            Например "Создание объекта/Форма создания объекта/Контрол выбора типа"
            </summary>
            <param name="obj">Объект, контекст которого собирается</param>
            <param name="delimiter">Разделитель в формируемом пути</param>
            <param name="includeTypeInfo">Если true, то к имени контекста будет добавлена информация о типе объекта</param>
            <returns>Полное строковое описание контекста</returns>
        </member>
        <member name="M:Intermech.Extensions.ObjectNamedContextExtensions.GetObjectContextName(System.Object,System.Boolean)">
            <summary>
            Сформировать строковое описание контекста, включая вышестояшие именованные контексты, разделённые знаком разделителя.
            Например "Создание объекта/Форма создания объекта/Контрол выбора типа"
            </summary>
            <param name="obj">Объект, контекст которого собирается</param>
            <param name="includeTypeInfo">Если true, то к имени контекста будет добавлена информация о типе объекта</param>
            <returns>Полное строковое описание контекста</returns>
        </member>
        <member name="T:Intermech.Extensions.Interfaces.Helper">
            <summary>Статический класс-хелпер</summary>
        </member>
        <member name="T:Intermech.Extensions.Interfaces.Library">
            <summary>Статический класс-хелпер для инициализации сервисов, кэшей и т.п. библиотеки Intermech.Extensions.Interfaces</summary>
        </member>
        <member name="M:Intermech.Extensions.Interfaces.Library.Init(System.IServiceProvider,Intermech.Interfaces.IUserSession)">
            <summary>Инициализация сервисов, кэшей и т.п. библиотеки Intermech.Extensions.Interfaces</summary>
        </member>
        <member name="T:Intermech.Extensions.Interfaces.Resx.Attributes">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Attributes.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Attributes.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Intermech.Extensions.Interfaces.Resx.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.Extensions_001">
            <summary>
              Looks up a localized string similar to Атрибут с именем {0} не найден..
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.Extensions_002">
            <summary>
              Looks up a localized string similar to Атрибут не найден.
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.Extensions_003">
            <summary>
              Looks up a localized string similar to Атрибут с именем &apos;{0}&apos; у объекта номер {1} не найден..
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.Extensions_004">
            <summary>
              Looks up a localized string similar to Атрибут с именем &apos;{0}&apos; у связи номер {1} не найден..
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.Extensions_005">
            <summary>
              Looks up a localized string similar to Атрибут с именем {0} пуст..
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.Extensions_006">
            <summary>
              Looks up a localized string similar to Неизвестный атрибут пуст..
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.Extensions_007">
            <summary>
              Looks up a localized string similar to Атрибут с именем &apos;{0}&apos; у объекта номер {1} пуст..
            </summary>
        </member>
        <member name="P:Intermech.Extensions.Interfaces.Resx.Resources.Extensions_008">
            <summary>
              Looks up a localized string similar to Атрибут с именем &apos;{0}&apos; у связи номер {1} пуст..
            </summary>
        </member>
        <member name="P:Intermech.Extensions.IOCBasedPackageAdv.Services">
            <summary>Локальный контейнер сервисов (если не находит локально - ищет в глобальном).</summary>
        </member>
        <member name="P:Intermech.Extensions.IOCBasedPackageAdv.GlobalServices">
            <summary>Глобальный контейнер сервисов (если не находит локально - ищет в глобальном).</summary>
        </member>
        <member name="P:Intermech.Extensions.IOCPlugin`1.Instance">
            <summary>
            Экземпляр плагина (Singleton)
            </summary>
        </member>
        <member name="P:Intermech.Extensions.IOCPlugin`1.Package">
            <summary>
            Экземпляр плагина (Singleton)
            </summary>
        </member>
        <member name="M:Intermech.Extensions.IOCPlugin`1.AllocateLicense(System.Int32)">
            <summary>Шаблонная проверка лицензии на плагин</summary>
            <param name="appId">ID приложения</param>
            <returns>True если проверка пройдена</returns>
        </member>
        <member name="M:Intermech.Extensions.IOCPlugin`1.CheckProtectionKey(System.Int32,System.Byte[][])">
            <summary>Шаблонная проверка ключа защиты</summary>
            <param name="appId">ID приложения</param>
            <param name="protectionCodes">Коды защиты</param>
            <returns>True если проверка пройдена</returns>
        </member>
        <member name="P:Intermech.Extensions.IOCPlugin`1.Services">
            <summary>Локальный контейнер сервисов (если не находит локально - ищет в глобальном).</summary>
        </member>
        <member name="P:Intermech.Extensions.IOCPlugin`1.GlobalServices">
            <summary>Глобальный контейнер сервисов (если не находит локально - ищет в глобальном).</summary>
        </member>
        <member name="M:Intermech.Extensions.IOCPlugin`1.GetService``1(System.Boolean,System.String)">
            <summary>Попытка извлечения сервиса из локального IOC контейнера</summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
            сервиса (при аргументе throwExceptionIfNotFound == true)
            </exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="throwExceptionIfNotFound">
            Выбрасывать ли исключительную ситуацию в случае отсутствия в провайдере запрашиваемого сервиса
            </param>
            <param name="exceptionMessageIfFail">
            Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
            запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение
            </param>
            <returns>Извлекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Extensions.IOCPlugin`1.GetService``1(System.String)">
            <summary>Извлечение сервиса из локального IOC контейнера</summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого сервиса
            </exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="exceptionMessageIfFail">
            Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
            запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение
            </param>
            <returns>Извлекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Extensions.IOCPlugin`1.GetService``1(``0@,System.String)">
            <summary>Извлечение сервиса из провайдера</summary>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого сервиса</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[out] извлекаемый сервис</param>
            <param name="exceptionMessageIfFail">
            Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
            запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение
            </param>
            <returns>Провайдер сервисов (для построения цепочки вызовов)</returns>
        </member>
        <member name="M:Intermech.Extensions.IOCPlugin`1.TryGetService``1(``0@)">
            <summary>Попытка извлечения сервиса из провайдера сервисов</summary>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[out] извлекаемый сервис</param>
            <returns>true если сервис был получен, иначе false</returns>
        </member>
        <member name="M:Intermech.Extensions.IOCPlugin`1.EnsureInitialized``1(``0@,System.String)">
            <summary>Контроль того, что сервис был извлечён из провайдера в переданную переменную. Если нет (она null), то извлечь в неё сервис</summary>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[in, out] извлекаемый сервис</param>
            <param name="exceptionMessageIfFail">
            Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
            запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение
            </param>
            <returns>извлекаемый сервис</returns>
        </member>
        <member name="P:Intermech.Extensions.IOCPlugin`1.IsPostInitCompleted">
            <summary>
            Возвращает признак, что IPackageExtension.PostInit выполнен и вернул true;
            </summary>
        </member>
        <member name="T:Intermech.Extensions.IPSAggregateExceptionExtensions">
            <summary>Расширения для AggregateException в IPS</summary>
        </member>
        <member name="M:Intermech.Extensions.IPSAggregateExceptionExtensions.FilterAbort(System.AggregateException)">
            <summary>Изъять из составной исключительной ситуации все AbortException, либо содержащие
                     таковые в InnerException. Если после фильтрации останется только одна исключительная ситуация - вернёт её,
                     иначе AggregateException из всех оставшихся</summary>
        </member>
        <member name="T:Intermech.Extensions.IPSExceptionExtensions">
            <summary>Расширения для Exception в IPS</summary>
        </member>
        <member name="M:Intermech.Extensions.IPSExceptionExtensions.TryProcessException(System.Exception)">
            <summary>Попытка разобраться с Exception самостоятельно. Если удалось, если вернуло true, то дальнейшая обработка не требуется.</summary>
        </member>
        <member name="T:Intermech.Extensions.Calendars">
            <summary>Календари</summary>
            <remarks>Не инициализируется автоматически! Плагин перед обращениям к полям и методам должен вызвать <see cref="M:Intermech.Extensions.Library.Init(System.IServiceProvider)"/></remarks>
        </member>
        <member name="M:Intermech.Extensions.Calendars.Get(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс календаря по его идентификатору. </summary>
            <exception cref="T:Intermech.Interfaces.Calendars.CalendarNotFoundException">Если календарь с указанным идентификатором не найден и <see cref="!:throwIfNotFound"/>==true</exception>
        </member>
        <member name="M:Intermech.Extensions.Calendars.GetUserCalendar(Intermech.Interfaces.IUserSession,System.Int64,System.Boolean)">
            <summary>Получить интерфейс календаря пользователь по идентификатору версии пользователя </summary>
            <exception cref="T:Intermech.Interfaces.Calendars.CalendarNotFoundException">Если календарь с указанным идентификатором не найден и <see cref="!:throwIfNotFound"/>==true</exception>
        </member>
        <member name="P:Intermech.Extensions.Calendars.Standard">
            <summary>Стандартный календарь</summary>
        </member>
        <member name="T:Intermech.Extensions.Portal">
            <summary>Портал</summary>
            <remarks>Не инициализируется автоматически! Плагин перед обращениям к полям и методам должен вызвать <see cref="M:Intermech.Extensions.Portal.Init(Intermech.Interfaces.IUserSession)"/>></remarks>
        </member>
        <member name="M:Intermech.Extensions.Portal.Init(Intermech.Interfaces.IUserSession)">
            <summary>Инициализация</summary>
        </member>
        <member name="P:Intermech.Extensions.Portal.CurrentSiteCode">
            <summary>Код текущего узла</summary>
        </member>
        <member name="P:Intermech.Extensions.Portal.Enabled">
            <summary>Признак того, что портал включен</summary>
        </member>
        <member name="M:Intermech.Extensions.Portal.CheckEnabled(System.Boolean)">
            <summary>Проверка что портал активен</summary>
        </member>
        <member name="M:Intermech.Extensions.Portal.CheckWasInit(System.Boolean)">
            <summary>Проверка что был инициализирован</summary>
        </member>
        <member name="P:Intermech.Extensions.Portal.Sites">
            <summary>Все узлы</summary>
        </member>
        <member name="M:Intermech.Extensions.Portal.Reload(System.Object)">
            <summary>Перечитать кэш</summary>
            <param name="session">При вызове с клиента передаем GUID сессии, при вызове с сервера - IUserSession</param>
        </member>
        <member name="M:Intermech.Extensions.Portal.GetSite(System.Char,System.Boolean)">
            <summary>Получить информацию об узле информационной системы по его коду</summary>
            <param name="code">Код узла</param>
            <param name="throwException">Генерить exception если сайт не найден</param>
        </member>
        <member name="M:Intermech.Extensions.Portal.GetSite(System.Int64,System.Boolean)">
            <summary>Получить информацию об узле информационной системы по его идентификатору</summary>
            <param name="id">Идентификатор версии объекта узла</param>
            <param name="throwException">Генерить exception если сайт не найден</param>
        </member>
        <member name="M:Intermech.Extensions.Portal.GetSite(System.Guid,System.Boolean)">
            <summary>Получить информацию об узле информационной системы по его глобальному идентификатору</summary>
            <param name="guid">Глобальный идентификатор версии объекта узла</param>
            <param name="throwException">Генерить exception если сайт не найден</param>
        </member>
        <member name="M:Intermech.Extensions.Portal.GetSite(System.String,System.Boolean)">
            <summary>Получить информацию об узле информационной системы по его глобальному идентификатору</summary>
            <param name="name">Наименование узла</param>
            <param name="throwException">Генерить exception если сайт не найден</param>
            <returns>The site. This may be null</returns>
        </member>
        <member name="P:Intermech.Extensions.Portal.SitesIDs">
            <summary>Список идентификаторов зарегистрированных в системе узлов</summary>
        </member>
        <member name="P:Intermech.Extensions.Portal.Info">
            <summary>Информация текущего узла</summary>
        </member>
        <member name="M:Intermech.Extensions.Portal.NextCode">
            <summary>Получить следующую букву для нового узла</summary>
        </member>
        <member name="M:Intermech.Extensions.Portal.GetSiteDescription(System.String)">
            <summary>Получить расшифровку значения поля F_SITE_ID у объекта</summary>
            <param name="siteID">Значение F_SITE_ID</param>
        </member>
        <member name="T:Intermech.Extensions.Services">
            <summary>Кэш часто используемых сервисов IPS</summary>
        </member>
        <member name="P:Intermech.Extensions.Services.Calendars">
            <summary><see cref="T:Intermech.Interfaces.Calendars.ICalendarsService"/></summary>
        </member>
        <member name="P:Intermech.Extensions.Services.PluginManager">
            <summary><see cref="T:Intermech.Interfaces.Plugins.IPluginManager"/></summary>
        </member>
        <member name="M:Intermech.Extensions.Services.Init(System.IServiceProvider,Intermech.Interfaces.IUserSession)">
            <summary>Инициализация</summary>
        </member>
        <member name="T:Intermech.Extensions.InitOnceExtensions">
            <summary></summary>
        </member>
        <member name="T:Intermech.Extensions.IMSAttributeTypeExtensions">
            <summary>Расширения для <see cref="T:Intermech.Interfaces.IMSAttributeType"/></summary>
        </member>
        <member name="T:Intermech.Check">
            <summary>Runtime валидация условий</summary>
            <summary>Runtime валидация условий</summary>
            <summary>Runtime валидация условий</summary>
            <summary>Runtime валидация условий</summary>
            <summary>Runtime валидация условий</summary>
        </member>
        <member name="M:Intermech.Check.AttributeIdIsEmpty(System.Int32)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <param name="value">Идентификатор атрибута</param>
            <returns>False если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или
                     <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/>, иначе True</returns>
        </member>
        <member name="M:Intermech.Check.AttributeIdIsEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <param name="value">Идентификатор атрибута</param>
            <returns>False если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или
                     <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/>, иначе True</returns>
        </member>
        <member name="M:Intermech.Check.AttributeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.AttributeIdNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentAttributeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentAttributeIdNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentAttributeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentAttributeIdNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.ObjectTypeIdIsEmpty(System.Int32)">
            <summary>Проверка что идентификатор типа объекта не является пустым</summary>
            <param name="value">Идентификатор типа объекта</param>
            <returns>False если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/>, иначе True</returns>
        </member>
        <member name="M:Intermech.Check.ObjectTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип объекта не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификатор типа объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа объекта</returns>
        </member>
        <member name="M:Intermech.Check.ObjectTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификаторы типов объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов объектов</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentObjectTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип объекта не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификатор типа объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа объекта</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentObjectTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа объекта</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификаторы типов объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов объектов</returns>
        </member>
        <member name="M:Intermech.Check.RelationTypeIdIsEmpty(System.Int32)">
            <summary>Проверка что идентификатор идентификатор типа связи не является пустым</summary>
            <param name="value">Идентификатор типа связи</param>
            <returns>False если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/>, иначе True</returns>
        </member>
        <member name="M:Intermech.Check.RelationTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип связи не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификатор типа связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа связи</returns>
        </member>
        <member name="M:Intermech.Check.RelationTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификаторы типов связей</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов связей</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentRelationTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип связи не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификатор типа связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа связи</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentRelationTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа связи</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификаторы типов связей</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов связей</returns>
        </member>
        <member name="M:Intermech.Check.ObjectIdIsEmpty(System.Int64)">
            <summary>Проверка что идентификатор объекта не является пустым</summary>
            <param name="value">Идентификатор объекта</param>
            <returns>False если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/>, иначе True</returns>
        </member>
        <member name="M:Intermech.Check.ObjectIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор объекта не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификатор объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Check.ObjectIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы объектов</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentObjectIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор объекта не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификатор объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentObjectIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора объекта</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы объектов</returns>
        </member>
        <member name="M:Intermech.Check.RelationIdIsEmpty(System.Int64)">
            <summary>Проверка что идентификатор связи не является пустым</summary>
            <param name="value">Идентификатор связи</param>
            <returns>False если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/>, иначе True</returns>
        </member>
        <member name="M:Intermech.Check.RelationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор связи не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификатор связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Check.RelationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы связей</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentRelationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор связи не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификатор связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentRelationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора связи</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы связей</returns>
        </member>
        <member name="M:Intermech.Check.IterationIdIsEmpty(System.Int64)">
            <summary>Проверка что идентификатор итерации не является пустым</summary>
            <param name="value">Идентификатор итерации</param>
            <returns>False если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/>, иначе True</returns>
        </member>
        <member name="M:Intermech.Check.IterationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор итерации не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификатор итерации</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор итерации</returns>
        </member>
        <member name="M:Intermech.Check.IterationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора итерации</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы итераций</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentIterationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор итерации не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentIterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификатор итерации</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор итерации</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentIterationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора итерации</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentIterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы итераций</returns>
        </member>
        <member name="M:Intermech.Check.ObligatoryObjectAttributeIsEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes)">
            <summary>Проверка что значение атрибута не пусто</summary>
            <param name="value">Значение атрибута</param>
            <returns>False если переданное значение равно <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/>, иначе True</returns>
        </member>
        <member name="M:Intermech.Check.ValueNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что значение атрибута не пусто</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если переданное значение равно <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Значение атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.ValueNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого значение атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой элемент переданного перечисления равен <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Перечисление значений атрибута</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentValueNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что значение атрибута не пусто</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если переданное значение равно <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Значение атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.ArgumentValueNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого значение атрибута</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой элемент переданного перечисления равен <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Перечисление значений атрибута</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="T:Intermech.Check.Debug">
            <summary>Debug only валидация условий</summary>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentNotNull``1(``0,System.String,System.String)">
            <summary>Проверка аргумента на null</summary>
            <exception cref="T:System.ArgumentNullException">Если аргумент == null</exception>
            <param name="value">Объект, который не должен быть равен null</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentNotNull``1(System.Nullable{``0},System.String,System.String)">
            <summary>Проверка аргумента на null</summary>
            <exception cref="T:System.ArgumentNullException">Если аргумент == null</exception>
            <param name="value">Объект, который не должен быть равен null</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="M:Intermech.Check.Debug.NotNull``1(``0,System.String,System.String)">
            <summary>Проверка что объект не null</summary>
            <exception cref="T:System.NullReferenceException">Если объект null</exception>
            <param name="value">Объект, который не должен быть равен null</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="M:Intermech.Check.Debug.NotNull``1(System.Nullable{``0},System.String,System.String)">
            <summary>Проверка что объект не null</summary>
            <exception cref="T:System.NullReferenceException">Если объект null</exception>
            <param name="value">Объект, который не должен быть равен null</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
        </member>
        <member name="M:Intermech.Check.Debug.AttributeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Debug.AttributeIdNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Debug.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Debug.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentAttributeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentAttributeIdNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentAttributeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentAttributeIdNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ObjectTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип объекта не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификатор типа объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа объекта</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ObjectTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификаторы типов объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов объектов</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentObjectTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип объекта не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификатор типа объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа объекта</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentObjectTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа объекта</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификаторы типов объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов объектов</returns>
        </member>
        <member name="M:Intermech.Check.Debug.RelationTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип связи не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификатор типа связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа связи</returns>
        </member>
        <member name="M:Intermech.Check.Debug.RelationTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификаторы типов связей</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов связей</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentRelationTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип связи не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификатор типа связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа связи</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentRelationTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа связи</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификаторы типов связей</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов связей</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ObjectIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор объекта не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификатор объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ObjectIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы объектов</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentObjectIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор объекта не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификатор объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentObjectIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора объекта</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы объектов</returns>
        </member>
        <member name="M:Intermech.Check.Debug.RelationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор связи не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификатор связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Check.Debug.RelationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы связей</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentRelationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор связи не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификатор связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentRelationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора связи</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы связей</returns>
        </member>
        <member name="M:Intermech.Check.Debug.IterationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор итерации не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификатор итерации</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор итерации</returns>
        </member>
        <member name="M:Intermech.Check.Debug.IterationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора итерации</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы итераций</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentIterationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор итерации не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentIterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификатор итерации</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор итерации</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentIterationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора итерации</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentIterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы итераций</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ValueNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что значение атрибута не пусто</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если переданное значение равно <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Значение атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ValueNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого значение атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой элемент переданного перечисления равен <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Перечисление значений атрибута</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentValueNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что значение атрибута не пусто</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если переданное значение равно <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Значение атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Debug.ArgumentValueNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого значение атрибута</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой элемент переданного перечисления равен <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Перечисление значений атрибута</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="T:Intermech.Check.Optional">
            <summary>Debug only валидация условий</summary>
        </member>
        <member name="M:Intermech.Check.Optional.AttributeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Optional.AttributeIdNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Optional.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Optional.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentAttributeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentAttributeIdNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentAttributeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentAttributeIdNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ObjectTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип объекта не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификатор типа объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа объекта</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ObjectTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификаторы типов объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов объектов</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentObjectTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип объекта не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификатор типа объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа объекта</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentObjectTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа объекта</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификаторы типов объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов объектов</returns>
        </member>
        <member name="M:Intermech.Check.Optional.RelationTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип связи не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификатор типа связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа связи</returns>
        </member>
        <member name="M:Intermech.Check.Optional.RelationTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификаторы типов связей</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов связей</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentRelationTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип связи не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификатор типа связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор типа связи</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentRelationTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа связи</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификаторы типов связей</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы типов связей</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ObjectIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор объекта не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификатор объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ObjectIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы объектов</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentObjectIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор объекта не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификатор объекта</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentObjectIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора объекта</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы объектов</returns>
        </member>
        <member name="M:Intermech.Check.Optional.RelationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор связи не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификатор связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Check.Optional.RelationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы связей</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentRelationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор связи не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификатор связи</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentRelationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора связи</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentRelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы связей</returns>
        </member>
        <member name="M:Intermech.Check.Optional.IterationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор итерации не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификатор итерации</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор итерации</returns>
        </member>
        <member name="M:Intermech.Check.Optional.IterationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора итерации</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы итераций</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentIterationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор итерации не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentIterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификатор итерации</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификатор итерации</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentIterationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора итерации</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentIterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Идентификаторы итераций</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ValueNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что значение атрибута не пусто</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если переданное значение равно <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Значение атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ValueNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого значение атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой элемент переданного перечисления равен <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Перечисление значений атрибута</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentValueNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что значение атрибута не пусто</summary>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если переданное значение равно <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Значение атрибута</param>
            <param name="valueName">Наименование проверяемого параметра</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Optional.ArgumentValueNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого значение атрибута</summary>
            <exception cref="T:System.ArgumentNullException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ArgumentAttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой элемент переданного перечисления равен <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Перечисление значений атрибута</param>
            <param name="valueName">Наименование коллекции</param>
            <param name="message">Сообщение об ошибке</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="T:Intermech.Check.Result">
            <summary>Debug only валидация условий</summary>
        </member>
        <member name="M:Intermech.Check.Result.AttributeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Result.AttributeIdNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Result.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Result.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.Result.ObjectTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип объекта не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификатор типа объекта</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор типа объекта</returns>
        </member>
        <member name="M:Intermech.Check.Result.ObjectTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификаторы типов объектов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы типов объектов</returns>
        </member>
        <member name="M:Intermech.Check.Result.RelationTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип связи не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификатор типа связи</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор типа связи</returns>
        </member>
        <member name="M:Intermech.Check.Result.RelationTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификаторы типов связей</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы типов связей</returns>
        </member>
        <member name="M:Intermech.Check.Result.ObjectIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор объекта не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификатор объекта</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Check.Result.ObjectIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы объектов</returns>
        </member>
        <member name="M:Intermech.Check.Result.RelationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор связи не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификатор связи</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Check.Result.RelationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы связей</returns>
        </member>
        <member name="M:Intermech.Check.Result.IterationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор итерации не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификатор итерации</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор итерации</returns>
        </member>
        <member name="M:Intermech.Check.Result.IterationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора итерации</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы итераций</returns>
        </member>
        <member name="M:Intermech.Check.Result.ValueNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что значение атрибута не пусто</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если переданное значение равно <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Значение атрибута</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.Result.ValueNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого значение атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой элемент переданного перечисления равен <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Перечисление значений атрибута</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="T:Intermech.Check.SetValue">
            <summary>Debug only валидация условий</summary>
        </member>
        <member name="M:Intermech.Check.SetValue.AttributeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.AttributeIdNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что идентификатор атрибута не является пустым</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификатор атрибута</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор атрибута</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.AttributeIdNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownAttributeId"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedAttributeID"/></exception>
            <param name="value">Идентификаторы атрибутов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы атрибутов</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.ObjectTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип объекта не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификатор типа объекта</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор типа объекта</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.ObjectTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectTypeID"/></exception>
            <param name="value">Идентификаторы типов объектов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы типов объектов</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.RelationTypeIdNotEmpty(System.Int32,System.String,System.String)">
            <summary>Проверка что тип связи не является неопределённым</summary>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификатор типа связи</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор типа связи</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.RelationTypeIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int32},System.String,System.String)">
            <summary>Проверка что в перечислении нет неопределённого типа связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownRelationTypeId"/> или <see cref="F:Intermech.Consts.NoType"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedRelationTypeID"/></exception>
            <param name="value">Идентификаторы типов связей</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы типов связей</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.ObjectIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор объекта не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификатор объекта</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор объекта</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.ObjectIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора объекта</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.ObjectIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoObject"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedObjectID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы объектов</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.RelationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор связи не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownPrjLinkId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификатор связи</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор связи</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.RelationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора связи</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.RelationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownObjectId"/> или <see cref="F:Intermech.Consts.NoRelation"/> или <see cref="F:Intermech.Consts.NavigatorUndefinedPrjLinkID"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы связей</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.IterationIdNotEmpty(System.Int64,System.String,System.String)">
            <summary>Проверка что идентификатор итерации не пуст</summary>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификатор итерации</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификатор итерации</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.IterationIdNotEmpty(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого идентификатора итерации</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.IterationIdIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой из <param name="value"/> == <see cref="F:Intermech.Consts.UnknownIterationId"/></exception>
            <param name="value">Идентификаторы объектов</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Идентификаторы итераций</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.ValueNotEmpty(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.String,System.String)">
            <summary>Проверка что значение атрибута не пусто</summary>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если переданное значение равно <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Значение атрибута</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Check.SetValue.ValueNotEmpty(System.Collections.Generic.IEnumerable{Intermech.Kernel.Search.ObligatoryObjectAttributes},System.String,System.String)">
            <summary>Проверка что в перечислении нет пустого значение атрибута</summary>
            <exception cref="T:System.NullReferenceException">Если коллекция равна null</exception>
            <exception cref="T:Intermech.Diagnostics.AttributeIsEmptyException">Выбрасываемая исключительная ситуация в том случае если любой элемент переданного перечисления равен <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.Zero"/> или <see cref="F:Intermech.Kernel.Search.ObligatoryObjectAttributes.None"/></exception>
            <param name="value">Перечисление значений атрибута</param>
            <param name="message">Сообщение об ошибке</param>
            <param name="callerMemberName">(Заполняется компилятором) Наименование метода, чей результат проверяется</param>
            <returns>Значение атрибута</returns>
        </member>
        <member name="T:Intermech.Diagnostics.AttributeIdIsEmptyException">
            <summary>"Идентификатор атрибута пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.ArgumentAttributeIdIsEmptyException">
            <summary>"Идентификатор атрибута пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.AttributeIsEmptyException">
            <summary>"Значение атрибута пусто"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.ArgumentAttributeIsEmptyException">
            <summary>"Значение атрибута пусто"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.EmptyDataTableException">
            <summary>Исключительная ситуация, относящаяся к именованному значению.</summary>
        </member>
        <member name="T:Intermech.Diagnostics.IterationIdIsEmptyException">
            <summary>"Идентификатор итерации пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.ArgumentIterationIdIsEmptyException">
            <summary>"Идентификатор итерации пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.ObjectIdIsEmptyException">
            <summary>"Идентификатор объекта пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.ArgumentObjectIdIsEmptyException">
            <summary>"Идентификатор объекта пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.ObjectTypeIdIsEmptyException">
            <summary>"Идентификатор типа объекта пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.ArgumentObjectTypeIdIsEmptyException">
            <summary>"Идентификатор типа объекта пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.RelationIdIsEmptyException">
            <summary>"Идентификатор связи пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.ArgumentRelationIdIsEmptyException">
            <summary>"Идентификатор связи пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.RelationTypeIdIsEmptyException">
            <summary>"Идентификатор типа связи пуст"</summary>
        </member>
        <member name="T:Intermech.Diagnostics.ArgumentRelationTypeIdIsEmptyException">
            <summary>"Идентификатор типа связи пуст"</summary>
        </member>
        <member name="T:Intermech.Common.INamedContext">
            <summary>
            Поддержка именованного контекста.
            Может использоваться для сохранения настроек, логов и так далее, для человекочитабельного описания.
            Например "Создание объекта/Форма создания объекта/Контрол выбора типа"
            </summary>
        </member>
        <member name="P:Intermech.Common.INamedContext.ContextName">
            <summary>Локальное имя контекста</summary>
        </member>
        <member name="P:Intermech.Common.INamedContext.OwnerNamedContext">
            <summary>Контекст, в который входит данный</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemAttribute">
            <summary>Дескриптор системного атрибута</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemAttribute.Name">
            <summary>Наименование атрибута</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemAttribute.ShortName">
            <summary>Короткое имя атрибута</summary>
        </member>
        <member name="M:Intermech.Metadata.SystemAttribute.#ctor(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.Type,System.String)">
            <summary>Конструктор обязательного атрибута объектов (ObligatoryObjectAttributes)</summary>
        </member>
        <member name="T:Intermech.Metadata.Attributes">
            <summary>Типы обязательных атрибутов</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.UnknownID">
            <summary>Неопределенное значение идентификатора атрибута</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ObjectVersionID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Prototype">
            <summary>Идентификатор прототипа</summary>
        </member>
        <member name="P:Intermech.Metadata.Attributes.ID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ObjectID">
            <summary>Идентификатор объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ObjectVersionGuid">
            <summary>Глобальный идентификатор версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.Attributes.Guid">
            <summary>Глобальный идентификатор версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ObjectGuid">
            <summary>Глобальный идентификатор объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.VersionNum">
            <summary>Номер версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.VersionType">
            <summary>Состояние версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.IsBaseVersion">
            <summary>Признак базовой версии</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ParentVersionID">
            <summary>Идентификатор родительской версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.VersionsCount">
            <summary>Количество версий объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ObjectType">
            <summary>Тип объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Name">
            <summary>Наименование</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Designation">
            <summary>Обозначение</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Caption">
            <summary>Заголовок объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Note">
            <summary>Примечание</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.LcStep">
            <summary>Шаг жизненного цикла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.LcChanged">
            <summary>Дата изменения шага ЖЦ</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Level">
            <summary>Уровень продвижения объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Project">
            <summary>Принадлежность проекту</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Site">
            <summary>Узел информационной сети</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.AccessLevel">
            <summary>Уровень доступа объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Creator">
            <summary>Создатель объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Owner">
            <summary>Владелец объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.CheckedOutBy">
            <summary>Кем взят на изменение</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Author">
            <summary>Разработал</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.CheckedBy">
            <summary>Проверил</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ConfirmBy">
            <summary>Утвердил</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Modified">
            <summary>Дата модификации объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Created">
            <summary>Дата создания объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Modification">
            <summary>Номер группы изменений</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ReferencesCount">
            <summary>Количество ссылок на версию объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.UsageCount">
            <summary>Количество входимостей в версии объектов</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.RelationCreator">
            <summary>Создатель связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.PrjLinkID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="P:Intermech.Metadata.Attributes.RelationID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.RelationGuid">
            <summary>Глобальный идентификатор связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ProjID">
            <summary>Идентификатор родительского объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.PartID">
            <summary>Идентификатор дочернего объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.RelationType">
            <summary>Тип связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.CreateDate">
            <summary>Дата начала действия связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.RelationActualDate">
            <summary>Дата формирования связей</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.VersionResult">
            <summary>Результат подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.AreaID">
            <summary>Предметная область</summary>
            <remarks>У этого атрибуту нет дескриптора в кэше метаданных, возможно он виртуальный, так что будет просто константой</remarks>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ShortName">
            <summary>Краткое наименование</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Process">
            <summary>Процесс</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Role">
            <summary>Роль</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Rank">
            <summary>Должность</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.IoUser">
            <summary>Исполняющий обязанности</summary>
        </member>
        <member name="P:Intermech.Metadata.Attributes.Acting">
            <summary>Исполняющий обязанности</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.SecurityLevel">
            <summary>Уровень безопасности</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.FileID">
            <summary>Идентификатор файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.FileName">
            <summary>Имя файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.FileSize">
            <summary>Размер файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.FileDate">
            <summary>Дата обновления файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ZipSize">
            <summary>Упакованный размер файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ObjLinkID">
            <summary>Идентификатор объекта/связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ArchiveMethod">
            <summary>Метод упаковки файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Data">
            <summary>Данные</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.VersionRule">
            <summary> Правило подбора версий (для группирующих объектов, контекстов редактирования)</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Description">
            <summary>Описание</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Director">
            <summary>Руководитель</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ImbaseKey">
            <summary>Ключ Imbase</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ImbaseCode">
            <summary>Код Imbase</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ImbaseLink">
            <summary>Ссылка на объект IMBASE</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Storage">
            <summary>"Файловый шкаф" - ссылка на файловый шкаф</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.File">
            <summary>Файл</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.DocumentFile">
            <summary>Файл документа, Хранит файлы, если в файле хранится сканированный файл</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ScannedDocument">
            <summary>Сканированный документ</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ConfigFile">
            <summary>Конфигурационные файлы</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.CompositionContext">
            <summary>Контекст состава</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.VersionInRelation">
            <summary>Идентификатор версии в составе</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.BufferSize">
            <summary>Размер буфера данных</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.StorageTableName">
            <summary>Имя таблицы файлового шкафа</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.StorageType">
            <summary>Тип файлового шкафа</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ObjectTypeGuids">
            <summary>Глобальные идентификаторы типов объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.RelationTypeGuids">
            <summary>Глобальные идентификаторы типов связей</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.RelationTypeGuid">
            <summary>Глобальный идентификатор типа связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.FilterSelection">
            <summary>Условия фильтрации объектов</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.SortIndex">
            <summary>Сортировка</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ExternalUser">
            <summary>Внешний пользователь</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.OKP">
            <summary>Код ОКП</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.UserName">
            <summary>Атрибут с именем пользователя для отображения "Выводимое имя"</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Format">
            <summary>Формат</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Count">
            <summary>Количество</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.NormalizedName">
            <summary>Нормализованное наименование</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Position">
            <summary>Позиция</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ActiveStorage">
            <summary>Активный файловый шкаф</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ArticleID">
            <summary>Идентификатор изделия</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.DocumentID">
            <summary>Идентификатор документа</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Weight">
            <summary>Масса</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.UnitWeight">
            <summary>Удельная масса</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Size">
            <summary>Размеры</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Zone">
            <summary>Зона</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Subdivision">
            <summary>Подразделение</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Litera">
            <summary>Литера</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.NormControlledBy">
            <summary>Нормоконтролёр</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ScriptText">
            <summary>Текст сценария (объекта Сценарий)</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Email">
            <summary>Электронная почта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.HomeAddress">
            <summary>Домашний адрес</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Phone">
            <summary>Телефон</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.PostalAddress">
            <summary>Почтовый адрес</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.HomePhone">
            <summary>Домашний телефон</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.MobilePhone">
            <summary>Мобильный телефон</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Office">
            <summary>Комната</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.LockedUser">
            <summary>Пользователь заблокирован</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.ObjectLink">
            <summary>Ссылка на объект</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Calendar">
            <summary>Календарь</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.UserCalendar">
            <summary>Персональный календарь</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.IterationID">
            <summary>Идентификатор итерации</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.UserHireDate">
            <summary>Дата начала работы пользователя</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.UserFireDate">
            <summary>Дата увольнения пользователя</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.CompositionVersionID">
            <summary>Идентификатор версии в составе</summary>
        </member>
        <member name="M:Intermech.Metadata.Attributes.GetIdByGuid(System.Guid,System.Boolean)">
            <summary>Получить идентификатор типа атрибута по его идентификатору</summary>
            <exception cref="T:Intermech.AttributeTypeNotFoundException">Если тип атрибута с переданным guid не найден и throwIfNotFound == true</exception>
        </member>
        <member name="M:Intermech.Metadata.Attributes.GetIdByGuidOrName(System.String,System.Boolean)">
            <summary>Получить идентификатор типа атрибута по его идентификатору</summary>
            <exception cref="T:Intermech.AttributeTypeNotFoundException">Если тип атрибута с переданным guid не найден и throwIfNotFound == true</exception>
        </member>
        <member name="T:Intermech.Metadata.Attributes.Consts">
            <summary>Guid-ы и идентификаторы системных атрибутов IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ObjectTypeGuid">
            <summary>Глобальный идентификатор типа объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.PrototypeGuid">
            <summary>Идентификатор прототипа</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.DesignationGuid">
            <summary>Обозначение</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.NoteGuid">
            <summary>Примечание</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.AuthorGuid">
            <summary>Разработал</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.CheckedByGuid">
            <summary>Проверил</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ConfirmByGuid">
            <summary>Утвердил</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ShortNameGuid">
            <summary>Краткое наименование</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ProcessGuid">
            <summary>Процесс</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.RoleGuid">
            <summary>Роль</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.RankGuid">
            <summary>Должность</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.IoUserGuid">
            <summary>Исполняющий обязанности</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.SecurityLevelGuid">
            <summary>Уровень безопасности</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.FileIDGuid">
            <summary>Идентификатор файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.FileNameGuid">
            <summary>Имя файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.FileSizeGuid">
            <summary>Размер файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.FileDateGuid">
            <summary>Дата обновления файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ZipSizeGuid">
            <summary>Упакованный размер файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ObjLinkIDGuid">
            <summary>Идентификатор объекта/связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ArchiveMethodGuid">
            <summary>Метод упаковки файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.DataGuid">
            <summary>Данные</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.VersionRuleGuid">
            <summary> Правило подбора версий (для группирующих объектов, контекстов редактирования)</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.DescriptionGuid">
            <summary>Описание</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.DirectorGuid">
            <summary>Руководитель</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ImbaseKeyGuid">
            <summary>Ключ Imbase</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ImbaseCodeGuid">
            <summary>Код Imbase</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ImbaseLinkGuid">
            <summary>Ссылка на объект IMBASE</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.StorageGuid">
            <summary>"Файловый шкаф" - ссылка на файловый шкаф</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.FileGuid">
            <summary>Файл</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.DocumentFileGuid">
            <summary>Файл документа, Хранит файлы, если в файле хранится сканированный файл</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ScannedDocumentGuid">
            <summary>Сканированный документ</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ConfigFileGuid">
            <summary>Конфигурационные файлы</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.CompositionContextGuid">
            <summary>Контекст состава</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.VersionInRelationGuid">
            <summary>Идентификатор версии в составе</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.BufferSizeGuid">
            <summary>Размер буфера данных</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.StorageTableNameGuid">
            <summary>Имя таблицы файлового шкафа</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.StorageTypeGuid">
            <summary>Тип файлового шкафа</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ObjectTypeGuidsGuid">
            <summary>Глобальные идентификаторы типов объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.RelationTypeGuidsGuid">
            <summary>Глобальные идентификаторы типов связей</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.RelationTypeGuidGuid">
            <summary>Глобальный идентификатор типа связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.FilterSelectionGuid">
            <summary>Условия фильтрации объектов</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.SortIndexGuid">
            <summary>Сортировка</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ExternalUserGuid">
            <summary>Внешний пользователь</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.OKPGuid">
            <summary>Код ОКП</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.UserNameGuid">
            <summary>Атрибут с именем пользователя для отображения "Выводимое имя"</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.FormatGuid">
            <summary>Формат</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.CountGuid">
            <summary>Количество</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.NormalizedNameGuid">
            <summary>Нормализованное наименование</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.PositionGuid">
            <summary>Позиция</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ActiveStorageGuid">
            <summary>Активный файловый шкаф</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ArticleIDGuid">
            <summary>Идентификатор изделия</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.DocumentIDGuid">
            <summary>Идентификатор документа</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.WeightGuid">
            <summary>Масса</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.UnitWeightGuid">
            <summary>Удельная масса</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.SizeGuid">
            <summary>Размеры</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ZoneGuid">
            <summary>Зона</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.SubdivisionGuid">
            <summary>Подразделение</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.LiteraGuid">
            <summary>Литера</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.NormControlledByGuid">
            <summary>Нормоконтролёр</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ScriptTextGuid">
            <summary>Текст сценария (объекта Сценарий)</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.EmailGuid">
            <summary>Электронная почта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.HomeAddressGuid">
            <summary>Домашний адрес</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.PhoneGuid">
            <summary>Телефон</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.PostalAddressGuid">
            <summary>Почтовый адрес</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.HomePhoneGuid">
            <summary>Домашний телефон</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.MobilePhoneGuid">
            <summary>Мобильный телефон</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.OfficeGuid">
            <summary>Комната</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.LockedUserGuid">
            <summary>Пользователь заблокирован</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.ObjectLinkGuid">
            <summary>Ссылка на объект</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.CalendarGuid">
            <summary>Календарь</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.UserCalendarGuid">
            <summary>Персональный календарь</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.IterationIdGuid">
            <summary>Идентификатор итерации</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.UserHireDateGuid">
            <summary>Дата начала работы пользователя</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Consts.UserFireDateGuid">
            <summary>Дата увольнения пользователя</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.Zero">
            <summary>Зарезервировано</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.None">
            <summary>Зарезервировано</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_OBJECT_ID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_ID">
            <summary>Идентификатор объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_LC_STEP">
            <summary>Шаг жизненного цикла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_VERSION_ID">
            <summary>Номер версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_CHKOUT_BY">
            <summary>Кем взят на изменение</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_OBJECT_TYPE">
            <summary>Тип объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_OWNER_ID">
            <summary>Владелец объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_LEVEL_ID">
            <summary>Уровень продвижения объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_MODIFY_DATE">
            <summary>Дата модификации объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_AREA_ID">
            <summary>Предметная область</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_GUID">
            <summary>Глобальный идентификатор версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_OBJ_CREATE">
            <summary>Дата создания объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_PROJECT_ID">
            <summary>Принадлежность проекту</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_MODIFICATION_ID">
            <summary>Номер группы изменений</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_BASE_VERSION">
            <summary>Признак базовой версии</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_SITE_ID">
            <summary>Узел информационной сети</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_OBJ_GUID">
            <summary>Глобальный идентификатор объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_OBJECT_VER_TYPE">
            <summary>Состояние версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_PRJLINK_ID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_PROJ_ID">
            <summary>Идентификатор родительского объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_PART_ID">
            <summary>Идентификатор дочернего объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_RELATION_TYPE">
            <summary>Тип связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_CREATE_DATE">
            <summary>Дата начала действия связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_PRJ_GUID">
            <summary>Глобальный идентификатор связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_EVENT_ID">
            <summary>ID события</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_CATEGORY_TYPE">
            <summary>Категория</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_CATEGORY_ID">
            <summary>ID категории</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_RELATION_ID">
            <summary>ID связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_OBJECT_NAME">
            <summary>Имя объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_USER_ID">
            <summary>Пользователь</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_COMPUTER_NAME">
            <summary>Имя компьютера</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_NOTE">
            <summary>Комментарии</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_EVENT_TYPE">
            <summary>Вид действия</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_BEGIN_DATE">
            <summary>Начало события</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_END_DATE">
            <summary>Завершение события</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_AUDIT_TYPE">
            <summary>Тип события</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_ACTUAL_DATE">
            <summary>Дата формирования связей</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.CAPTION">
            <summary>Заголовок объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_SET_DATE">
            <summary>Дата присвоения значения</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_STATUS">
            <summary>Статус записи в истории значений</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_INTEGER_VALUE">
            <summary>Тип данных 'Целое число'</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_STRING_VALUE">
            <summary>Тип данных 'Строка'</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_DOUBLE_VALUE">
            <summary>Тип данных 'Вещественное число'</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_DATE_VALUE">
            <summary>Тип данных 'Дата'</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_KEY">
            <summary>Ключ</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_ATTRIBUTE_ID">
            <summary>Идентификатор атрибута</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_VERSION_RESULT">
            <summary>Результат подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_FILE_ID">
            <summary>Идентификатор файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_FILENAME">
            <summary>Имя файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_FILESIZE">
            <summary>Размер файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_FILEDATE">
            <summary>Дата обновления файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_ZIPSIZE">
            <summary>Упакованный размер файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_OBJECTLINK_ID">
            <summary>Идентификатор объекта/связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_ARC_METHOD">
            <summary>Метод упаковки файла</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_ELEMENT_STATUSES">
            <summary>Статусы элемента (объекта, связи, события, файла) после его дополнительной обработки ядром и плагинами</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_SNAPSHOT_ID">
            <summary>Идентификатор итерации (для случаев получения сохранённых в итерации объектов)</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_SNAPSHOT_DATE">
            <summary>Дата создания итерации</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_ACCESS">
            <summary>Уровень доступа объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_CREATOR_ID">
            <summary>Создатель объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_REL_CREATOR">
            <summary>Создатель связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_PARENT_OBJECT_ID">
            <summary>Идентификатор родительской версии объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_VERSIONS_COUNT">
            <summary>Количество версий объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_REFERENCE_COUNT">
            <summary>Количество ссылок на версию объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_RELATIONS_COUNT">
            <summary>Количество входимостей в версии объектов</summary>
        </member>
        <member name="F:Intermech.Metadata.Attributes.F_LCSTEP_DATE">
            <summary>Дата изменения шага ЖЦ</summary>
        </member>
        <member name="T:Intermech.Metadata.ObligatoryObjectAttribute">
            <summary>Дескриптор обязательного атрибута объектов</summary>
            <summary>Дескриптор обязательного атрибута объектов</summary>
        </member>
        <member name="P:Intermech.Metadata.ObligatoryObjectAttribute.Guid">
            <summary>У обязательных атрибутов отсутствует Guid</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemAttribute4ObjectType">
            <summary>Дескриптор системного атрибута системного типа объекта</summary>
            <summary>Дескриптор системного атрибута системного типа объекта</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemAttribute4RelationType">
            <summary>Дескриптор системного атрибута системного типа связи</summary>
            <summary>Дескриптор системного атрибута системного типа связи</summary>
        </member>
        <member name="T:Intermech.Metadata.FiltrationRule">
            <summary>Строковое представление Guid-ов встроенных правил фильтрации</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Unknown">
            <summary>Неопределённое правило фильтрации</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.LatestVersions">
            <summary>Системное виртуальное правило "Последние версии объектов"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.LatestVersionsObject">
            <summary>Системный объект "Последние версии объектов"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.AllVersions">
            <summary>Системное виртуальное правило "Все версии объектов"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.AllVersionsObject">
            <summary>Системный объект "Все версии объектов"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.BaseVersions">
            <summary>Системное виртуальное правило "Подбор базовых версий"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.AllConcreteVersionsObject">
            <summary>Системный объект "Все версии объектов с учётом конкретизации"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.SequentialModifications">
            <summary>Системное виртуальное правило "Последовательное проведение изменений"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.UserDefaults">
            <summary>настройки фильтрации состава "Настройки пользователя по умолчанию"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.DefaultVersionRule">
            <summary>настройки фильтрации состава "Правило подбора версий по умолчанию" (используется, если требуется правило для
                редактирования по умолчанию)</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.OverrideOwnerID">
            <summary>Если указать данное значение в качестве ключа в поле Tags в параметрах запроса, то в качестве значения можно
                задать ключ настроек фильтрации составов (OwnerID), который перекроет ключ, заданный коллекции связей или объектов
                в параметрах запроса или в соответствующем свойстве</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.OverrideEditingContext">
            <summary>Если указать данное значение в качестве ключа в поле Tags в параметрах запроса, то в качестве значения можно
                задать информацию о контексте редактирования в виде экземпляра типа CurrentEditingContext, который перекроет любые
                настройки контекстов, за исключением настроек, переданных в контексте потока</summary>
        </member>
        <member name="T:Intermech.Metadata.FiltrationRule.Guids">
            <summary>Guid-ы системных правил фильтрации (в виде структур типа Guid)</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.Unknown">
            <summary>Неопределённое правило фильтрации</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.LatestVersions">
            <summary>Системное виртуальное правило "Последние версии объектов"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.LatestVersionsObject">
            <summary>Системный объект "Последние версии объектов"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.AllVersions">
            <summary>Системное виртуальное правило "Все версии объектов"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.AllVersionsObject">
            <summary>Системный объект "Все версии объектов"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.BaseVersions">
            <summary>Системное виртуальное правило "Подбор базовых версий"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.AllConcreteVersionsObject">
            <summary>Системный объект "Все версии объектов с учётом конкретизации"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.SequentialModifications">
            <summary>Системное виртуальное правило "Последовательное проведение изменений"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.UserDefaults">
            <summary>настройки фильтрации состава "Настройки пользователя по умолчанию"</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.DefaultVersionRule">
            <summary>настройки фильтрации состава "Правило подбора версий по умолчанию" (используется, если требуется правило для
                редактирования по умолчанию)</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.OverrideOwnerID">
            <summary>Если указать данное значение в качестве ключа в поле Tags в параметрах запроса, то в качестве значения можно
                задать ключ настроек фильтрации составов (OwnerID), который перекроет ключ, заданный коллекции связей или объектов
                в параметрах запроса или в соответствующем свойстве</summary>
        </member>
        <member name="F:Intermech.Metadata.FiltrationRule.Guids.OverrideEditingContext">
            <summary>Если указать данное значение в качестве ключа в поле Tags в параметрах запроса, то в качестве значения можно
                задать информацию о контексте редактирования в виде экземпляра типа CurrentEditingContext, который перекроет любые
                настройки контекстов, за исключением настроек, переданных в контексте потока</summary>
        </member>
        <member name="T:Intermech.Metadata.ExactObjTypes">
            <summary>Кэш дочерних типов объектов</summary>
        </member>
        <member name="T:Intermech.Metadata.InitFieldsWithSessionAttribute">
            <summary>Признак того, что поля хранилища метаданных должны инициализироваться с пользовательской сессией (static void Init(IUserSession))</summary>
        </member>
        <member name="T:Intermech.Metadata.IpsMetadataEntityType">
            <summary>Идентификатор типа сущности метаданных (числовой идентификатор типа int)</summary>
        </member>
        <member name="M:Intermech.Metadata.IpsMetadataEntityType.#ctor(Intermech.Kernel.Search.ObligatoryObjectAttributes,System.Type,System.String)">
            <summary>Конструктор обязательного атрибута объектов (ObligatoryObjectAttributes)</summary>
        </member>
        <member name="T:Intermech.Metadata.IpsMetadataObject">
            <summary>Идентификатор объекта (числовой идентификатор типа long)</summary>
        </member>
        <member name="P:Intermech.Metadata.IpsMetadataObject.ObjectID">
            <summary>Идентификатор объекта (!!! Не версии объекта !!!)</summary>
        </member>
        <member name="P:Intermech.Metadata.IpsMetadataObject.Caption">
            <summary>Заголовок объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.IpsMetadataObject.TypeID">
            <summary>Идентификатор типа объекта</summary>
        </member>
        <member name="T:Intermech.Metadata.IpsMetadataEntityBase`1">
            <summary>Дескриптор обязательной сущности IPS</summary>
        </member>
        <member name="P:Intermech.Metadata.IpsMetadataEntityBase`1.ID">
            <summary>Идентификатор</summary>
        </member>
        <member name="F:Intermech.Metadata.IpsMetadataEntityBase`1.Guid">
            <summary>Guid</summary>
        </member>
        <member name="F:Intermech.Metadata.IpsMetadataEntityBase`1.Obligatory">
            <summary>Является ли сущность обязательной</summary>
        </member>
        <member name="P:Intermech.Metadata.IpsMetadataEntityBase`1.Found">
            <summary>Найдена ли сущность в БД</summary>
        </member>
        <member name="P:Intermech.Metadata.IpsMetadataEntityBase`1.Loaded">
            <summary>Идентификатор прочитан из БД (но может быть в ней не найден, то есть <see cref="P:Intermech.Metadata.IpsMetadataEntityBase`1.Found"/> == false)</summary>
        </member>
        <member name="F:Intermech.Metadata.IpsMetadataEntityBase`1.FullPropertyName">
            <summary>Полное свойства, кэширующее дескриптор сущности</summary>
        </member>
        <member name="F:Intermech.Metadata.IpsMetadataEntityBase`1._Namespace">
            <summary>Пространство имён кэша сущности</summary>
        </member>
        <member name="P:Intermech.Metadata.IpsMetadataEntityBase`1.EntityName">
            <summary>Имя сущности (например "Атрибуты")</summary>
        </member>
        <member name="P:Intermech.Metadata.IpsMetadataEntityBase`1.EntityInstanceName">
            <summary>Имя единицы сущности (например "Атрибут")</summary>
        </member>
        <member name="P:Intermech.Metadata.IpsMetadataEntityBase`1.EntityInstanceNameInGenitiveCase">
            <summary>Имя единицы сущности в родительном падеже (например "атрибута")</summary>
        </member>
        <member name="M:Intermech.Metadata.IpsMetadataEntityBase`1.#ctor(`0,System.Type,System.String)">
            <summary>Конструктор обязательного атрибута объектов (ObligatoryObjectAttributes)</summary>
        </member>
        <member name="T:Intermech.Metadata.MetadataLoader">
            <summary>Загрузчик метаданных IPS</summary>
        </member>
        <member name="T:Intermech.Metadata.LCLevel">
            <summary>Уровни продвижения</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.UnknownID">
            <summary>Идентификатор неопределённого уровня продвижения</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Personal">
            <summary>Персональный объект</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Created">
            <summary>Создание и модификация</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Signing">
            <summary>Согласование и утверждение</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Imported">
            <summary>Импортировано</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Annulment">
            <summary>Аннулировано</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Manufacturing">
            <summary>Производство и эксплуатация</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Deleted">
            <summary>Удалено</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Keeping">
            <summary>Хранение</summary>
        </member>
        <member name="T:Intermech.Metadata.LCLevel.Consts">
            <summary>Guid-ы системных уровней продвижения IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Consts.PersonalGuid">
            <summary>Персональный объект</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Consts.CreatedGuid">
            <summary>Создание и модификация</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Consts.SigningGuid">
            <summary>Согласование и утверждение</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Consts.ImportedGuid">
            <summary>Импортировано</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Consts.AnnulmentGuid">
            <summary>Аннулировано</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Consts.ManufacturingGuid">
            <summary>Производство и эксплуатация</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Consts.DeletedGuid">
            <summary>Удалено</summary>
        </member>
        <member name="F:Intermech.Metadata.LCLevel.Consts.KeepingGuid">
            <summary>Хранение</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemLCLevel">
            <summary>Дескриптор системного уровня продвижения</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemLCLevel.Name">
            <summary>Наименование</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemLCLevel.AreaID">
            <summary>ID предметной области</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemLCLevel.IsDefault">
            <summary>Является ли уровень уровнем по умолчанию</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemLCLevel.IsFrozen">
            <summary>Заморожен ли в данный момент</summary>
            <summary>Заморожен ли в данный момент</summary>
        </member>
        <member name="T:Intermech.Metadata.LCStep">
            <summary>Шаги жизненного цикла</summary>
        </member>
        <member name="F:Intermech.Metadata.LCStep.UnknownID">
            <summary>Идентификатор неопределённого шага жизненного цикла</summary>
        </member>
        <member name="F:Intermech.Metadata.LCStep.UserExternal">
            <summary>Внешний пользователь</summary>
        </member>
        <member name="F:Intermech.Metadata.LCStep.UserFired">
            <summary>Пользователь уволен</summary>
        </member>
        <member name="F:Intermech.Metadata.LCStep.UserCreated">
            <summary>Пользователь создан</summary>
        </member>
        <member name="T:Intermech.Metadata.LCStep.Consts">
            <summary>Guid-ы системных шагов жизненного цикла IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.LCStep.Consts.UserExternalGuid">
            <summary>Внешний пользователь</summary>
        </member>
        <member name="F:Intermech.Metadata.LCStep.Consts.UserFiredGuid">
            <summary>Пользователь уволен</summary>
        </member>
        <member name="F:Intermech.Metadata.LCStep.Consts.UserCreatedGuid">
            <summary>Пользователь создан</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemLCStep">
            <summary>Дескриптор системного шага жизненного цикла</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemLCStep.LevelID">
            <summary>Идентификатор уровня продвижения</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemLCStep.FirstStep">
            <summary>Признак того, что данный шаг является первым в схеме ЖЦ</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemLCStep.ObjectModifyMode">
            <summary>Способ модификации объектов на данном шаге ЖЦ</summary>
        </member>
        <member name="T:Intermech.Metadata.MeasureUnit">
            <summary>Единицы измерения</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.UnknownID">
            <summary>Идентификатор неопределённой единицы измерения</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Minutes">
            <summary>Минуты</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Hours">
            <summary>Часы</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Days">
            <summary>Дни</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Weeks">
            <summary>Недели</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Months">
            <summary>Месяцы</summary>
        </member>
        <member name="T:Intermech.Metadata.MeasureUnit.Consts">
            <summary>Guid-ы и идентификаторы системных единиц измерения IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Consts.MinutesGuid">
            <summary>Минуты</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Consts.HoursGuid">
            <summary>Часы</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Consts.DaysGuid">
            <summary>Дни</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Consts.WeeksGuid">
            <summary>Недели</summary>
        </member>
        <member name="F:Intermech.Metadata.MeasureUnit.Consts.MonthsGuid">
            <summary>Месяцы</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemMeasureUnit">
            <summary>Дескриптор системной единицы измерения</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemMeasureUnit.Descriptor">
            <summary>Дескриптор единицы измерения</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemMeasureUnit.K">
            <summary>Коэффициент приведения к базовой величине. Для базовой величины == 1</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemMeasureUnit.PhysicalQuantityID">
            <summary>Ид. физической величины, которую измеряют данной единицей измерения</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemMeasureUnit.LongName">
            <summary>Наименование единицы измерения (килограмм)</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemMeasureUnit.ShortName">
            <summary>Краткое наименование единицы измерения (кг)</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemMeasureUnit.IsDefault">
            <summary>Используется ли данная единица измерения по умолчанию</summary>
        </member>
        <member name="T:Intermech.Metadata.Objects">
            <summary>Объект IPS</summary>
        </member>
        <member name="F:Intermech.Metadata.Objects.UnknownID">
            <summary>Идентификатор неопределённого объекта</summary>
        </member>
        <member name="F:Intermech.Metadata.Objects.UnknownTypeID">
            <summary>Идентификатор неопределённого типа объекта</summary>
        </member>
        <member name="T:Intermech.Metadata.ObjectTypes">
            <summary>Типы объектов IPS.Project</summary>
            <summary>Типы объектов IPS.Project</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.UnknownID">
            <summary>Идентификатор неопределённого типа объектов</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.User">
            <summary>Пользователь</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.UserGroup">
            <summary>Группа пользователей</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Rank">
            <summary>Должность</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.MeasureUnit">
            <summary>Единица измерения</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Scripts">
            <summary>Сценарии IPS</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Forms">
            <summary>Форма редактирования информации</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.FormDataEditingType">
            <summary>Форма редактирования атрибутов объектов и связей</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.NoticesOnChanges">
            <summary>Уведомления об изменениях</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.PortalObjects">
            <summary>Опубликованные объекты</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Notifications">
            <summary>Уведомления</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Signatures">
            <summary>Электронные подписи</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.VersionRule">
            <summary>тип объекта "Правило подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.VersionRuleCommon">
            <summary>тип объекта "Общее правило подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.VersionRuleUser">
            <summary>тип объекта "Персональное правило подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.VersionRuleSystem">
            <summary>тип объекта "Системное правило подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.EditingContexts">
            <summary>Тип объекта "Контексты редактирования</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.IncompleteObject">
            <summary>Неполный ссылочный объект</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Calendar">
            <summary>Календарь</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.OrganizationUnits">
            <summary>Организационная единица</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.SystemProject">
            <summary>Проект</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Folder">
            <summary>Папка</summary>
        </member>
        <member name="M:Intermech.Metadata.ObjectTypes.GetIdFromGuid(System.Guid,System.Boolean)">
            <summary>Получить идентификатор типа объекта по его идентификатору</summary>
            <exception cref="T:Intermech.Interfaces.ObjectTypeNotFoundException">Если тип объекта с переданным guid не найден и throwIfNotFound == true</exception>
        </member>
        <member name="M:Intermech.Metadata.ObjectTypes.GetIdFromGuid(System.String,System.Boolean)">
            <summary>Получить идентификатор типа объекта по его идентификатору</summary>
            <exception cref="T:Intermech.Interfaces.ObjectTypeNotFoundException">Если тип объекта с переданным guid не найден и throwIfNotFound == true</exception>
        </member>
        <member name="T:Intermech.Metadata.ObjectTypes.Consts">
            <summary>Guid-ы и идентификаторы системных типов объектов IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.UserGuid">
            <summary>Пользователь</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.UserGroupGuid">
            <summary>Группа пользователей</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.RankGuid">
            <summary>Должность</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.MeasureGuid">
            <summary>Единица измерения</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.ScriptsGuid">
            <summary>Сценарии IPS</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.FormsGuid">
            <summary>Форма редактирования информации</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.FormDataEditingTypeGuid">
            <summary>Форма редактирования атрибутов объектов и связей</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.NoticesOnChangesGuid">
            <summary>Уведомления об изменениях</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.PortalObjectsGuid">
            <summary>Опубликованные объекты</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.NotificationsGuid">
            <summary>Уведомления</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.SignaturesGuid">
            <summary>Электронные подписи</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.VersionRuleGuid">
            <summary>тип объекта "Правило подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.VersionRuleCommonGuid">
            <summary>тип объекта "Общее правило подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.VersionRuleUserGuid">
            <summary>тип объекта "Персональное правило подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.VersionRuleSystemGuid">
            <summary>тип объекта "Системное правило подбора версий</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.EditingContextsGuid">
            <summary>Тип объекта "Контексты редактирования</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.IncompleteObjectGuid">
            <summary>Неполный ссылочный объект</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.CalendarsGuid">
            <summary>Календарь</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.OrganizationUnitsGuid">
            <summary>Организационные единицы</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.SystemProjectGuid">
            <summary>Проект</summary>
        </member>
        <member name="F:Intermech.Metadata.ObjectTypes.Consts.FolderGuid">
            <summary>Папка</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemObjectType">
            <summary>Дескриптор системного типа объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.ObjectTypeName">
            <summary>Наименование типа объектов (например, "Детали")</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.ObjectName">
            <summary>Наименование типа объектов (например, "Деталь")</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.IsLocalType">
            <summary>Является ли тип данных локальным</summary>
        </member>
        <member name="F:Intermech.Metadata.SystemObjectType.ExactObjTypes">
            <summary>Информация о дочерних типах объектов (рекурсивно, включая данный тип объекта)</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.ExactChildObjTypes">
            <summary>Информация о дочерних типах объектов (не рекурсивно, не включая данный тип объекта)</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemObjectType.Attributes">
            <summary>Атрибуты объекта</summary>
            <summary>Атрибуты типа объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_OBJECT_ID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_ID">
            <summary>Идентификатор объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_LC_STEP">
            <summary>Шаг жизненного цикла</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_VERSION_ID">
            <summary>Номер версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_CHKOUT_BY">
            <summary>Кем взят на изменение</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_OBJECT_TYPE">
            <summary>Тип объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_OWNER_ID">
            <summary>Владелец объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_LEVEL_ID">
            <summary>Уровень продвижения объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_MODIFY_DATE">
            <summary>Дата модификации объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_GUID">
            <summary>Глобальный идентификатор версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_OBJ_CREATE">
            <summary>Дата создания объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_PROJECT_ID">
            <summary>Принадлежность проекту</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_MODIFICATION_ID">
            <summary>Номер группы изменений</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_BASE_VERSION">
            <summary>Признак базовой версии</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_SITE_ID">
            <summary>Узел информационной сети</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_OBJ_GUID">
            <summary>Глобальный идентификатор объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_OBJECT_VER_TYPE">
            <summary>Состояние версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.CAPTION">
            <summary>Заголовок объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_ACCESS">
            <summary>Уровень доступа объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_CREATOR_ID">
            <summary>Создатель объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_PARENT_OBJECT_ID">
            <summary>Идентификатор родительской версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_VERSIONS_COUNT">
            <summary>Количество версий объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_REFERENCE_COUNT">
            <summary>Количество ссылок на версию объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_RELATIONS_COUNT">
            <summary>Количество входимостей в версии объектов</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.F_LCSTEP_DATE">
            <summary>Дата изменения шага ЖЦ</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.VersionID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.ID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.ObjectID">
            <summary>Идентификатор объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.VersionGuid">
            <summary>Глобальный идентификатор версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Guid">
            <summary>Глобальный идентификатор версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.ObjectGuid">
            <summary>Глобальный идентификатор объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.VersionNum">
            <summary>Номер версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.VersionType">
            <summary>Состояние версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.IsBaseVersion">
            <summary>Признак базовой версии</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.ParentVersionID">
            <summary>Идентификатор родительской версии объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.VersionsCount">
            <summary>Количество версий объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.ObjectType">
            <summary>Тип объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Name">
            <summary>Наименование</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Designation">
            <summary>Обозначение</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Caption">
            <summary>Заголовок объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Note">
            <summary>Примечание</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.LcStep">
            <summary>Шаг жизненного цикла</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.LcChanged">
            <summary>Дата изменения шага ЖЦ</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Level">
            <summary>Уровень продвижения объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Project">
            <summary>Принадлежность проекту</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Site">
            <summary>Узел информационной сети</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.AccessLevel">
            <summary>Уровень доступа объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Creator">
            <summary>Создатель объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Owner">
            <summary>Владелец объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.CheckedOutBy">
            <summary>Кем взят на изменение</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Author">
            <summary>Разработал</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.CheckedBy">
            <summary>Проверил</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.ConfirmBy">
            <summary>Утвердил</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Modified">
            <summary>Дата модификации объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Created">
            <summary>Дата создания объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.Modification">
            <summary>Номер группы изменений</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.ReferencesCount">
            <summary>Количество ссылок на версию объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemObjectType.Attributes.UsageCount">
            <summary>Количество входимостей в версии объектов</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemObjectType.ConsistOf">
            <summary>Возможные способы формирования состава</summary>
            <summary>Возможные способы формирования состава</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemObjectType.UsedIn">
            <summary>Возможные способы формирования входимости</summary>
            <summary>Возможные способы формирования входимости</summary>
        </member>
        <member name="T:Intermech.Metadata.ObjectAttributes">
            <summary>Атрибуты объекта</summary>
        </member>
        <member name="T:Intermech.Metadata.PhysicalQuantity">
            <summary>Системные физические величины IPS</summary>
        </member>
        <member name="T:Intermech.Metadata.PhysicalQuantity.Consts">
            <summary>Guid-ы и идентификаторы системных физических величин IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemPhysicalQuantity">
            <summary>Дескриптор системной физической величины</summary>
        </member>
        <member name="T:Intermech.Metadata.RelationTypes">
            <summary>Типы связей IPS</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.UnknownID">
            <summary>Идентификатор неопределённого типа связи</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Simple">
            <summary>Простая связь между объектами</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Sorted">
            <summary>Простая связь с сортировкой</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Documentation">
            <summary>Документация на изделие</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.DocsComposition">
            <summary>Состав документации</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.SP">
            <summary>Проектная связь</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.BuildingComposition">
            <summary>Состав строительных объектов</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.ECO">
            <summary>Изменяется по извещению</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.WfAttachment">
            <summary>Вложение (Не вложение IMProject!!!)</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.TechComposition">
            <summary>Технологический состав</summary>
        </member>
        <member name="M:Intermech.Metadata.RelationTypes.GetIdFromGuid(System.Guid,System.Boolean)">
            <summary>Получить идентификатор типа связи по его идентификатору</summary>
            <exception cref="T:Intermech.Interfaces.RelationTypeNotFoundException">Если тип связи с переданным guid не найден и throwIfNotFound == true</exception>
        </member>
        <member name="M:Intermech.Metadata.RelationTypes.GetIdFromGuid(System.String,System.Boolean)">
            <summary>Получить идентификатор типа связи по его идентификатору</summary>
            <exception cref="T:Intermech.Interfaces.RelationTypeNotFoundException">Если тип связи с переданным guid не найден и throwIfNotFound == true</exception>
        </member>
        <member name="T:Intermech.Metadata.RelationTypes.Consts">
            <summary>Guid-ы и идентификаторы системных типов связей IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Consts.SimpleGuid">
            <summary>Простая связь между объектами</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Consts.SortedGuid">
            <summary>Простая связь с сортировкой</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Consts.DocumentationGuid">
            <summary>Документация на изделие</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Consts.DocsCompositionGuid">
            <summary>Состав документации</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Consts.SpGuid">
            <summary>Проектная связь</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Consts.BuildingCompositionGuid">
            <summary>Состав строительных объектов</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Consts.EcoGuid">
            <summary>Изменяется по извещению</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Consts.AttachmentsGuid">
            <summary>Вложения</summary>
        </member>
        <member name="F:Intermech.Metadata.RelationTypes.Consts.TechCompositionGuid">
            <summary>Технологический состав</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemRelationType">
            <summary>Дескриптор системного типа связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Name">
            <summary>Наименование связи</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemRelationType.Attributes">
            <summary>Атрибуты связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.F_PRJLINK_ID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.F_PROJ_ID">
            <summary>Идентификатор родительского объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.F_PART_ID">
            <summary>Идентификатор дочернего объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.F_RELATION_TYPE">
            <summary>Тип связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.F_CREATE_DATE">
            <summary>Дата начала действия связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.F_PRJ_GUID">
            <summary>Глобальный идентификатор связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.F_REL_CREATOR">
            <summary>Создатель связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.PrjLinkID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.RelationID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.ProjID">
            <summary>Идентификатор родительского объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.PartID">
            <summary>Идентификатор дочернего объекта</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.Type">
            <summary>Тип связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.CreateDate">
            <summary>Дата начала действия связи</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.ActualDate">
            <summary>Дата формирования связей</summary>
        </member>
        <member name="P:Intermech.Metadata.SystemRelationType.Attributes.RelationCreator">
            <summary>Создатель связи</summary>
        </member>
        <member name="T:Intermech.Metadata.RelationAttributes">
            <summary>Атрибуты связи</summary>
        </member>
        <member name="T:Intermech.Metadata.Relation">
            <summary>Связь IPS</summary>
        </member>
        <member name="F:Intermech.Metadata.Relation.UnknownID">
            <summary>Идентификатор неопределённой связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Relation.UnknownPrjLinkId">
            <summary>Идентификатор неопределённой связи</summary>
        </member>
        <member name="F:Intermech.Metadata.Relation.UnknownTypeID">
            <summary>Идентификатор неопределённого типа связи</summary>
        </member>
        <member name="T:Intermech.Metadata.Role">
            <summary>Роли</summary>
        </member>
        <member name="F:Intermech.Metadata.Role.UnknownID">
            <summary>Идентификатор неопределённой роли</summary>
        </member>
        <member name="F:Intermech.Metadata.Role.InternalService">
            <summary>Внутренняя служба IPS</summary>
        </member>
        <member name="T:Intermech.Metadata.Role.Consts">
            <summary>Guid-ы и идентификаторы системных ролей IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.Role.Consts.InternalServiceGuid">
            <summary>Внутренняя служба IPS</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemRole">
            <summary>Дескриптор системной роли</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemObject">
            <summary>Системные объекты IPS</summary>
        </member>
        <member name="F:Intermech.Metadata.SystemObject.StandardCalendar">
            <summary>Стандартный календарь</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemObject.Consts">
            <summary>Guid-ы и идентификаторы системных объектов IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.SystemObject.Consts.StandardCalendarGuid">
            <summary>Стандартный календарь</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemObjectDescriptor">
            <summary>Дескриптор системного объекта</summary>
        </member>
        <member name="T:Intermech.Metadata.UserObjectType">
            <summary>Тип объекта "Пользователь IPS"</summary>
        </member>
        <member name="F:Intermech.Metadata.UserObjectType.TypeGuid">
            <summary>Guid типа объекта</summary>
        </member>
        <member name="T:Intermech.Metadata.UserObjectType.Attributes">
            <summary>Системные атрибуты типа объекта "Пользователь"</summary>
        </member>
        <member name="F:Intermech.Metadata.UserObjectType.Attributes.HireDate">
            <summary>Дата начала работы</summary>
        </member>
        <member name="F:Intermech.Metadata.UserObjectType.Attributes.FireDate">
            <summary>Дата увольнения</summary>
        </member>
        <member name="T:Intermech.Metadata.AttachmentRelType">
            <summary>Тип связи "Вложение"</summary>
        </member>
        <member name="F:Intermech.Metadata.AttachmentRelType.TypeGuid">
            <summary>Guid типа связи</summary>
        </member>
        <member name="T:Intermech.Metadata.AttachmentRelType.Attributes">
            <summary>Атрибуты типа связи</summary>
        </member>
        <member name="T:Intermech.Metadata.SimpleRelType">
            <summary>Тип связи "Простая связь"</summary>
        </member>
        <member name="F:Intermech.Metadata.SimpleRelType.TypeGuid">
            <summary>Guid типа связи</summary>
        </member>
        <member name="T:Intermech.Metadata.SimpleRelType.Attributes">
            <summary>Атрибуты типа связи</summary>
        </member>
        <member name="T:Intermech.Metadata.SortedRelType">
            <summary>Тип связи "Простая связь с сортировкой"</summary>
        </member>
        <member name="F:Intermech.Metadata.SortedRelType.TypeGuid">
            <summary>Guid типа связи</summary>
        </member>
        <member name="T:Intermech.Metadata.SortedRelType.Attributes">
            <summary>Атрибуты типа связи</summary>
        </member>
        <member name="F:Intermech.Metadata.SortedRelType.Attributes.SortIndex">
            <summary>Сортировка</summary>
        </member>
        <member name="T:Intermech.Metadata.User">
            <summary>Пользователь</summary>
        </member>
        <member name="F:Intermech.Metadata.User.UnknownID">
            <summary>Идентификатор неопределённого пользователя</summary>
        </member>
        <member name="F:Intermech.Metadata.User.System">
            <summary>Guid пользователя "Система", под которым работает система</summary>
        </member>
        <member name="F:Intermech.Metadata.User.InternalSettingsUpdater">
            <summary>Служба автообновления настроек IPS</summary>
        </member>
        <member name="T:Intermech.Metadata.User.Consts">
            <summary>Guid-ы и идентификаторы системных пользователей IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.User.Consts.SystemGuid">
            <summary>Guid пользователя "Система", под которым работает система</summary>
        </member>
        <member name="F:Intermech.Metadata.User.Consts.InternalSettingsUpdaterGuid">
            <summary>Guid системного пользователя "Служба автообновления настроек IPS"</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemUser">
            <summary>Дескриптор системного пользователя</summary>
        </member>
        <member name="T:Intermech.Metadata.UserGroup">
            <summary>Группы пользователей</summary>
        </member>
        <member name="F:Intermech.Metadata.UserGroup.UnknownID">
            <summary>Идентификатор неопределённой группы пользователей</summary>
        </member>
        <member name="F:Intermech.Metadata.UserGroup.AllUsers">
            <summary>ВСЕ_ПОЛЬЗОВАТЕЛИ</summary>
        </member>
        <member name="F:Intermech.Metadata.UserGroup.ObjectCreator">
            <summary>СОЗДАТЕЛЬ_ОБЪЕКТА</summary>
        </member>
        <member name="F:Intermech.Metadata.UserGroup.RelationCreator">
            <summary>СОЗДАТЕЛЬ_СВЯЗИ</summary>
        </member>
        <member name="T:Intermech.Metadata.UserGroup.Consts">
            <summary>Guid-ы и идентификаторы системных групп пользователей IPS (строковое представление Guid-ов)</summary>
        </member>
        <member name="F:Intermech.Metadata.UserGroup.Consts.AllUsersGuid">
            <summary>ВСЕ_ПОЛЬЗОВАТЕЛИ</summary>
        </member>
        <member name="F:Intermech.Metadata.UserGroup.Consts.ObjectCreatorGuid">
            <summary>СОЗДАТЕЛЬ_ОБЪЕКТА</summary>
        </member>
        <member name="F:Intermech.Metadata.UserGroup.Consts.RelationCreatorGuid">
            <summary>СОЗДАТЕЛЬ_СВЯЗИ</summary>
        </member>
        <member name="T:Intermech.Metadata.SystemUserGroup">
            <summary>Дескриптор системной группы пользователей атрибута</summary>
        </member>
    </members>
</doc>
