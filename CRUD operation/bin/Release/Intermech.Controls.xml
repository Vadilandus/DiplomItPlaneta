<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intermech.Controls</name>
    </assembly>
    <members>
        <member name="T:Intermech.Controls.TabControlAdvanced">
            <summary> Более продвинутый TabControl </summary>
        </member>
        <member name="M:Intermech.Controls.TabControlAdvanced.#ctor">
            <summary> Конструктор по умолчанию </summary>
        </member>
        <member name="M:Intermech.Controls.TabControlAdvanced.ProcessMnemonic(System.Char)">
            <summary> Обработка нажатия клавиш быстрого доступа </summary>
            <param name="charCode"> Код клавиши быстрого доступа </param>
            <returns> true if the character was processed as a mnemonic by the control; otherwise, false.  </returns>
        </member>
        <member name="M:Intermech.Controls.TabControlAdvanced.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Перекрытие метода вызова оконной процедуры
            </summary>
            <param name="m"></param>
        </member>
        <member name="P:Intermech.Controls.TabControlAdvanced.ShowTabHeaders">
            <summary>
            Показать/скрыть заголовки табов
            </summary>
        </member>
        <member name="T:Intermech.Controls.BarManagerConfigurationAdapter">
            <summary>
            Реализует хранение конфигурации BarManager в контейнере настроек клиента IPS.
            </summary>
        </member>
        <member name="T:Intermech.Controls.PopupMenuBarItem">
            <summary>
            Реализует элемент меню, предназначенный для отображения в качестве контекстного меню.
            </summary>
        </member>
        <member name="M:Intermech.Controls.PopupMenuBarItem.GetPopupHost">
            <summary>
            Определает хост отображения для контекстного меню. Базовая реализация используется для определения хоста отображения свойства ToolBar и PopupHost.
            </summary>
            <returns>Хост отображения для контекстного меню</returns>
            <exception cref="T:System.InvalidOperationException">Не удалось определить хост отображения для контекстного меню</exception>
        </member>
        <member name="P:Intermech.Controls.PopupMenuBarItem.PopupHost">
            <summary>
            Возвращает или задает хост отображения. Если это свойство не задано, то отобразить контекстное меню на экране не удастся.
            </summary>
        </member>
        <member name="T:Intermech.Controls.BaseControl">
            <summary>Базовый класс для создания собственных контролов в IPS, слегка расширяющий функциональность</summary>
        </member>
        <member name="M:Intermech.Controls.BaseControl.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:Intermech.Controls.BaseControl.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the Intermech.Windows.Forms.BaseUserControl and optionally releases the managed
                     resources.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Intermech.Controls.BaseControl.Services">
            <summary>Контекст (контейнер сервисов) для элемента пространства навигации</summary>
        </member>
        <member name="P:Intermech.Controls.BaseControl.ServiceContainer">
            <summary>"Местный" контейнер сервисов</summary>
        </member>
        <member name="M:Intermech.Controls.BaseControl.GetService(System.Type)">
            <summary>Returns an object that represents a service provided by the <see cref="T:System.ComponentModel.Component" /> or by its
                     <see cref="T:System.ComponentModel.Container" />.</summary>
            <param name="serviceType"></param>
            <returns>An <see cref="T:System.Object" /> that represents a service provided by the <see cref="T:System.ComponentModel.Component" />,
                     or null if the <see cref="T:System.ComponentModel.Component" /> does not provide the specified service.</returns>
        </member>
        <member name="M:Intermech.Controls.BaseControl.System#IServiceProvider#GetService(System.Type)">
            <summary>Gets the service object of the specified type.</summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type <paramref name="serviceType" />.-or- null if there is no service object of type
                     <paramref name="serviceType" />.</returns>
        </member>
        <member name="M:Intermech.Controls.BaseControl.GetService``1(System.Boolean,System.String)">
            <summary>Попытка извлечения сервиса из провайдера сервисов</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса (при аргументе throwExceptionIfNotFound == true)</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="throwExceptionIfNotFound">Выбрасывать ли исключительную ситуацию в случае отсутствия в провайдере запрашиваемого
                                                   сервиса</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>Извекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Controls.BaseControl.GetService``1(System.String)">
            <summary>Извлечение сервиса из провайдера сервисов</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>Извекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Controls.BaseControl.GetService``1(``0@,System.String)">
            <summary>Извлечение сервиса из провайдера</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[out] извлекаемый сервис</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>Провайдер сервисов (для построения цепочки вызовов)</returns>
        </member>
        <member name="M:Intermech.Controls.BaseControl.TryGetService``1(``0@)">
            <summary>Попытка извлечения сервиса из провайдера сервисов</summary>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[out] извлекаемый сервис</param>
            <returns>true если сервис был получен, иначе false</returns>
        </member>
        <member name="M:Intermech.Controls.BaseControl.EnsureInitialized``1(``0@,System.String)">
            <summary>Контоль того, что сервис был извлечён из провайдера в переданную переменную. Если нет (она null), то извлечь в неё сервис</summary>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[in, out] извлекаемый сервис</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>извлекаемый сервис</returns>
        </member>
        <member name="P:Intermech.Controls.BaseControl.Intermech#Interfaces#Client#IControlServiceContainer#Control">
            <summary>Ассоциированный с контейнером сервисов контрол</summary>
        </member>
        <member name="P:Intermech.Controls.BaseControl.Intermech#Interfaces#Client#IControlServiceContainer#ParentControlServices">
            <summary>Ближайший по иерархии контролов-владельцев вверх контрол, являющийся провайдером сервисов</summary>
        </member>
        <member name="P:Intermech.Controls.BaseControl.Intermech#Interfaces#IAdvancedServiceContainer#AdvancedProvider">
            <summary>Дополнительный контейнер сервисов</summary>
        </member>
        <member name="M:Intermech.Controls.BaseControl.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>Adds the specified service to control, and optionally promotes the service to parent service containers</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="callback">A callback object that is used to create the service. This allows a service to be declared as available, but
                                   delays the creation of the object until the service is requested</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Controls.BaseControl.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>Adds the specified service to the service container</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="callback">A callback object that is used to create the service. This allows a service to be declared as available, but
                                   delays the creation of the object until the service is requested</param>
        </member>
        <member name="M:Intermech.Controls.BaseControl.AddService(System.Type,System.Object,System.Boolean)">
            <summary>Adds the specified service to the service container, and optionally promotes the service to parent service containers</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="serviceInstance">An instance of the service type to add. This object must implement or inherit from the type indicated by
                                          the serviceType parameter</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Controls.BaseControl.AddService(System.Type,System.Object)">
            <summary>Adds the specified service to the service container</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="serviceInstance">An instance of the service type to add. This object must implement or inherit from the type indicated by
                                          the serviceType parameter</param>
        </member>
        <member name="M:Intermech.Controls.BaseControl.AddService``1(``0,System.Boolean)">
            <summary>Добавить сервис в контейнер сервисов</summary>
            <typeparam name="T">Тип помещаемого в контейнер сервиса</typeparam>
            <param name="service">Помещаемый в контейнер сервиса</param>
            <param name="promote">Добавлять ли сервис так же во все родительские контейнеры</param>
        </member>
        <member name="M:Intermech.Controls.BaseControl.RemoveService(System.Type,System.Boolean)">
            <summary>Removes the specified service type from the service container, and optionally promotes the service to parent service
                     containers</summary>
            <param name="serviceType">The type of service to remove</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Controls.BaseControl.RemoveService(System.Type)">
            <summary>Removes the specified service type from the service container</summary>
            <param name="serviceType">The type of service to remove</param>
        </member>
        <member name="M:Intermech.Controls.BaseControl.RemoveService``1(System.Boolean)">
            <summary>Изъять сервис из контейнера сервисов</summary>
            <typeparam name="T">Тип изымаемого из контейнера сервиса</typeparam>
            <param name="promote">Изымать ли сервис так же из всех родительских контейнеров</param>
            <returns>Исходный контейнер сервисов</returns>
        </member>
        <member name="T:Intermech.Controls.CheckedTreeView">
            <summary>
            TreeView c отключенным DblClick (который работает очень плохо на TreeView с включенными CheckBox)
            MS know about the problem but refuse to fix it  (c)
            </summary>
        </member>
        <member name="F:Intermech.Controls.BrushSelectionUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.BrushSelectionUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.BrushSelectionUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Intermech.Controls.BrushSetupComboBox.AllowResizeDropDown">
            <summary>Indicates if drop-down is resizable.</summary>
        </member>
        <member name="P:Intermech.Controls.BrushSetupComboBox.DropDownSizeMode">
            <summary>Indicates current sizing mode</summary>
        </member>
        <member name="P:Intermech.Controls.BrushSetupComboBox.DropDownControl">
            <summary>Actual drop-down control itself</summary>
        </member>
        <member name="P:Intermech.Controls.BrushStyle.PossibleBrushesStyles">
            <summary>Перечисление всех возможных стилей кистей</summary>
        </member>
        <member name="F:Intermech.Controls.ColorSelectionUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ColorSelectionUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Intermech.Controls.SelectColorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.SelectColorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.SelectColorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Controls.CustomComboBox">
            <summary>
            <c>CustomComboBox</c> is an extension of <c>ComboBox</c> which provides drop-down customization.
            </summary>
        </member>
        <member name="M:Intermech.Controls.CustomComboBox.ShowDropDown">
            <summary>
            Displays drop-down area of combo box, if not already shown.
            </summary>
        </member>
        <member name="M:Intermech.Controls.CustomComboBox.HideDropDown">
            <summary>
            Hides drop-down area of combo box, if shown.
            </summary>
        </member>
        <member name="M:Intermech.Controls.CustomComboBox.AutoSizeDropDown">
            <summary>
            Automatically resize drop-down from properties.
            </summary>
        </member>
        <member name="M:Intermech.Controls.CustomComboBox.AssignControl(System.Windows.Forms.Control)">
            <summary>
            Assigns control to custom drop-down area of combo box.
            </summary>
            <param name="control">Control to be used as drop-down. Please note that this control must not be contained elsewhere.</param>
        </member>
        <member name="P:Intermech.Controls.CustomComboBox.DropDownControl">
            <summary>
            Actual drop-down control itself.
            </summary>
        </member>
        <member name="P:Intermech.Controls.CustomComboBox.IsDroppedDown">
            <summary>
            Indicates if drop-down is currently shown.
            </summary>
        </member>
        <member name="P:Intermech.Controls.CustomComboBox.AllowResizeDropDown">
            <summary>
            Indicates if drop-down is resizable.
            </summary>
        </member>
        <member name="P:Intermech.Controls.CustomComboBox.DropDownSizeMode">
            <summary>
            Indicates current sizing mode.
            </summary>
        </member>
        <member name="F:Intermech.Controls.CustomComboBox.m_popupCtrl">
            <summary>
            Popup control.
            </summary>
        </member>
        <member name="F:Intermech.Controls.CustomComboBox.m_dropDownCtrl">
            <summary>
            Actual drop-down control itself.
            </summary>
        </member>
        <member name="F:Intermech.Controls.CustomComboBox.m_bDroppedDown">
            <summary>
            Indicates if drop-down is currently shown.
            </summary>
        </member>
        <member name="F:Intermech.Controls.CustomComboBox.m_sizeMode">
            <summary>
            Indicates current sizing mode.
            </summary>
        </member>
        <member name="F:Intermech.Controls.CustomComboBox.m_lastHideTime">
            <summary>
            Time drop-down was last hidden.
            </summary>
        </member>
        <member name="F:Intermech.Controls.CustomComboBox.m_timerAutoFocus">
            <summary>
            Automatic focus timer helps make sure drop-down control is focused for user
            input upon drop-down.
            </summary>
        </member>
        <member name="F:Intermech.Controls.CustomComboBox.m_sizeOriginal">
            <summary>
            Original size of control dimensions when first assigned.
            </summary>
        </member>
        <member name="F:Intermech.Controls.CustomComboBox.m_sizeCombo">
            <summary>
            Original size of combo box dropdown when first assigned.
            </summary>
        </member>
        <member name="F:Intermech.Controls.CustomComboBox.m_bIsResizable">
            <summary>
            Indicates if drop-down is resizable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.PopupDropDown.ProcessGrip(System.Windows.Forms.Message@)">
            <summary>
            Processes the resizing messages.
            </summary>
            <param name="m">The message.</param>
            <returns>true, if the WndProc method from the base class shouldn't be invoked.</returns>
        </member>
        <member name="P:Intermech.Controls.PopupDropDown.ResizeMode">
            <summary>
            Type of resize mode, grips are automatically drawn at bottom-left and bottom-right corners.
            </summary>
        </member>
        <member name="P:Intermech.Controls.PopupDropDown.GripBounds">
            <summary>Bounds of active grip box position.</summary>
        </member>
        <member name="P:Intermech.Controls.PopupDropDown.IsGripShown">
            <summary>Indicates when a grip box is shown.</summary>
        </member>
        <member name="M:Intermech.Controls.IPopupControlHost.ShowDropDown">
            <summary>Displays drop-down area of combo box, if not already shown.</summary>
        </member>
        <member name="M:Intermech.Controls.IPopupControlHost.HideDropDown">
            <summary>Hides drop-down area of combo box, if shown.</summary>
        </member>
        <member name="P:Intermech.Controls.PopupControl.TopVisiblePopupControl">
            <summary>Последний из открытых в данный момент пунктов меню</summary>
        </member>
        <member name="P:Intermech.Controls.PopupControl.TopVisibleControl">
            <summary>Последний из открытых в данный момент пунктов меню</summary>
        </member>
        <member name="P:Intermech.Controls.PopupControl.PopupControlHost">
            <summary>Gets or sets the popup control host, this is used to hide/show popup.</summary>
        </member>
        <member name="P:Intermech.Controls.LineDashStyleSetupComboBox.AllowResizeDropDown">
            <summary>Indicates if drop-down is resizable.</summary>
        </member>
        <member name="P:Intermech.Controls.LineDashStyleSetupComboBox.DropDownSizeMode">
            <summary>Indicates current sizing mode</summary>
        </member>
        <member name="P:Intermech.Controls.LineDashStyleSetupComboBox.DropDownControl">
            <summary>Actual drop-down control itself</summary>
        </member>
        <member name="M:Intermech.Controls.LineDashStylesUserControl.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Intermech.Controls.LineDashStylesUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.LineDashStylesUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Intermech.Controls.LineThicknessSetupComboBox.AllowResizeDropDown">
            <summary>Indicates if drop-down is resizable.</summary>
        </member>
        <member name="P:Intermech.Controls.LineThicknessSetupComboBox.DropDownSizeMode">
            <summary>Indicates current sizing mode</summary>
        </member>
        <member name="P:Intermech.Controls.LineThicknessSetupComboBox.DropDownControl">
            <summary>Actual drop-down control itself</summary>
        </member>
        <member name="P:Intermech.Controls.LineThicknessMenuItem.LineThickness">
            <summary>Толщина линии</summary>
        </member>
        <member name="M:Intermech.Controls.SelectLineThicknessUserControl.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Intermech.Controls.SelectLineThicknessUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.SelectLineThicknessUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Intermech.Controls.SetupLineComboBox.AllowResizeDropDown">
            <summary>Indicates if drop-down is resizable.</summary>
        </member>
        <member name="P:Intermech.Controls.SetupLineComboBox.DropDownSizeMode">
            <summary>Indicates current sizing mode</summary>
        </member>
        <member name="P:Intermech.Controls.SetupLineComboBox.DropDownControl">
            <summary>Actual drop-down control itself</summary>
        </member>
        <member name="M:Intermech.Controls.SetupLineUserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Intermech.Controls.SetupLineUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.SetupLineUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Intermech.Controls.PenSelectionUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.PenSelectionUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.PenSelectionUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Intermech.Controls.DocumentFormulaTextBox.DocumentFormulaToolStrip._rightButtonClick">
            <summary>
            Признак, что был клик правой клавишей перед открытием контекстного меню
            </summary>
        </member>
        <member name="F:Intermech.Controls.DocumentFormulaTextBox.DocumentFormulaToolStrip._position">
            <summary>
            Позиция клика правой клавишей мыши
            </summary>
        </member>
        <member name="T:Intermech.Controls.ExceptionToInlinesConverter">
            <summary>
            Выполняет преобразование обычных строк в форматированный WPF-текст с использованием объектов типа <see cref="T:System.Windows.Documents.Inline"/>.
            При обработке в тексте строки ищутся упоминания объектов IPS, которые заменяются на гиперссылки для быстрого перехода к ним.
            Класс используется для отображения сообщений объектов <see cref="T:System.Exception"/> средствами WPF.
            </summary>
        </member>
        <member name="T:Intermech.Controls.ExceptionViewerControl">
            <summary>
            Interaction logic for ExceptionViewerControl.xaml
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionViewerControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker">
            <summary>
            Represents  an office ComboBox control that holds Color Picker control to select color from.
            </summary>
        </member>
        <member name="E:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.SelectedBrushStyleChanged">
            <summary>
            Occurs when the value of the Color property changes.
            </summary>
        </member>
        <member name="P:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.Color">
            <summary>
            Gets or sets the selected color from the OfficeColorPicker
            </summary>
        </member>
        <member name="P:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.SelectedBrushStyle">
            <summary>
            Gets or sets the selected color from the OfficeColorPicker
            </summary>
        </member>
        <member name="F:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker._brushStylePicker">
            <summary>
            The OfficeColorPicker control that the combobox should hold
            </summary>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.#ctor">
            <summary>
            Initialize a new instance of the
            ComboBoxColorPicker representing an office ComboBox control
            that holds color picker control to select color from.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.#ctor(Intermech.Controls.BrushStyle)">
            <summary>
            Initialize a new instance of the
            ComboBoxColorPicker representing an office ComboBox control
            that holds color picker control to select color from.
            </summary>
            <param name="startingColor">Starting color to the OfficeColorPicker control</param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.OnSelectedColorChanged(System.EventArgs)">
            <summary>
            Fires the SelectedColorChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.HandleSelectedBrushStyleChanged(System.Object,System.EventArgs)">
            <summary>
            Handles color changed - fires the SelectedColorChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.ShowDropDown">
            <summary>
            Opens the drop down box with the OfficeColorPicker
            </summary>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Overrides, paint rectangle in the item regions instead of text
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.ComboBoxBrushStylePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Intermech.Controls.ColorComboBox.BrushStylePicker" -->
        <member name="E:Intermech.Controls.ColorComboBox.BrushStylePicker.SelectedBrushStyleChanged">
            <summary>
            Occurs when the value of the Color property changes.
            </summary>
        </member>
        <member name="P:Intermech.Controls.ColorComboBox.BrushStylePicker.Color">
            <summary>
            Gets or sets the selected color from the HatchPicker
            </summary>
        </member>
        <member name="F:Intermech.Controls.ColorComboBox.BrushStylePicker._contextForm">
            <summary>
            Parent form when this control is inside a context menu form
            </summary>
        </member>
        <member name="F:Intermech.Controls.ColorComboBox.BrushStylePicker._parentControl">
            <summary>
            Parent control, when on of the Show(Control parent ...) is called.
            </summary>
        </member>
        <member name="F:Intermech.Controls.ColorComboBox.BrushStylePicker.buttons">
            <summary>
            Buttons rectangle definitions.
            </summary>
        </member>
        <member name="F:Intermech.Controls.ColorComboBox.BrushStylePicker._hotTrackBrushStyle">
            <summary>
            Hot Track brush style
            </summary>
        </member>
        <member name="F:Intermech.Controls.ColorComboBox.BrushStylePicker._selectedBrushStyle">
            <summary>
            selected brush style
            </summary>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.#ctor">
            <summary>
            Initialized a new instance of the HatchPicker in order to provide
            color picker control that could be used in a model or non-model form.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.#ctor(Intermech.Controls.BrushStyle)">
            <summary>
            Initialized a new instance of the HatchPicker in order to provide
            color picker control that could be used in a model or non-model form.
            </summary>
            <param name="startingColor">Starting color to the HatchPicker control</param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.Show(System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Opens the control inside a context menu in the specified location
            relative to the specified control.
            </summary>
            <param name="left">Parent control coordinates left location of the control</param>
            <param name="top">Parent control coordinates top location of the control</param>
            <param name="parent">Parent control to place the control at</param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.Show(System.Int32,System.Int32)">
            <summary>
            Opens the control inside a context menu in the specified location
            </summary>
            <param name="left">Screen coordinates left location of the control</param>
            <param name="top">Screen coordinates top location of the control</param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.Show(System.Drawing.Point)">
            <summary>
            Opens the control inside a context menu in the specified location
            </summary>
            <param name="startLocation">Screen coordinates location of the control</param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.Show(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Opens the control inside a context menu in the specified location
            </summary>
            <param name="startLocation">Screen coordinates location of the control</param>
            <param name="parent">Parent control to place the control at</param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.FireSelectedBrushStyleChanged(System.EventArgs)">
            <summary>
            Fires the HatchPicker.SelectedColorChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides, when mouse move - allow the hot-track look-and-feel
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides, when click on, handles color selection.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override, paint background to white
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides, paint all buttons
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Intermech.Controls.ColorComboBox.BrushStylePicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.ColorComboBox.BrushStylePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Controls.ComboBoxPaperSizes">
            <summary>Комбобокс для выбора типа бумаги, поддерживаемого принтером</summary>
        </member>
        <member name="T:Intermech.Controls.ComboBoxPrinters">
            <summary>Комбобокс для выбора принтера</summary>
        </member>
        <member name="P:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.Count">
            <summary>Gets the number of items in the collection</summary>
        </member>
        <member name="P:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.IsReadOnly">
            <summary>Gets a value indicating whether this collection can be modified</summary>
        </member>
        <member name="P:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.Item(System.Int32)">
            <summary>Retrieves the item at the specified index within the collection</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The index was less than zero.-or- The index was greater than the
                count of items in the collection.</exception>
            <param name="index">The index of the item in the collection to retrieve</param>
            <returns>An object representing the item located at the specified index within the collection</returns>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.Add(`0)">
            <summary>Adds an item to the list of items for a System.Windows.Forms.ComboBox</summary>
            <param name="item">An object representing the item to add to the collection</param>
            <returns>The zero-based index of the item in the collection</returns>
            <exception cref="T:System.ArgumentNullException">The item parameter was null</exception>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>Adds an array of items to the list of items for a System.Windows.Forms.ComboBox</summary>
            <param name="items">An array of objects to add to the list</param>
            <exception cref="T:System.ArgumentNullException">An item in the items parameter was null</exception>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.Clear">
            <summary>Removes all items from the System.Windows.Forms.ComboBox</summary>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.Contains(`0)">
            <summary>Determines if the specified item is located within the collection</summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>true if the item is located within the collection; otherwise, false</returns>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.CopyTo(System.Object[],System.Int32)">
            <summary>Copies the entire collection into an existing array of objects at a specified location within the array</summary>
            <param name="destination">The object array to copy the collection to</param>
            <param name="arrayIndex">The location in the destination array to copy the collection to</param>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.GetEnumerator">
            <summary>Returns an enumerator that can be used to iterate through the item collection</summary>
            <returns>An System.Collections.IEnumerator that represents the item collection</returns>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.IndexOf(`0)">
            <summary>Retrieves the index within the collection of the specified item</summary>
            <param name="value">An object representing the item to locate in the collection</param>
            <returns>The zero-based index where the item is located within the collection; otherwise, -1</returns>
            <exception cref="T:System.ArgumentNullException">The value parameter was null</exception>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.Insert(System.Int32,`0)">
            <summary>Inserts an item into the collection at the specified index</summary>
            <param name="index">The zero-based index location where the item is inserted</param>
            <param name="item">An object representing the item to insert</param>
            <exception cref="T:System.ArgumentNullException">The item was null</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The index was less than zero.-or- The index was greater than the count of items in the collection</exception>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.Remove(`0)">
            <summary>Removes the specified item from the System.Windows.Forms.ComboBox</summary>
            <param name="value">The System.Object to remove from the list</param>
        </member>
        <member name="M:Intermech.Controls.TypedComboBox`1.ObjectCollectionTypedWrapper.RemoveAt(System.Int32)">
            <summary>Removes an item from the System.Windows.Forms.ComboBox at the specified index</summary>
            <param name="index">The index of the item to remove</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The value parameter was less than zero.-or- The value parameter was greater than or equal to the count of items in the collection</exception>
        </member>
        <member name="P:Intermech.Controls.TypedComboBox`1.Items">
            <summary>Gets an object representing the collection of the items contained in this System.Windows.Forms.ComboBox</summary>
        </member>
        <member name="P:Intermech.Controls.TypedComboBox`1.SelectedItem">
            <summary>Gets or sets currently selected item in the System.Windows.Forms.ComboBox</summary>
        </member>
        <member name="T:Intermech.Controls.DockManagerConfigurationAdapter">
            <summary>
            Реализует хранение конфигурации DockManager в контейнере настроек клиента IPS.
            </summary>
        </member>
        <member name="T:Intermech.Controls.ExceptionForm">
            <summary>
            Форма, предназначенная для отображения информации о возникшей исключительной ситуации (Exception)
            </summary>
            <remarks>
            Внимание! Не следует непосредственно создавать эту форму или наследоваться от нее. Вместо этого следует использовать
            сервис <see cref="T:Intermech.ApplicationModel.IExceptionDisplayService"/>,
            сервис <see cref="T:Intermech.Interfaces.IExceptionHandlerService"/> или
            вспомогательный класс <see cref="T:Intermech.ExceptionHelper"/>.
            </remarks>
        </member>
        <member name="F:Intermech.Controls.ExceptionForm.showInitialized">
            <summary>
            Флаг про "Инициализации выполняемые при первом показе формы - выполнены", фактически == форма отображается.
            </summary>
        </member>
        <member name="F:Intermech.Controls.ExceptionForm.techInfoOn_Form_Height">
            <summary>
            Пользовательская высота формы с отображением стека
            </summary>
        </member>
        <member name="F:Intermech.Controls.ExceptionForm.techInfoOn_Form_MinHeight">
            <summary>
            Минимально допустимая высота формы с отображением стека
            </summary>
        </member>
        <member name="F:Intermech.Controls.ExceptionForm.techInfoOn_Form_MaxHeight">
            <summary>
            Максимально допустимая высота формы с отображением стека
            </summary>
        </member>
        <member name="F:Intermech.Controls.ExceptionForm.techInfoOff_Form_MinHeight">
            <summary>
            Минимально допустимая высота формы без отображения стека
            </summary>
        </member>
        <member name="F:Intermech.Controls.ExceptionForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.#ctor">
            <summary>
            Создать пустой экземпляр формы
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.Dispose(System.Boolean)">
            <summary>
            Освободить ресурсы
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Intermech.Controls.ExceptionForm.ViewModel">
            <summary>
            Возвращает модель вида для отображения исключения (WPF MVVM ViewModel).
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.ShowDialogWithOwner">
            <summary>
            Отобразить информацию о возникшей исключительной ситуации (Exception)
            </summary>
            <returns>Тип нажатой в окне кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.UpdateFormSizesBy_ShowTechnicalInfo">
            <summary>
            Выставить размеры и ограничения размеров формы в соответствии с текущим режимом отображения стека
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.ExceptionForm_Shown(System.Object,System.EventArgs)">
            <summary>
            Отображение формы
            </summary>
            <param name="sender">Отправитель</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.AutoSaveErrorInfoOnDisk">
            <summary>
            Сохранить информацию об исключении на диск
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.SetAutoSizesOn">
            <summary>
            Выставить свойства контролов так, чтобы автоматом подобрались размеры контролов и формы под текущие условия и данные
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.SetAutoSizesOff">
            <summary>
            Отключить режим автоопределения размеров вернув форму в нормальное рабочее состояние
            с сохранением подобранных автоматически размеров.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.AdjustFormAutoSizeAndLocation">
            <summary>
            Метод определения и инициализации размеров формы включая размеры для отображения со стеком и без.
            Также устанавливает начальное положение формы на экране.
            Вызывать 1 раз перед отображением формы.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.ExtractExceptionMessage(System.Exception)">
            <summary>
            Получение текста сообщения из Исключения
            </summary>
            <param name="e">Исключение</param>
            <returns>текст сообщения</returns>
        </member>
        <member name="M:Intermech.Controls.ExceptionForm.btnSave_Click(System.Object,System.EventArgs)">
            <summary>
            Нажата кнопка "Сохранить"
            </summary>
            <param name="sender">Отправитель</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="T:Intermech.Controls.Consts">
            <summary>
            Константы
            </summary>
        </member>
        <member name="F:Intermech.Controls.Consts.BorderSize">
            <summary>
            Ширина отступа от края формы
            </summary>
        </member>
        <member name="F:Intermech.Controls.Consts.ImageToLabelSize">
            <summary>
            Отступ между картинкой и надписью
            </summary>
        </member>
        <member name="F:Intermech.Controls.Consts.ButtonHeigth">
            <summary>
            Высота кнопки
            </summary>
        </member>
        <member name="F:Intermech.Controls.Consts.ButtonMinWidth">
            <summary>
            Минимальная ширина кнопки
            </summary>
        </member>
        <member name="F:Intermech.Controls.Consts.ButtonWidthAdd">
            <summary>
            Добавочная ширина к кнопке (чтобы текст в кнопке немного отступал от краев)
            </summary>
        </member>
        <member name="F:Intermech.Controls.Consts.ButtonToButtonSize">
            <summary>
            Ширина отступа между кнопками
            </summary>
        </member>
        <member name="F:Intermech.Controls.Consts.ImageSize">
            <summary>
            Ширина (она-же и длина) картинки
            </summary>
        </member>
        <member name="T:Intermech.Controls.IMMessageBoxImage">
            <summary>
            Тип изображения для окна
            </summary>
        </member>
        <member name="F:Intermech.Controls.IMMessageBoxImage.Error">
            <summary>
            "Ошибка"
            </summary>
        </member>
        <member name="F:Intermech.Controls.IMMessageBoxImage.Warning">
            <summary>
            "Предупреждение"
            </summary>
        </member>
        <member name="F:Intermech.Controls.IMMessageBoxImage.Information">
            <summary>
            "Информация"
            </summary>
        </member>
        <member name="F:Intermech.Controls.IMMessageBoxImage.Question">
            <summary>
            "Вопрос"
            </summary>
        </member>
        <member name="T:Intermech.Controls.MessageBoxButtonsAdv">
            <summary>Расширенный набор кнопок для окна</summary>
        </member>
        <member name="F:Intermech.Controls.MessageBoxButtonsAdv.OK">
            <summary>Окно содержит кнопку "ОК"</summary>
        </member>
        <member name="F:Intermech.Controls.MessageBoxButtonsAdv.OKCancel">
            <summary>Окно содержит кнопку "Отмена"</summary>
        </member>
        <member name="F:Intermech.Controls.MessageBoxButtonsAdv.AbortRetryIgnore">
            <summary>Окно содержит кнопки "Прервать", "Повторить", "Игнорировать"</summary>
        </member>
        <member name="F:Intermech.Controls.MessageBoxButtonsAdv.YesNoCancel">
            <summary>Окно содержит кнопки "Да", "Нет", "Отмена"</summary>
        </member>
        <member name="F:Intermech.Controls.MessageBoxButtonsAdv.YesNo">
            <summary>Окно содержит кнопки "Да", "Нет"</summary>
        </member>
        <member name="F:Intermech.Controls.MessageBoxButtonsAdv.RetryCancel">
            <summary>Окно содержит кнопки "Повторить", "Отмена"</summary>
        </member>
        <member name="F:Intermech.Controls.MessageBoxButtonsAdv.Ignore_IgnoreAll_Abort">
            <summary>Окно содержит кнопки "Игнорировать", "Игнорировать все"</summary>
        </member>
        <member name="T:Intermech.Controls.DialogResultAdv">
            <summary>Расширенный список результатов работы окна</summary>
        </member>
        <member name="F:Intermech.Controls.DialogResultAdv.None">
            <summary>Продолжить выполнение</summary>
        </member>
        <member name="F:Intermech.Controls.DialogResultAdv.OK">
            <summary>ОК</summary>
        </member>
        <member name="F:Intermech.Controls.DialogResultAdv.Cancel">
            <summary>Отмена</summary>
        </member>
        <member name="F:Intermech.Controls.DialogResultAdv.Abort">
            <summary>Прервать</summary>
        </member>
        <member name="F:Intermech.Controls.DialogResultAdv.Retry">
            <summary>Повторить</summary>
        </member>
        <member name="F:Intermech.Controls.DialogResultAdv.Ignore">
            <summary>Игнорировать</summary>
        </member>
        <member name="F:Intermech.Controls.DialogResultAdv.Yes">
            <summary>Да</summary>
        </member>
        <member name="F:Intermech.Controls.DialogResultAdv.No">
            <summary>Нет</summary>
        </member>
        <member name="F:Intermech.Controls.DialogResultAdv.IgnoreAll">
            <summary>Игнорировать все</summary>
        </member>
        <member name="T:Intermech.Controls.IMMessageBoxButton">
            <summary>
            Кнопка, размещаемая в окне IMMessageBox
            </summary>
        </member>
        <member name="F:Intermech.Controls.IMMessageBoxButton.Caption">
            <summary>
            Надпись на кнопке
            </summary>
        </member>
        <member name="F:Intermech.Controls.IMMessageBoxButton.MessageResult">
            <summary>
            Возвращаемый кнопкой результат
            </summary>
        </member>
        <member name="F:Intermech.Controls.IMMessageBoxButton.MessageResultAdv">
            <summary>
            Возвращаемый кнопкой результат
            </summary>
        </member>
        <member name="F:Intermech.Controls.IMMessageBoxButton.Tag">
            <summary>
            Дополнительные данные
            </summary>
        </member>
        <member name="F:Intermech.Controls.IMMessageBoxButton.IsDefaultButton">
            <summary>
            Признак, что это кнопка по умолчанию. Если таких кнопок несколько, то будет использована первая из них с этим признаком.
            </summary>
        </member>
        <member name="M:Intermech.Controls.IMMessageBoxButton.#ctor(System.String,System.Windows.Forms.DialogResult)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="caption">Заголовок кнопки</param>
            <param name="messageResult">Результат кнопки</param>
        </member>
        <member name="M:Intermech.Controls.IMMessageBoxButton.#ctor(System.String,Intermech.Controls.DialogResultAdv)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="caption">Заголовок кнопки</param>
            <param name="messageResult">Результат кнопки</param>
        </member>
        <member name="M:Intermech.Controls.IMMessageBoxButton.#ctor(System.String,System.Object)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="caption">Заголовок кнопки</param>
            <param name="tag">Дополнительные данные</param>
        </member>
        <member name="M:Intermech.Controls.IMMessageBoxButton.#ctor(System.String,System.Windows.Forms.DialogResult,System.Object)">
            <summary>
            Создать экземпляр класса
            </summary>
            <param name="caption">Заголовок кнопки</param>
            <param name="messageResult">Результат кнопки</param>
            <param name="tag">Дополнительные данные</param>
        </member>
        <member name="T:Intermech.Controls.IMMessageBox">
            <summary>
            Окно для выдачи сообщения пользователю
            </summary>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.ShowEx(System.String,System.String,Intermech.Controls.IMMessageBoxButton[])">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="Buttons">Кнопки</param>
            <param name="image">Картинка</param>
            <returns>Tag нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.ShowEx(System.String,System.String,Intermech.Controls.IMMessageBoxButton[],System.Drawing.Image)">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="Buttons">Кнопки</param>
            <param name="image">Картинка</param>
            <returns>Tag нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.ShowEx(System.String,System.String,Intermech.Controls.IMMessageBoxButton[],Intermech.Controls.IMMessageBoxImage)">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="Buttons">Кнопки</param>
            <param name="image">Картинка</param>
            <returns>Tag нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.Show(System.String,System.String,Intermech.Controls.IMMessageBoxButton[],Intermech.Controls.IMMessageBoxImage,System.Windows.Forms.Form,System.Collections.Generic.IList{System.String})">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="Buttons">Кнопки</param>
            <param name="image">Картинка</param>
            <returns>Tag нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.Show(System.String,System.String,Intermech.Controls.IMMessageBoxButton[],System.Collections.Generic.IList{System.String})">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="Buttons">Кнопки</param>
            <returns>Тип нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.Show(System.String,System.String,Intermech.Controls.IMMessageBoxButton[],Intermech.Controls.IMMessageBoxImage,System.Collections.Generic.IList{System.String})">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="Buttons">Кнопки</param>
            <param name="image">Картинка</param>
            <returns>Тип нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,Intermech.Controls.IMMessageBoxImage)">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="Buttons">Кнопки</param>
            <param name="image">Картинка</param>
            <returns>Тип нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.Show(System.String,System.String,Intermech.Controls.MessageBoxButtonsAdv,Intermech.Controls.IMMessageBoxImage)">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="messageBoxButtonsAdv">Кнопки</param>
            <param name="image">Картинка</param>
            <returns>Тип нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Collections.Generic.IList{System.String})">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="messageBoxButtons">Кнопки</param>
            <param name="messageDetails">Список строк с детальной информацией</param>
            <returns>Тип нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.Show(System.String,System.String,Intermech.Controls.IMMessageBoxButton[],System.Drawing.Image,System.Collections.Generic.IList{System.String})">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="Buttons">Кнопки</param>
            <param name="image">Картинка</param>
            <param name="messageDetails">Список строк с детальной информацией</param>
            <returns>Тип нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.Show(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Drawing.Image,System.Collections.Generic.IList{System.String})">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="messageBoxButtons">Кнопки</param>
            <param name="image">Картинка</param>
            <returns>Тип нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.Show(System.String,System.String,Intermech.Controls.MessageBoxButtonsAdv,System.Drawing.Image)">
            <summary>
            Отобразить окно с сообщением
            </summary>
            <param name="FormCaption">Заголовок окна</param>
            <param name="Message">Сообщение</param>
            <param name="messageBoxButtons">Кнопки</param>
            <param name="image">Картинка</param>
            <returns>Тип нажатой кнопки</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.DialogResultAdv_To_DialogResult(Intermech.Controls.DialogResultAdv)">
            <summary>
            Преобразовать тип нажатой кнопки DialogResultAdv в DialogResult
            </summary>
            <param name="dialogResultAdv">Тип нажатой кнопки DialogResultAdv</param>
            <returns>Тип нажатой кнопки DialogResult</returns>
        </member>
        <member name="M:Intermech.Controls.IMMessageBox.DialogResult_To_DialogResultAdv(System.Windows.Forms.DialogResult)">
            <summary>
            Преобразовать тип нажатой кнопки DialogResult в DialogResultAdv
            </summary>
            <param name="dialogResult">Тип нажатой кнопки DialogResult</param>
            <returns>Тип нажатой кнопки DialogResultAdv</returns>
        </member>
        <member name="F:Intermech.Controls.InputQueryForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.InputQueryForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.InputQueryForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Intermech.Controls.Grid.ListColumn.Changed">
            <summary>
            Column has changed event
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListColumn.NumericSort">
            <summary>
            Whether or not NumericSort are visible in this column
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListColumn.TextAlignment">
            <summary>
            Alignment of text in the header and in the cells
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListColumn.Text">
            <summary>
            Text 
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.GetColumnIndex(System.String)">
            <summary>
            Get the column index that corresponds to the column name
            </summary>
            <param name="strColumnName"></param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Controls.Grid.ColumnCollection.Width">
            <summary>
            the combined width of all of the columns
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.GetSpanSize(System.String,System.Int32)">
            <summary>
            Get Span Size for column spanning
            </summary>
            <param name="strStartColumnName"></param>
            <param name="nColumnsSpanned"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.Add(Intermech.Controls.Grid.ListColumn)">
            <summary>
            Add a column to collection
            </summary>
            <param name="newColumn"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.Add(System.String,System.Int32)">
            <summary>
            Add Column to collection
            </summary>
            <param name="strColumnName"></param>
            <param name="nColumnWidth"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.Add(System.String,System.Int32,System.Windows.Forms.HorizontalAlignment)">
            <summary>
            Add Column to collection
            </summary>
            <param name="strColumnName"></param>
            <param name="nColumnWidth"></param>
            <param name="align"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.AddRange(Intermech.Controls.Grid.ListColumn[])">
            <summary>
            Add Range of columns to collection
            </summary>
            <param name="columns"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.Remove(System.Int32)">
            <summary>
            Remove Column from collection
            </summary>
            <param name="nColumnIndex"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.Clear">
            <summary>
            Remove all columns from collection
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.IndexOf(Intermech.Controls.Grid.ListColumn)">
            <summary>
            Return index of column in collection
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.ClearStates">
            <summary>
            Clear column states
            </summary>
            <remarks>
            Primarily used to clear pressed / hot states
            </remarks>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.ClearHotStates">
            <summary>
            Clear only hot states from column collection
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ColumnCollection.AnyPressed">
            <summary>
            if any of the columns are in a pressed state then disable all hotting
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Controls.Grid.CustomCollectionEditor">
            <summary>
            Class created so we can force an invalidation/update on the control when the column editor returns
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.CustomCollectionEditor.#ctor(System.Type)">
            <summary>
            Default Constructor for custom column collection editor
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.CustomCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Called to edit a value in collection editor
            </summary>
            <param name="context"></param>
            <param name="isp"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.CustomCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of a column for custom collection
            </summary>
            <param name="itemType"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Controls.Grid.ColumnConverter">
            <summary>
            GLColumnConverter
            </summary>
            
        </member>
        <member name="T:Intermech.Controls.Grid.RECT">
            <summary>
            Internal struct for use with the header style flat only
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ChangedEventHandler">
            <summary>
            Delegate for changed events within Columns, Items, and SubItems
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ChangedType">
            <summary>
            Change events that are filtered up out of the control
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.GeneralInvalidate">
            <summary>
            Invalidation Fired
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.SubItemChanged">
            <summary>
            Sub Item Changed
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.SubItemCollectionChanged">
            <summary>
            Sub Item Collection Changed
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.ItemChanged">
            <summary>
            Item Changed
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.ItemCollectionChanged">
            <summary>
            Item Collection Changed
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.ColumnChanged">
            <summary>
            Column changed
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.ColumnCollectionChanged">
            <summary>
            Column Collection Changed
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.FocusedChanged">
            <summary>
            Focus Changed
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.SelectionChanged">
            <summary>
            A different item is now selected
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ChangedType.ColumnStateChanged">
            <summary>
            Column state has changed
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ChangedEventArgs">
            <summary>
            Changed Event Args
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ClickEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="itemindex"></param>
            <param name="columnindex"></param>
        </member>
        <member name="P:Intermech.Controls.Grid.ClickEventArgs.ItemIndex">
            <summary>
            Index of item clicked
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ClickEventArgs.ColumnIndex">
            <summary>
            Index of column clicked
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.IEmbeddedControl">
            <summary>
            Interface you must include for a control to be activated embedded useable
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.IEmbeddedControl.Item">
            <summary>
            item this control is embedded in
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.IEmbeddedControl.SubItem">
            <summary>
            Sub item this control is embedded in
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.IEmbeddedControl.ListControl">
            <summary>
            Parent control
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.IEmbeddedControl.ReturnText">
            <summary>
            This returns the current text output as entered into the control right now
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.IEmbeddedControl.Load(Intermech.Controls.Grid.ListItem,Intermech.Controls.Grid.ListSubItem,Intermech.Controls.Grid.ListGrid)">
            <summary>
            Called when the control is loaded
            </summary>
            <param name="item"></param>
            <param name="subItem"></param>
            <param name="listctrl"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.IEmbeddedControl.Unload">
            <summary>
            Called when control is being destructed
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ListSubItem">
            <summary>
            SubItems which make up a GLItem
            </summary>
        </member>
        <member name="E:Intermech.Controls.Grid.ListSubItem.Changed">
            <summary>
            Sub Item has changed.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.LastCellRect">
            <summary>
            last rectangle that text was drawn into
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.Checked">
            <summary>
            is the checkbox checked or not
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.Parent">
            <summary>
            pointer to the primary Parent on top
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.EmbeddedControlProperties">
            <summary>
            Properties of the embedded controls in the listview
            
            this is brilliant because it also allows people to set properties of controls that I don't know about
            
            the reason I'm even doing this is so many standard control types don't have to be shown
            </summary>
            
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.ForceText">
            <summary>
            Force the sub item display to default to text only
            
            This will override everything.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.Control">
            <summary>
            Embedded Control
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.ImageIndex">
            <summary>
            Index of image
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.ImageAlignment">
            <summary>
            Alignment of the image within the subitem
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.Tag">
            <summary>
            Extra user information
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.ForeColor">
            <summary>
            Color of text in item
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.BackColor">
            <summary>
            Background color
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListSubItem.Selected">
            <summary>
            Indicates when the item is selected
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ListSubItemCollection">
            <summary>
            Sub Item collection
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ListItem">
            <summary>
            GLItem which corresponds to rows in the list view
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItem.#ctor(Intermech.Controls.Grid.ListGrid)">
            <summary>
            Constructor
            </summary>
            <param name="parent"></param>
        </member>
        <member name="P:Intermech.Controls.Grid.ListItem.RowBorderSize">
            <summary>
            row border size
            </summary>
            
        </member>
        <member name="P:Intermech.Controls.Grid.ListItem.SubItems">
            <summary>
            Text color for item
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListItem.BackColor">
            <summary>
            Row border color
            </summary>
            
        </member>
        <member name="P:Intermech.Controls.Grid.ListItem.RowBorderColor">
            <summary>
            Row border color
            </summary>
            
        </member>
        <member name="P:Intermech.Controls.Grid.ListItem.Text">
            <summary>
            Text for cell 0 (added by popular request)
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListItem.Tag">
            <summary>
            User defineable object
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListItem.ForeColor">
            <summary>
            Text color for item
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListItem.Parent">
            <summary>
            pointer to parent
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListItem.Selected">
            <summary>
            Selected
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ListItemCollection">
            <summary>
            Collection of GLItems
            </summary>
        </member>
        <member name="E:Intermech.Controls.Grid.ListItemCollection.Changed">
            <summary>
            Fires when a change occurs to the data
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.Item_Changed(System.Object,Intermech.Controls.Grid.ChangedEventArgs)">
            <summary>
            item has changed
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.OnClear">
            <summary>
            Items have been cleared event
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.#ctor(Intermech.Controls.Grid.ListGrid)">
            <summary>
            Constructor
            </summary>
            <param name="newParent"></param>
        </member>
        <member name="P:Intermech.Controls.Grid.ListItemCollection.Updating">
            <summary>
            this is used for operations where you are changing multiple items consecutively and don't want to send 
            a larger number of change events than necessary.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListItemCollection.Parent">
            <summary>
            Sets the parent variable so we know what to refresh when there is a change
            </summary>
            
        </member>
        <member name="P:Intermech.Controls.Grid.ListItemCollection.Item(System.Int32)">
            <summary>
            Indexer that allows the use of Items by []
            </summary>
            
        </member>
        <member name="P:Intermech.Controls.Grid.ListItemCollection.SelectedItems">
            <summary>
            returns a list of only the selected items
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListItemCollection.SelectedIndicies">
            <summary>
            returns a list of only the selected items indexes
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.AddRange(Intermech.Controls.Grid.ListItem[])">
            <summary>
            Compatability with collection editor
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.Add(System.String)">
            <summary>
            add an item to the end of the list
            </summary>
            <param name="strItemText"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.Add(Intermech.Controls.Grid.ListItem)">
            <summary>
            add an itemto the items collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.Insert(System.Int32,System.String)">
            <summary>
            insert an item into the list at specified index
            </summary>
            <param name="nIndex"></param>
            <param name="strItemText"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.Insert(System.Int32,Intermech.Controls.Grid.ListItem)">
            <summary>
            lowest level of add/insert.  All add and insert routines eventually call this
            
            in the future always have routines call this one as well to keep one point of entry
            </summary>
            <param name="nIndex"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.Remove(System.Int32)">
            <summary>
            remove an item from the list
            </summary>
            <param name="nItemIndex"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.Remove(Intermech.Controls.Grid.ListItem)">
            <summary>
            remove an item from the list
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.ClearSelection">
            <summary>
            Clears all selection bits in the item structure
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemCollection.ClearSelection(Intermech.Controls.Grid.ListItem)">
            <summary>
            Clears all selection bits in the item structure
            
            this overload is an optimization to stop a redraw on a re-selection
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <param name="culture"></param>
            <param name="value"></param>
            <param name="destinationType"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Controls.Grid.ListSubItemConverter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ListComboBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ListDateTimePicker">
            <summary>
            Summary description for GLDateTimePicker.
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ListDateTimePicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListDateTimePicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListDateTimePicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Intermech.Controls.Grid.ListGrid.SelectedIndexChanged">
            <summary>
            Click happened inside control.  Use ClickEventArgs to find out origination area.
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ListGrid.ClickedEventHandler">
            <summary>
            Clicked Event Handler delegate definition
            </summary>
        </member>
        <member name="E:Intermech.Controls.Grid.ListGrid.ColumnClick">
            <summary>
            Click happened inside control.  Use ClickEventArgs to find out origination area.
            </summary>
        </member>
        <member name="E:Intermech.Controls.Grid.ListGrid.ItemChanged">
            <summary>
            Item Changed Event
            </summary>
        </member>
        <member name="E:Intermech.Controls.Grid.ListGrid.ColumnChanged">
            <summary>
            Column Changed Event
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ListGrid.HoverEventDelegate">
            <summary>
            Hover Event delegate definition
            </summary>
        </member>
        <member name="E:Intermech.Controls.Grid.ListGrid.Hover">
            <summary>
            A hover event has occured.
            </summary>
            <remarks>
            Use HoverType member of HoverEventArgs to find out if this is a hover origination
            or termination event.
            </remarks>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.ShowBorder">
            <summary>
            Whether or not to show a border.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.SelectedTextColor">
            <summary>
            Color for text in boxes that are selected
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.HotTrackingColor">
            <summary>
            hot tracking
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.HotItemTracking">
            <summary>
            Hot Tracking of columns and items
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.HotColumnTracking">
            <summary>
            Hot Tracking of columns and items
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.ShowFocusRect">
            <summary>
            Show the focus rect or not
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.SortType">
            <summary>
            auto sorting
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.ImageList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.AllowColumnResize">
            <summary>
            Allow columns to be resized
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.AutoHeight">
            <summary>
            Control resizes height of row based on size.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.HeaderVisible">
            <summary>
            you want the header to be visible or not
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.Columns">
            <summary>
            Collection of columns
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.Items">
            <summary>
            Collection of items
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.SelectionColor">
            <summary>
            selection bar color
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.FullRowSelect">
            <summary>
            Selection Full Row
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.AllowMultiselect">
            <summary>
            Allow multiple row selection
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.GridLineStyle">
            <summary>
            Grid Line Styles
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.GridLines">
            <summary>
            Grid Lines Type
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.ItemHeight">
            <summary>
            how big do we want the individual items to be
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.HeaderHeight">
            <summary>
            Force header height.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.CellPaddingSize">
            <summary>
            amount of space inside any given cell to borders
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.ThemesAvailable">
            <summary>
            Are themes available for this control?
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.SelectedItems">
            <summary>
            returns a list of only the selected items
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.SelectedIndicies">
            <summary>
            returns a list of only the selected items indexes
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.HotColumnIndex">
            <summary>
            currently Hot Column
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.HotItemIndex">
            <summary>
            Current Hot Item
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.FocusedItem">
            <summary>
            Currently focused item
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.Count">
            <summary>
            Current count of items in collection.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.TotalRowHeight">
            <summary>
            Calculates total height of all rows combined.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.VisibleRowsCount">
            <summary>
            Number of rows currently visible
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.MaxHeight">
            <summary>
            Max Height of any given row at any given time.  Used with AutoHeight exclusively.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.HeaderRect">
            <summary>
            Rect of header area
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.RowsClientRect">
            <summary>
            Row Client Rectangle
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.RowsRect">
            <summary>
            Full Sized rectangle of all columns total width.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Grid.ListGrid.RowsInnerClientRect">
            <summary>
            The inner rectangle of the client inside parent control taking scroll bars into account.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.DestroyActivatedEmbedded">
            <summary>
            If an activated embedded control exists, remove and unload it
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.ActivateEmbeddedControl(System.Int32,Intermech.Controls.Grid.ListItem,Intermech.Controls.Grid.ListSubItem)">
            <summary>
            Instance the activated embeddec control for this item/column
            </summary>
            <param name="nColumn"></param>
            <param name="item"></param>
            <param name="subItem"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.tb_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            check for return (if we get it, deactivate)
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>
            keep certain keys here
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnHoverTimerTick(System.Object,System.EventArgs)">
            <summary>
            Timer handler.  This mostly deals with the hover technology with events firing.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.Items_Changed(System.Object,Intermech.Controls.Grid.ChangedEventArgs)">
            <summary>
            Item has changed, fire event
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnGotFocus(System.EventArgs)">
            <summary>
            When the control receives focus
            
            this routine is the one that makes absolute certain if the embedded control loses focus then 
            the embedded control is destroyed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.IsItemVisible(Intermech.Controls.Grid.ListItem)">
            <summary>
            This is an OPTIMIZED routine to see if an item is visible.
            
            The other method of just checking against the item index was slow becuase it had to walk the entire list, which would massively
            slow down the control when large numbers of items were added.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.BeginUpdate">
            <summary>
            Tell paint to stop worry about updates
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.EndUpdate">
            <summary>
            Tell paint to start worrying about updates again and repaint while your at it
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.InterpretCoords(System.Int32,System.Int32,Intermech.Controls.Grid.ListRegion@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,Intermech.Controls.Grid.ListState@)">
            <summary>
            interpret mouse coordinates
            
            ok, I've violated the spirit of this routine a couple times (but no more!).  Do NOT put anything
            functional in this routine.  It is ONLY for analyzing the mouse coordinates.  Do not break this again!
            </summary>
            <param name="nScreenX"></param>
            <param name="nScreenY"></param>
            <param name="listRegion"></param>
            <param name="nCellX"></param>
            <param name="nCellY"></param>
            <param name="nItem"></param>
            <param name="nColumn"></param>
            <param name="nState"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.GetColumnScreenX(System.Int32)">
            <summary>
            return the X starting point of a particular column
            </summary>
            <param name="nColumn"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.SortColumn(System.Int32,System.Boolean)">
            <summary>
            Sort a column.
            
            Set to virtual so you can write your own sorting
            </summary>
            <param name="nColumn"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnResize(System.EventArgs)">
            <summary>
            Control is resizing, handle invalidations
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Entry point to paint routines
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.DrawSubItem(System.Drawing.Graphics,System.Drawing.Rectangle,Intermech.Controls.Grid.ListItem,Intermech.Controls.Grid.ListSubItem,System.Int32)">
            <summary>
            Draw Sub Item (Cell) at location specified
            </summary>
            <param name="graphicsSubItem"></param>
            <param name="rectSubItem"></param>
            <param name="item"></param>
            <param name="subItem"></param>
            <param name="nColumn"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.RecalcScroll">
            <summary>
            Recalculate scroll bars and control size
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.vPanelScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handle vertical scroll bar movement
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.hPanelScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Handle horizontal scroll bar movement
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnDoubleClick(System.EventArgs)">
            <summary>
            OnDoubleclick
            
            if someone double clicks on an area, we need to start a control potentially
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnMouseDownFromSubItem(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            had to put this routine in because of overriden protection level being unchangable
            </summary>
            <param name="Sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnMouseLeave(System.EventArgs)">
            <summary>
            Mouse has left the control area
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            mouse button pressed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            when mouse moves
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Grid.ListGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            mouse up
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Controls.Grid.SortDirection">
            <summary>
            Direction of column sorting
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.SortDirection.Ascending">
            <summary>
            Ascending Items
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.SortDirection.Descending">
            <summary>
            Descending Items
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ListQuickSort">
            <summary>
            Summary description for GLQuickSort.
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ListQuickSort._numericCompare">
            <summary>
            compare only numeric values in items.  Warning, this can end up slowing down routine quite a bit
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ListQuickSort._stopRequested">
            <summary>
            Stop this sort before it finishes
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ListQuickSort._sortColumn">
            <summary>
            Column within the items structure to sort
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ListQuickSort._sortDirection">
            <summary>
            Direction this sorting routine will move items
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ListTextBox">
            <summary>
            Summary description for GLTextBox.
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.ListTextBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ListTextBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.MergeSort">
            <summary>
            Summary description for GLMergeSort.
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.MergeSort._numericCompare">
            <summary>
            compare only numeric values in items.  Warning, this can end up slowing down routine quite a bit
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.MergeSort._stopRequested">
            <summary>
            Stop this sort before it finishes
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.MergeSort._sortColumn">
            <summary>
            Column within the items structure to sort
            </summary>
        </member>
        <member name="F:Intermech.Controls.Grid.MergeSort._sortDirection">
            <summary>
            Direction this sorting routine will move items
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.ThemeRoutines">
            <summary>
            Summary description for ThemeRoutines.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ThemeRoutines.IsThemeActive">
            <summary>
            Tests if a visual style for the current application is active.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ThemeRoutines.OpenThemeData(System.IntPtr,System.String)">
            <summary>
            Opens the theme data for a window and its associated class.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ThemeRoutines.CloseThemeData(System.IntPtr)">
            <summary>Closes the theme data handle.</summary>
            <remarks>The CloseThemeData function should be called when a window that has a visual style applied is destroyed.</remarks> 
        </member>
        <member name="M:Intermech.Controls.Grid.ThemeRoutines.DrawThemeBackground(System.IntPtr,System.IntPtr,System.Int32,System.Int32,Intermech.Controls.Grid.RECT@,Intermech.Controls.Grid.RECT@)">
            <summary>
            Draws the background image defined by the visual style for the specified control part.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ThemeRoutines.DrawThemeEdge(System.IntPtr,System.IntPtr,System.Int32,System.Int32,Intermech.Controls.Grid.RECT@,System.UInt32,System.UInt32,Intermech.Controls.Grid.RECT@)">
            <summary>
            Draws one or more edges defined by the visual style of a rectangle.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ThemeRoutines.DrawThemeIcon(System.IntPtr,System.IntPtr,System.Int32,System.Int32,Intermech.Controls.Grid.RECT@,System.IntPtr,System.Int32)">
            <summary>
            Draws an image from an image list with the icon effect defined by the visual style.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ThemeRoutines.DrawThemeText(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.String,System.Int32,System.UInt32,System.UInt32,Intermech.Controls.Grid.RECT@)">
            <summary>
            Draws text using the color and font defined by the visual style.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ThemeRoutines.DrawThemeParentBackground(System.IntPtr,System.IntPtr,Intermech.Controls.Grid.RECT@)">
            <summary>
            Draws the part of a parent control that is covered by a partially-transparent or alpha-blended child control.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Grid.ThemeRoutines.SetWindowTheme(System.IntPtr,System.String,System.String)">
            <summary>
            Causes a window to use a different set of visual style information than its class normally uses.
            </summary>
        </member>
        <member name="T:Intermech.Controls.Grid.Win32">
            <summary>
            Summary description for Win32.
            </summary>
        </member>
        <member name="T:Intermech.Controls.MeasureSpinEdit">
            <summary> SpinEdit допускающий редактирование значения указаные в некоторых единицах измерения  </summary>
        </member>
        <member name="P:Intermech.Controls.MeasureSpinEdit.EmptyValueAsNullText">
            <summary> Удалять ли текст если значение становиться равным нулю </summary>
        </member>
        <member name="P:Intermech.Controls.MeasureSpinEdit.MeasureDescriptors">
            <summary> Список доступных единиц измерения </summary>
        </member>
        <member name="P:Intermech.Controls.MeasureSpinEdit.BaseMeasureDescriptor">
            <summary> Базовая единица измерения </summary>
        </member>
        <member name="P:Intermech.Controls.MeasureSpinEdit.Precision">
            <summary> Точность округления. Если = 0, то округление не производиться </summary>
        </member>
        <member name="P:Intermech.Controls.MeasureSpinEdit.LastMeasureDescriptor">
            <summary></summary>
        </member>
        <member name="P:Intermech.Controls.MeasureSpinEdit.LastValue">
            <summary></summary>
        </member>
        <member name="M:Intermech.Controls.MeasureSpinEdit.AssignLastValue(Intermech.Interfaces.MeasuredValue,Intermech.Interfaces.MeasureDescriptor,System.Boolean)">
            <summary>Назначить значение LastValue</summary>
            <param name="value">Новое значение</param>
            <param name="baseMeasureDescriptor">Базовая физическая величина для значения</param>
            <param name="updateText">Обновлять текст в контроле</param>
        </member>
        <member name="M:Intermech.Controls.MeasureSpinEdit.AssignLastValue(System.Double,Intermech.Interfaces.MeasureDescriptor,System.Boolean)">
            <summary>Назначить значение LastValue</summary>
            <param name="value">Новое значение</param>
            <param name="baseMeasureDescriptor">Базовая физическая величина для значения</param>
            <param name="updateText">Обновлять текст в контроле</param>
        </member>
        <member name="M:Intermech.Controls.MeasureSpinEdit.AssignLastValue(System.Double,System.Boolean)">
            <summary>Назначить значение LastValue</summary>
            <param name="value">Новое значение</param>
            <param name="updateText">Обновлять текст в контроле</param>
        </member>
        <member name="E:Intermech.Controls.MeasureSpinEdit.OnGetMeasureDescriptors">
            <summary> Событие загрузки списка допустимых единиц измерения </summary>        
        </member>
        <member name="M:Intermech.Controls.MeasureSpinEdit.OnTextChanged(System.EventArgs)">
            <summary> Вызывается после того, как было изменено введёное значение  </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.MeasureSpinEdit.CheckIsValueParseable">
            <summary> Проверка того, что формат введённой строки распознаётся </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Controls.GetMeasureDescriptorsDelegate">
            <summary> Делегат для получения списка единиц измерения </summary>
            <returns> Массив доступных единиц измерения </returns>
        </member>
        <member name="F:Intermech.Controls.ContextMenuItemSurrogate.m_popupCtrl">
            <summary>Popup control.</summary>
        </member>
        <member name="M:Intermech.Controls.OleContainer.ImOleContainer.CallInsertDlg">
            <summary>Диалог вставки нового объекта</summary>
            <returns>Был ли новый объект вставлен</returns>
        </member>
        <member name="M:Intermech.Controls.OleContainer.ImOleContainer.CanPaste">
            <summary>Проверка возможности вставки объекта из Clipboard</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.OleContainer.ImOleContainer.Paste">
            <summary>Вставка содержимого Clipboad-а в контейнер</summary>
        </member>
        <member name="M:Intermech.Controls.OleContainer.ImOleContainer.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
             Вывод изображения на графикс
            </summary>
            <param name="graphics"></param>
            <param name="rectPix">Размер области в пикселях</param>
        </member>
        <member name="M:Intermech.Controls.OleContainer.ImOleContainer.SaveTo(System.IO.Stream)">
            <summary>Сохранить OLE документ в поток</summary>
            <param name="stream"></param>
        </member>
        <member name="M:Intermech.Controls.OleContainer.ImOleContainer.OleRun">
            <summary>
            Перевод OLE объекта в состояние выполнения
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.OleContainer.ImOleContainer.ActiveDocumentSite.GetExtent">
            <summary>
            Получить размеры сожержимого OLE документа
            </summary>
            <returns>Размеры содержимого OLE документа в 0.01 мм единицах</returns>
        </member>
        <member name="M:Intermech.Controls.OleContainer.HelperMethods.OleCheck(System.Int32)">
            <summary>
            Raise exception if result code indicates an error 
            </summary>
            <param name="hResult"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.OleContainer.HelperMethods.OleError(System.Int32)">
            <summary>
            Raise exception by result code
            </summary>
            <param name="hResult"></param>
        </member>
        <member name="T:Intermech.Controls.PreviewPrintControl">
            <summary>
            Контрол был перенесен Осипенко А. из сборки Intermech.Document.Model 13.05.10
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.AutoZoom">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.Columns">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.Document">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.Position">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.RightToLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.Rows">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.StartPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.UseAntiAlias">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.VirtualSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintControl.Zoom">
            <summary>
            
            </summary>
        </member>
        <member name="E:Intermech.Controls.PreviewPrintControl.StartPageChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:Intermech.Controls.PreviewPrintControl.TextChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.SetVirtualSizeNoInvalidate(System.Drawing.Size)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="eventargs"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            
            </summary>
            <param name="se"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.ResetBackColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.ResetForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.CalculatePageInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.ComputeLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.ComputePreview">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.InvalidateLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.InvalidatePreview">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.SetPositionNoInvalidate(System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.OnStartPageChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.CalculatePageInfo(System.Boolean)">
            <summary>
            
            </summary>
            <param name="force"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.PhysicalToPixels(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="physical"></param>
            <param name="dpi"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.PhysicalToPixels(System.Drawing.Size,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="physicalSize"></param>
            <param name="dpi"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.PhysicalToPixels(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="physicalSize"></param>
            <param name="dpi"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.PixelsToPhysical(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="pixels"></param>
            <param name="dpi"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.PixelsToPhysical(System.Drawing.Size,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="pixels"></param>
            <param name="dpi"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintControl.PixelsToPhysical(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pixels"></param>
            <param name="dpi"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Controls.PreviewPrintController">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintController.UseAntiAlias">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.CreateIC(System.IntPtr,System.Drawing.Printing.PrintDocument)">
            <summary>
            
            </summary>
            <param name="hdevmode"></param>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.OnEndPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.OnEndPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Controls.PreviewPrintController.IsPreview">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.CheckSecurity">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.GetPreviewPageInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.ReadOneDEVNAME(System.IntPtr,System.Int32)">
            <summary>
            
            </summary>
            <param name="pDevnames"></param>
            <param name="slot"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.GlobalLock(System.Runtime.InteropServices.HandleRef)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.CreateIC(System.String,System.String,System.String,System.Runtime.InteropServices.HandleRef)">
            <summary>
            
            </summary>
            <param name="lpszDriverName"></param>
            <param name="lpszDeviceName"></param>
            <param name="lpszOutput"></param>
            <param name="lpInitData"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.GlobalUnlock(System.Runtime.InteropServices.HandleRef)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PreviewPrintController.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            
            </summary>
            <param name="hWnd"></param>
            <param name="hDC"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Controls.ExtendedPreviewPageInfo">
            <summary>Расширенный класс PreviewPageInfo</summary>
        </member>
        <member name="M:Intermech.Controls.ExtendedPreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size,System.Drawing.Printing.Margins,System.Drawing.Rectangle)">
            <summary>Initializes a new instance of the System.Drawing.Printing.PreviewPageInfo class</summary>
            <param name="image">The image of the printed page</param>
            <param name="physicalSize">The size of the printed page, in hundredths of an inch</param>
            <param name="margins">Поля страницы, заданные вручную</param>
            <param name="printableRect">Координаты области бумаги, в которую есть техническая возможность вывода данных, 
                                        если передать Rectangle.Empty область печати будет соответствовать всей странице</param>
        </member>
        <member name="M:Intermech.Controls.ExtendedPreviewPageInfo.#ctor(System.Drawing.Image,System.Drawing.Size,System.Drawing.Printing.Margins)">
            <summary>Initializes a new instance of the System.Drawing.Printing.PreviewPageInfo class</summary>
            <param name="image">The image of the printed page</param>
            <param name="physicalSize">The size of the printed page, in hundredths of an inch</param>
            <param name="margins">Поля страницы, заданные вручную</param>
            <param name="printableRect">Координаты области бумаги, в которую есть техническая возможность вывода данных</param>
        </member>
        <member name="F:Intermech.Controls.ExtendedPreviewPageInfo.PreviewPageInfo">
            <summary>Базовая информация</summary>
        </member>
        <member name="P:Intermech.Controls.ExtendedPreviewPageInfo.Image">
            <summary>System.Drawing.Image representing the printed page.</summary>
        </member>
        <member name="P:Intermech.Controls.ExtendedPreviewPageInfo.PhysicalSize">
            <summary>System.Drawing.Size that specifies the size of the printed page, in hundredths of an inch.</summary>
        </member>
        <member name="F:Intermech.Controls.ExtendedPreviewPageInfo.PrintableRect">
            <summary>Координаты области бумаги, в которую есть техническая возможность вывода данных</summary>
        </member>
        <member name="F:Intermech.Controls.ExtendedPreviewPageInfo.Margins">
            <summary>Поля страницы, заданные вручную</summary>
        </member>
        <member name="M:Intermech.Controls.ExtendedPreviewPageInfo.op_Implicit(Intermech.Controls.ExtendedPreviewPageInfo)~System.Drawing.Printing.PreviewPageInfo">
            <summary>Implicit cast that converts the given ExtendedPreviewPageInfo to a PreviewPageInfo</summary>
            <param name="extendedPreviewPageInfo"></param>
            <returns>The result of the operation</returns>
        </member>
        <member name="F:Intermech.Controls.PrintDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.PrintDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.PrintDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Controls.PrintPreviewDlg">
            <summary>
            Диалог был перенесен Осипенко А. из сборки Intermech.Document.Model 13.05.10
            </summary>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="P:Intermech.Controls.PrintPreviewDlg.CurrentPage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PrintPreviewDlg.Document">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PrintPreviewDlg.PageOrientationVisible">
            <summary>
            Видимость кнопки ориентации страницы.
            </summary>
            <remark>У А.Кольцова ориентация страницы определяется автоматически
            В IMBASE необходимо руками выставлять ориентацию.
            Поэтому по умолчанию кнопка невидима.
            Кому понадобится, пусть сам ее делает видимой и использует.</remark>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.Button_Click(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.Document_BeginPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.Document_EndPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.Document_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.PagesComboBox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.PagesComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.ZoomValuesComboBox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.ZoomValuesComboBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.OnClosed(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.QueryStatus">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.setZoom(System.String)">
            <summary>
            
            </summary>
            <param name="text"></param>
        </member>
        <member name="F:Intermech.Controls.PrintPreviewDlg.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Controls.PrintPreviewController">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.PrintPreviewController.IsPreview">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewController.OnStartPage(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.PrintPreviewController.OnStartPrint(System.Drawing.Printing.PrintDocument,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.backcolor">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.bold">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.cj">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.color">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.Copy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.Cut">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.fj">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.gnome_colors_icon_2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.Image">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.indent">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.italic">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.link">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.lj">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.ol">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.outdent">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.Paper11x17">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.PaperA3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.PaperA4">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.PaperA5">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.PaperExecutive">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.PaperLegal">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.PaperLetter">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.PaperTabloid">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.Paste">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.right_arrow">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.rj">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.underscore">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Properties.Resources.uol">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="F:Intermech.Controls.SpellCheck.SpellCheckInsertFromFileForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.SpellCheck.SpellCheckInsertFromFileForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.SpellCheck.SpellCheckInsertFromFileForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Intermech.Controls.SpellCheck.SpellCheckOptionsForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.SpellCheck.SpellCheckOptionsForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.SpellCheck.SpellCheckOptionsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Intermech.Controls.SpellCheck.SpellChecker.Instance">
            <summary>
            Оснровной экземпляр класса
            </summary>
        </member>
        <member name="T:Intermech.Controls.SpellCheck.SpellChecker.SetErrorsDelegate">
            <summary>
            Делегат обработки ошибок
            </summary>
            <param name="errors">список ошибок начиная от начала текста</param>
            <param name="errors">стартовый индекс с которого шла проверка</param>
            <param name="errors">длина строки в которой шла проверка</param>
        </member>
        <member name="M:Intermech.Controls.SpellCheck.SpellChecker.SpellWord(System.String)">
            <summary>
            Check word in dictionaries
            </summary>
            <param name="InputWord">(input) The input word to spell check. The input word may have any combination of upper/lower case letters 'a' through 'z' and an apostrophe character</param>
            <returns>This function returns a true value if the word is found in the dictionary. The function also returns a true value if the currently incorrect word was previously ignored by the user</returns>
        </member>
        <member name="M:Intermech.Controls.SpellCheck.SpellChecker.ParseLine(System.String,System.String@,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Use this routine to parse a buffer containing words to be spell checked. Each call returns a word
            </summary>
            <param name="CurLine">(input) Pointer to the string containing the words to extract.</param>
            <param name="OutCurWord">(output) Pointer to the string where the extracted word is to be copied</param>
            <param name="WordIndex">(output) Starting position of the extracted word with respect to the beginning of the buffer</param>
            <param name="CurIndex">(input/output) The function begins examining the buffer location as given by this argument. When a word is extracted, this location is updated to contain the pointer after the end of the word. Therefore, the next call to the StParseLine routine will automatically begin the search where the previous call ended.</param>
            <param name="LineLen">(input) The length of the buffer to examine. The length is counted from the beginning of the buffer. If the calling routine inserts or deletes a word in the buffer, it should update this variable appropriately to reflect the updated length of the buffer</param>
            <returns>The function returns the length of the extracted word. A zero length indicates the end of the buffer</returns>
        </member>
        <member name="M:Intermech.Controls.SpellCheck.SpellChecker.GerErrors(System.String,System.String,System.Int32,System.Int32,Intermech.Controls.SpellCheck.SpellChecker.SetErrorsDelegate)">
            <summary>
            Получение ошибок из строки
            </summary>
            <param name="text">Строка</param>
            <param name="oldText">Старый текст, который был проверен</param>
            <param name="cursorPos">Текущая позиция курсора</param>
            <param name="oldCursorPos">Предыдущая позиция курсора</param>
            <param name="setErrors">Иетод в котором будет производится обработка</param>
        </member>
        <member name="P:Intermech.Controls.SpellCheck.ErrorStruct.Start">
            <summary>
            Начало ошибки
            </summary>
        </member>
        <member name="P:Intermech.Controls.SpellCheck.ErrorStruct.End">
            <summary>
            Конечеая позиция ошибки
            </summary>
        </member>
        <member name="P:Intermech.Controls.ReportTopicForm.ReportText">
            <summary>
            тема
            </summary>
        </member>
        <member name="P:Intermech.Controls.ReportTopicForm.ReportTopic">
            <summary>
            текст
            </summary>
        </member>
        <member name="F:Intermech.Controls.ReportTopicForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ReportTopicForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.ReportTopicForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Intermech.Controls.SearchDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.SearchDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.SearchDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SetupEvents">
            <summary>
            Setup navigation and focus event handlers.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.webBrowser1_GotFocus(System.Object,System.EventArgs)">
            <summary>
            When this control receives focus, it transfers focus to the 
            document body.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.webBrowser1_Navigated(System.Object,System.Windows.Forms.WebBrowserNavigatedEventArgs)">
            <summary>
            This is called when the initial html/body framework is set up, 
            or when document.DocumentText is set.  At this point, the 
            document is editable.
            </summary>
            <param name="sender">sender</param>
            <param name="e">navigation args</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SetupTimer">
            <summary>
            Setup timer with 200ms interval
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SetupBrowser">
            <summary>
            Add document body, turn on design mode on the whole document, 
            and overred the context menu
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SuperFocus">
            <summary>
            Set the focus on the document body.  
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.BackColor">
            <summary>
            Get/Set the background color of the editor.
            Note that if this is called before the document is rendered and 
            complete, the navigated event handler will set the body's 
            background color based on the state of BackColor.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SetBackgroundColor(System.Drawing.Color)">
            <summary>
            Set the background color of the body by setting it's CSS style
            </summary>
            <param name="value">the color to use for the background</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Clear">
            <summary>
            Clear the contents of the document, leaving the body intact.
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.Document">
            <summary>
            Get the web browser component's document
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.DocumentText">
            <summary>
            Document text should be used to load/save the entire document, 
            including html and body start/end tags.
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.DocumentTitle">
            <summary>
            Get the html document title from document.
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.BodyHtml">
            <summary>
            Get/Set the contents of the document Body, in html.
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.BodyText">
            <summary>
            Get/Set the documents body as text.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.CanUndo">
            <summary>
            Determine the status of the Undo command in the document editor.
            </summary>
            <returns>whether or not an undo operation is currently valid</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.CanRedo">
            <summary>
            Determine the status of the Redo command in the document editor.
            </summary>
            <returns>whether or not a redo operation is currently valid</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.CanCut">
            <summary>
            Determine the status of the Cut command in the document editor.
            </summary>
            <returns>whether or not a cut operation is currently valid</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.CanCopy">
            <summary>
            Determine the status of the Copy command in the document editor.
            </summary>
            <returns>whether or not a copy operation is currently valid</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.CanPaste">
            <summary>
            Determine the status of the Paste command in the document editor.
            </summary>
            <returns>whether or not a copy operation is currently valid</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.CanDelete">
            <summary>
            Determine the status of the Delete command in the document editor.
            </summary>
            <returns>whether or not a copy operation is currently valid</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.IsJustifyLeft">
            <summary>
            Determine whether the current block is left justified.
            </summary>
            <returns>true if left justified, otherwise false</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.IsJustifyRight">
            <summary>
            Determine whether the current block is right justified.
            </summary>
            <returns>true if right justified, otherwise false</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.IsJustifyCenter">
            <summary>
            Determine whether the current block is center justified.
            </summary>
            <returns>true if center justified, false otherwise</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.IsJustifyFull">
            <summary>
            Determine whether the current block is full justified.
            </summary>
            <returns>true if full justified, false otherwise</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.IsBold">
            <summary>
            Determine whether the current selection is in Bold mode.
            </summary>
            <returns>whether or not the current selection is Bold</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.IsItalic">
            <summary>
            Determine whether the current selection is in Italic mode.
            </summary>
            <returns>whether or not the current selection is Italicized</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.IsUnderline">
            <summary>
            Determine whether the current selection is in Underline mode.
            </summary>
            <returns>whether or not the current selection is Underlined</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.IsOrderedList">
            <summary>
            Determine whether the current paragraph is an ordered list.
            </summary>
            <returns>true if current paragraph is ordered, false otherwise</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.IsUnorderedList">
            <summary>
            Determine whether the current paragraph is an unordered list.
            </summary>
            <returns>true if current paragraph is ordered, false otherwise</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Document_ContextMenuShowing(System.Object,System.Windows.Forms.HtmlElementEventArgs)">
            <summary>
            Called when the editor context menu should be displayed.
            The return value of the event is set to false to disable the 
            default context menu.  A custom context menu (contextMenuStrip1) is 
            shown instead.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">HtmlElementEventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SetupFontSizeComboBox">
            <summary>
            Populate the font size combobox.
            Add text changed and key press handlers to handle input and update 
            the editor selection font size.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.fontSizeComboBox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Called when a key is pressed on the font size combo box.
            The font size in the boxy box is set to the key press value.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">KeyPressEventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.fontSizeComboBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Set editor's current selection to the value of the font size combo box.
            Ignore if the timer is currently updating the font size to synchronize 
            the font size combo box with the editor's current selection.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SetupFontComboBox">
            <summary>
            Populate the font combo box and autocomplete handlers.
            Add a text changed handler to the font combo box to handle new font selections.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.fontComboBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the font combo box has changed.
            Ignores the event when the timer is updating the font combo Box 
            to synchronize the editor selection with the font combo box.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Called when the timer fires to synchronize the format buttons 
            with the text editor current selection.
            SetupKeyListener if necessary.
            Set bold, italic, underline and link buttons as based on editor state.
            Synchronize the font combo box and the font size combo box.
            Finally, fire the Tick event to allow external components to synchronize 
            their state with the editor.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.UpdateFontSizeComboBox">
            <summary>
            Update the font size combo box.
            Sets a flag to indicate that the combo box is updating, and should 
            not update the editor's selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.UpdateFontComboBox">
            <summary>
            Update the font combo box.
            Sets a flag to indicate that the combo box is updating, and should 
            not update the editor's selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SetupKeyListener">
            <summary>
            Set up a key listener on the body once.
            The key listener checks for specific key strokes and takes 
            special action in certain cases.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Body_KeyDown(System.Object,System.Windows.Forms.HtmlElementEventArgs)">
            <summary>
            If the user hits the enter key, and event will fire (EnterKeyEvent), 
            and the consumers of this event can cancel the projecessing of the 
            enter key by cancelling the event.
            This is useful if your application would like to take some action 
            when the enter key is pressed, such as a submission to a web service.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">HtmlElementEventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.EmbedBr">
            <summary>
            Embed a break at the current selection.
            This is a placeholder for future functionality.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SuperPaste">
            <summary>
            Paste the clipboard text into the current selection.
            This is a placeholder for future functionality.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Print">
            <summary>
            Print the current document
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.InsertParagraph">
            <summary>
            Insert a paragraph break
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.InsertBreak">
            <summary>
            Insert a horizontal rule
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SelectAll">
            <summary>
            Select all text in the document.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Undo">
            <summary>
            Undo the last operation
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Redo">
            <summary>
            Redo based on the last Undo
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Cut">
            <summary>
            Cut the current selection and place it in the clipboard.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Paste">
            <summary>
            Paste the contents of the clipboard into the current selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Copy">
            <summary>
            Copy the current selection into the clipboard.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.OrderedList">
            <summary>
            Toggle the ordered list property for the current paragraph.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.UnorderedList">
            <summary>
            Toggle the unordered list property for the current paragraph.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.JustifyLeft">
            <summary>
            Toggle the left justify property for the currnet block.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.JustifyRight">
            <summary>
            Toggle the right justify property for the current block.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.JustifyCenter">
            <summary>
            Toggle the center justify property for the current block.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.JustifyFull">
            <summary>
            Toggle the full justify property for the current block.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Bold">
            <summary>
            Toggle bold formatting on the current selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Italic">
            <summary>
            Toggle italic formatting on the current selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Underline">
            <summary>
            Toggle underline formatting on the current selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Delete">
            <summary>
            Delete the current selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Indent">
            <summary>
            Indent the current paragraph.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Outdent">
            <summary>
            Outdent the current paragraph.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.InsertLink(System.String)">
            <summary>
            Insert a link at the current selection.
            </summary>
            <param name="url">The link url</param>
        </member>
        <member name="P:Intermech.Controls.TextEditor.ReadyState">
            <summary>
            Get the ready state of the internal browser component.
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.SelectionType">
            <summary>
            Get the current selection type.
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.FontSize">
            <summary>
            Get/Set the current font size.
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.FontName">
            <summary>
            Get/Set the current font name.
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.EditorForeColor">
            <summary>
            Get/Set the editor's foreground (text) color for the current selection.
            </summary>
        </member>
        <member name="P:Intermech.Controls.TextEditor.EditorBackColor">
            <summary>
            Get/Set the editor's background color for the current selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SelectForeColor">
            <summary>
            Initiate the foreground (text) color dialog for the current selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.SelectBackColor">
            <summary>
            Initiate the background color dialog for the current selection.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.ConvertToColor(System.String)">
            <summary>
            Convert the custom integer (B G R) format to a color object.
            </summary>
            <param name="clrs">the custorm color as a string</param>
            <returns>the color</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.cutToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the cut tool strip button on the editor context menu 
            is clicked.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.pasteToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the paste tool strip button on the editor context menu 
            is clicked.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.copyToolStripButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the copy tool strip button on the editor context menu 
            is clicked.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.boldButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the bold button on the tool strip is pressed.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.italicButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the italic button on the tool strip is pressed.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.underlineButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the underline button on the tool strip is pressed.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.colorButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the foreground color button on the tool strip is pressed.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.backColorButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the background color button on the tool strip is pressed.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.ShowColorDialog(System.Drawing.Color@)">
            <summary>
            Show the interactive Color dialog.
            </summary>
            <param name="color">the input and output color</param>
            <returns>true if dialog accepted, false if dialog cancelled</returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.outdentButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the outdent button on the toolstrip is clicked.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.indentButton_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the indent button on the toolstrip is clicked.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.cutToolStripMenuItem1_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the cut button is clicked on the editor context menu.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.copyToolStripMenuItem2_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the copy button is clicked on the editor context menu.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.pasteToolStripMenuItem3_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the paste button is clicked on the editor context menu.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.deleteToolStripMenuItem_Click(System.Object,System.EventArgs)">
            <summary>
            Called when the delete button is clicked on the editor context menu.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Search(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Search the document from the current selection, and reset the 
            the selection to the text found, if successful.
            </summary>
            <param name="text">the text for which to search</param>
            <param name="forward">true for forward search, false for backward</param>
            <param name="matchWholeWord">true to match whole word, false otherwise</param>
            <param name="matchCase">true to match case, false otherwise</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.TextEditor.orderedListButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event handler for the ordered list toolbar button
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.unorderedListButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event handler for the unordered list toolbar button
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.justifyLeftButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event handler for the left justify toolbar button.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.justifyCenterButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event handler for the center justify toolbar button.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.justifyRightButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event handler for the right justify toolbar button.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.justifyFullButton_Click(System.Object,System.EventArgs)">
            <summary>
            Event handler for the full justify toolbar button.
            </summary>
            <param name="sender">the sender</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="F:Intermech.Controls.TextEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.TextEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.TextEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Controls.FontSizes">
            <summary>
            Enumeration of possible font sizes for the Editor component
            </summary>
        </member>
        <member name="T:Intermech.Controls.Thumbnail.BaseRenderer">
            <summary>
            Summary description for BaseRenderer.
            </summary>
        </member>
        <member name="T:Intermech.Controls.Thumbnail.IThumbnailRenderer">
            <summary>
            Summary description for IThumbnailRenderer.
            </summary>
        </member>
        <member name="E:Intermech.Controls.Thumbnail.IThumbnailRenderer.RedrawRequired">
            <summary>
            Указывает владельцу, что надо перерисовать содержимое  его окна
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.IThumbnailRenderer.DrawPanel(System.Int32,System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
            <summary>
            Рисует данные в панели
            </summary>
            <param name="panelIndex">Индекс панели</param>
            <param name="g"></param>
            <param name="bounds">Область рисования</param>
            <param name="selected">Выбрана или нет</param>
            <param name="active">Активно окно или нет</param>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.IThumbnailRenderer.MinimumSize">
            <summary>
            Минимальный размер элемента
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.IThumbnailRenderer.MaximumSize">
            <summary>
            Максимальный размер элемента
            </summary>
        </member>
        <member name="T:Intermech.Controls.Thumbnail.ThumbnailGrid">
            <summary>
            Summary description for ThumbnailGrid.
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.FixedSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.ItemIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.ItemOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.PanelHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.PanelSpacing">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.PanelSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.PanelWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.Renderer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.Resizing">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.RowsBounds">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.ShadowSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.ShowShadow">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailGrid.VisibleItemsCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.Renderer_RedrawRequired(System.Object,Intermech.Controls.Thumbnail.BoundsEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnMouseHover(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnResize(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnDoubleClick(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.GetPath(System.Drawing.Rectangle,System.Int32)">
            <summary>
            
            </summary>
            <param name="bounds"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.CreateShadow">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.UpdateLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.UpdateScrollBar">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.EnsureVisible(System.Int32)">
            <summary>
            
            </summary>
            <param name="aItemIndex"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.GetPanelBounds(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.GetIndexAtPos(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnPanelDoubleClick(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnShowContextMenu(System.Int32,System.Drawing.Point)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="pos"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnGetTooltipText(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnStopResize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnStartResize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.OnSelectionChanged(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.IsItemVisible(System.Int32)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailGrid.RepaintItem(System.Int32)">
            <summary>
            
            </summary>
            <param name="itemIndex"></param>
        </member>
        <member name="T:Intermech.Controls.Thumbnail.ThumbnailEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Controls.Thumbnail.GetToolTipTextEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="itemIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Controls.Thumbnail.SelectionChangedEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="oldIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="T:Intermech.Controls.Thumbnail.ThumbnailEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailEventArgs.#ctor(System.Int32)">
            <summary>
            Конструктор.
            </summary>
            <param name="itemIndex"></param>
        </member>
        <member name="M:Intermech.Controls.Thumbnail.ThumbnailEventArgs.#ctor(System.Int32,System.Drawing.Point)">
            <summary>
            Конструктор.
            </summary>
            <param name="itemIndex"></param>
            <param name="pos"></param>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailEventArgs.Pos">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.Controls.Thumbnail.ThumbnailEventArgs.ItemIndex">
            <summary>
            
            </summary>
        </member>
        <member name="T:Intermech.Controls.BlockedMouseDBLClickTreeView">
            <summary>
            Tree View  с заблокированным даблкликом
            </summary>
        </member>
        <member name="F:Intermech.Controls.BlockedMouseDBLClickTreeView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.BlockedMouseDBLClickTreeView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.BlockedMouseDBLClickTreeView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Controls.ViewSwitch">
            <summary> UserControl для переключения видов документа </summary>
        </member>
        <member name="P:Intermech.Controls.ViewSwitch.ViewsCaptions">
            <summary> Массив заголовков страниц </summary>
        </member>
        <member name="P:Intermech.Controls.ViewSwitch.ViewsHints">
            <summary> Список хинтов соотв. закладок  </summary>
        </member>
        <member name="P:Intermech.Controls.ViewSwitch.ImageList">
            <summary> Список иконок для закладок  </summary>
        </member>
        <member name="P:Intermech.Controls.ViewSwitch.ImageIndexes">
            <summary> Номера иконок соотв. закладок  </summary>
        </member>
        <member name="P:Intermech.Controls.ViewSwitch.ActivepageIndex">
            <summary> Индекс активной в данный момент закладки </summary>
        </member>
        <member name="P:Intermech.Controls.ViewSwitch.ActivePageColor">
            <summary> Цвет активной в данный момент закладки </summary>
        </member>
        <member name="P:Intermech.Controls.ViewSwitch.HlightPageColor">
            <summary> Цвет закладки над которой в данный момент находиться курсор мыши </summary>
        </member>
        <member name="P:Intermech.Controls.ViewSwitch.InactivePageColor">
            <summary> Цвет закладок </summary>
        </member>
        <member name="F:Intermech.Controls.ViewSwitch.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Controls.ViewSwitch.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Controls.ViewSwitch.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Controls.ZoomAndPan">
            <summary>
            This class is here to add zooming and panning support for user controls.
            </summary>
            <remarks>
            Well, that's what it's here for, but at present it only supports the zoom functionality.
            </remarks>
        </member>
        <member name="M:Intermech.Controls.ZoomAndPan.#ctor">
            <summary>
            Setup defaults for the control
            </summary>
        </member>
        <member name="P:Intermech.Controls.ZoomAndPan.Zoom">
            <summary>
            Get/Set the zoom factor 
            </summary>
            <remarks>
            A zoom factor of 1.0 is 100%, 2.0 is 200%, 0.5 is 50% and so on
            </remarks>
        </member>
        <member name="P:Intermech.Controls.ZoomAndPan.PageSize">
            <summary>
            Get/Set the page size
            </summary>
            <remarks>
            The page size is used to compute the scroll bar positions, and should be set to the limits of the scroll area
            </remarks>
        </member>
        <member name="M:Intermech.Controls.ZoomAndPan.BeginUpdate">
            <summary>
            Lock screen updates so that no repainting ocurrs
            </summary>
        </member>
        <member name="M:Intermech.Controls.ZoomAndPan.EndUpdate">
            <summary>
            Unlock screen updates and redraw the screen
            </summary>
        </member>
        <member name="P:Intermech.Controls.ZoomAndPan.Updating">
            <summary>
            Get the Updating flag which is false if screen updates are off
            </summary>
        </member>
        <member name="M:Intermech.Controls.ZoomAndPan.RenderGraphics(System.Drawing.Rectangle,System.Drawing.Graphics)">
            <summary>
            Method which is called from the OnPaint method to render the contents that need to
            be displayed, based on the zoom factor and scroll position of the control
            </summary>
            <remarks>
            When using this control as a base class, you no longer code in the OnPaint method. Instead
            you should override RenderGraphics and do your painting there. This ensures that the appropriate
            modifications have already been made to the passed Graphics object (scale and transformation), so
            all you need to worry about is the placement of your objects - this class handles the rest.
            </remarks>
            <param name="renderRect">The rectangle being rendered</param>
            <param name="g">The graphics object to use for the rendering</param>
        </member>
        <member name="M:Intermech.Controls.ZoomAndPan.ChangeZoom(System.Boolean)">
            <summary>
            Change the zoom factor. Override to provide your own zoom increments
            </summary>
            <remarks>
            This method is designed to be overridden to control the zoom factor of the display. The
            default implementation doubles or halves the size of the display depending on whether the
            user is zooming in (double) our out (half).
            </remarks>
            <param name="zoomIn"></param>
        </member>
        <member name="M:Intermech.Controls.ZoomAndPan.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paint the contents of the control
            </summary>
            <remarks>
            This method alters the graphics transformation mode to take account of scaling and scroll positions.
            It then calls the RenderGraphics method to actually do the rendering.
            </remarks>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.ZoomAndPan.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Process the mouse wheel message. This will zoom in/out
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Controls.ZoomAndPan.RecalculateDisplay(System.Boolean)">
            <summary>
            Method to update the display based on the size of the page and the zooming factor
            </summary>
            <param name="invalidate">If true, invalidates the control to redraw all of the content</param>
        </member>
        <member name="F:Intermech.Controls.ZoomAndPan._zoom">
            <summary>
            Store the zoom factor
            </summary>
        </member>
        <member name="F:Intermech.Controls.ZoomAndPan._updating">
            <summary>
            Store the update flag
            </summary>
        </member>
        <member name="F:Intermech.Controls.ZoomAndPan._pageSize">
            <summary>
            Store the size of the page
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Client.ControlServiceContainer">
            <summary>
            Контейнер сервисов, привязанный к контролу и связанной с ней иерархией вложенности контролов
              родительским провайдером для данного контейнера сервисов всегда выступает ближайший по иерархии вверх владелец связанного с интерфейсом контрола, поддерживающий IContextAware или IServiceProvider
            наследуется от IAdvancedServiceContainer, то есть может иметь дополнительный список сервисов, связанным с логическим контекстом
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ControlServiceContainer.GetControlServiceContainer(System.Windows.Forms.Control)">
            <summary>Получить контейнер сервисов контрола</summary>
            <param name="control">Ассоциированный с провайдером контрол</param>
            <returns>Контейнер сервисов контрола</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ControlServiceContainer.FindParentControlServiceContainer(System.Windows.Forms.Control)">
            <summary>Ищет контейнер сервисов из контролов - владельцев переданного</summary>
        </member>
        <member name="F:Intermech.Interfaces.Client.ControlServiceContainer._control">
            <summary>Связанный с контейнером сервисов провайдер</summary>
        </member>
        <member name="M:Intermech.Interfaces.Client.ControlServiceContainer.#ctor(System.Windows.Forms.Control,System.IServiceProvider)">
            <summary>Constructor</summary>
            <exception cref="T:System.ArgumentNullException">Thrown when control parameter is null.</exception>
            <param name="control">Ассоциированный с провайдером контрол</param>
            <param name="logicContextServices">Провайдер сервисов логического контекста</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ControlServiceContainer.#ctor(System.Windows.Forms.Control,System.IServiceProvider,System.IServiceProvider)">
            <summary>Constructor</summary>
            <exception cref="T:System.ArgumentNullException">Thrown when control parameter is null.</exception>
            <param name="control">Ассоциированный с провайдером контрол</param>
            <param name="logicContextServices">Провайдер сервисов логического контекста</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ControlServiceContainer.GetService(System.Type)">
            <summary>Получить ссылку на сервис указанного типа</summary>
            <param name="serviceType">Тип запрашиваемого сервиса</param>
            <returns>Сервис запрошенного типа или null, если сервис не найден</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ControlServiceContainer.GetService(System.Type,System.Boolean)">
            <summary>Получить ссылку на сервис указанного типа</summary>
            <param name="serviceType">Тип запрашиваемого сервиса</param>
            <returns>Сервис запрошенного типа или null, если сервис не найден</returns>
        </member>
        <member name="M:Intermech.Interfaces.Client.ControlServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>Adds the specified service to the service container, and optionally promotes the service to parent service containers</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="callback">A callback object that is used to create the service. This allows a service to be declared as available, but
                                   delays the creation of the object until the service is requested</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ControlServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
            <summary>Adds the specified service to the service container, and optionally promotes the service to parent service containers</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="serviceInstance">An instance of the service type to add. This object must implement or inherit from the type indicated by
                                          the serviceType parameter</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Interfaces.Client.ControlServiceContainer.RemoveService(System.Type,System.Boolean)">
            <summary>Removes the specified service type from the service container, and optionally promotes the service to parent service
                     containers</summary>
            <param name="serviceType">The type of service to remove</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="P:Intermech.Interfaces.Client.ControlServiceContainer.Control">
            <summary>Ассоциированный с контейнером сервисов контрол</summary>
        </member>
        <member name="P:Intermech.Interfaces.Client.ControlServiceContainer.ParentControlServices">
            <summary>Родительский сервис контейнеров</summary>
        </member>
        <member name="T:Intermech.ControlServicesExtensions">
            <summary>Методы расширения для класса Control для работы с сервисами (IContextAware, IServiceProvider, IAdvancedServiceContainer)</summary>
        </member>
        <member name="M:Intermech.ControlServicesExtensions.GetContextAware(System.Windows.Forms.Control,System.Boolean)">
            <summary>Получить реализацию интерфейса IContextAware у контрола</summary>
            <param name="control">Контрол, у которого ищется IContextAware</param>
            <param name="onlyLocal">если true то ищется только локальный IContextAware контрола, иначе IContextAware ищется вверх по структуре вложенности контролов</param>
            <returns>Провайдер сервисов</returns>
        </member>
        <member name="M:Intermech.ControlServicesExtensions.GetServiceProvider(System.Windows.Forms.Control,System.Boolean)">
            <summary>Получить у контрола провайдер сервисов</summary>
            <param name="control">Контрол, провайдер сервисов которого ищется</param>
            <param name="onlyLocal">если true то ищется только локальный провайдер сервисов, иначе провайдер ищется вверх по структуре вложенности контролов</param>
            <returns>Провайдер сервисов</returns>
        </member>
        <member name="M:Intermech.ControlServicesExtensions.GetServiceContainer(System.Windows.Forms.Control,System.Boolean)">
            <summary>Получить у контрола контейнер сервисов</summary>
            <param name="control">Контрол, контейнер сервисов которого ищется</param>
            <param name="onlyLocal">если true то ищется только локальный контейнер сервисов, иначе провайдер ищется вверх по структуре вложенности контролов</param>
            <returns>Контейнер сервисов</returns>
        </member>
        <member name="M:Intermech.ControlServicesExtensions.GetService(System.Windows.Forms.Control,System.Type)">
            <summary>Gets the service object of the specified type.</summary>
            <param name="control"></param>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type <paramref name="serviceType" />.-or- null if there is no service object of type
                     <paramref name="serviceType" />.</returns>
        </member>
        <member name="T:Intermech.Windows.Forms.BaseDialog">
            <summary>База для диалога</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseDialog.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseDialog.OnLoad(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Form.Load" /> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseDialog.SaveLoadFormSizeAndPosition">
            <summary>Использовать ли FormStorage для хранения положения и размеров формы</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseDialog.UpdateCommands">
            <summary>Обновить статус доступности команд</summary>
            <returns>true если обновление прошло успешно, если обновление команд заблокировано, то false</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseDialog.OkButtonCanBeEnabled">
            <summary>Дополнительная проверка (кроме IsReadOnly и блокировки сохранения - _saveLocker.IsLocked), должна ли быть включена кнопка OK</summary>
            <returns>true если кнопка может быть включена</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseDialog.OnShown(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Form.Shown" /> event.</summary>
            <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Windows.Forms.BaseForm">
            <summary>Базовая форма</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseForm._staticSyncObj">
            <summary>Объект для асинхронной инициализации статического кэша</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseForm._SyncObj">
            <summary>Объект для асинхронной инициализации кэша</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.HotKeysManager">
            <summary>Сервис службы "горячих клавиш" и связанных с ними команд</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.NamedImageList">
            <summary>Сервис для работы с именованными иконками</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.CommandManager">
            <summary>Менеджер команд</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.Dispose(System.Boolean)">
            <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form" />.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseForm._controlServiceContainer">
            <summary>Объект, имплементирующий интерфейсы IContextAware и IControlServiceContainer</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.ServiceContainer">
            <summary>Контейнер сервисов</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.Services">
            <summary>Контекст (контейнер сервисов) для элемента пространства навигации.</summary>
            <value>The services. This may be null.</value>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.Intermech#Interfaces#Client#IControlServiceContainer#Control">
            <summary>Ассоциированный с контейнером сервисов контрол</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>Adds the specified service to control, and optionally promotes the service to parent service containers</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="callback">A callback object that is used to create the service. This allows a service to be declared as available, but
                                   delays the creation of the object until the service is requested</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>Adds the specified service to the service container</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="callback">A callback object that is used to create the service. This allows a service to be declared as available, but
                                   delays the creation of the object until the service is requested</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.AddService(System.Type,System.Object,System.Boolean)">
            <summary>Adds the specified service to the service container, and optionally promotes the service to parent service containers</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="serviceInstance">An instance of the service type to add. This object must implement or inherit from the type indicated by
                                          the serviceType parameter</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.AddService(System.Type,System.Object)">
            <summary>Adds the specified service to the service container</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="serviceInstance">An instance of the service type to add. This object must implement or inherit from the type indicated by
                                          the serviceType parameter</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.AddService``1(``0,System.Boolean)">
            <summary>Добавить сервис в контейнер сервисов</summary>
            <typeparam name="T">Тип помещаемого в контейнер сервиса</typeparam>
            <param name="service">Помещаемый в контейнер сервиса</param>
            <param name="promote">Добавлять ли сервис так же во все родительские контейнеры</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.RemoveService(System.Type,System.Boolean)">
            <summary>Removes the specified service type from the service container, and optionally promotes the service to parent service
                     containers</summary>
            <param name="serviceType">The type of service to remove</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.RemoveService(System.Type)">
            <summary>Removes the specified service type from the service container</summary>
            <param name="serviceType">The type of service to remove</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.RemoveService``1(System.Boolean)">
            <summary>Изъять сервис из контейнера сервисов</summary>
            <typeparam name="T">Тип изымаемого из контейнера сервиса</typeparam>
            <param name="promote">Изымать ли сервис так же из всех родительских контейнеров</param>
            <returns>Исходный контейнер сервисов</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.GetService(System.Type)">
            <summary>Returns an object that represents a service provided by the <see cref="T:System.ComponentModel.Component" /> or by its
                     <see cref="T:System.ComponentModel.Container" />.</summary>
            <param name="serviceType"></param>
            <returns>An <see cref="T:System.Object" /> that represents a service provided by the <see cref="T:System.ComponentModel.Component" />,
                     or null if the <see cref="T:System.ComponentModel.Component" /> does not provide the specified service.</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.System#IServiceProvider#GetService(System.Type)">
            <summary>Gets the service object of the specified type.</summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type <paramref name="serviceType" />.-or- null if there is no service object of type
                     <paramref name="serviceType" />.</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.GetService``1(System.Boolean,System.String)">
            <summary>Попытка извлечения сервиса из провайдера сервисов</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса (при аргументе throwExceptionIfNotFound == true)</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="throwExceptionIfNotFound">Выбрасывать ли исключительную ситуацию в случае отсутствия в провайдере запрашиваемого
                                                   сервиса</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>Извлекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.GetService``1(System.String)">
            <summary>Извлечение сервиса из провайдера сервисов</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>Извлекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.GetService``1(``0@,System.String)">
            <summary>Извлечение сервиса из провайдера</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[out] извлекаемый сервис</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>Провайдер сервисов (для построения цепочки вызовов)</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.TryGetService``1(``0@)">
            <summary>Попытка извлечения сервиса из провайдера сервисов</summary>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[out] извлекаемый сервис</param>
            <returns>true если сервис был получен, иначе false</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.EnsureInitialized``1(``0@,System.String)">
            <summary>Контроль того, что сервис был извлечён из провайдера в переданную переменную. Если нет (она null), то извлечь в неё сервис</summary>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[in, out] извлекаемый сервис</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>извлекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.SaveLoadStorage">
            <summary>Использовать ли FormStorage для хранения данных формы</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.SaveLoadFormSizeAndPosition">
            <summary>Использовать ли FormStorage для хранения положения и размеров формы</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.ParseDictionaryFromFormStorage(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Загрузка свойств из словаря, полученного из FormStorage при вызове LoadPropertiesFromStorage</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.FillPropsDictionary(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Загрузка свойств в словарь, который будет сохранён в FormStorage при вызове SavePropertiesToStorage</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.LoadPropertiesFromStorage">
            <summary>Чтение данных из FormStorage</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.SavePropertiesToStorage">
            <summary>Сохранение данных в FormStorage</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.ConfigName">
            <summary>Имя конфигурации в которую сериализуются свойства контрола</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.IsPropertiesGlobal">
            <summary>Если true, то настройки Layout и прочие сериализуемые в SavePropertiesToStorage/LoadPropertiesFromStorage сохраняются/воccтанавливаются
                     глобально, вне зависимости от контекста. То есть вне зависимости где используется форма - настройки будут у них все одинаковые</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.ContextName">
            <summary>Имя операции в рамках которой используется UserControl. Служит для идентификации настроек формы</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.DefaultContextName">
            <summary>Имя операции по-умолчанию</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.OwnerNamedContext">
            <summary>Вышестоящее имя операции</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.GetFullContextName(System.Char)">
            <summary>
            Полное имя контекста формы, включая имена контекстов, в которые сходит она, разделённые разделителем.
            Например "Создание объекта/Форма создания объекта/Контрол выбора типа"
            </summary>
            <param name="delimiter">Разделитель в формируемом пути</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.InitSaveLockService">
            <summary>Инициализация сервиса блокировки возможности сохранения</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.SaveLocker">
            <summary>Счётчик блокировок возможности сохранения результата (напр. кнопка Ok в диалоге)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.CreateSaveLocksCounter">
            <summary>Виртуальный конструктор счётчика блокировок возможности сохранения результата (напр. кнопка Ok в диалоге)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.GetChildSaveLocksCounters">
            <summary>Виртуальный метод сбора всех дочерних счётчиков блокировок возможности сохранения результата (напр. кнопка Ok в диалоге)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.CanBeSaved">
            <summary>Дополнительная проверка (дополнительная к счётчику блокировок, событию проверки и дочерним счётчикам блокировки) того,
                     что данные UserControl-а могут быть сохранены</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.SaveIsLocked">
            <summary>Проверка статуса блокировки возможности сохранения результата (напр. для проверки статуса кнопки Ok в диалоге).
                     True если возможность сохранения в данный момент заблокирована</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.LocksSaveCount">
            <summary>Значение счётчика блокировки возможности сохранения результата (напр. кнопка Ok в диалоге)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.LockSaveStatusChanged(System.Boolean)">
            <summary>Вызывается при изменении статуса возможности сохранения результата (напр. кнопка Ok в диалоге)</summary>
        </member>
        <member name="E:Intermech.Windows.Forms.BaseForm.OnLockSaveStatusChanged">
            <summary>Событие, инициируемое в случае изменения статуса блокировки возможности сохранения результата (напр. кнопка Ok в диалоге)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.LockSave(System.String)">
            <summary>Заблокировать возможность сохранить результат (напр. кнопка Ok в диалоге)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.UnlockSave(System.String)">
            <summary>Разблокировать возможность сохранить результат (напр. кнопка Ok в диалоге)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.CheckSaveLockedStatusChanged">
            <summary>Проверить, не изменился ли статус блокировки возможности сохранения и если изменился - проинформировать всех подписчиков</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.LockSaveOperations">
            <summary>Массив наименований текущих операций блокировок возможности сохранить результат (напр. кнопка Ok в диалоге)</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseForm._isReadOnly">
            <summary>Признак того, что содержимое окна недоступно для редактирования</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.IsReadOnly">
            <summary>Признак того, что содержимое окна недоступно для редактирования</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseForm._forceIsReadOnly">
            <summary>Принудительная блокировка редактирования. Включение этого флага исключает возможность разблокировать возможность редактирования перекрывая IsReadOnlyCanBeChanged в потомках и вызывая UpdateReadOnly</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.ForceIsReadOnly">
            <summary>Принудительная блокировка редактирования. Включение этого флага исключает возможность разблокировать возможность редактирования перекрывая IsReadOnlyCanBeChanged в потомках и вызывая UpdateReadOnly</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.IsReadOnlyCanBeChanged(System.Boolean)">
            <summary>Вызывается перед сменой значения свойства IsReadOnly. Если возвращает false значит менять значение IsReadOnly нельзя</summary>
            <param name="newReadOnlyValue">Новое значение</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.UpdateReadOnly">
            <summary>Проверяет нет ли необходимости изменить статус ReadOnly и если да, то изменяет</summary>
            <returns>true если статус IsReadOnly был изменён</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.FireReadOnlyWasChanged">
            <summary>Вызывается после изменения статуса IsReadOnly, рассылает событие ReadOnlyWasChanged</summary>
        </member>
        <member name="E:Intermech.Windows.Forms.BaseForm.ReadOnlyCanBeChangedEvent">
            <summary>Событие которое вызывается перед сменой значения свойства IsReadOnly. Если любой из обработчиков возвращает false, то изменение значения IsReadOnly будет заблокировано</summary>
        </member>
        <member name="E:Intermech.Windows.Forms.BaseForm.ReadOnlyWasChanged">
            <summary>Событие вызывается после изменения статуса IsReadOnly</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseForm._lockUpdateCommandsCounter">
            <summary>Счётчик блокировок обновления доступности команд</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseForm._needUpdateAfterUnlock">
            <summary>Флаг необходимости обновления доступности команд после обнуления счётчика блокировок</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseForm._forceLockUpdateCommandsCounter">
            <summary>Счётчик блокировок установки флага необходимости обновления доступности команд после обнуления
                                     счётчика блокировок в том случае, если во время блокировки будет вызван UpdateCommands()</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseForm._syncObjLockUpdateCommands">
            <summary>объект для синхронизации операций блокировки синхронизации</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.OnShown(System.EventArgs)">
            <summary>При показе окна</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.LockUpdateCommands(System.Boolean)">
            <summary>Заблокировать обновление доступности команд</summary>
            <param name="forceLock">Если true, то блокируется и установка флаг необходимости обновления доступности команд после обнуления
                                     счётчика блокировок в том случае, если во время блокировки будет вызван UpdateCommands()</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.UnlockUpdateCommands">
            <summary>Разблокировать обновление доступности команд</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseForm.UpdateCommandsIsLocked">
            <summary>Флаг блокировки обновления команд</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseForm.UpdateCommands">
            <summary>Обновить статус доступности команд</summary>
            <returns>true если обновление прошло успешно, если обновление команд заблокировано, то false</returns>
        </member>
        <member name="T:Intermech.Windows.Forms.BaseUserControl">
            <summary>Базовый User Control</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseUserControl._staticSyncObj">
            <summary>Объект для асинхронной инициализации статического кэша</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.HotKeysManager">
            <summary>Сервис службы "горячих клавиш" и связанных с ними команд</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.NamedImageList">
            <summary>Сервис для работы с именованными иконками</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.CommandManager">
            <summary>Менеджер команд</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseUserControl._controlServiceContainer">
            <summary>Объект, имплементирующий интерфейсы IContextAware и IControlServiceContainer</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.#ctor">
            <summary>Default constructor</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the Intermech.Windows.Forms.BaseUserControl and optionally releases the managed
                     resources.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.FireFirstPaint">
            <summary>Вызов события AfterShown - после первого отображения контрола (первого WM_PAINT)</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.Services">
            <summary>Контекст (контейнер сервисов) для элемента пространства навигации</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.ServiceContainer">
            <summary>"Местный" контейнер сервисов</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.GetService(System.Type)">
            <summary>Returns an object that represents a service provided by the <see cref="T:System.ComponentModel.Component" /> or by its
                     <see cref="T:System.ComponentModel.Container" />.</summary>
            <param name="serviceType"></param>
            <returns>An <see cref="T:System.Object" /> that represents a service provided by the <see cref="T:System.ComponentModel.Component" />,
                     or null if the <see cref="T:System.ComponentModel.Component" /> does not provide the specified service.</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.System#IServiceProvider#GetService(System.Type)">
            <summary>Gets the service object of the specified type.</summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type <paramref name="serviceType" />.-or- null if there is no service object of type
                     <paramref name="serviceType" />.</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.GetService``1(System.Boolean,System.String)">
            <summary>Попытка извлечения сервиса из провайдера сервисов</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса (при аргументе throwExceptionIfNotFound == true)</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="throwExceptionIfNotFound">Выбрасывать ли исключительную ситуацию в случае отсутствия в провайдере запрашиваемого
                                                   сервиса</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>Извлекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.GetService``1(System.String)">
            <summary>Извлечение сервиса из провайдера сервисов</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>Извлекаемый сервис</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.GetService``1(``0@,System.String)">
            <summary>Извлечение сервиса из провайдера</summary>
            <exception cref="T:System.InvalidOperationException">Исключительная ситуация выбрасывается в случае отсутствия у провайдера запрашиваемого
                                                        сервиса</exception>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[out] извлекаемый сервис</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>Провайдер сервисов (для построения цепочки вызовов)</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.TryGetService``1(``0@)">
            <summary>Попытка извлечения сервиса из провайдера сервисов</summary>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[out] извлекаемый сервис</param>
            <returns>true если сервис был получен, иначе false</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.EnsureInitialized``1(``0@,System.String)">
            <summary>Контроль того, что сервис был извлечён из провайдера в переданную переменную. Если нет (она null), то извлечь в неё сервис</summary>
            <typeparam name="T">Тип извлекаемого сервиса</typeparam>
            <param name="service">[in, out] извлекаемый сервис</param>
            <param name="exceptionMessageIfFail">Текст сообщения об ошибке, в выбрасываемой исключительной ситуации в случае отсутствия
                                                 запрашиваемого сервиса в провайдере. Если null, то используется стандартное сообщение</param>
            <returns>извлекаемый сервис</returns>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.Intermech#Interfaces#Client#IControlServiceContainer#Control">
            <summary>Ассоциированный с контейнером сервисов контрол</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.Intermech#Interfaces#Client#IControlServiceContainer#ParentControlServices">
            <summary>Ближайший по иерархии контролов-владельцев вверх контрол, являющийся провайдером сервисов</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.Intermech#Interfaces#IAdvancedServiceContainer#AdvancedProvider">
            <summary>Дополнительный контейнер сервисов</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>Adds the specified service to control, and optionally promotes the service to parent service containers</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="callback">A callback object that is used to create the service. This allows a service to be declared as available, but
                                   delays the creation of the object until the service is requested</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>Adds the specified service to the service container</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="callback">A callback object that is used to create the service. This allows a service to be declared as available, but
                                   delays the creation of the object until the service is requested</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.AddService(System.Type,System.Object,System.Boolean)">
            <summary>Adds the specified service to the service container, and optionally promotes the service to parent service containers</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="serviceInstance">An instance of the service type to add. This object must implement or inherit from the type indicated by
                                          the serviceType parameter</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.AddService(System.Type,System.Object)">
            <summary>Adds the specified service to the service container</summary>
            <param name="serviceType">The type of service to add</param>
            <param name="serviceInstance">An instance of the service type to add. This object must implement or inherit from the type indicated by
                                          the serviceType parameter</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.AddService``1(``0,System.Boolean)">
            <summary>Добавить сервис в контейнер сервисов</summary>
            <typeparam name="T">Тип помещаемого в контейнер сервиса</typeparam>
            <param name="service">Помещаемый в контейнер сервиса</param>
            <param name="promote">Добавлять ли сервис так же во все родительские контейнеры</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.RemoveService(System.Type,System.Boolean)">
            <summary>Removes the specified service type from the service container, and optionally promotes the service to parent service
                     containers</summary>
            <param name="serviceType">The type of service to remove</param>
            <param name="promote">true to promote this request to any parent service containers; otherwise, false</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.RemoveService(System.Type)">
            <summary>Removes the specified service type from the service container</summary>
            <param name="serviceType">The type of service to remove</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.RemoveService``1(System.Boolean)">
            <summary>Изъять сервис из контейнера сервисов</summary>
            <typeparam name="T">Тип изымаемого из контейнера сервиса</typeparam>
            <param name="promote">Изымать ли сервис так же из всех родительских контейнеров</param>
            <returns>Исходный контейнер сервисов</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.InitSaveLockService">
            <summary>Инициализация сервиса блокировки возможности сохранения</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.SaveLocker">
            <summary>Счётчик блокировок возможности сохранения результата (напр. для проверки статуса кнопки Ok в диалогах, в которых используется данный контрол)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.CreateSaveLocksCounter">
            <summary>Виртуальный конструктор счётчика блокировок возможности сохранения результата</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.GetChildSaveLocksCounters">
            <summary>Виртуальный метод сбора всех дочерних счётчиков блокировок возможности сохранения результата</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.CanBeSaved">
            <summary>Дополнительная проверка (дополнительная к счётчику блокировок, событию проверки и дочерним счётчикам блокировки) того,
                     что данные UserControl-а могут быть сохранены</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.SaveIsLocked">
            <summary>Проверка статуса блокировки возможности сохранения результата (напр. для проверки статуса кнопки Ok в диалогах, в которых используется данный контрол).
                     True если возможность сохранения в данный момент заблокирована (напр. кнопка Ok в диалоге, где используется контрол должна быть задизэйблена)</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.LocksSaveCount">
            <summary>Значение счётчика блокировки возможности сохранения результата (напр. для проверки статуса кнопки Ok в диалогах, в которых используется данный контрол)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.LockSaveStatusChanged(System.Boolean)">
            <summary>Вызывается при изменении статуса блокировки возможности сохранения результата (напр. для проверки статуса кнопки Ok в диалогах, в которых используется данный контрол)</summary>
        </member>
        <member name="E:Intermech.Windows.Forms.BaseUserControl.OnLockSaveStatusChanged">
            <summary>Событие, инициируемое в случае изменения статуса блокировки возможности сохранения результата (напр. для проверки статуса кнопки Ok в диалогах, в которых используется данный контрол)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.LockSave(System.String)">
            <summary>Заблокировать возможность сохранения результата (напр. для проверки статуса кнопки Ok в диалогах, в которых используется данный контрол)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.UnlockSave(System.String)">
            <summary>Разблокировать возможность сохранения результата (напр. для проверки статуса кнопки Ok в диалогах, в которых используется данный контрол)</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.CheckSaveLockedStatusChanged">
            <summary>Проверить, не изменился ли статус блокировки возможности сохранения и если изменился - проинформировать всех подписчиков</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.LockSaveOperations">
            <summary>Массив наименований текущих операций блокировок возможности возможности сохранения результата (напр. для проверки статуса кнопки Ok в диалогах, в которых используется данный контрол)</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseUserControl._LoadPropsFromStorageOnLoadControl">
            <summary>Признак того, что контрол читает настройки после загрузки</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.ParseDictionaryFromFormStorage(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Загрузка свойств из словаря, полученного из FormStorage при вызове LoadPropertiesFromStorage</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.FillPropsDictionary(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>Загрузка свойств в словарь, который будет сохранён в FormStorage при вызове SavePropertiesToStorage</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.LoadPropertiesFromStorage">
            <summary>Чтение данных из FormStorage</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.SavePropertiesToStorage">
            <summary>Сохранение данных в FormStorage</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.ConfigName">
            <summary>Имя конфигурации в которую сериализуются свойства контрола</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.IsPropertiesGlobal">
            <summary>Если true, то настройки Layout и прочие сериализуемые в SavePropertiesToStorage/LoadPropertiesFromStorage сохраняются/восстанавливаются
                     глобально, вне зависимости от контекста. То есть вне зависимости где используется контрол - настройки будут у них все одинаковые</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.ContextName">
            <summary>Имя операции в рамках которой используется UserControl. Служит для идентификации настроек контрола</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.DefaultContextName">
            <summary>Имя операции по-умолчанию</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.ShouldSerializeContextName">
            <summary>Determine if we should serialize operation name</summary>
            <returns>true if it succeeds, false if it fails</returns>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.OwnerNamedContext">
            <summary>Имя контекста в который вложен данный</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.GetFullContextName(System.Char)">
            <summary>
            Полное имя контекста контрола, включая имена контекстов, в которые он входит, разделённые разделителя.
            Например "Создание объекта/Форма создания объекта/Контрол выбора типа"
            </summary>
            <param name="delimiter">Разделитель в формируемом пути</param>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseUserControl._isReadOnly">
            <summary>Признак того, что содержимое контрола недоступно для редактирования</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.IsReadOnly">
            <summary>Признак того, что содержимое контрола недоступно для редактирования</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseUserControl._forceIsReadOnly">
            <summary>Принудительная блокировка редактирования. Включение этого флага исключает возможность разблокировать возможность редактирования перекрывая IsReadOnlyCanBeChanged в потомках и вызывая UpdateReadOnly</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.ForceIsReadOnly">
            <summary>Принудительная блокировка редактирования. Включение этого флага исключает возможность разблокировать возможность редактирования перекрывая IsReadOnlyCanBeChanged в потомках и вызывая UpdateReadOnly</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.IsReadOnlyCanBeChanged(System.Boolean)">
            <summary>Вызывается перед сменой значения свойства IsReadOnly. Если возвращает false значит менять значение IsReadOnly нельзя</summary>
            <param name="newReadOnlyValue">Новое значение</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.UpdateReadOnly">
            <summary>Проверяет нет ли необходимости изменить статус ReadOnly и если да, то изменяет</summary>
            <returns>true если статус IsReadOnly был изменён</returns>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.FireReadOnlyWasChanged">
            <summary>Вызывается после изменения статуса IsReadOnly, рассылает событие ReadOnlyWasChanged</summary>
        </member>
        <member name="E:Intermech.Windows.Forms.BaseUserControl.ReadOnlyCanBeChangedEvent">
            <summary>Событие которое вызывается перед сменой значения свойства IsReadOnly. Если любой из обработчиков возвращает false, то изменение значения IsReadOnly будет заблокировано</summary>
        </member>
        <member name="E:Intermech.Windows.Forms.BaseUserControl.ReadOnlyWasChanged">
            <summary>Событие вызывается после изменения статуса IsReadOnly</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseUserControl._lockUpdateCommandsCounter">
            <summary>Счётчик блокировок обновления доступности команд</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseUserControl._needUpdateAfterUnlock">
            <summary>Флаг необходимости обновления доступности команд после обнуления счётчика блокировок</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseUserControl._forceLockUpdateCommandsCounter">
            <summary>Счётчик блокировок установки флага необходимости обновления доступности команд после обнуления
                                     счётчика блокировок в том случае, если во время блокировки будет вызван UpdateCommands()</summary>
        </member>
        <member name="F:Intermech.Windows.Forms.BaseUserControl._syncObjLockUpdateCommands">
            <summary>объект для синхронизации операций блокировки синхронизации</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.LockUpdateCommands(System.Boolean)">
            <summary>Заблокировать обновление доступности команд</summary>
            <param name="forceLock">Если true, то блокируется и установка флаг необходимости обновления доступности команд после обнуления
                                     счётчика блокировок в том случае, если во время блокировки будет вызван UpdateCommands()</param>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.UnlockUpdateCommands">
            <summary>Разблокировать обновление доступности команд</summary>
        </member>
        <member name="P:Intermech.Windows.Forms.BaseUserControl.UpdateCommandsIsLocked">
            <summary>Флаг блокировки обновления команд</summary>
        </member>
        <member name="M:Intermech.Windows.Forms.BaseUserControl.UpdateCommands">
            <summary>Обновить статус доступности команд</summary>
            <returns>true если обновление прошло успешно, если обновление команд заблокировано, то false</returns>
        </member>
        <member name="T:Intermech.Common.ISupportSaveLocks">
            <summary>Интерфейс сущности, поддерживающей блокировку возможности сохранения результатов</summary>
        </member>
        <member name="P:Intermech.Common.ISupportSaveLocks.SaveLocker">
            <summary>Менеджер блокировок возможности сохранения результатов</summary>
        </member>
        <member name="T:Intermech.UI.Colour">
            <summary>
            Stores a colour and provides conversion between the RGB and HLS colour models
            </summary>
        </member>
        <member name="M:Intermech.UI.Colour.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Intermech.UI.Colour.CurrentColour">
            <summary>
            The current colour (RGB model)
            </summary>
        </member>
        <member name="P:Intermech.UI.Colour.Red">
            <summary>
            The Red component of the current colour
            </summary>
        </member>
        <member name="P:Intermech.UI.Colour.Green">
            <summary>
            The Green component of the current colour
            </summary>
        </member>
        <member name="P:Intermech.UI.Colour.Blue">
            <summary>
            The Blue component of the current colour
            </summary>
        </member>
        <member name="P:Intermech.UI.Colour.Hue">
            <summary>
            The Hue component of the current colour
            </summary>
        </member>
        <member name="P:Intermech.UI.Colour.Saturation">
            <summary>
            The Saturation component of the current colour
            </summary>
        </member>
        <member name="P:Intermech.UI.Colour.Brightness">
            <summary>
            The Brightness component of the current colour
            </summary>
        </member>
        <member name="M:Intermech.UI.Colour.HSBToRGB(System.Int32,System.Single,System.Single)">
            <summary>
            Converts HSB colour components to an RGB System.Drawing.Color
            </summary>
            <param name="Hue">Hue component</param>
            <param name="Saturation">Saturation component</param>
            <param name="Brightness">Brightness component</param>
            <returns>Returns the RGB value as a System.Drawing.Color</returns>
        </member>
        <member name="T:Intermech.UI.XPCollapser">
            <summary>
            Summary description for XPCollapser.
            </summary>
        </member>
        <member name="P:Intermech.UI.XPCollapser.Image">
            <summary>
            Gets/sets the image displayed in the header of the title bar.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPCollapser.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPCollapser.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.UI.SizeChangingHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.UI.XPGroupBox">
            <summary>
            Summary description for XPGroupBox.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.#cctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.CaptionCurveRadius">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.CaptionFont">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.CaptionFontColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.CaptionFontHighLightColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.CaptionGradientMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.CaptionLeftColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.CaptionRightColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.CaptionText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.Expanded">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.GroupExpanded">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.Hint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.Image">
            <summary>
            Gets/sets the image displayed in the header of the title bar.
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.Index">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.PaneBottomRightColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.PaneOutlineColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.PaneTopLeftColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.ShowChevron">
            <summary>
            
            </summary>
        </member>
        <member name="E:Intermech.UI.XPGroupBox.SizeChanging">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.On_XPGroupBox_ControlsCollectionChanged(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.OnSizeChanging(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.timer1_Elapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.XPGroupBox_Load(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.XPGroupBox_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.XPGroupBox_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.XPGroupBox_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Intermech.UI.XPGroupBox.DisplayRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.CorrectHeigth">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.DrawChevron(System.Drawing.Graphics,System.Drawing.Pen,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="p"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.DrawChevrons(System.Drawing.Graphics,System.Int32)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="y"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.ExpandControl(System.Boolean)">
            <summary>
            If we get here - the caption was clicked
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.GetContainer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.ResetImage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.SetControlsOpacity(System.Int32)">
            <summary>
            
            </summary>
            <param name="opacity"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.SetControlsVisible">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.StartUpdate">
            <summary>
            Возобновление обновления контрола.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.StopUpdate">
            <summary>
            Остановка обновления контрола.
            </summary>
        </member>
        <member name="T:Intermech.UI.XPGroupBox.GroupState">
            <summary>
            
            </summary>
        </member>
        <member name="F:Intermech.UI.XPGroupBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.UI.XPGroupBoxContainer">
            <summary>
            Summary description for XPGroupBoxContainer.
            </summary>
        </member>
        <member name="F:Intermech.UI.XPGroupBoxContainer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBoxContainer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupBoxContainer.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.UI.XPGroupItem">
            <summary>
            Summary description for XPGroupItem.
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItem.Hint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItem.ImageIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItem.ImageList">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItem.Index">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItem.Image">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.OnXPGroupItem_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.OnXPGroupItem_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Intermech.UI.XPGroupItem.DefaultSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.OnMouseLeave(System.EventArgs)">
            <summary>
            Освобождение элемента от указателя мыши.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Наведение указателя мыши на элемент.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            <param name="pevent"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.OnParentChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.GetContainer">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.ResetImage">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.ShouldSerializeImage">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Intermech.UI.XPGroupItem.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.UI.XPGroupItem.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.UI.XPGroupItemRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.Background">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.BlendAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.CheckedBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.DisabledBlendAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.HotBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.HotBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.MenuBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.MenuMargin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.PushedBackground">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.Separator">
            <summary>
            
            </summary>
        </member>
        <member name="P:Intermech.UI.XPGroupItemRenderer.ShadowBlendAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.#ctor">
            <summary>
            Конструктор.
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.CalculateColours">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.CalculateHighlightColours(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="baseColor"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.DisposeBrushes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.DrawItemHighlight(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,Intermech.UI.XPGroupItemRenderer.HighlightMode)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <param name="dropDown"></param>
            <param name="highlightMode"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.DrawImageDisabled(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="image"></param>
            <param name="bounds"></param>
            <param name="backColor"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.EnsureDarkness(System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            
            </summary>
            <param name="Colour1"></param>
            <param name="Colour2"></param>
            <param name="Percentage"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.InterpolateColours(System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <param name="Percentage"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.UserPreferenceChanged(System.Object,Microsoft.Win32.UserPreferenceChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.SetBackgroundColour(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.SetDefaultColours">
            <summary>
            
            </summary>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.SetHighlightColourBase(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="baseColor"></param>
        </member>
        <member name="M:Intermech.UI.XPGroupItemRenderer.SetSeparatorColour(System.Drawing.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="T:Intermech.UI.XPGroupItemRenderer.HighlightMode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Intermech.Extensions.ControlContextExtensions">
            <summary>Методы-расширения для <see cref="T:System.Windows.Forms.Control"/> в контексте клиента IPS</summary>
        </member>
        <member name="M:Intermech.Extensions.ControlContextExtensions.GetControlContextName(System.Windows.Forms.Control,System.Char,System.Boolean,System.Boolean)">
            <summary>
            Сформировать строковое описание контекста, включая вышестояшие именованные контексты, разделённые знаком разделителя.
            Например "Создание объекта/Форма создания объекта/Контрол выбора типа"
            </summary>
            <param name="control">Контрол, контекст которого собирается</param>
            <param name="delimiter">Разделитель в формируемом пути</param>
            <param name="includeTypeInfo">Если true, то к имени контекста будет прибавлена информация о типе объекта</param>
            <param name="includeControlName">Если true, то к имени контекста будет прибавлено имя контрола</param>
            <returns>полное имя операции</returns>
        </member>
        <member name="M:Intermech.Extensions.ControlContextExtensions.GetControlContextName(System.Windows.Forms.Control,System.Boolean,System.Boolean)">
            <summary>
            Сформировать строковое описание контекста, включая вышестояшие именованные контексты, разделённые знаком разделителя.
            Например "Создание объекта/Форма создания объекта/Контрол выбора типа"
            </summary>
            <param name="control">Контрол, контекст которого собирается</param>
            <param name="includeTypeInfo">Если true, то к имени операции будет прибавлена информация о типе объекта</param>
            <param name="includeControlName">Если true, то к имени операции будет прибавлено имя контрола</param>
            <returns>полное имя операции</returns>
        </member>
        <member name="T:Intermech.PropertyEditors.FilteredTreeView">
            <summary>
            TreeView с поддержкой интерфейса фильтрования. 
            ноды TreeView при добавлении к дереву должны обращаться к методам интерфейса ISelectorFilter
            </summary>
        </member>
        <member name="T:OfficePickers.ColorPicker.ComboBoxColorPicker">
            <summary>
            Represents  an office ComboBox control that holds Color Picker control to select color from.
            </summary>
        </member>
        <member name="E:OfficePickers.ColorPicker.ComboBoxColorPicker.SelectedColorChanged">
            <summary>
            Occurs when the value of the Color property changes.
            </summary>
        </member>
        <member name="P:OfficePickers.ColorPicker.ComboBoxColorPicker.Color">
            <summary>
            Gets or sets the selected color from the OfficeColorPicker
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ComboBoxColorPicker._colorPicker">
            <summary>
            The OfficeColorPicker control that the combobox should hold
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.ComboBoxColorPicker.#ctor">
            <summary>
            Initialize a new instance of the
            ComboBoxColorPicker representing an office ComboBox control
            that holds color picker control to select color from.
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.ComboBoxColorPicker.#ctor(System.Drawing.Color)">
            <summary>
            Initialize a new instance of the
            ComboBoxColorPicker representing an office ComboBox control
            that holds color picker control to select color from.
            </summary>
            <param name="startingColor">Starting color to the OfficeColorPicker control</param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ComboBoxColorPicker.OnSelectedColorChanged(System.EventArgs)">
            <summary>
            Fires the SelectedColorChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ComboBoxColorPicker.HandleSelectedColorChanged(System.Object,System.EventArgs)">
            <summary>
            Handles color changed - fires the SelectedColorChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ComboBoxColorPicker.ShowDropDown">
            <summary>
            Opens the drop down box with the OfficeColorPicker
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.ComboBoxColorPicker.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Overrides, paint rectangle in the item regions instead of text
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:OfficePickers.ColorPicker.ComboBoxColorPicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.ComboBoxColorPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ComboBoxColorPicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:OfficePickers.ColorPicker.OfficeColorPicker" -->
        <member name="F:OfficePickers.ColorPicker.OfficeColorPicker.PreferredHeight">
            <summary>
            The preferred height to span the control to
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.OfficeColorPicker.PreferredWidth">
            <summary>
            The preferred width to span the control to
            </summary>
        </member>
        <member name="E:OfficePickers.ColorPicker.OfficeColorPicker.SelectedColorChanged">
            <summary>
            Occurs when the value of the Color property changes. 
            </summary>
        </member>
        <member name="P:OfficePickers.ColorPicker.OfficeColorPicker.Color">
            <summary>
            Gets or sets the selected color from the OfficeColorPicker
            </summary>
        </member>
        <member name="P:OfficePickers.ColorPicker.OfficeColorPicker.ColorName">
            <summary>
            Gets the selected color name, or 'Custom' if it is not one
            of the Selectable colors.
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.OfficeColorPicker._contextForm">
            <summary>
            Parent form when this control is inside a context menu form
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.OfficeColorPicker._parentControl">
            <summary>
            Parent control, when on of the Show(Control parent ...) is called.
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.OfficeColorPicker.colors">
            <summary>
            Known colors list that user may select from 
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.OfficeColorPicker.buttons">
            <summary>
            Buttons rectangle definitions.
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.OfficeColorPicker._currentHotTrack">
            <summary>
            Hot Track index to paint its button with HotTrack color
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.OfficeColorPicker._currentSelected">
            <summary>
            Current selected index to paint its button with Selected color
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.#ctor">
            <summary>
            Initialized a new instance of the OfficeColorPicker in order to provide 
            color picker control that could be used in a model or non-model form.
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.#ctor(System.Drawing.Color)">
            <summary>
            Initialized a new instance of the OfficeColorPicker in order to provide 
            color picker control that could be used in a model or non-model form.   
            </summary>
            <param name="startingColor">Starting color to the OfficeColorPicker control</param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.Show(System.Windows.Forms.Control,System.Int32,System.Int32)">
            <summary>
            Opens the control inside a context menu in the specified location
            relative to the specified control.
            </summary>
            <param name="left">Parent control coordinates left location of the control</param>
            <param name="top">Parent control coordinates top location of the control</param>
            <param name="parent">Parent control to place the control at</param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.Show(System.Int32,System.Int32)">
            <summary>
            Opens the control inside a context menu in the specified location
            </summary>
            <param name="left">Screen coordinates left location of the control</param>
            <param name="top">Screen coordinates top location of the control</param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.Show(System.Drawing.Point)">
            <summary>
            Opens the control inside a context menu in the specified location
            </summary>
            <param name="startLocation">Screen coordinates location of the control</param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.Show(System.Windows.Forms.Control,System.Drawing.Point)">
            <summary>
            Opens the control inside a context menu in the specified location
            </summary>
            <param name="startLocation">Screen coordinates location of the control</param>
            <param name="parent">Parent control to place the control at</param> 
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.OnSelectedColorChanged(System.EventArgs)">
            <summary>
            Fires the OfficeColorPicker.SelectedColorChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.SetColorsObjects">
            <summary>
            Creates the custom colors buttons
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.SetColor(System.Drawing.Color)">
            <summary>
            Set color to the specified one
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides, when mouse move - allow the hot-track look-and-feel
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides, when click on, handles color selection.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.OpenMoreColorsDialog">
            <summary>
            Open the 'More Color' dialog, that is, a normal ColorDialog control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override, paint background to white
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides, paint all buttons
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.PaintMoreColorsButton(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Paints the more colors button
            </summary>
            <param name="graphics"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.PaintColor(System.Drawing.Graphics,System.Drawing.Color,System.Boolean,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Paints one color button
            </summary>
            <param name="graphics"></param>
            <param name="color"></param>
            <param name="hotTrack"></param>
            <param name="selected"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="F:OfficePickers.ColorPicker.OfficeColorPicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OfficePickers.ColorPicker.OfficeColorPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OfficePickers.ColorPicker.ToolStripColorPickerDisplayType">
            <summary>
            Specifies the display options for the ToolStripColorPicker such as
            image, text and underline.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:OfficePickers.ColorPicker.ToolStripColorPickerDisplayType.NormalImage" -->
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPickerDisplayType.NormalImageAndText">
            <summary>
            Specifies that both image and text are to be rendered for this ToolStripColorPicker
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPickerDisplayType.UnderLineAndImage">
            <summary>
            Specifies that both color under-line and image are to be rendered for this ToolStripColorPicker
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPickerDisplayType.UnderLineAndText">
            <summary>
            Specifies that both color under-line and text are to be rendered for this ToolStripColorPicker
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPickerDisplayType.UnderLineTextAndImage">
            <summary>
            Specifies that both color under-line, text and image are to be rendered for this ToolStripColorPicker
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPickerDisplayType.UnderLineOnly">
            <summary>
            Specifies that only a color under-line is to be rendered for this ToolStripColorPicker
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPickerDisplayType.None">
            <summary>
            Specified that neither image, text nor under-line is to be rendered for this ToolStripColorPicker
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPickerDisplayType.Text">
            <summary>
            Specifies that only text is to be rendered for this ToolStripColorPicker            
            </summary>
        </member>
        <member name="T:OfficePickers.ColorPicker.ToolStripColorPicker">
            <summary>
            Represents a ToolStripButtonItem that contains Color Picker control.
            </summary>
        </member>
        <member name="E:OfficePickers.ColorPicker.ToolStripColorPicker.SelectedColorChanged">
            <summary>
            Occurs when the value of the Color property changes. 
            </summary>
        </member>
        <member name="P:OfficePickers.ColorPicker.ToolStripColorPicker.ButtonDisplayStyle">
            <summary>
            Gets or sets the ToolStripColorPickerDisplayType in order to
            specified the display style of the button - image, text, underline etc.
            </summary>
        </member>
        <member name="P:OfficePickers.ColorPicker.ToolStripColorPicker.DisplayStyle">
            <summary>
            Overrides, Gets or sets the ToolStripItem.DisplayStyle property, use
            the ButtonDisplayStyle instead.
            </summary>
        </member>
        <member name="P:OfficePickers.ColorPicker.ToolStripColorPicker.Color">
            <summary>
            Gets or sets the color assign to the color picker control.
            </summary>
        </member>
        <member name="P:OfficePickers.ColorPicker.ToolStripColorPicker.AddColorNameToToolTip">
            <summary>
            Gets or sets value indicating whether to render the color name to the tool tip text.
            </summary>
        </member>
        <member name="P:OfficePickers.ColorPicker.ToolStripColorPicker.ToolTipText">
            <summary>
            Gets or sets the text that appears as a tooltip in the button.
            the color name will be rendered to the tooltip if the AddColorNameToolTip property set to true.
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPicker._colorPicker">
            <summary>
            The color picker control that opens when clicking on the button
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPicker._colorRectangle">
            <summary>
            Default color rectangle (under line)
            </summary>
        </member>
        <member name="F:OfficePickers.ColorPicker.ToolStripColorPicker._pictureRectangle">
            <summary>
            The underline picture rectangle - stretch to 14X14
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.#ctor">
            <summary>
            Initializes a new instance of the ToolStripColorPicker that holds
            OfficeColorPicker control inside a ToolStripItem to add to ToolStrip containers.
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the ToolStripColorPicker that holds
            OfficeColorPicker control inside a ToolStripItem to add to ToolStrip containers.
            </summary>
            <param name="startingColor">The color to assign to the color picker control</param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.InitControl">
            <summary>
            Set starting properties for the control and register the needed events.
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.UpdateDisplayStyle">
            <summary>
            Set the painting properties by the _buttonDisplayStyle property.
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.OnClick(System.EventArgs)">
            <summary>
            When clicking on the button - opens the Color Picker
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.GetOpenPoint">
            <summary>
            Gets the button position by the parent ToolStrip
            </summary>
            <returns></returns>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.OnSelectedColorChanged(System.EventArgs)">
            <summary>
            Fires the SelectedColorChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.HandleSelectedColorChanged(System.Object,System.EventArgs)">
            <summary>
            Repaint the button with the new color 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.Refresh">
            <summary>
            Repaint the parent tool strip and the button tool tip
            </summary>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.PaintUnderLine(System.Drawing.Graphics)">
            <summary>
            Paints the underline rectangle.
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.PaintUnderLineImage(System.Drawing.Graphics)">
            <summary>
            Paints the under line image
            </summary>
            <param name="g"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.PaintUnderLineText(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            Paints the underline text
            </summary>
            <param name="g"></param>
            <param name="imageSize"></param>
            <param name="bounds"></param>
        </member>
        <member name="M:OfficePickers.ColorPicker.ToolStripColorPicker.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides, Paint the image in the specified scale and the color line if defined.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:OfficePickers.Util.ContextMenuForm">
            <summary>
            Provides a System.Windows.Forms.Form that have a ContextMenu behavior.
            Use this Form by extending it or by adding the control using the method:
            <code>SetContainingControl(Control control)</code>
            </summary>
        </member>
        <member name="P:OfficePickers.Util.ContextMenuForm.Locked">
            <summary>
            Gets or sets a value indicating that the form is locked.
            The form should be locked when opening a Dialog on it.
            </summary>
        </member>
        <member name="M:OfficePickers.Util.ContextMenuForm.#ctor">
            <summary>
            Initialize a new instace of the ContextMenuForm in order to hold a control that
            needes to have a ContextMenu behavior.
            </summary>
        </member>
        <member name="M:OfficePickers.Util.ContextMenuForm.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Int32)">
            <summary>
            Shows the form on the specifies parent in the specifies location.
            </summary>
            <param name="parent"></param>
            <param name="startLocation"></param>
            <param name="width"></param>
        </member>
        <member name="M:OfficePickers.Util.ContextMenuForm.SetContainingControl(System.Windows.Forms.Control)">
            <summary>
            Set the control that will populate the ContextMenuForm.
            <remarks>
            Any scrolling should be implemented in the control it self, the 
            ContextMenuForm will not support scrolling.
            </remarks>
            </summary>
            <param name="control"></param>
        </member>
        <member name="F:OfficePickers.Util.ContextMenuForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:OfficePickers.Util.ContextMenuForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:OfficePickers.Util.ContextMenuForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:OfficePickers.Util.CustomColors">
            <summary>
            Provides custom colors members to use in the OfficeColorPicker.
            </summary>
        </member>
        <member name="F:OfficePickers.Util.CustomColors.SelectableColorsNames">
            <summary>
            Provides a list of color names that matches the SelectableColors array.
            </summary>
        </member>
        <member name="M:OfficePickers.Util.CustomColors.ColorEquals(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Compare 2 colors by their RGB properties.
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns>True when R,G and B properties of both colors are equals</returns>
        </member>
        <member name="T:OfficePickers.Util.GradientPanel">
            <summary>
            Enables you to group control in a panel with a gradient background.
            </summary>
        </member>
        <member name="P:OfficePickers.Util.GradientPanel.StartColor">
            <summary>
            Gets or sets the left/upper color for the gradient panel
            </summary>
        </member>
        <member name="P:OfficePickers.Util.GradientPanel.EndColor">
            <summary>
            Gets or sets the right/lower color for the gradient panel
            </summary>
        </member>
        <member name="P:OfficePickers.Util.GradientPanel.GradientMode">
            <summary>
            Gets or sets the direction of the linear gradient
            </summary>
        </member>
        <member name="M:OfficePickers.Util.GradientPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background in the gradient brush
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:MWControls.EditorTextDir">
            <summary>
            EditorTextDir is used in conjunction with the EditorTextDirUI Control.
            </summary>
        </member>
        <member name="M:MWControls.EditorTextDir.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This enables the button for the dropdown to appear in the properties window.
            </summary>
            <param name="itdc">Standard ITypeDescriptorContext object.</param>
            <returns>The desired UITypeEditorEditStyle (in a DropDown).</returns>
        </member>
        <member name="M:MWControls.EditorTextDir.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            This takes care of the actual value-change of the property.
            </summary>
            <param name="itdc">Standard ITypeDescriptorContext object.</param>
            <param name="isp">Standard IServiceProvider object.</param>
            <param name="value">The value as an object.</param>
            <returns>The new value as an object.</returns>
        </member>
        <member name="M:MWControls.EditorTextDir.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            True if Custom Painting or false otherwise.
            </summary>
            <param name="itdc">Standard ITypeDescriptorContext object.</param>
            <returns>True if Custom Painting or false otherwise.</returns>
        </member>
        <member name="M:MWControls.EditorTextDir.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paint the value in Visual Studio's (or wherever it is used) Property Window.
            </summary>
            <param name="e">Standard PaintValueEventArgs object.</param>
        </member>
        <member name="M:MWControls.EditorTextDir.ValueChanged(System.Object,MWCommon.TextDirEventArgs)">
            <summary>
            Standard ValueChanged EventHandler for EditorTextDirUI etdui.
            </summary>
            <param name="sender">Standard sender object.</param>
            <param name="e">Standard TextDirEventArgs object.</param>
        </member>
        <member name="M:MWControls.EditorTextDir.GetModifiedClientRectangle(MWCommon.TextDir,System.Drawing.Rectangle)">
            <summary>
            Gets a Rectangle that is sized for being used to paint the value properly in Visual Studio's
            	(or wherever it is used) Property Window.
            </summary>
            <param name="td">TextDir to base the Rectangle size and position on.</param>
            <param name="rct">Starting Rectangle.</param>
            <returns></returns>
        </member>
        <member name="T:MWControls.EditorTextDirUI">
            <summary>
            EditorTextDirUI is used in conjunction with the EditorTextDir UITypeEditor.
            </summary>
        </member>
        <member name="F:MWControls.EditorTextDirUI.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:MWControls.EditorTextDirUI.#ctor">
            <summary>
            Standard constructor.
            </summary>
        </member>
        <member name="M:MWControls.EditorTextDirUI.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MWControls.EditorTextDirUI.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:MWControls.EditorTextDirUI.TextDir">
            <summary>
            Changes the TextDir and sets the new value for this ITDC.
            </summary>
        </member>
        <member name="T:MWControls.EditorTextDirUI.TextDirEventHandler">
            <summary>
            A delegate for event TextDirEventHandler.
            </summary>
        </member>
        <member name="E:MWControls.EditorTextDirUI.TextDirChanged">
            <summary>
            Occurs when the TextDir property changes.
            </summary>
        </member>
        <member name="M:MWControls.EditorTextDirUI.OnTextDirChanged(MWCommon.TextDirEventArgs)">
            <summary>
            Raises the TextDirChanged Event.
            </summary>
            <param name="e">Standard EventArgs object.</param>
        </member>
        <member name="P:MWControls.EditorTextDirUI.ITDC">
            <summary>
            The ITypeDescriptorContext of this Control.
            Used at design time.
            </summary>
        </member>
        <member name="P:MWControls.EditorTextDirUI.IWFES">
            <summary>
            The IWindowsFormsEditorService of this Control.
            Used at design time.
            </summary>
        </member>
        <member name="M:MWControls.EditorTextDirUI.EditorTextDirUI_Resize(System.Object,System.EventArgs)">
            <summary>
            Always display as same size.
            </summary>
            <param name="sender">Standard sender object.</param>
            <param name="e">Standard EventArgs object.</param>
        </member>
        <member name="M:MWControls.EditorTextDirUI.mwlblTDN_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Select TextDir.Normal if this Control is clicked.
            If it is clicked with the Left MouseButton also close it.
            </summary>
            <param name="sender">Standard sender object.</param>
            <param name="e">Standard MouseEventArgs object.</param>
        </member>
        <member name="M:MWControls.EditorTextDirUI.mwlblTDU_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Select TextDir.UpsideDown if this Control is clicked.
            If it is clicked with the Left MouseButton also close it.
            </summary>
            <param name="sender">Standard sender object.</param>
            <param name="e">Standard MouseEventArgs object.</param>
        </member>
        <member name="M:MWControls.EditorTextDirUI.mwlblTDL_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Select TextDir.Left if this Control is clicked.
            If it is clicked with the Left MouseButton also close it.
            </summary>
            <param name="sender">Standard sender object.</param>
            <param name="e">Standard MouseEventArgs object.</param>
        </member>
        <member name="M:MWControls.EditorTextDirUI.mwlblTDR_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Select TextDir.Right if this Control is clicked.
            If it is clicked with the Left MouseButton also close it.
            </summary>
            <param name="sender">Standard sender object.</param>
            <param name="e">Standard MouseEventArgs object.</param>
        </member>
        <member name="M:MWControls.EditorTextDirUI.lblDescription_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Close this Control if the Right MouseButton is clicked.
            </summary>
            <param name="sender">Standard sender object.</param>
            <param name="e">Standard MouseEventArgs object.</param>
        </member>
        <member name="T:MWControls.MWLabel">
            <summary>
            A proper Label Control at last...
            Text uses StringFormat.GenericTypographic and thus fills the client area properly.
            Images are placed at the edge of the Control - not some weird arbitrary distance from it (on my system 1 pixel from left
            	and top and 4 pixels from right and bottom for a normal Label Control).
            When Control has Enabled set to false the Text looks exactly like that of a CheckBox.
            Mnemonics are not implemented.
            </summary>
        </member>
        <member name="M:MWControls.MWLabel.#ctor">
            <summary>
            Standard Constructor.
            </summary>
        </member>
        <member name="M:MWControls.MWLabel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:MWControls.MWLabel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:MWControls.MWLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden OnPaint EventHandler that draws the Text and the Image.
            </summary>
            <param name="e">Standard PaintEventArgs object.</param>
        </member>
        <member name="M:MWControls.MWLabel.PaintAll">
            <summary>
            Gets the Graphics object for this Control and paints the Image and the Text.
            </summary>
        </member>
        <member name="M:MWControls.MWLabel.GetModifiedClientRectangle">
            <summary>
            Gets the Rectangle needed to draw the Text correctly.
            </summary>
            <returns>Rectangle needed to draw the Text correctly.</returns>
        </member>
        <member name="M:MWControls.MWLabel.GetModifiedClientRectangle(System.Boolean)">
            <summary>
            Gets the Rectangle needed to draw the Text correctly modified by a certain number of pixels.
            Used for drawing disabled/embossed Text (this.Enabled = false).
            </summary>
            <param name="bTop">True if embossed text (top left) or false for highlighted text (bottom right).</param>
            <returns>Rectangle needed to draw the Text correctly.</returns>
        </member>
        <member name="M:MWControls.MWLabel.SetStringFormat">
            <summary>
            Sets the StringFormat so that it can be used throughout the Class.
            </summary>
        </member>
        <member name="P:MWControls.MWLabel.ImageOverText">
            <summary>
            Decides whether the Image should be painted above the Text or not.
            </summary>
        </member>
        <member name="E:MWControls.MWLabel.ImageOverTextChanged">
            <summary>
            Occurs when the ImageOverText property changes.
            </summary>
        </member>
        <member name="M:MWControls.MWLabel.OnImageOverTextChanged(System.EventArgs)">
            <summary>
            Raises the ImageOverTextChanged Event.
            </summary>
            <param name="e">Standard EventArgs object.</param>
        </member>
        <member name="P:MWControls.MWLabel.TextDir">
            <summary>
            Decides which direction the Text should be painted.
            </summary>
        </member>
        <member name="T:MWControls.MWLabel.TextDirEventHandler">
            <summary>
            A delegate for event TextDirEventHandler.
            </summary>
        </member>
        <member name="E:MWControls.MWLabel.TextDirChanged">
            <summary>
            Occurs when the TextDir property changes.
            </summary>
        </member>
        <member name="M:MWControls.MWLabel.OnTextDirChanged(MWCommon.TextDirEventArgs)">
            <summary>
            Raises the TextDirChanged Event.
            </summary>
            <param name="e">Standard TextDirEventArgs object.</param>
        </member>
        <member name="P:MWControls.MWLabel.StringFrmt">
            <summary>
            Decides which StringFormatEnum the Text should use.
            </summary>
        </member>
        <member name="T:MWControls.MWLabel.StringFormatEnumEventHandler">
            <summary>
            A delegate for event StringFormatEnumEventHandler.
            </summary>
        </member>
        <member name="E:MWControls.MWLabel.StringFrmtChanged">
            <summary>
            Occurs when the StringFrmt property changes.
            </summary>
        </member>
        <member name="M:MWControls.MWLabel.OnStringFrmtChanged(MWCommon.StringFormatEnumEventArgs)">
            <summary>
            Raises the StringFrmtChanged Event.
            </summary>
            <param name="e">Standard StringFormatEnumEventArgs object.</param>
        </member>
        <member name="T:MWCommon.TextDirEventHandler">
            <summary>
            A delegate for event TextDirEventHandler.
            </summary>
        </member>
        <member name="T:MWCommon.TextDirEventArgs">
            <summary>
            ShadowDirectionEventArgs class.
            </summary>
        </member>
        <member name="M:MWCommon.TextDirEventArgs.#ctor(MWCommon.TextDir,MWCommon.TextDir)">
            <summary>
            Standard Constructor.
            </summary>
            <param name="tdOld">The old TextDir before the property was changed.</param>
            <param name="tdNew">The new TextDir after the property was changed.</param>
        </member>
        <member name="P:MWCommon.TextDirEventArgs.OldTextDir">
            <summary>
            The old TextDir before the property was changed.
            </summary>
        </member>
        <member name="P:MWCommon.TextDirEventArgs.NewTextDir">
            <summary>
            The new TextDir after the property was changed.
            </summary>
        </member>
        <member name="T:MWCommon.StringFormatEnumEventHandler">
            <summary>
            A delegate for event StringFormatEnumEventHandler.
            </summary>
        </member>
        <member name="T:MWCommon.StringFormatEnumEventArgs">
            <summary>
            ShadowDirectionEventArgs class.
            </summary>
        </member>
        <member name="M:MWCommon.StringFormatEnumEventArgs.#ctor(MWCommon.StringFormatEnum,MWCommon.StringFormatEnum)">
            <summary>
            Standard Constructor.
            </summary>
            <param name="sfeOld">The old StringFormatEnum before the property was changed.</param>
            <param name="sfeNew">The new StringFormatEnum after the property was changed.</param>
        </member>
        <member name="P:MWCommon.StringFormatEnumEventArgs.OldStringFormatEnum">
            <summary>
            The old StringFormatEnum before the property was changed.
            </summary>
        </member>
        <member name="P:MWCommon.StringFormatEnumEventArgs.NewStringFormatEnum">
            <summary>
            The new StringFormatEnum after the property was changed.
            </summary>
        </member>
        <member name="T:MWCommon.MWCancelEventHandler">
            <summary>
            A delegate for event MWCancelEventHandler.
            </summary>
        </member>
        <member name="T:MWCommon.MWCancelEventArgs">
            <summary>
            MWCancelEventArgs class.
            The MWCancelEventArgs takes two objects as arguments. These two objects are the current value and the proposed value. These objects
            	can be used when setting up EventHandlers for the properties that use them so that the programmer will know what the current
            	and proposed values are.
            Note that the MWCancelEventArgs should be used in an OnBeforePROPERTYChanged property - BEFORE the value of the property is changed.
            </summary>
        </member>
        <member name="F:MWCommon.MWCancelEventArgs.oCurrent">
            <summary>
            The current object before the property is changed.
            </summary>
        </member>
        <member name="F:MWCommon.MWCancelEventArgs.oProposed">
            <summary>
            The proposed object that will be used if the property is changed.
            </summary>
        </member>
        <member name="M:MWCommon.MWCancelEventArgs.#ctor">
            <summary>
            Standard constructor.
            </summary>
        </member>
        <member name="M:MWCommon.MWCancelEventArgs.#ctor(System.Object,System.Object)">
            <summary>
            Standard Constructor taking the current value of the property and the proposed value of the property as arguments.
            </summary>
            <param name="current">The current object before the property is changed.</param>
            <param name="proposed">The proposed object that will be used if the property is changed.</param>
        </member>
        <member name="P:MWCommon.MWCancelEventArgs.Current">
            <summary>
            The current object before the property is changed.
            </summary>
        </member>
        <member name="P:MWCommon.MWCancelEventArgs.Proposed">
            <summary>
            The proposed object that will be used if the property is changed.
            </summary>
        </member>
        <member name="T:MWCommon.MWCommon">
            <summary>
            Common is used for various static methods that are accessed from several places so the code does not have to be duplicated.
            </summary>
        </member>
        <member name="M:MWCommon.MWCommon.GetGraphicalStringWidth(System.Windows.Forms.Control)">
            <summary>
            Get the Width of the supplied Control using its Text, Font and Graphics context.
            </summary>
            <param name="ctl">Control to measure Text of.</param>
            <returns>Width of the Text of the Control supplied.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetGraphicalStringWidth(System.Drawing.Graphics,System.String,System.Drawing.Font)">
            <summary>
            Get the Width of the supplied string using the supplied Font on the supplied Graphics context.
            </summary>
            <param name="g">Graphics context object to measure string on.</param>
            <param name="str">String to measure.</param>
            <param name="fnt">Font to use for string.</param>
            <returns>Width of the string supplied.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetGraphicalStringRect(System.Windows.Forms.Control)">
            <summary>
            Get the smallest encompassing Rectangle for the Text of the Control supplied using its Text, Font and Graphics context.
            </summary>
            <param name="ctl">Control to measure Text of.</param>
            <returns>Smallest Rectangle encompassing the Text of the supplied Control.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetGraphicalStringRect(System.Drawing.Graphics,System.String,System.Drawing.Font)">
            <summary>
            Get the smallest encompassing Rectangle for the supplied string, Font and Graphics context.
            </summary>
            <param name="g">Graphics context object to measure string on.</param>
            <param name="str">String to measure.</param>
            <param name="fnt">Font to use for string.</param>
            <returns>Smallest Rectangle encompassing the supplied string.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetGraphicalStringRegion(System.Windows.Forms.Control)">
            <summary>
            Get the smallest encompassing Region for the Text of the Control supplied using its Text, Font and Graphics context.
            </summary>
            <param name="ctl">Control to measure Text of.</param>
            <returns>Smallest Region encompassing the Text of the supplied Control.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetGraphicalStringRegion(System.Drawing.Graphics,System.String,System.Drawing.Font)">
            <summary>
            Get the smallest encompassing Region for the supplied string, Font and Graphics context.
            </summary>
            <param name="g">Graphics context object to measure string on.</param>
            <param name="str">String to measure.</param>
            <param name="fnt">Font to use for string.</param>
            <returns>Smallest Region encompassing the supplied string.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetStringFormattedStringWidth(System.Windows.Forms.Control,System.Drawing.StringFormat)">
            <summary>
            Get the Width of the supplied Control using its Text, Font and Graphics context and the supplied StringFormat.
            </summary>
            <param name="ctl">Control to measure Text of.</param>
            <param name="strfmt">StringFormat to use when measuring the string.</param>
            <returns>Width of the Text of the Control supplied using the StringFormat supplied.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetStringFormattedStringWidth(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.StringFormat)">
            <summary>
            Get the Width of the supplied string using the supplied Font, Rectangle and StringFormat on the supplied Graphics context.
            </summary>
            <param name="g">Graphics context object to measure string on.</param>
            <param name="str">String to measure.</param>
            <param name="fnt">Font to use for string.</param>
            <param name="rct">Rectangle to measure string in.</param>
            <param name="strfmt">StringFormat to use when measuring the string.</param>
            <returns>Width of the Text of the Control supplied using the StringFormat supplied.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetStringFormattedStringRectangle(System.Windows.Forms.Control,System.Drawing.StringFormat)">
            <summary>
            Get the smallest encompassing Rectangle of the supplied Control using its Text, Font and Graphics context and the supplied StringFormat.
            </summary>
            <param name="ctl">Control to measure Text of.</param>
            <param name="strfmt">StringFormat to use when measuring the string.</param>
            <returns>Smallest Rectangle encompassing the Text of the Control supplied using the StringFormat supplied.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetStringFormattedStringRectangle(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.StringFormat)">
            <summary>
            Get the smallest encompassing Rectangle of the supplied string using the supplied Font, Rectangle and StringFormat on the supplied Graphics context.
            </summary>
            <param name="g">Graphics context object to measure string on.</param>
            <param name="str">String to measure.</param>
            <param name="fnt">Font to use for string.</param>
            <param name="rct">Rectangle to measure string in.</param>
            <param name="strfmt">StringFormat to use when measuring the string.</param>
            <returns>Smallest Rectangle encompassing the Text of the Control supplied using the StringFormat supplied.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetStringFormattedStringRegion(System.Windows.Forms.Control,System.Drawing.StringFormat)">
            <summary>
            Get the smallest encompassing Region of the supplied Control using its Text, Font and Graphics context and the supplied StringFormat.
            </summary>
            <param name="ctl">Control to measure Text of.</param>
            <param name="strfmt">StringFormat to use when measuring the string.</param>
            <returns>Smallest Region encompassing the Text of the Control supplied using the StringFormat supplied.</returns>
        </member>
        <member name="M:MWCommon.MWCommon.GetStringFormattedStringRegion(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.StringFormat)">
            <summary>
            Get the smallest encompassing Region of the supplied string using the supplied Font, Rectangle and StringFormat on the supplied Graphics context.
            </summary>
            <param name="g">Graphics context object to measure string on.</param>
            <param name="str">String to measure.</param>
            <param name="fnt">Font to use for string.</param>
            <param name="rct">Rectangle to measure string in.</param>
            <param name="strfmt">StringFormat to use when measuring the string.</param>
            <returns>Smallest Region encompassing the Text of the Control supplied using the StringFormat supplied.</returns>
        </member>
        <member name="T:MWCommon.TextDir">
            <summary>
            Decides which way Text is painted.
            </summary>
        </member>
        <member name="T:MWCommon.StringFormatEnum">
            <summary>
            Decides the base StringFormat.
            </summary>
        </member>
        <member name="T:MWCommon.CheckBoxPaintOrder">
            <summary>
            Decides which order to Paint the Check, the Image and the Text for MWCheckBoxes (last is topmost).
            </summary>
        </member>
        <member name="T:Accentra.Controls.TablePicker">
            <summary>
            A FrontPage style table dimensions picker.
            </summary>
        </member>
        <member name="F:Accentra.Controls.TablePicker.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Accentra.Controls.TablePicker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Accentra.Controls.TablePicker.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Accentra.Controls.TablePicker.Cancel">
            <summary>
            Similar to <code><see cref="T:System.Windows.Forms.DialogResult"/> 
            == <see cref="F:System.Windows.Forms.DialogResult.Cancel"/></code>,
            but is used as a state value before the form
            is hidden and cancellation is finalized.
            </summary>
        </member>
        <member name="P:Accentra.Controls.TablePicker.SelectedColumns">
            <summary>
            Returns the number of columns, or the horizontal / X count,
            of the selection.
            </summary>
        </member>
        <member name="P:Accentra.Controls.TablePicker.SelectedRows">
            <summary>
            Returns the number of rows, or the vertical / Y count, 
            of the selection.
            </summary>
        </member>
        <member name="M:Accentra.Controls.TablePicker.TablePicker_Deactivate(System.Object,System.EventArgs)">
            <summary>
            Detect termination. Hides form.
            </summary>
        </member>
        <member name="M:Accentra.Controls.TablePicker.TablePicker_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Detects mouse movement. Tracks table dimensions selection.
            </summary>
        </member>
        <member name="M:Accentra.Controls.TablePicker.TablePicker_MouseLeave(System.Object,System.EventArgs)">
            <summary>
            Detects mouse sudden exit from the form to indicate 
            escaped (canceling) state.
            </summary>
        </member>
        <member name="M:Accentra.Controls.TablePicker.TablePicker_MouseEnter(System.Object,System.EventArgs)">
            <summary>
            Cancels the prior cancellation caused by MouseLeave.
            </summary>
        </member>
        <member name="M:Accentra.Controls.TablePicker.TablePicker_Click(System.Object,System.EventArgs)">
            <summary>
            Detects that the user made a selection by clicking.
            </summary>
        </member>
        <member name="T:Wizard.WizardForm">
            <summary>
            Base class that implement a minimal WizardForm and behavior
            </summary>
        </member>
        <member name="P:Wizard.WizardForm.PageIndexChangedDelegate">
            <summary>
            Accessor to the delegate of the change of page.
            Set this property to know when the display page had changed
            </summary>
        </member>
        <member name="M:Wizard.WizardForm.InitializePages">
            <summary>
            This method hide the tab control and resize the tab pages.
            It's called automatically
            </summary>
        </member>
        <member name="M:Wizard.WizardForm.InitializeComponent">
            <summary>
            Mйthode requise pour la prise en charge du concepteur - ne modifiez pas
            le contenu de cette mйthode avec l'йditeur de code.
            </summary>
        </member>
        <member name="M:Wizard.WizardForm.ForwardOffset(System.Int32)">
            <summary>
            This method is used to calculate the offset of the next displayed page.
            This method can be overrided to have a different behavior
            </summary>
            <param name="piCurrentPage">Index of displayed page</param>
            <returns>New index of the displayed page</returns>
        </member>
        <member name="M:Wizard.WizardForm.PreviousOffset(System.Int32)">
            <summary>
            This method is used to calculate the offset of the previous displayed page.
            This method can be overrided to have a different behavior
            </summary>
            <param name="piCurrentPage">Index of displayed page</param>
            <returns>New index of the displayed page</returns>
        </member>
        <member name="M:Wizard.WizardForm.ValidatePage(System.Int32)">
            <summary>
            This method is used by the wizard to knwo if it can go to the next displayed page
            This method must be overrided
            </summary>
            <param name="piPageNumber">Number of the current displayed page</param>
            <returns><c>true</c> if the page had been validated, else <c>false</c></returns>
        </member>
        <member name="M:Wizard.WizardForm.ActivatePage(System.Int32)">
            <summary>
            This method is called before a page is displayed by the wizard
            This method must be overrided
            </summary>
            <param name="piPageNumber">Number of the page to be displayed</param>
        </member>
        <member name="M:Wizard.WizardForm.ShowDialog(System.Windows.Forms.IWin32Window,System.Int32)">
            <summary>
            override of the ShowDialog of base form
            </summary>
            <param name="poOwner">Window handle of the owner of the wizard</param>
            <param name="piPageNumber">Number of the page displayed at startup</param>
            <returns></returns>
        </member>
        <member name="M:Wizard.WizardForm.UnActivatePage(System.Int32)">
            <summary>
            This method is used to unactivate a page that had been previously activated 
            by the <c>ActivatePage</c> method. Use this method to force activation of a page
            in case of use of the back button
            </summary>
            <param name="piPageNumber">Number of the page to deactivate</param>
        </member>
        <member name="M:Wizard.WizardForm.AllowBack(System.Boolean)">
            <summary>
            This method allow the back button
            </summary>
            <param name="pbAllowBack"><c>true</c> to allow back button, else <c>false</c></param>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
