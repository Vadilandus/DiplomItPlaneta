<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intermech.Bcl.Windows</name>
    </assembly>
    <members>
        <member name="M:Intermech.Extensions.ProgressbarExtensions.SetProgressNoAnimation(System.Windows.Forms.ProgressBar,System.Int32)">
            <summary>
            Sets the progress bar value, without using 'Windows Aero' animation.
            This is to work around a known WinForms issue where the progress bar
            is slow to update.
            http://stackoverflow.com/questions/6071626/progressbar-is-slow-in-windows-forms
            </summary>
        </member>
        <member name="T:Intermech.Diagnostics.Modifier">
            <summary>Модификатор аргумента метода</summary>
        </member>
        <member name="T:Intermech.Diagnostics.WindowsApiException">
            <summary>Исключительная ситуация связанная с работой с Windows API</summary>
        </member>
        <member name="P:Intermech.Diagnostics.WindowsApiException.CustomMessage">
            <summary>Тест сообщения</summary>
        </member>
        <member name="P:Intermech.Diagnostics.WindowsApiException.CalledFunction">
            <summary>Функция Windows, вызов которой вызвал ошибку</summary>
        </member>
        <member name="P:Intermech.Diagnostics.WindowsApiException.Arguments">
            <summary>Значения аргументов, с которыми была вызвана функция Win32</summary>
        </member>
        <member name="M:Intermech.Diagnostics.WindowsApiException.GetLastForce(System.String,Intermech.Diagnostics.ArgumentDescriptor[])">
            <summary>Принудительно создаёт (не выбрасывает!) исключительную ситуацию типа <see cref="T:Intermech.Diagnostics.WindowsApiException"/> вне зависимости от значения <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></summary>
            <param name="calledFunction">Функция Windows, вызов которой вызвал ошибку</param>
            <param name="arguments">Значения аргументов, с которыми была вызвана функция Win32</param>
        </member>
        <member name="M:Intermech.Diagnostics.WindowsApiException.GetLastOrNull(System.String,Intermech.Diagnostics.ArgumentDescriptor[])">
            <summary>Создаёт (не выбрасывает!) исключительную ситуацию типа <see cref="T:Intermech.Diagnostics.WindowsApiException"/> если <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/> вернёт значение, отличное от 0</summary>
            <param name="calledFunction">Функция Windows, вызов которой вызвал ошибку</param>
            <param name="arguments">Значения аргументов, с которыми была вызвана функция Win32</param>
            <returns>Исключительная ситуация типа <see cref="T:Intermech.Diagnostics.WindowsApiException"/> если <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/> вернёт значение, отличное от 0, иначе null</returns>
        </member>
        <member name="T:Intermech.Diagnostics.WindowsApplicationEventLogWriter">
            <summary>
            Класс для записи в системный журнал событий Application.
            </summary>
        </member>
        <member name="M:Intermech.Diagnostics.WindowsApplicationEventLogWriter.#ctor(System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="sourceName">Имя источника событий, отображаемое в журнале событий. Как правило, это название приложения</param>
            <exception cref="T:System.ArgumentException">Параметр <paramref name="sourceName"/> не должен быть равен null или пустой строке</exception>
        </member>
        <member name="M:Intermech.Diagnostics.WindowsApplicationEventLogWriter.DoWriteMessage(System.String,Intermech.Diagnostics.EventLogItemType)">
            <summary>
            Записывает в журнал новое событие.
            </summary>
            <param name="message">Текст сообщения</param>
            <param name="itemType">Тип события</param>
        </member>
        <member name="M:Intermech.Diagnostics.WindowsApplicationEventLogWriter.DoWriteItem(Intermech.Diagnostics.EventLogItem)">
            <summary>
            Записывает в журнал новое событие.
            </summary>
            <param name="item">Запись о событии</param>
        </member>
        <member name="M:Intermech.Mvp.Native.Windows.ApplicationHelper.EnableVisualStyles">
            <summary>
            Включает поддержку системных стилей оформления для приложений на основе Winforms.
            </summary>
        </member>
        <member name="T:Intermech.Mvp.Winforms.ControlDisplayState">
            <summary>
            Реализует объект состояния вида MVP (view), используемый при создании видов на основе класса Control.
            </summary>
        </member>
        <member name="M:Intermech.Mvp.Winforms.ControlDisplayState.#ctor(System.Windows.Forms.Control)">
            <summary>
            Создает объект.
            </summary>
            <param name="control">Визуальный элемент Windows Forms</param>
            <exception cref="T:ArgumentNullException">control</exception>
        </member>
        <member name="E:Intermech.Mvp.Winforms.Dialogs.SelectionDialogWrapper.Intermech#Mvp#Components#IOperationConfirmationView#OperationConfirmed">
            <summary>
            Событие успешного подтвержения сделанных изменений или своего выбора пользователем.
            После этого события взаимодействие пользователя с видом заканчивается.
            </summary>
        </member>
        <member name="T:Intermech.Mvp.Winforms.FormDisplayState">
            <summary>
            Реализует объект состояния вида MVP (view), используемый при создании видов на основе класса Form.
            </summary>
        </member>
        <member name="M:Intermech.Mvp.Winforms.FormDisplayState.#ctor(System.Windows.Forms.Form)">
            <summary>
            Создает объект.
            </summary>
            <param name="form">Форма Windows Forms</param>
            <exception cref="T:ArgumentNullException">form</exception>
        </member>
        <member name="T:Intermech.Mvp.Winforms.MvpUserControl">
            <summary>
            Базовый класс для создания видов MVP (view) на основе класса UserControl.
            </summary>
        </member>
        <member name="P:Intermech.Mvp.Winforms.MvpUserControl.DisplayState">
            <summary>
            Возвращает состояние вида MVP (view). Объект состояния вида используется посредником MVP (presenter) для подключения к виду и отключения от него.
            </summary>
        </member>
        <member name="F:Intermech.Mvp.Winforms.MvpUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Mvp.Winforms.MvpUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Mvp.Winforms.MvpUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Mvp.Winforms.MvpWindow">
            <summary>
            Базовый класс для создания видов MVP (view) на основе класса Form.
            </summary>
        </member>
        <member name="P:Intermech.Mvp.Winforms.MvpWindow.DisplayState">
            <summary>
            Возвращает состояние вида MVP (view). Объект состояния вида используется посредником MVP (presenter) для подключения к виду и отключения от него.
            </summary>
        </member>
        <member name="F:Intermech.Mvp.Winforms.MvpWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.Mvp.Winforms.MvpWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.Mvp.Winforms.MvpWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Mvp.Winforms.WinformsViewService">
            <summary>
            Реализует сервис видов MVP, созданных на основе Windows Forms.
            </summary>
            <remarks>
            Сервис видов обеспечивает абстрагирование от используемой технологии и решает следующие задачи -
            создание видов, отображение видов на экране в модальном и немодальном режиме, и др.
            </remarks>
        </member>
        <member name="M:Intermech.Mvp.Winforms.WinformsViewService.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Mvp.Winforms.WinformsViewService.DoValidateViewType(System.Type,System.Type)">
            <summary>
            Проверяет, соответствие реализации вида его интерфейсу, а также корректность реализации, наличие необходимых аннотаций и так далее.
            </summary>
            <param name="viewInterface">Интерфейс вида</param>
            <param name="viewImplementation">Реализация вида</param>
            <exception cref="T:MvpException">Реализация вида не соответствует интерфейсу, либо реализация некорректна, либо отсутствуют необходимые аннотации</exception>
        </member>
        <member name="M:Intermech.Mvp.Winforms.WinformsViewService.IsSuitableViewType(System.Type,System.Type)">
            <summary>
            Проверяет, может ли указанный тип являться реализацией вида MVP с указанный интерфейсом вида.
            Метод используется при автоматическом поиске реализации вида в сборке с реализацией посредника MVP, в случае,
            когда реализация вида не была явно зарегистрирована в сервисе видов.
            </summary>
            <param name="viewInterface">Интерфейс вида</param>
            <param name="viewImplementation">Реализация вида</param>
            <returns>true - если это подходящая реализация вида; иначе - false</returns>
        </member>
        <member name="M:Intermech.Mvp.Winforms.WinformsViewService.DoShow(Intermech.Mvp.IView,Intermech.Mvp.IPresenter)">
            <summary>
            Отображает вид MVP (view) на экране в немодальном режиме.
            </summary>
            <param name="view">Вид MVP</param>
            <param name="presenter">Посредник MVP. Параметр может быть не задан и равен null</param>
        </member>
        <member name="M:Intermech.Mvp.Winforms.WinformsViewService.DoShowModal(Intermech.Mvp.IView,Intermech.Mvp.IPresenter,System.Object)">
            <summary>
            Отображает вид MVP (view) на экране в модальном режиме.
            </summary>
            <param name="view">Вид MVP</param>
            <param name="presenter">Посредник MVP. Параметр может быть не задан и равен null</param>
            <param name="ownerView">Вид-владелец. Параметр может быть не задан и равен null</param>
        </member>
        <member name="M:Intermech.Mvp.Winforms.WinformsViewService.DoRunApplication(Intermech.Mvp.IView,Intermech.Mvp.IPresenter)">
            <summary>
            Запускает цикл обработки сообщений приложения для вида MVP (view).
            </summary>
            <param name="view">Вид MVP</param>
            <param name="presenter">Посредник MVP. Параметр может быть не задан и равен null</param>
        </member>
        <member name="M:Intermech.Mvp.Winforms.WinformsViewService.DoActivateView(Intermech.Mvp.IView)">
            <summary>
            Активирует вид MVP и переводит на него фокус ввода.
            </summary>
            <param name="view">Вид MVP</param>
        </member>
        <member name="P:Intermech.Mvp.Winforms.WinformsViewService.Default">
            <summary>
            Возвращает экземпляр объекта, используемый по умолчанию.
            </summary>
        </member>
        <member name="T:Intermech.PAL.MvpContextPAL">
            <summary>
            Класс PAL-сервиса для платформенно-зависимой реализации <see cref="T:Intermech.Mvp.MvpContext"/>.
            </summary>
            <remarks>
            Реализация является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.PAL.MvpContextPAL.CreateViewService">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:Intermech.PAL.ProgressSinksPAL">
            <summary>
            Класс PAL-сервиса для платформенно-зависимой реализации <see cref="T:Intermech.UI.ProgressSinks"/>.
            </summary>
            <remarks>
            Реализация является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.PAL.ProgressSinksPAL.CreateDialogService">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:Intermech.PAL.ConfigurationManagerPAL">
            <summary>
            Класс PAL-сервиса для платформенно-зависимой реализации <see cref="T:Intermech.Configuration.ConfigurationManagerCompat"/>.
            </summary>
            <remarks>
            Реализация является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.PAL.ConfigurationManagerPAL.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.PAL.ConfigurationManagerPAL.LoadAppSettings(System.String)">
            <summary>
            Загружает и возвращает коллекцию ключей из секции appSettings.
            Путь к файлу может быть пустой строкой, в этому случае используется файл конфигурации по умолчанию для приложения.
            </summary>
            <param name="filePath">Путь к файлу app.config. Значение может быть пустой строкой</param>
            <returns>Коллекция ключей и их значений</returns>
        </member>
        <member name="M:Intermech.PAL.ConfigurationManagerPAL.SaveAppSettings(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Сохраняет коллекцию ключей в секции appSettings.
            Путь к файлу может быть пустой строкой, в этому случае используется файл конфигурации по умолчанию для приложения.
            </summary>
            <param name="filePath">Путь к файлу app.config. Значение может быть пустой строкой</param>
            <param name="appSettings">Коллекция ключей</param>
        </member>
        <member name="M:Intermech.PAL.ConfigurationManagerPAL.LoadConnectionStrings(System.String)">
            <summary>
            Загружает и возвращает коллекцию строк подключения из секции connectionStrings.
            Путь к файлу может быть пустой строкой, в этому случае используется файл конфигурации по умолчанию для приложения.
            </summary>
            <param name="filePath">Путь к файлу app.config. Значение может быть пустой строкой</param>
            <returns>Коллекция ключей и их значений</returns>
        </member>
        <member name="M:Intermech.PAL.ConfigurationManagerPAL.SaveConnectionStrings(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Сохраняет коллекцию строк подключения в секции connectionStrings.
            Путь к файлу может быть пустой строкой, в этому случае используется файл конфигурации по умолчанию для приложения.
            </summary>
            <param name="filePath">Путь к файлу app.config. Значение может быть пустой строкой</param>
            <param name="appSettings">Коллекция ключей</param>
        </member>
        <member name="M:Intermech.PAL.ConfigurationManagerPAL.LoadSectionAsXmlString(System.String,System.String)">
            <summary>
            Загружает и возвращает в xml-формате указанную секцию.
            Путь к файлу может быть пустой строкой, в этому случае используется файл конфигурации по умолчанию для приложения.
            </summary>
            <param name="filePath">Путь к файлу app.config. Значение может быть пустой строкой</param>
            <param name="sectionName">Имя секции</param>
            <returns>Содержимое секции в xml-формате или пустая строка, если такая секция не существует</returns>
        </member>
        <member name="T:Intermech.PAL.EventLogWritersPAL">
            <summary>
            Класс PAL-сервиса для платформенно-зависимой реализации <see cref="T:Intermech.Diagnostics.EventLogWriters"/>.
            </summary>
            <remarks>
            Реализация является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.PAL.EventLogWritersPAL.CreateSystemLogWriter(System.String)">
            <summary>
            Создает объект для записи событий в журнал операционной системы.
            </summary>
            <param name="sourceName">Имя источника событий, отображаемое в журнале событий. Как правило, это название приложения</param>
            <returns>Объект для записи событий в журнал операционной системы</returns>
        </member>
        <member name="T:Intermech.PAL.ConsolePAL">
            <summary>
            Класс PAL-сервиса для платформенно-зависимой реализации <see cref="T:Intermech.ApplicationModel.ConsoleCompat"/>.
            </summary>
            <remarks>
            Реализация является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.PAL.ConsolePAL.CreateSystemEvenstHandler(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Intermech.Printing.Printers">
            <summary>Хелпер для работы с зарегистрированными в системе принтерами
                     Не потокобезопасен, но оно вроде и не требуется</summary>
        </member>
        <member name="P:Intermech.Printing.Printers.List">
            <summary>Список зарегистрированных в системе принтеров.
                     Перед началом блока работы с принтером (напр. при вызове диалога выбора принтера) лучше вызывать метод Refresh - он обновит кэш параметров принтера,
                     т.к. настройки принтеров пользователь мог изменить с момента первоначально инициализации кэша</summary>
        </member>
        <member name="P:Intermech.Printing.Printers.DefaultPrinterName">
            <summary>Имя принтера по-умолчанию</summary>
        </member>
        <member name="P:Intermech.Printing.Printers.DefaultPrinter">
            <summary>Принтер по-умолчанию в системе</summary>
        </member>
        <member name="P:Intermech.Printing.Printers.InstalledPrinterNames">
            <summary>Перечисление имён принтеров, зарегистрированных в системе</summary>
        </member>
        <member name="M:Intermech.Printing.Printers.Refresh(System.IntPtr)">
            <summary>Перечитка кэша информации о принтерах, вызывать например перед открытием диалога с выбором принтера</summary>
            <param name="hwndOwner"></param>
        </member>
        <member name="M:Intermech.Printing.Printers.FindActualPrinterName(System.String,System.String,System.String)">
            <summary>
            Поиск имени принтера, который наиболее похож на тот, чьи параметры переданы в параметры. Так что читаю из
            настроек имя принтера, проверяю что у него драйвер, чьё имя передано в параметры, если нет, либо принтера с нужным
            именем нет - ищу принтер по драйверу и порту (напр. сетевой путь)
            при этом если с нужным драйвером принтер найдется (даже несколько), а вот порт не подойдёт - выбираю первый с нужным драйвером</summary>
            <param name="name">Имя принтера</param>
            <param name="driver">Драйвер принтера</param>
            <param name="port">Порт (напр. LPT для локального или IP адрес для сетевого)</param>
            <returns>Имя подходящего принтера, если принтера не найдено - вернёт null</returns>
        </member>
        <member name="M:Intermech.Printing.Printers.GetPrinterNameByDisplayName(System.String)">
            <summary>Получение имени принтера (в коллекции PrinterSettings.InstalledPrinters) по отображаемому имени (в Devices and printers)
                     TODO Переписать</summary>
        </member>
        <member name="T:Intermech.Printing.Printer">
            <summary>Информация о принтере</summary>
        </member>
        <member name="F:Intermech.Printing.Printer.DisplayName">
            <summary>Отображаемое имя принтера</summary>
        </member>
        <member name="F:Intermech.Printing.Printer.Name">
            <summary>Фактическое имя принтера (отличается от отображаемого тем, что в)</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.Driver">
            <summary>Драйвер</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.Port">
            <summary>Порт. Для сетевого например IP адрес, для локального - имя порта, к которому подключен</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.ServerName">
            <summary>Порт. Для сетевого например IP адрес, для локального - имя порта, к которому подключен</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.IsDefault">
            <summary>Является ли принтером по-умолчанию</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.PaperSizes">
            <summary>Список размеров страниц, поддерживаемых принтером</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.PaperRawKinds">
            <summary>Список типов страниц, поддерживаемых принтером</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.DefaultPageSettings">
            <summary>Настройки страницы по-умолчанию у данного принтера</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.DefaultPaperSize">
            <summary>Размер страницы по-умолчанию у данного принтера</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.DefaultPaperRawKind">
            <summary>Размер страницы по-умолчанию у данного принтера</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.DefaultPaperKind">
            <summary>Тип страницы по-умолчанию у данного принтера</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.Icon">
            <summary>Иконка принтера (32x32)</summary>
        </member>
        <member name="P:Intermech.Printing.Printer.SmallIcon">
            <summary>Маленькая иконка принтера (16x16)</summary>
        </member>
        <member name="M:Intermech.Printing.Printer.ShowPropertiesDialog(System.IntPtr,System.Drawing.Printing.PaperSize,System.Boolean)">
            <summary>Показать диалог настройки принтера</summary>
            <returns>true закрыт по ok, false - в иных случаях.
                     Если диалог закрыт по ok. то настройки страницы надо перечитать из DefaultPageSettings принтера</returns>
        </member>
        <member name="M:Intermech.Printing.Printer.GetPaperSizeByPaperKind(System.Drawing.Printing.PaperKind)">
            <summary>Получить размер страницы по типу страницы</summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.ClsidProvider">
            <summary>
            Реализует провайдер COM-объекта на основе CLSID. Внимание! Разрядность COM-объекта должна соответствовать разрядности IPS.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ClsidProvider.#ctor(System.Guid,System.Boolean)">
            <summary>
            Создает объект.
            </summary>
            <param name="clsid">CLSID COM-объекта</param>
            <param name="inprocessServer">Признак, что COM-объект реализован как in-process сервер</param>
            <exception cref="T:System.ArgumentException">CLSID COM-объекта не задан</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ClsidProvider.GetComType(System.Boolean)">
            <summary>
            Реализует ленивое получение управляемого типа COM-объекта.
            </summary>
            <param name="throwOnError">Признак, что нужно сгенерировать исключение, если указанный COM-объект не зарегистрирован</param>
            <returns>Управляемый тип COM-объекта или null, если указанный COM-объект не зарегистрирован</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">Указанный COM-объект не зарегистрирован</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ClsidProvider.TryGetRunningInstance">
            <summary>
            Возвращает рабочий экземпляр COM-объекта, глобально опубликованный в системе для доступа из других приложений. Если такого экземпляра
            COM-объекта нет, то метод вернет null.
            </summary>
            <returns>COM-объект или null</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ClsidProvider.IsRegistered">
            <summary>
            Возвращает признак, что COM-объект зарегистрирован.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.ComActivator">
            <summary>
            Реализует активатор, позволяющий создавать COM-объекты.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComActivator.CreateInstance(System.String,System.Runtime.InteropServices.RegistrationClassContext)">
            <summary>
            Создает COM-объект.
            </summary>
            <param name="progId">ProdId создаваемого объекта</param>
            <param name="context">Требуемый контекст выполнения объекта</param>
            <returns>Созданный COM-объект</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComActivator.CreateInstance(System.Guid,System.Runtime.InteropServices.RegistrationClassContext)">
            <summary>
            Создает COM-объект.
            </summary>
            <param name="clsid">CLSID создаваемого объекта</param>
            <param name="context">Требуемый контекст выполнения объекта</param>
            <returns>Созданный COM-объект</returns>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.ComObjectProvider">
            <summary>
            Позволяет реализовать провайдер типа для COM-объекта. Такой провайдер обеспечивает ленивое получение
            managed типа для COM-объекта, а также выбор типа COM-сервера.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComObjectProvider.#ctor(System.Boolean)">
            <summary>
            Создает провайдер COM-объекта.
            </summary>
            <param name="inprocServer">Признак, что COM-объект реализован как in-process сервер</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComObjectProvider.GetComType(System.Boolean)">
            <summary>
            Реализует ленивое получение управляемого типа COM-объекта.
            </summary>
            <param name="throwOnError">Признак, что нужно сгенерировать исключение, если указанный COM-объект не зарегистрирован</param>
            <returns>Управляемый тип COM-объекта или null, если указанный COM-объект не зарегистрирован</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">Указанный COM-объект не зарегистрирован</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComObjectProvider.CreateInstance">
            <summary>
            Создает экземпляр COM-объекта.
            </summary>
            <returns>Созданный COM-объект</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComObjectProvider.TryGetRunningInstance">
            <summary>
            Возвращает рабочий экземпляр COM-объекта, глобально опубликованный в системе для доступа из других приложений. Если такого экземпляра
            COM-объекта нет, то метод вернет null.
            </summary>
            <returns>COM-объект или null</returns>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.ComObjectProvider.InprocServer">
            <summary>
            Возвращает признак, что COM-объект реализован как in-process сервер.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComObjectProvider.IsRegistered">
            <summary>
            Возвращает признак, что COM-объект зарегистрирован.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.ComTypes.IMessageFilter">
            <summary>
            Provides COM servers and applications with the ability to selectively handle incoming and outgoing COM messages while waiting for 
            responses from synchronous calls. Filtering messages helps to ensure that calls are handled in a manner that improves performance and 
            avoids deadlocks. COM messages can be synchronous, asynchronous, or input-synchronized; the majority of interface calls are synchronous.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComTypes.IMessageFilter.HandleInComingCall(System.Int32,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Provides a single entry point for incoming calls.
            This method is called prior to each method invocation originating outside the current process and provides the ability to filter or reject incoming calls (or callbacks) to an object or a process.
            </summary>
            <param name="dwCallType">The type of incoming call that has been received. Possible values are from the enumeration CALLTYPE</param>
            <param name="hTaskCaller">The thread id of the caller</param>
            <param name="dwTickCount">The elapsed tick count since the outgoing call was made, if dwCallType is not CALLTYPE_TOPLEVEL. If dwCallType is CALLTYPE_TOPLEVEL, dwTickCount should be ignored</param>
            <param name="lpInterfaceInfo">A pointer to an INTERFACEINFO structure that identifies the object, interface, and method being called. In the case of DDE calls, lpInterfaceInfo can be NULL because the DDE layer does not return interface information</param>
            <returns>Message status</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComTypes.IMessageFilter.RetryRejectedCall(System.IntPtr,System.Int32,Intermech.Runtime.ComInterop.ComTypes.SERVERCALL)">
            <summary>
            Provides applications with an opportunity to display a dialog box offering retry, cancel, or task-switching options.
            </summary>
            <param name="hTaskCallee">The thread id of the called application</param>
            <param name="dwTickCount">The number of elapsed ticks since the call was made</param>
            <param name="dwRejectType">Specifies either SERVERCALL_REJECTED or SERVERCALL_RETRYLATER, as returned by the object application</param>
            <returns>The number of tick before retry or -1 to cancel a call</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ComTypes.IMessageFilter.MessagePending(System.IntPtr,System.Int32,Intermech.Runtime.ComInterop.ComTypes.PENDINGTYPE)">
            <summary>
            Indicates that a message has arrived while COM is waiting to respond to a remote call.
            Handling input while waiting for an outgoing call to finish can introduce complications. The application should determine whether to process the message without interrupting the call, to continue waiting, or to cancel the operation.
            </summary>
            <param name="hTaskCallee">The thread id of the called application</param>
            <param name="dwTickCount">The number of ticks since the call was made. It is calculated from the GetTickCount function</param>
            <param name="dwPendingType">The type of call made during which a message or event was received</param>
            <returns>Message status</returns>
        </member>
        <member name="F:Intermech.Runtime.ComInterop.ComTypes.STATFLAG.STATFLAG_DEFAULT">
            <summary>
            Requests that the statistics include the pwcsName member of the STATSTG structure.
            </summary>
        </member>
        <member name="F:Intermech.Runtime.ComInterop.ComTypes.STATFLAG.STATFLAG_NONAME">
            <summary>
            Requests that the statistics not include the pwcsName member of the STATSTG structure. 
            If the name is omitted, there is no need for the Stat methods to allocate and free 
            memory for the string value of the name, therefore the method reduces time and 
            resources used in an allocation and free operation.
            </summary>
        </member>
        <member name="F:Intermech.Runtime.ComInterop.ComTypes.STATFLAG.STATFLAG_NOOPEN">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.ComTypes.STGFMT">
            <summary>
            Enumeration values specify the format of a storage object and are used in the StgCreateStorageEx and StgOpenStorageEx functions in the stgfmt parameter.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.ComTypes.STGM">
            <summary>
            Storage medium constants and flags
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.ComTypes.STGTY">
            <summary>
            The STGTY enumeration values are used in the type member of the STATSTG structure to indicate the type of the storage element. A storage element is a storage object, a stream object, or a byte-array object (LOCKBYTES).
            </summary>
        </member>
        <member name="F:Intermech.Runtime.ComInterop.ComTypes.STGTY.STGTY_STORAGE">
            <summary>
            STGTY_STORAGE Indicates that the storage element is a storage object.
            </summary>
        </member>
        <member name="F:Intermech.Runtime.ComInterop.ComTypes.STGTY.STGTY_STREAM">
            <summary>
            STGTY_STREAM Indicates that the storage element is a stream object. 
            </summary>
        </member>
        <member name="F:Intermech.Runtime.ComInterop.ComTypes.STGTY.STGTY_LOCKBYTES">
            <summary>
            STGTY_LOCKBYTES Indicates that the storage element is a byte-array object. 
            </summary>
        </member>
        <member name="F:Intermech.Runtime.ComInterop.ComTypes.STGTY.STGTY_PROPERTY">
            <summary>
            STGTY_PROPERTYIndicates that the storage element is a property storage object.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.DelayedInit">
            <summary>
            Некоторым приложениям требуется значительное время на инициализацию после запуска. До завершения инициализации API этих приложений недоступно.
            Этот класс предоставляет утилиты, позволяющие дождаться завершения инициалиации таких приложений.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.DelayedInit.WaitReady(System.Func{System.Boolean},System.Int32)">
            <summary>
            Позволяет дождаться полной загрузки приложения.
            </summary>
            <param name="isReady">Функция для проверки состояния приложения</param>
            <param name="timeout">Таймаут ожидания в миллисекундах. Значение меньшее или равное 0 может быть использовано для задания бесконечного таймаута</param>
            <returns>Возвращает true, если загрузка приложения завершена. Возвращает false, если приложение не завершило загрузку за указанное время.</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.DelayedInit.WaitReadyOrFail(System.Func{System.Boolean},System.Int32,System.String)">
            <summary>
            Позволяет дождаться полной загрузки приложения. Если приложение не успело завершить загрузку за указанное время, то метод сбрасывает исключение.
            </summary>
            <param name="isReady">Функция для проверки состояния приложения</param>
            <param name="timeout">Таймаут ожидания в миллисекундах. Значение меньшее или равное 0 может быть использовано для задания бесконечного таймаута</param>
            <param name="applicationName">Имя приложения, используемое в сообщении об ошибке</param>
            <exception cref="T:Intermech.FaultException">Приложение не успело завершить загрузку за указанное время</exception>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComClassActivationParameters">
            <summary>
            Параметры активации COM-класса.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComClassActivationParameters.#ctor(System.Type,Intermech.Runtime.ComInterop.LocalServer.ComObjectFactory)">
            <summary>
            Создает объект.
            </summary>
            <param name="comClass">COM-класс</param>
            <param name="comObjectFactory">Фабрика COM-объектов этого класса. Параметр может быть не задан, в этом случае будет использована фабрика по умолчанию</param>
            <exception cref="T:System.ArgumentNullException">Параметры <paramref name="comClass"/>, <paramref name="comObjectFactory"/> не должны быть равны null</exception>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComClassActivationParameters.ComClass">
            <summary>
            Возвращает COM-класс.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComClassActivationParameters.ComObjectFactory">
            <summary>
            Возвращает или задает фабрику COM-объектов этого класса.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComClassObject">
            <summary>
            Тип для объектов COM-классов (COM Class Object), через которые COM-клиенты будут взаимодействовать с COM-классами приложения.
            Реализация является thread safe.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComObjectEventArgs">
            <summary>
            Аргументы события с участием COM-объектов.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComObjectEventArgs.#ctor(System.Object)">
            <summary>
            Создает объект.
            </summary>
            <param name="comObject">COM-объект</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comObject"/> не должен быть равен null</exception>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComObjectEventArgs.ComObject">
            <summary>
            Возвращает COM-объект.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComObjectFactory">
            <summary>
            Базовый класс для фабрики COM-объектов. Реализация должна быть thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComObjectFactory.CreateInstance(Intermech.Runtime.ComInterop.LocalServer.ComServer,System.Type)">
            <summary>
            Создает COM-объект.
            </summary>
            <param name="comServer">COM-сервер, которому принадлежит COM-класс</param>
            <param name="comClass">COM-класс создаваемого объекта</param>
            <returns>Созданный COM-объект</returns>
            <exception cref="T:System.ArgumentNullException">Параметры <paramref name="comServer"/>, <paramref name="comClass"/> не должны быть равны null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComObjectFactory.DoCreateInstance(Intermech.Runtime.ComInterop.LocalServer.ComServer,System.Type)">
            <summary>
            Создает COM-объект.
            </summary>
            <param name="comServer">COM-сервер, которому принадлежит COM-класс</param>
            <param name="comClass">COM-класс создаваемого объекта</param>
            <returns>Созданный COM-объект</returns>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComPluginInfo">
            <summary>
            Описатель плагина для COM-сервера.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComPluginInfo.#ctor(System.String,System.Collections.Generic.ICollection{System.String})">
            <summary>
            Создает объект.
            </summary>
            <param name="assemblyPath">Путь к файлу сборки плагина с реализациями COM-классов</param>
            <param name="typeLibPathList">Коллекция путей к файлам библиотек типов, поставляемых вместе со сборкой плагина</param>
            <exception cref="T:System.ArgumentNullException">Параметры <paramref name="assemblyPath"/>, <paramref name="typeLibPathList"/> не должны быть равны null</exception>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComPluginInfo.AssemblyPath">
            <summary>
            Возвращает путь к файлу сборки плагина с реализациями COM-классов.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComPluginInfo.TypeLibPathList">
            <summary>
            Возвращает коллекцию путей к файлам библиотек типов, поставляемых вместе со сборкой плагина.
            При регистрации COM-классов будут зарегистрированы и эти библиотеки типов.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComPluginManager">
            <summary>
            Базовый класс для менеджера плагинов COM-сервера.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComPluginManager.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComPluginManager.FindPlugins(Intermech.Runtime.ComInterop.LocalServer.ComServer,Intermech.Runtime.ComInterop.LocalServer.IErrorList)">
            <summary>
            Находит плагины для COM-сервера.
            </summary>
            <param name="comServer">COM-сервер</param>
            <param name="errorList">Список ошибок, произошедших при поиске плагинов</param>
            <returns>Коллекция описателей плагинов</returns>
            <exception cref="T:System.ArgumentNullException">Параметры <paramref name="comServer"/>, <paramref name="errorList"/> не должны быть равны null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComPluginManager.DoFindPlugins(Intermech.Runtime.ComInterop.LocalServer.ComServer,Intermech.Runtime.ComInterop.LocalServer.IErrorList)">
            <summary>
            Находит плагины для COM-сервера.
            </summary>
            <param name="comServer">COM-сервер</param>
            <param name="errorList">Список ошибок, произошедших при поиске плагинов</param>
            <returns>Коллекция описателей плагинов</returns>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComPluginRegistrationService">
            <summary>
            Содержит сервисы, используемые при регистрации COM-классов.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComPluginRegistrationService.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComPluginRegistrationService.AfterRegisterTypeCallback(System.Type,Intermech.Runtime.ComInterop.LocalServer.RegisterComPluginContext)">
            <summary>
            Регистрирует COM-класс в реестре Windows.
            </summary>
            <param name="comClass">COM-класс</param>
            <param name="pluginContext">Контекст сборки с реализацией COM-класса</param>
            <exception cref="T:System.ArgumentNullException">Параметры <paramref name="comClass"/>, <paramref name="pluginContext"/> не должны быть равны null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComPluginRegistrationService.AfterUnregisterTypeCallback(System.Type,Intermech.Runtime.ComInterop.LocalServer.UnregisterComPluginContext)">
            <summary>
            Отменяет регистрацию COM-класса в реестре Windows.
            </summary>
            <param name="comClass">COM-класс</param>
            <param name="pluginContext">Контекст сборки с реализацией COM-класса</param>
            <exception cref="T:System.ArgumentNullException">Параметры <paramref name="comClass"/>, <paramref name="pluginContext"/> не должны быть равны null</exception>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComProcess">
            <summary>
            Объект процесса приложения с COM-сервером. Реализация является thread safe.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComProcessReferenceCounter">
            <summary>
            Счетчик ссылок для процесса приложения. Реализация является thread safe.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComServer">
            <summary>
            COM-сервер для приложений Windows. Реализация является thread-safe.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.#ctor">
            <summary>
            Создает объект. Метод должен быть вызван в потоке, чей COM Apartment = STA.
            </summary>
            <exception cref="T:System.InvalidOperationException">Для создания объекта требуется поток с COM Apartment = STA</exception>
            <remarks>
            Требование STA-потока вызвано тем, что активация и деактивация каждого COM-класса должны выполняться в одном и том же COM Apartment.
            При этом допускается активировать free threaded COM-классы в STA, они все равно будут работать как free threaded.
            Данное требование трудно невыполнимо в случае, если приложение COM-сервера использует плагины, где каждый плагин может самостоятельно активировать свои COM-классы.
            Поэтому приложение должно выбрать один из своих потоков и использовать его и для создания объекта COM-сервера, и для активации/деактивации всех COM-классов.
            Как правило, для этих целей используется основной поток приложения.
            </remarks>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.Initialize">
            <summary>
            Выполняет инициализацию COM-сервера.
            </summary>
            <returns>Результат инициализации СОМ-сервера</returns>
            <exception cref="T:System.InvalidOperationException">Инициализация COM-сервера уже была выполнена</exception>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServer.HostApplication">
            <summary>
            Возвращает или задает объект для связи COM-сервера с приложением.
            Свойство должно быть задано до инициализации COM-сервера.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServer.ComPluginManager">
            <summary>
            Возвращает или задает менеджер плагинов COM-сервера.
            Свойство должно быть задано до инициализации COM-сервера.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServer.ComObjectFactory">
            <summary>
            Возвращает или задает фабрику COM-объектов.
            Свойство может быть не задано, в этом случае будет использоваться фабрика COM-объектов по умолчанию.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServer.IsInitialized">
            <summary>
            Возвращает признак, что инициализация COM-сервера была выполнена.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServer.IsActive">
            <summary>
            Возвращает признак, что COM-сервер активен, и приложение может принимать клиентские запросы на подключение и создание COM-объектов.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServer.RunMode">
            <summary>
            Возвращает режим работы COM-сервера.
            </summary>
        </member>
        <member name="E:Intermech.Runtime.ComInterop.LocalServer.ComServer.ComObjectCreated">
            <summary>
            Событие, срабатывающее после создания COM-объекта по запросу от клиента.
            </summary>
        </member>
        <member name="E:Intermech.Runtime.ComInterop.LocalServer.ComServer.Released">
            <summary>
            Событие, срабатывающее после освобождения всех COM-объектов приложения в режиме запуска по запросу COM-клиента.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.RegisterComClasses">
            <summary>
            Регистрирует все COM-классы приложения в реестре Windows.
            </summary>
            <exception cref="T:System.Exception">В процессе регистрации COM-классов приложения произошла ошибка</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.UnregisterComClasses">
            <summary>
            Отменяет регистрацию всех COM-классов приложения в реестре Windows.
            </summary>
            <exception cref="T:System.Exception">В процессе отмены регистрации COM-классов приложения произошла ошибка</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.GetLastRegisteredHostApplication(System.Guid)">
            <summary>
            Возвращает путь к последнему зарегистрированному приложению COM-сервера.
            </summary>
            <param name="hostId">Идентификатор приложения COM-сервера</param>
            <returns>Путь к последнему зарегистрированному приложению COM-сервера или null</returns>
            <exception cref="T:System.Exception">Параметр <paramref name="hostId"/> не задан</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.IsComClassActive(System.Type)">
            <summary>
            Проверяет, был ли активирован указанный COM-класс.
            </summary>
            <param name="comClass">COM-класс</param>
            <returns>Если указанный COM-класс был активирован - true; иначе - false</returns>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comClass"/> не должен быть равен null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.ActivateComClass(System.Type)">
            <summary>
            Активирует COM-класс, делая его доступным для COM-клиентов.
            Клиенты смогут создавать COM-объекты, являющиеся экземплярами этого класса.
            Метод должен быть вызван в потоке, который использовался для создания объекта COM-сервера.
            Как правило, для этих целей используется основной поток приложения.
            </summary>
            <param name="comClass">COM-класс</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comClass"/> не должен быть равен null</exception>
            <exception cref="T:System.InvalidOperationException">Инициализация COM-сервера не была выполнена, либо поддержка COM отключена; метод вызван на потоке, отличном от потока, использованного для создания объекта COM-сервера</exception>
            <exception cref="T:Intermech.Runtime.ComInterop.LocalServer.ComServerException">Тип COM-объекта не является корректным COM-классом, подлежащим активации; повторная активация COM-класса не допустима</exception>
            <exception cref="T:System.Exception">Другие ошибки активации COM-класса</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.ActivateComClasses(System.Collections.Generic.ICollection{System.Type},System.Boolean)">
            <summary>
            Активирует указанные COM-классы, делая их доступными для COM-клиентов.
            Клиенты смогут создавать COM-объекты, являющиеся экземплярами этих классов.
            Метод должен быть вызван в потоке, который использовался для создания объекта COM-сервера.
            Как правило, для этих целей используется основной поток приложения.
            </summary>
            <param name="comClasses">Коллекция COM-классов</param>
            <param name="skipAlreadyActiveComClasses">Признак, что нужно пропустить все уже активированные COM-классы</param>
            <returns>Коллекция COM-классов, которые были активированы</returns>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comClasses"/> не должен быть равен null</exception>
            <exception cref="T:System.InvalidOperationException">Инициализация COM-сервера не была выполнена, либо поддержка COM отключена; метод вызван на потоке, отличном от потока, использованного для создания объекта COM-сервера</exception>
            <exception cref="T:Intermech.Runtime.ComInterop.LocalServer.ComServerException">Тип COM-объекта не является корректным COM-классом, подлежащим активации; повторная активация COM-класса не допустима</exception>
            <exception cref="T:System.Exception">Другие ошибки активации COM-класса</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.ActivateMissingComClasses">
            <summary>
            Активирует COM-классы приложения, для которых активация не была выполнена приложением явно.
            При попытке создания экземпляров таких COM-классов будет возвращена ошибка E_ABORT.
            Метод должен быть вызван в потоке, который использовался для создания объекта COM-сервера.
            Как правило, для этих целей используется основной поток приложения.
            </summary>
            <returns>Коллекция COM-классов, которые были активированы</returns>
            <exception cref="T:System.InvalidOperationException">Инициализация COM-сервера не была выполнена, либо поддержка COM отключена; метод вызван на потоке, отличном от потока, использованного для создания объекта COM-сервера</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.GetComClasses">
            <summary>
            Возвращает коллекцию всех COM-классов приложения.
            </summary>
            <returns>Коллекция COM-классов</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.GetActiveComClasses">
            <summary>
            Возвращает коллекцию активных COM-классов приложения.
            </summary>
            <returns>Коллекция COM-классов</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.DeactivateComClass(System.Type)">
            <summary>
            Деактивирует COM-класс, делая его недоступным для COM-клиентов.
            Клиенты больше не смогут создавать COM-объекты, являющиеся экземплярами этого класса.
            Метод должен быть вызван в потоке, который использовался для создания объекта COM-сервера.
            Как правило, для этих целей используется основной поток приложения.
            </summary>
            <param name="comClass">COM-класс</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comClass"/> не должен быть равен null</exception>
            <exception cref="T:System.InvalidOperationException">Инициализация COM-сервера не была выполнена, либо поддержка COM отключена; метод вызван на потоке, отличном от потока, использованного для создания объекта COM-сервера</exception>
            <remarks>
            Если после деактивации COM-класса приложения COM-клиент затребует создание COM-объекта этого класса, то Windows запустит новый экземпляр приложения.
            При разработке приложения COM-сервера следует учитывать эту возможность параллельного запуска нескольких экземпляров приложения.
            </remarks>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.DeactivateComClasses(System.Collections.Generic.ICollection{System.Type})">
            <summary>
            Деактивирует указанные COM-классы, делая их недоступными для COM-клиентов.
            Клиенты больше не смогут создавать COM-объекты, являющиеся экземплярами этих классов.
            Метод должен быть вызван в потоке, который использовался для создания объекта COM-сервера.
            Как правило, для этих целей используется основной поток приложения.
            </summary>
            <param name="comClasses">Коллекция COM-классов</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comClasses"/> не должен быть равен null</exception>
            <exception cref="T:System.InvalidOperationException">Инициализация COM-сервера не была выполнена, либо поддержка COM отключена; метод вызван на потоке, отличном от потока, использованного для создания объекта COM-сервера</exception>
            <remarks>
            Если после деактивации COM-класса приложения COM-клиент затребует создание COM-объекта этого класса, то Windows запустит новый экземпляр приложения.
            При разработке приложения COM-сервера следует учитывать эту возможность параллельного запуска нескольких экземпляров приложения.
            </remarks>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.DeactivateComClasses">
            <summary>
            Деактивирует все COM-классы, делая их недоступными для COM-клиентов.
            Клиенты больше не смогут создавать COM-объекты, являющиеся экземплярами этих классов.
            Метод должен быть вызван в потоке, который использовался для создания объекта COM-сервера.
            Как правило, для этих целей используется основной поток приложения.
            </summary>
            <exception cref="T:System.InvalidOperationException">Инициализация COM-сервера не была выполнена, либо поддержка COM отключена; метод вызван на потоке, отличном от потока, использованного для создания объекта COM-сервера</exception>
            <remarks>
            Если после деактивации COM-класса приложения COM-клиент затребует создание COM-объекта этого класса, то Windows запустит новый экземпляр приложения.
            При разработке приложения COM-сервера следует учитывать эту возможность параллельного запуска нескольких экземпляров приложения.
            </remarks>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServer.BlockClientRequests">
            <summary>
            Блокирует новые клиентские запросы на подключение к процессу приложения для создания новых COM-объектов.
            При этом, уже подключенные клиенты и используемые ими COM-объекты сохраняют свою работоспособность.
            Метод используется в процессе подготовки приложения к завершению работы. После вызова этого метода приложение должно
            как можно быстрее завершить работу. Блокировка не может быть отменена, она действует до завершения работы процесса приложения.
            </summary>
            <remarks>
            Если после получения блокировки COM-клиент затребует создание COM-объекта приложения, то Windows запустит новый экземпляр приложения.
            При разработке приложения COM-сервера следует учитывать эту возможность параллельного запуска нескольких экземпляров приложения.
            </remarks>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComServerException">
            <summary>
            Базовый тип для исключений COM-сервера.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServerException.#ctor">
            <summary>
            Создает объект исключения.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServerException.#ctor(System.String)">
            <summary>
            Создает объект исключения.
            </summary>
            <param name="message">Текст сообщения</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServerException.#ctor(System.String,System.Exception)">
            <summary>
            Создает объект исключения.
            </summary>
            <param name="message">Текст сообщения</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Создает объект исключения.
            </summary>
            <param name="info">Сериализованное представление объекта</param>
            <param name="ctx">Контекст сериализации</param>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComServerRegistrationException">
            <summary>
            Тип исключений для ошибок регистрации COM-классов.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServerRegistrationException.#ctor">
            <summary>
            Создает объект исключения.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServerRegistrationException.#ctor(System.String)">
            <summary>
            Создает объект исключения.
            </summary>
            <param name="message">Текст сообщения</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServerRegistrationException.#ctor(System.String,System.Exception)">
            <summary>
            Создает объект исключения.
            </summary>
            <param name="message">Текст сообщения</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServerRegistrationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Создает объект исключения.
            </summary>
            <param name="info">Сериализованное представление объекта</param>
            <param name="ctx">Контекст сериализации</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComServerRegistrationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Выполняет сериализацию объекта.
            </summary>
            <param name="info">Сериализованное представление объекта</param>
            <param name="context">Контекст сериализации</param>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerRegistrationException.Problems">
            <summary>
            Возвращает список ошибок и предупреждений.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComServerResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Arg_HostApplicationExecutablePathMustBeAbsolute">
            <summary>
              Looks up a localized string similar to Путь к исполняемому файлу приложения COM-сервера &apos;{0}&apos; должен быть задан в абсолютной форме..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Arg_HostApplicationExecutablePathRequired">
            <summary>
              Looks up a localized string similar to Не задан путь к исполняемому файлу приложения COM-сервера..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Arg_HostApplicationIdRequired">
            <summary>
              Looks up a localized string similar to Не задан уникальный идентификатор приложения COM-сервера..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_BadComXmlFileFormat">
            <summary>
              Looks up a localized string similar to Конфигурационный файл &apos;{0}&apos; не является валидным xml-файлом..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_CantClearLastRegisteredHostApplication">
            <summary>
              Looks up a localized string similar to Не удалось удалить из реестра путь к приложению COM-сервера..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_CantCreateRegistryKey">
            <summary>
              Looks up a localized string similar to Не удалось создать раздел реестра &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_CantOpenRegistryKey">
            <summary>
              Looks up a localized string similar to Не удалось открыть раздел реестра &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_CantSaveLastRegisteredHostApplication">
            <summary>
              Looks up a localized string similar to Не удалось сохранить в реестре путь к приложению COM-сервера..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_ComClassIsAlreadyActivated">
            <summary>
              Looks up a localized string similar to Активация COM-класса &apos;{0}&apos;, реализуемого типом &apos;{1}&apos;, уже была выполнена..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_ComClassIsUnknown">
            <summary>
              Looks up a localized string similar to Невозможно создать экземпляр COM-объекта &apos;{0}&apos;, реализуемого типом &apos;{1}&apos;, так как его активация не была выполнена приложением. Возможно, соответствующий плагин приложения не был загружен. .
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_ComPluginAssemblyLoadError">
            <summary>
              Looks up a localized string similar to Не удалось загрузить сборку &apos;{0}&apos; для обработки содержащихся в ней COM-классов..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_ComServerIsAlreadyInitialized">
            <summary>
              Looks up a localized string similar to Инициализация COM-сервера уже была выполнена..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_ComServerIsDisabled">
            <summary>
              Looks up a localized string similar to Возможности приложения, предоставляемые с помощью COM, отключены..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_ComServerIsNotInitialized">
            <summary>
              Looks up a localized string similar to Инициализация COM-сервера не была выполнена..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_CreationThreadRequired">
            <summary>
              Looks up a localized string similar to Активация и деактивация COM-классов разрешены только в том потоке, который использовался для создания объекта &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_HostApplicationAssemblyGuidRequired">
            <summary>
              Looks up a localized string similar to .NET-сборка приложения должна содержать атрибут типа GuidAttribute..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_HostApplicationIsExiting">
            <summary>
              Looks up a localized string similar to Приложение завершает работу и не может обработать запрос..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_HostApplicationNameIsNotSpecified">
            <summary>
              Looks up a localized string similar to В конфигурационном файле &apos;{0}&apos; не задано имя приложения COM-сервера. Поэтому .NET-сборка &apos;{1}&apos; не будет обработана, так как невозможно установить ее принадлежность к приложению..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_LiveComObjectsTrackerIsAlreadyActive">
            <summary>
              Looks up a localized string similar to Трекер используемых COM-объектов уже был активирован..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_LiveComObjectsTrackerIsNotActive">
            <summary>
              Looks up a localized string similar to Трекер используемых COM-объектов не был активирован..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_RegisterComClassError">
            <summary>
              Looks up a localized string similar to Не удалось зарегистрировать COM-класс &apos;{0}&apos;, реализуемый типом &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_RegisterCommandError">
            <summary>
              Looks up a localized string similar to Регистрация COM-классов приложения выполнена с ошибками..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_RegisterCommandRejected">
            <summary>
              Looks up a localized string similar to Регистрация COM-классов приложения не может быть выполнена, так как поддержка COM отключена..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_RegisterTypeLibError">
            <summary>
              Looks up a localized string similar to Не удалось зарегистрировать библиотеку типов &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_STAThreadRequired">
            <summary>
              Looks up a localized string similar to Для создания объекта &apos;{0}&apos; требуется поток с COM Apartment = STA..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_TypeIsNotComClass">
            <summary>
              Looks up a localized string similar to Указанный тип &apos;{0}&apos; не является COM-классом..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_UnknownTypeLibSpecified">
            <summary>
              Looks up a localized string similar to COM-класс использует неизвестную библиотеку типов с LIBID = {0} версии {1}..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_UnlinkedComXmlFile">
            <summary>
              Looks up a localized string similar to Для конфигурационного файла &apos;{0}&apos; не найдена соответствующая ему .NET-сборка..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_UnregisterComClassError">
            <summary>
              Looks up a localized string similar to Не удалось отменить регистрацию COM-класса &apos;{0}&apos;, реализуемого типом &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_UnregisterCommandError">
            <summary>
              Looks up a localized string similar to Отмена регистрации COM-классов приложения выполнена с ошибками..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_UnregisterCommandRejected">
            <summary>
              Looks up a localized string similar to Отмена регистрации COM-классов приложения не может быть выполнена, так как приложение не было зарегистрировано как COM-сервер..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_UnregisterTypeLibError">
            <summary>
              Looks up a localized string similar to Не удалось отменить регистрацию библиотеки типов &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.SR_UnsupportedHostApplicationType">
            <summary>
              Looks up a localized string similar to Неподдерживаемый тип приложения COM-сервера. Приложение должно быть исполняемым файлом..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_AutoExitHandlerIsInstalled">
            <summary>
              Looks up a localized string similar to COM: установлен обработчик для автоматического завершения работы приложения, запущенного по запросу COM-клиента.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_AutoExitIsInvoked">
            <summary>
              Looks up a localized string similar to COM: завершение работы приложения, запущенного по запросу COM-клиента.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_AutoExitIsRequested">
            <summary>
              Looks up a localized string similar to COM: запланировано завершение работы приложения, так как все созданные COM-объекты освобождены.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_CantDisableComServerUntilUnregisterCommand">
            <summary>
              Looks up a localized string similar to COM: поддержка COM не может быть отключена, так как регистрация приложения не была отменена.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_ComClassActivated">
            <summary>
              Looks up a localized string similar to COM: создана фабрика объектов для COM-класса &apos;{0}&apos;, реализуемого типом &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_ComClassDeactivated">
            <summary>
              Looks up a localized string similar to COM: удалена фабрика объектов для COM-класса &apos;{0}&apos;, реализуемого типом &apos;{1}&apos;.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_ComServerInitializedAndActive">
            <summary>
              Looks up a localized string similar to COM: приложение успешно инициализировано и ожидает подключения клиентов....
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_FileProcessed">
            <summary>
              Looks up a localized string similar to COM: файл {0} обработан.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_LiveComObjectsCountChanged">
            <summary>
              Looks up a localized string similar to COM: теперь приложение контролирует {0} используемых COM-объектов.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_NewObjectInstanceCreated">
            <summary>
              Looks up a localized string similar to COM: создан новый экземпляр COM-объекта, реализуемого типом &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_RegisterCommandStarted">
            <summary>
              Looks up a localized string similar to COM: выполняется регистрация COM-классов приложения.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComServerResources.Trace_UnregisterCommandStarted">
            <summary>
              Looks up a localized string similar to COM: выполняется отмена регистрации COM-классов приложения.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComServerRunMode">
            <summary>
            Указывает режим работы COM-сервера.
            </summary>
        </member>
        <member name="F:Intermech.Runtime.ComInterop.LocalServer.ComServerRunMode.Normal">
            <summary>
            Обычный режим работы приложения. Пользователь решает, когда приложение должно быть закрыто.
            </summary>
        </member>
        <member name="F:Intermech.Runtime.ComInterop.LocalServer.ComServerRunMode.Embedding">
            <summary>
            Режим работы COM-сервера по запросу от COM-клиента. Приложение должно быть автоматически закрыто после отключения всех COM-клиентов.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComXmlFilesPluginManager">
            <summary>
            Менеджер плагинов COM-сервера для приложений с плагинами, в которых плагины самого приложения, содержащие COM-классы, описываются с помощью .com.xml-файлов.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComXmlFilesPluginManager.DoFindPlugins(Intermech.Runtime.ComInterop.LocalServer.ComServer,Intermech.Runtime.ComInterop.LocalServer.IErrorList)">
            <summary>
            Находит плагины для COM-сервера.
            </summary>
            <param name="comServer">COM-сервер</param>
            <param name="errorList">Список ошибок, произошедших при поиске плагинов</param>
            <returns>Коллекция описателей плагинов</returns>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComXmlFilesSearchService">
            <summary>
            Сервис поиска плагинов COM-сервера для приложений с плагинами, в которых плагины самого приложения, содержащие COM-классы, описываются с помощью .com.xml-файлов.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComXmlFilesSearchService.#ctor(System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="hostPath">Абсолютный путь к исполняемому файлу приложения COM-сервера</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComXmlFilesSearchService.FindPlugins(Intermech.Runtime.ComInterop.LocalServer.IErrorList)">
            <summary>
            Находит плагины для COM-сервера, используя .com.xml-файлы.
            </summary>
            <param name="errorList">Список ошибок, произошедших при поиске плагинов</param>
            <returns>Коллекция описателей плагинов</returns>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="errorList"/> не должен быть равен null</exception>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.DefaultComObjectFactory">
            <summary>
            Реализация по умолчанию для фабрики COM-объектов.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.DefaultComObjectFactory.DoCreateInstance(Intermech.Runtime.ComInterop.LocalServer.ComServer,System.Type)">
            <summary>
            Создает COM-объект.
            </summary>
            <param name="comServer">COM-сервер, которому принадлежит COM-класс</param>
            <param name="comClass">COM-класс создаваемого объекта</param>
            <returns>Созданный COM-объект</returns>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.DefaultHostApplication">
            <summary>
            Реализация по умолчанию объекта для связи COM-сервера с приложением.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.DefaultHostApplication.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.DefaultHostApplication.#ctor(System.Reflection.Assembly)">
            <summary>
            Создает объект.
            </summary>
            <param name="entryAssembly">Сборка с точкой входа приложения</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="entryAssembly"/> не должен быть равен null</exception>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.DefaultHostApplication.HostId">
            <summary>
            Возвращает идентификатор приложения COM-сервера, в качестве которого используется Guid сборки с точкой входа приложения.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.DefaultHostApplication.ExecutablePath">
            <summary>
            Возвращает путь к исполняемому файлу приложения COM-сервера в абсолютной форме, в качестве которого используется путь сборки с точкой входа приложения.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.DefaultHostApplication.GetCommandLineArguments">
            <summary>
            Возвращает коллекцию аргументов запуска приложения COM-сервера.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ErrorList">
            <summary>
            Результат выполнения команды регистрации/дерегистрации COM-классов.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ErrorList.Errors">
            <summary>
            Возвращает список ошибок.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ErrorList.Warnings">
            <summary>
            Возвращает список предупреждений.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ErrorList.Successful">
            <summary>
            Возвращает true, если команды выполнилась успешно.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.FreeThreadedClassObjectWrapper">
            <summary>
            Обертка для объекта COM-класса, необходимая для работы в MTA-потоках. Реализация является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.FreeThreadedClassObjectWrapper.#ctor(Intermech.Runtime.ComInterop.LocalServer.ComClassObject)">
            <summary>
            Создает объект.
            </summary>
            <param name="comClassObject">Актуальная реализация объекта COM-класса</param>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.FreeThreadedObject">
            <summary>
            Базовый класс для COM-объектов приложения, использующих потоковую модель MTA.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.FreeThreadedObject.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.FreeThreadedObject.#ctor(System.Boolean)">
            <summary>
            Создает объект.
            </summary>
            <param name="addToTracker">Признак, что созданный объект требуется добавить в трекер используемых COM-объектов</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.FreeThreadedObject.CreateObjRef(System.Type)">
            <summary>
            Создает и возвращает объект, который содержит всю необходимую информацию для создания прокси-объекта,
            используемого для удаленного взаимодействия с текущим объектом.
            </summary>
            <param name="requestedType">Тип прокси-объекта</param>
            <returns>Созданный сервисный объект</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.FreeThreadedObject.RegisterComClass(System.Type)">
            <summary>
            Вызывается при регистрации COM-объекта в реестре Windows.
            </summary>
            <param name="comClass">Тип COM-объекта</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.FreeThreadedObject.UnregisterComClass(System.Type)">
            <summary>
            Вызывается при отмене регистрации COM-объекта в реестре Windows.
            </summary>
            <param name="comClass">Тип COM-объекта</param>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.IHostApplication">
            <summary>
            Интерфейс объекта для связи COM-сервера с приложением.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.IHostApplication.HostId">
            <summary>
            Возвращает идентификатор приложения COM-сервера.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.IHostApplication.ExecutablePath">
            <summary>
            Возвращает путь к исполняемому файлу приложения COM-сервера в абсолютной форме.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.IHostApplication.GetCommandLineArguments">
            <summary>
            Возвращает коллекцию аргументов запуска приложения COM-сервера.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.LiveComObjectsTracker">
            <summary>
            Трекер используемых COM-объектов приложения. Реализация является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.LiveComObjectsTracker.#ctor(Intermech.Runtime.ComInterop.LocalServer.IReferenceCounter,System.TimeSpan)">
            <summary>
            Создает объект.
            </summary>
            <param name="processRefCounter">Счетчик ссылок для процесса приложения</param>
            <param name="cleanupPeriod">Интервал периодической очистки списка используемых COM-объектов приложения</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="processRefCounter"/> не должен быть равен null</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="cleanupPeriod"/> слишком мал</exception>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.LiveComObjectsTracker.IsActive">
            <summary>
            Возвращает true, если трекер был активирован.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.LiveComObjectsTracker.EnsureActive">
            <summary>
            Активирует трекер, если это еще не было сделано.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.LiveComObjectsTracker.Activate">
            <summary>
            Активирует трекер.
            </summary>
            <exception cref="T:System.InvalidOperationException">Трекер используемых COM-объектов уже был активирован</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.LiveComObjectsTracker.AddObject(System.Object)">
            <summary>
            Добавляет COM-объект в список отслеживаемых COM-объектов.
            </summary>
            <param name="comObject">COM-объект</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comObject"/> не должен быть равен null</exception>
            <exception cref="T:System.InvalidOperationException">Трекер используемых COM-объектов не был активирован</exception>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.MissingComObjectFactory">
            <summary>
            Фабрика COM-объектов, чья активация не была выполнена приложением.
            При попытке создания экземпляра объекта фабрика бросает исключение COMException с кодом E_ABORT.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.MissingComObjectFactory.DoCreateInstance(Intermech.Runtime.ComInterop.LocalServer.ComServer,System.Type)">
            <summary>
            Создает COM-объект.
            </summary>
            <param name="comServer">COM-сервер, которому принадлежит COM-класс</param>
            <param name="comClass">COM-класс создаваемого объекта</param>
            <returns>Созданный COM-объект</returns>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComHost">
            <summary>
            Содержит глобальные COM-сервисы для приложения. Все методы и свойства класса являются thread safe.
            </summary>
            <remarks>
            Этот тип оставлен только для обратной совместимости с уже существующим кодом.
            Во всех остальных случаях следует использовать сервис типа <see cref="T:Intermech.Runtime.ComInterop.LocalServer.ComServer"/>.
            </remarks>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComHost.Configuration">
            <summary>
            Возвращает конфигурацию COM-сервера.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComHost.ActivateClassFactory(System.Type)">
            <summary>
            Создает и добавляет фабрику для указанного COM-объекта в список активных фабрик приложения.
            </summary>
            <param name="comObjectType">Тип COM-объекта</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comObjectType"/> не должен быть равен null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.ComHost.DeactivateClassFactory(System.Type)">
            <summary>
            Удаляет фабрику для указанного COM-объекта из списка активных фабрик приложения.
            </summary>
            <param name="comObjectType">Тип COM-объекта</param>
            <exception cref="T:System.ArgumentNullException">Параметр <paramref name="comObjectType"/> не должен быть равен null</exception>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComHost.Instance">
            <summary>
            Возвращает или задает глобально доступный экземпляр COM-сервера.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.ComHostConfiguration">
            <summary>
            Описывает конфигурацию COM-сервера.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.ComHostConfiguration.ComSupportActive">
            <summary>
            Возвращает true, если поддержка COM включена.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.RegisterCommandContext.Global">
            <summary>
            Возвращает или задает глобальный экземпляр контекста выполнения команды.
            Это единственный способ передать дополнительные параметры в метод регистрации, реализуемый самим COM-объектом.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.RegisterComPluginContext.AssemblyPath">
            <summary>
            Возвращает путь к файлу сборки плагина с реализациями COM-классов.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.SimpleComPluginManager">
            <summary>
            Менеджер плагинов COM-сервера для простых приложений, в которых все COM-классы реализованы в одной сборке.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.SimpleComPluginManager.#ctor(System.Reflection.Assembly,System.String[])">
            <summary>
            Создает объект.
            </summary>
            <param name="comPluginAssembly">Сборка плагина COM-сервера с реализацией COM-классов</param>
            <param name="typeLibraryPaths">Массив путей к библиотекам типов приложения. Может быть пуст</param>
            <exception cref="T:System.ArgumentNullException">Параметры <paramref name="comPluginAssembly"/>, <paramref name="typeLibraryPaths"/> не должен быть равен null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.SimpleComPluginManager.DoFindPlugins(Intermech.Runtime.ComInterop.LocalServer.ComServer,Intermech.Runtime.ComInterop.LocalServer.IErrorList)">
            <summary>
            Находит плагины для COM-сервера.
            </summary>
            <param name="comServer">COM-сервер</param>
            <param name="errorList">Список ошибок, произошедших при поиске плагинов</param>
            <returns>Коллекция описателей плагинов</returns>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.SingleThreadedClassObjectWrapper">
            <summary>
            Обертка для объекта COM-класса, необходимая для работы в STA-потоках. Реализация является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.SingleThreadedClassObjectWrapper.#ctor(Intermech.Runtime.ComInterop.LocalServer.ComClassObject)">
            <summary>
            Создает объект.
            </summary>
            <param name="comClassObject">Актуальная реализация объекта COM-класса</param>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.SingleThreadedObject">
            <summary>
            Базовый класс для COM-объектов приложения, использующих потоковую модель STA.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.SingleThreadedObject.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.SingleThreadedObject.#ctor(System.Boolean)">
            <summary>
            Создает объект.
            </summary>
            <param name="addToTracker">Признак, что созданный объект требуется добавить в трекер используемых COM-объектов</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.SingleThreadedObject.CreateObjRef(System.Type)">
            <summary>
            Создает и возвращает объект, который содержит всю необходимую информацию для создания прокси-объекта,
            используемого для удаленного взаимодействия с текущим объектом.
            </summary>
            <param name="requestedType">Тип прокси-объекта</param>
            <returns>Созданный сервисный объект</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.SingleThreadedObject.RegisterComClass(System.Type)">
            <summary>
            Вызывается при регистрации COM-объекта в реестре Windows.
            </summary>
            <param name="comClass">Тип COM-объекта</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.SingleThreadedObject.UnregisterComClass(System.Type)">
            <summary>
            Вызывается при отмене регистрации COM-объекта в реестре Windows.
            </summary>
            <param name="comClass">Тип COM-объекта</param>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.LocalServer.TypeLibGuidAttribute">
            <summary>
            Этот атрибут используется при создании управляемых COM-объектов. Он позволяет указать идентификатор библиотеки типов, в которой описан
            интерфейс COM-объекта. Явное указание библиотеки типов используется в тех случаях, когда модуль расширения IPS использует более одной
            библиотеки типов.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.TypeLibGuidAttribute.#ctor">
            <summary>
            Создает атрибут с пустым идентификатором библиотеки типов.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.TypeLibGuidAttribute.#ctor(System.String)">
            <summary>
            Создает атрибут.
            </summary>
            <param name="typeLibId">Идентификатор бибилиотеки типов, используемой реализуемым COM-объектом</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.LocalServer.TypeLibGuidAttribute.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Создает атрибут.
            </summary>
            <param name="typeLibId">Идентификатор бибилиотеки типов, используемой реализуемым COM-объектом</param>
            <param name="majorVersion">Старший номер версии библиотеки типов</param>
            <param name="minorVersion">Младший номер версии библиотеки типов</param>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.TypeLibGuidAttribute.TypeLibId">
            <summary>
            Возвращает идентификатор библиотеки типов, используемой реализуемым COM-объектом. Может быть равен Guid.Empty, если
            COM-объект должен быть зарегистрирован без указания библиотеки типов.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.TypeLibGuidAttribute.RequiredVersion">
            <summary>
            Возвращает требуемую версию библиотеки типов. Может быть равно null, если проверка существования библиотеки типов
            указанной версии не требуется.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.UnregisterCommandContext.Global">
            <summary>
            Возвращает или задает глобальный экземпляр контекста выполнения команды.
            Это единственный способ передать дополнительные параметры в метод отмены регистрации, реализуемый самим COM-объектом.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.LocalServer.UnregisterComPluginContext.AssemblyPath">
            <summary>
            Возвращает путь к файлу сборки плагина с реализациями COM-классов.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.MessageFilter">
            <summary>
            Базовый класс фильтра для очереди сообщений COM.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.MessageFilter.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.MessageFilter.HandleInComingCall(System.Int32,System.IntPtr,System.Int32,System.IntPtr)">
            <summary>
            Provides a single entry point for incoming calls.
            This method is called prior to each method invocation originating outside the current process and provides the ability to filter or reject incoming calls (or callbacks) to an object or a process.
            </summary>
            <param name="dwCallType">The type of incoming call that has been received. Possible values are from the enumeration CALLTYPE</param>
            <param name="hTaskCaller">The thread id of the caller</param>
            <param name="dwTickCount">The elapsed tick count since the outgoing call was made, if dwCallType is not CALLTYPE_TOPLEVEL. If dwCallType is CALLTYPE_TOPLEVEL, dwTickCount should be ignored</param>
            <param name="lpInterfaceInfo">A pointer to an INTERFACEINFO structure that identifies the object, interface, and method being called. In the case of DDE calls, lpInterfaceInfo can be NULL because the DDE layer does not return interface information</param>
            <returns>Message status</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.MessageFilter.RetryRejectedCall(System.IntPtr,System.Int32,Intermech.Runtime.ComInterop.ComTypes.SERVERCALL)">
            <summary>
            Provides applications with an opportunity to display a dialog box offering retry, cancel, or task-switching options.
            </summary>
            <param name="hTaskCallee">The thread id of the called application</param>
            <param name="dwTickCount">The number of elapsed ticks since the call was made</param>
            <param name="dwRejectType">Specifies either SERVERCALL_REJECTED or SERVERCALL_RETRYLATER, as returned by the object application</param>
            <returns>The number of tick before retry or -1 to cancel a call</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.MessageFilter.MessagePending(System.IntPtr,System.Int32,Intermech.Runtime.ComInterop.ComTypes.PENDINGTYPE)">
            <summary>
            Indicates that a message has arrived while COM is waiting to respond to a remote call.
            Handling input while waiting for an outgoing call to finish can introduce complications. The application should determine whether to process the message without interrupting the call, to continue waiting, or to cancel the operation.
            </summary>
            <param name="hTaskCallee">The thread id of the called application</param>
            <param name="dwTickCount">The number of ticks since the call was made. It is calculated from the GetTickCount function</param>
            <param name="dwPendingType">The type of call made during which a message or event was received</param>
            <returns>Message status</returns>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.MessageFilter.Current">
            <summary>
            Возвращает или задает фильтр для текущего потока.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.ProgIdProvider">
            <summary>
            Реализует провайдер COM-объекта на основе ProgId.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ProgIdProvider.#ctor(System.String,System.Boolean)">
            <summary>
            Создает объект.
            </summary>
            <param name="progId">ProgId COM-объекта</param>
            <param name="inprocessServer">Признак, что COM-объект реализован как in-process сервер</param>
            <exception cref="T:System.ArgumentException">ProgId COM-объекта не задан</exception>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.ProgIdProvider.ProgId">
            <summary>
            Возвращает ProgId COM-объекта.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ProgIdProvider.GetComType(System.Boolean)">
            <summary>
            Реализует ленивое получение управляемого типа COM-объекта.
            </summary>
            <param name="throwOnError">Признак, что нужно сгенерировать исключение, если указанный COM-объект не зарегистрирован</param>
            <returns>Управляемый тип COM-объекта или null, если указанный COM-объект не зарегистрирован</returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">Указанный COM-объект не зарегистрирован</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ProgIdProvider.TryGetRunningInstance">
            <summary>
            Возвращает рабочий экземпляр COM-объекта, глобально опубликованный в системе для доступа из других приложений. Если такого экземпляра
            COM-объекта нет, то метод вернет null.
            </summary>
            <returns>COM-объект или null</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.ProgIdProvider.IsRegistered">
            <summary>
            Возвращает признак, что COM-объект зарегистрирован.
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.Proxies.ApplicationProxyException">
            <summary>
            Базовый класс для всех исключений proxy-объектов вокруг API внешних систем и приложений.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationProxyException.#ctor(System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="message">Текст сообщения</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationProxyException.#ctor(System.String,System.Exception)">
            <summary>
            Создает объект.
            </summary>
            <param name="message">Текст сообщения</param>
            <param name="innerException">Вложенное исключение</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationProxyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Используется для десериализации исключения.
            </summary>
            <param name="info">Сериализованное представление исключения</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualState`1">
            <summary>
            Контейнер для сохраненного состояния UI приложения.
            </summary>
            <remarks>
            Реализация не является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualState`1.#ctor(System.Collections.Generic.ICollection{Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateItem{`0}})">
            <summary>
            Создает объект.
            </summary>
            <param name="stateItems">Коллекция сохраненных элементов UI</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="stateItems"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualState`1.RestoreState(`0)">
            <summary>
            Восстанавливает сохраненное состояние UI приложения.
            </summary>
            <param name="application">Объект приложения</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="application"/> содержит null</exception>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateBuilder`2">
            <summary>
            Построитель для сохраненного состояния UI приложения.
            </summary>
            <remarks>
            Реализация не является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateBuilder`2.#ctor(`1)">
            <summary>
            Создает объект.
            </summary>
            <param name="emptyFlags">Пустой набор флагов, определяющих сохраняемые элементы UI</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateBuilder`2.SaveState(`0,`1)">
            <summary>
            Сохраняет состояние UI приложения.
            </summary>
            <param name="application">Объект приложения</param>
            <param name="flags">Набор флагов, определяющих сохраняемые элементы UI</param>
            <returns>Контейнер с сохраненным состоянием</returns>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="application"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateBuilder`2.DoSaveState(`0,`1,System.Collections.Generic.List{Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateItem{`0}})">
            <summary>
            Сохраняет состояние UI приложения.
            </summary>
            <param name="application">Объект приложения</param>
            <param name="flags">Набор флагов, определяющих сохраняемые элементы UI</param>
            <param name="stateItems">Коллекция сохраненных элементов UI</param>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateItem`1">
            <summary>
            Базовый класс для элемента сохраненного состояния UI приложения.
            </summary>
            <remarks>
            Реализация не должна быть thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateItem`1.SaveState(`0)">
            <summary>
            Заполняет элемент, сохраняя текущее состояние UI приложения.
            </summary>
            <param name="application">Объект приложения</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="application"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateItem`1.DoSaveState(`0)">
            <summary>
            Заполняет элемент, сохраняя текущее состояние UI приложения.
            </summary>
            <param name="application">Объект приложения</param>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateItem`1.RestoreState(`0)">
            <summary>
            Восстанавливает элемент, используя сохраненное состояние UI приложения.
            </summary>
            <param name="application">Объект приложения</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="application"/> содержит null</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.Proxies.ApplicationVisualStateItem`1.DoRestoreState(`0)">
            <summary>
            Восстанавливает элемент, используя сохраненное состояние UI приложения.
            </summary>
            <param name="application">Объект приложения</param>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.Resources.Arg_AbsolutePathRequired">
            <summary>
              Looks up a localized string similar to Имя файла &apos;{0}&apos; должно быть задано с абсолютным путем..
            </summary>
        </member>
        <member name="P:Intermech.Runtime.ComInterop.Resources.Arg_NullOrEmptyFileName">
            <summary>
              Looks up a localized string similar to Не задано имя файла..
            </summary>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.RetryRejectedCallsFilter">
            <summary>
            Фильтр для очереди сообщений COM, позволяющий повторить последнее обращение к любому COM-объекту в случае ошибки RPC_E_CALL_REJECTED.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.RetryRejectedCallsFilter.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.RetryRejectedCallsFilter.#ctor(System.TimeSpan)">
            <summary>
            Создает объект.
            </summary>
            <param name="retryDelay">Задержка перед повторным обращением к COM-объекту</param>
            <exception cref="T:ArgumentOutOfRangeException">Параметр <paramref name="retryDelay"/> должен быть положительным числом или равен 0</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.RetryRejectedCallsFilter.RetryRejectedCall(System.IntPtr,System.Int32,Intermech.Runtime.ComInterop.ComTypes.SERVERCALL)">
            <summary>
            Provides applications with an opportunity to display a dialog box offering retry, cancel, or task-switching options.
            </summary>
            <param name="hTaskCallee">The thread id of the called application</param>
            <param name="dwTickCount">The number of elapsed ticks since the call was made</param>
            <param name="dwRejectType">Specifies either SERVERCALL_REJECTED or SERVERCALL_RETRYLATER, as returned by the object application</param>
            <returns>The number of tick before retry or -1 to cancel a call</returns>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.StgServices">
            <summary>
            Предоставляет общедоступные методы для работы со структурированными хранилищами.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.StgServices.GetStorageGuid(System.IO.FileInfo,System.IO.Stream)">
            <summary>
            Возвращает глобальный идентификатор объекта, создавшего это составное хранилище.
            </summary>
            <param name="fileInfo">Информация о файле</param>
            <param name="fileStream">Содержимое файла</param>
            <returns>Глобальный идентификатор объекта-создателя</returns>
            <exception cref="T:System.ArgumentNullException">Не задан один из аргументов метода</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Ошибка чтения хранилища</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.StgServices.GetStorageGuidEx(System.IO.FileInfo,System.IO.Stream)">
            <summary>
            Возвращает глобальный идентификатор объекта, создавшего это составное хранилище.
            </summary>
            <param name="fileInfo">Информация о файле</param>
            <param name="fileStream">Содержимое файла</param>
            <returns>Глобальный идентификатор объекта-создателя</returns>
            <exception cref="T:System.ArgumentNullException">Не задан один из аргументов метода</exception>
            <exception cref="T:System.Runtime.InteropServices.COMException">Ошибка чтения хранилища</exception>
        </member>
        <member name="T:Intermech.Runtime.ComInterop.TypeLibServices">
            <summary>
            Содержит сервисы для работы с библиотеками типов.
            </summary>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.TypeLibServices.ReadLibraryAttributes(System.String)">
            <summary>
            Читает заголовок библиотеки типов.
            </summary>
            <param name="fullPath">Абсолютный путь к файлу библиотеки</param>
            <returns>Заголовок библиотеки</returns>
            <exception cref="T:System.ArgumentException">Не задан путь к файлу библиотеки, либо путь к файлу не является абсолютным</exception>
            <exception cref="T:System.Runtime.Interop.COMException">При чтении файла библиотеки произошла ошибка</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.TypeLibServices.GetRegisteredPath(System.Guid,System.Int16,System.Int16)">
            <summary>
            Возвращает путь к зарегистрированной библиотеке типов.
            </summary>
            <param name="typeLibId">Глобальный идентификатор библиотеки типов</param>
            <param name="major">Старший номер версии библиотеки типов</param>
            <param name="minor">Младший номер версии библиотеки типов</param>
            <returns>Путь к библиотеке типов или null, если такая библиотека не зарегистрирована</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.TypeLibServices.IsRegistered(System.Guid,System.Int16,System.Int16)">
            <summary>
            Позволяет проверить, зарегистрирована ли требуемая библиотека типов.
            </summary>
            <param name="typeLibId">Глобальный идентификатор библиотеки типов</param>
            <param name="major">Старший номер версии библиотеки типов</param>
            <param name="minor">Младший номер версии библиотеки типов</param>
            <returns>true, если требуемая библиотека типов зарегистрирована</returns>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.TypeLibServices.RegisterLibrary(System.String)">
            <summary>
            Выполняет регистрацию библиотеки типов.
            </summary>
            <param name="fullPath">Абсолютный путь к файлу библиотеки</param>
            <returns>Заголовок библиотеки</returns>
            <exception cref="T:System.ArgumentException">Не задан путь к файлу библиотеки, либо путь к файлу не является абсолютным</exception>
            <exception cref="T:System.Runtime.Interop.COMException">При регистрации библиотеки произошла ошибка</exception>
        </member>
        <member name="M:Intermech.Runtime.ComInterop.TypeLibServices.UnregisterLibrary(System.String)">
            <summary>
            Отменяет регистрацию библиотеки типов.
            </summary>
            <param name="fullPath">Абсолютный путь к файлу библиотеки</param>
            <returns>Заголовок библиотеки</returns>
            <exception cref="T:System.ArgumentException">Не задан путь к файлу библиотеки, либо путь к файлу не является абсолютным</exception>
            <exception cref="T:System.Runtime.Interop.COMException">При отмене регистрации библиотеки произошла ошибка</exception>
        </member>
        <member name="T:Intermech.Settings.IniFile">
            <summary>Класс для работы с Ini-файлами</summary>
        </member>
        <member name="M:Intermech.Threading.DedicatedThreadTask.SetAbortedState">
            <summary>
            Помечает, что задание отменено. Метод ни в коем случае не должен бросать исключений.
            </summary>
            <returns>Признак успешного изменения состояния</returns>
        </member>
        <member name="M:Intermech.Threading.DedicatedThreadTask.SetCompletedState">
            <summary>
            Помечает, что задание выполнено. Метод ни в коем случае не должен бросать исключений.
            </summary>
            <returns>Признак успешного изменения состояния</returns>
        </member>
        <member name="T:Intermech.UI.Winforms.CodeBehaviors.AutoCloseBehavior">
            <summary>
            Объект-поведение, обеспечивающий закрытие окна в соответствии с поведением модели вида.
            Модель вида должна поддерживать интерфейс <see cref="T:Intermech.UI.ICloseableViewModel"/>
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.CodeBehaviors.AutoCloseBehavior.#ctor(System.Windows.Forms.Form,System.ComponentModel.INotifyPropertyChanged)">
            <summary>
            Создает объект.
            </summary>
            <param name="form">Окно</param>
            <param name="viewModel">Модель вида</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="form"/> содержит null; параметр <paramref name="viewModel"/> содержит null</exception>
        </member>
        <member name="M:Intermech.UI.Winforms.CodeBehaviors.AutoCloseBehavior.DoAttach">
            <summary>
            Подключает текущий объект.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.CodeBehaviors.AutoCloseBehavior.DoDetach">
            <summary>
            Отключает текущий объект.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.ControlExtension.GetControlStyle(System.Windows.Forms.Control,System.Windows.Forms.ControlStyles)">
            <summary>
            Проверка поддержки контролом стиля 
            </summary>
            <param name="control"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.UI.Winforms.CustomMessageBox">
            <summary>
            Отображает MessageBox с полностью настраиваемым набором кнопок.
            Вид окна максимально приближен к системному, размер и положение элементов окна
            автоматически подстраивается под текст и количество кнопок.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.CustomMessageBox.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBox.Caption">
            <summary>
            Возвращает или задает заголовок сообщения.
            </summary>
            <exception cref="T:System.ArgumentNullException">Значение свойства равно null</exception>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBox.Text">
            <summary>
            Возвращает или задает текст сообщения.
            </summary>
            <exception cref="T:System.ArgumentNullException">Значение свойства равно null</exception>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBox.Icon">
            <summary>
            Возвращает или задает стандартную иконку для окна сообщения.
            Значение свойства используется только в том случае, если свойство <see cref="P:Intermech.UI.Winforms.CustomMessageBox.CustomIcon"/> не задано.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBox.CustomIcon">
            <summary>
            Возвращает или задает нестандартную иконку для окна сообщения.
            Значение этого свойства имеет приоритет перед свойством <see cref="P:Intermech.UI.Winforms.CustomMessageBox.Icon"/>.
            Если значение задано, то используется это свойство, а не <see cref="P:Intermech.UI.Winforms.CustomMessageBox.Icon"/>.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBox.Buttons">
            <summary>
            Возвращает коллекцию кнопок для окна сообщения.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.CustomMessageBox.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
            Показывает сообщение и возвращает выбор пользователя.
            </summary>
            <param name="owner">Родительское окно. Значение параметра может быть не задано и равно null</param>
            <returns>Выбор пользователя. В качестве возвращаемого значения используется значение свойства 
            <see cref="P:Intermech.UI.Winforms.CustomMessageBoxButton.CustomDialogResult"/> или <see cref="P:Intermech.UI.Winforms.CustomMessageBoxButton.DialogResult"/>
            </returns>
        </member>
        <member name="T:Intermech.UI.Winforms.CustomMessageBoxButton">
            <summary>
            Описывает кнопку настраиваемого MessageBox.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.CustomMessageBoxButton.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBoxButton.Text">
            <summary>
            Возвращает или задает текст кнопки.
            </summary>
            <exception cref="T:System.ArgumentNullException">Значение свойства равно null</exception>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBoxButton.IsDefaultButton">
            <summary>
            Возвращает или задает флаг кнопки по умолчанию.
            Такая кнопка используется при нажатии клавиши ENTER в диалоговом окне.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBoxButton.IsCancelButton">
            <summary>
            Возвращает или задает флаг кнопки отмены по умолчанию.
            Такая кнопка используется при нажатии клавиши ESCAPE в диалоговом окне.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBoxButton.DialogResult">
            <summary>
            Возвращает или задает результат работы диалогового окна.
            Значение свойства используется только в том случае, если свойство <see cref="P:Intermech.UI.Winforms.CustomMessageBoxButton.CustomDialogResult"/> не задано.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.CustomMessageBoxButton.CustomDialogResult">
            <summary>
            Возвращает или задает нестандартный результат работы диалогового окна.
            Значение этого свойства имеет приоритет перед свойством <see cref="P:Intermech.UI.Winforms.CustomMessageBoxButton.DialogResult"/>.
            Если значение задано, то используется это свойство, а не <see cref="P:Intermech.UI.Winforms.CustomMessageBoxButton.DialogResult"/>.
            </summary>
        </member>
        <member name="T:Intermech.UI.Winforms.CustomMessageBoxWindow">
            <summary>
            Окно для пользовательского MessageBox с полностью настраиваемым набором кнопок.
            Вид окна максимально приближен к системному, размер и положение элементов окна
            автоматически подстраивается под текст и количество кнопок.
            Содержимое окна создается динамически с помощью объекта типа <see cref="T:Intermech.UI.Winforms.CustomMessageBox"/>.
            </summary>
            <remarks>
            Для автоматической подстройки под динамическое содержимое используется макет окна на
            основе компонентов FlowLayoutPanel и TableLayoutPanel.
            </remarks>
        </member>
        <member name="M:Intermech.UI.Winforms.CustomMessageBoxWindow.#ctor">
            <summary>
            Создает объект.
            </summary>
        </member>
        <member name="F:Intermech.UI.Winforms.CustomMessageBoxWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.CustomMessageBoxWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.UI.Winforms.CustomMessageBoxWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.UI.Winforms.DesignerServices">
            <summary>
            Вспомогательные сервисы и утилиты для дизайнера Winforms.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.DesignerServices.IsInDesignMode(System.ComponentModel.Component,System.Boolean)">
            <summary>
            Позволяет определить, находится ли указанный компонент в DesignTime.
            Этот метод призван решить проблему неработоспособности существующего свойства 
            DesignMode у компонентов, если обращение к этому свойству выполняется из 
            конструктора компонента.
            </summary>
            <param name="component">Объект компонента</param>
            <param name="calledFromConstructor">Признак, что текущий метод вызван из конструктора компонента</param>
            <returns>Признак, что компонент находится в DesignTime</returns>
        </member>
        <member name="M:Intermech.UI.Winforms.DesignerServices.IsDesignerHosted(System.Windows.Forms.Control)">
            <summary>
            Контрол или его родители находятся в DesignMode
            <remarks>
            Для вложенных контролов свойство DesignMode не всегда актуально.
            Родительская форма может быть в DesignMode, а многоуровневые вложенные дочерние контролы нет.
            При этом обращение к сервисам и БД нельзя использовать.
            IsDesignerHosted проверяет режим DesignMode в общем, а не только конкретное состояние контрола
            </remarks>
            </summary>
        </member>
        <member name="T:Intermech.UI.Winforms.HighDPIServices">
            <summary>
            Утилиты поддержки High DPI мониторов
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.HighDPIServices.EnableHighDPIMode">
            <summary>
            Включает поддержку High DPI мониторов для текущего процесса.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.ICustomMessageBoxData.Caption">
            <summary>
            Возвращает заголовок сообщения.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.ICustomMessageBoxData.Text">
            <summary>
            Возвращает текст сообщения.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.ICustomMessageBoxData.Icon">
            <summary>
            Возвращает стандартную иконку для окна сообщения.
            Значение свойства используется только в том случае, если свойство <see cref="P:Intermech.UI.Winforms.ICustomMessageBoxData.CustomIcon"/> не задано.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.ICustomMessageBoxData.CustomIcon">
            <summary>
            Возвращает нестандартную иконку для окна сообщения.
            Значение этого свойства имеет приоритет перед свойством <see cref="P:Intermech.UI.Winforms.ICustomMessageBoxData.Icon"/>.
            Если значение задано, то используется это свойство, а не <see cref="P:Intermech.UI.Winforms.ICustomMessageBoxData.Icon"/>.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.ICustomMessageBoxData.Buttons">
            <summary>
            Возвращает коллекцию кнопок для окна сообщения.
            </summary>
        </member>
        <member name="T:Intermech.UI.Winforms.IWizard">
            <summary>
            Интерфейс мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.IWizard.Pages">
            <summary>
            Возвращате коллекцию страниц мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.IWizard.ActivePage">
            <summary>
            Возвращает активную страницу в мастере.
            </summary>
        </member>
        <member name="T:Intermech.UI.Winforms.IWizardPage">
            <summary>
            Позволяет реализовать страницу мастера.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.IWizardPage.Activate(Intermech.UI.Winforms.IWizardPage,System.Boolean)">
            <summary>
            Вызвается при переходе на страницу мастера.
            </summary>
            <param name="prevPage">Предыдущая страница мастера. Может быть null, если эта страница - первая</param>
            <param name="rollback">True, если передвижение осуществляется по кнопке "Назад"</param>
        </member>
        <member name="M:Intermech.UI.Winforms.IWizardPage.Deactivate(Intermech.UI.Winforms.IWizardPage,System.Boolean)">
            <summary>
            Вызывает при переходе на другую страницу мастера.
            </summary>
            <param name="nextPage">Следующая страница мастера. Может быть null, если эта страница - последняя</param>
            <param name="rollback">True, если передвижение осуществляется по кнопке "Назад"</param>
        </member>
        <member name="P:Intermech.UI.Winforms.IWizardPage.ReallyComplete">
            <summary>
            Возвращает true, если работа пользователя с этой страницей действительно может быть закончена.
            Вызывается при нажатии пользователем кнопки "Вперед/Готово".
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.IWizardPage.DoMagic">
            <summary>
            Позволяет сохранить/обработать результаты работы страницы мастера. Вызывается при нажатии 
            пользователем кнопки "Вперед/Готово" до смены страниц мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.IWizardPage.Control">
            <summary>
            Возвращает визуальный элемент управления, реализующий страницу мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.IWizardPage.Wizard">
            <summary>
            Возвращает или устанавливает мастер, к которому относится эта страница.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.IWizardPage.Name">
            <summary>
            Возвращает имя страницы.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.IWizardPage.Caption">
            <summary>
            Возвращает название страницы мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.IWizardPage.Description">
            <summary>
            Возвращает описание страницы мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.IWizardPage.Image">
            <summary>
            Возвращает иконку страницы мастера.
            </summary>
        </member>
        <member name="E:Intermech.UI.Winforms.IWizardPage.PageComplete">
            <summary>
            Событие, когда пользователь ввел все необходимые данные на этой странице и может
            перейти к следующей странице мастера. По этому событию мастер включает и выключает
            кнопку "Далее/Готово".
            </summary>
        </member>
        <member name="F:Intermech.UI.Winforms.MasterSlavePercentageProgressView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.MasterSlavePercentageProgressView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.UI.Winforms.MasterSlavePercentageProgressView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.UI.Winforms.PageCompleteEventArgs">
            <summary>
            Описывает аргументы события о том, что пользователь ввел все необходимые данные на странице мастера
            и может перейти к следующей странице.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.PageCompleteEventArgs.#ctor(System.Boolean)">
            <summary>
            Создает объект.
            </summary>
            <param name="isComplete">Признак законченности страницы</param>
        </member>
        <member name="P:Intermech.UI.Winforms.PageCompleteEventArgs.IsComplete">
            <summary>
            Возвращает true, если страница действительно закончена и ее можно сменить.
            </summary>
        </member>
        <member name="F:Intermech.UI.Winforms.PercentageProgressView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.PercentageProgressView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.UI.Winforms.PercentageProgressView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.ProgressBarToPercentageProgressSinkAdapter.IsCancelled">
            <summary>
            Возвращает признак прерывания выполнения текущего процесса. Процесс должен периодически проверять значение этого свойства.
            Если значение свойства стало равно true, то процесс должен прервать свое выполнение.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.ProgressBarToPercentageProgressSinkAdapter.DoSetState(System.String)">
            <summary>
            Сообщает текущее состояние процесса.
            </summary>
            <param name="text">Описание текущего состояния процесса или выполняемой операции</param>
        </member>
        <member name="M:Intermech.UI.Winforms.ProgressBarToPercentageProgressSinkAdapter.DoSetProgress(System.Double)">
            <summary>
            Сообщает процент готовности процесса. Новое новое значение процента должно быть больше текущего значения. 
            </summary>
            <param name="percentValue">Процент готовности процесса в диапазоне от 0 до 100</param>
        </member>
        <member name="T:Intermech.UI.Winforms.ProgressSinkDialogService">
            <summary>
            Сервис для выполнения процессов с отображением хода выполнения в диалоговом окне.
            Для создания диалоговых окон используется технология Windows Forms.
            WARNING: методы Invoke теперь (с 8ой версии) не отображает сразу сам диалог, 
            для его отображения надо вызвать SetState/SetProgress у IPercentageProgressSink 
            </summary>
            <remarks>
            Реализация сервиса является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.UI.Winforms.ProgressSinkDialogService.Invoke(System.String,Intermech.UI.ProgressSinkDialogFlags,System.Action{Intermech.UI.IPercentageProgressSink})">
            <summary>
            Позволяет выполнить указанный процесс с отображением хода его выполнения в диалоговом окне.
            </summary>
            <param name="dialogCaption">Заголовок окна</param>
            <param name="dialogFlags">Флаги, управляющие поведением окна</param>
            <param name="processAction">Выполняемый процесс</param>
            <exception cref="T:ArgumentNullException">Параметры <paramref name="dialogCaption"/>, <paramref name="processAction"/> не должны быть равны null</exception>
        </member>
        <member name="M:Intermech.UI.Winforms.ProgressSinkDialogService.Invoke``1(System.String,Intermech.UI.ProgressSinkDialogFlags,System.Func{Intermech.UI.IPercentageProgressSink,``0})">
            <summary>
            Позволяет выполнить указанный процесс с отображением хода его выполнения в диалоговом окне.
            </summary>
            <typeparam name="TResult">Тип результата выполнения процесса</typeparam>
            <param name="dialogCaption">Заголовок окна</param>
            <param name="dialogFlags">Флаги, управляющие поведением окна</param>
            <param name="processAction">Выполняемый процесс</param>
            <returns>Результат выполнения процесса</returns>
            <exception cref="T:ArgumentNullException">Параметры <paramref name="dialogCaption"/>, <paramref name="processAction"/> не должны быть равны null</exception>
        </member>
        <member name="M:Intermech.UI.Winforms.ProgressSinkDialogService.Invoke(System.String,Intermech.UI.ProgressSinkDialogFlags,System.Action{Intermech.UI.IMasterSlaveProgressSink})">
            <summary>
            Позволяет выполнить указанный процесс с отображением хода его выполнения в диалоговом окне.
            </summary>
            <param name="dialogCaption">Заголовок окна</param>
            <param name="dialogFlags">Флаги, управляющие поведением окна</param>
            <param name="processAction">Выполняемый процесс</param>
            <exception cref="T:ArgumentNullException">Параметры <paramref name="dialogCaption"/>, <paramref name="processAction"/> не должны быть равны null</exception>
        </member>
        <member name="M:Intermech.UI.Winforms.ProgressSinkDialogService.Invoke``1(System.String,Intermech.UI.ProgressSinkDialogFlags,System.Func{Intermech.UI.IMasterSlaveProgressSink,``0})">
            <summary>
            Позволяет выполнить указанный процесс с отображением хода его выполнения в диалоговом окне.
            </summary>
            <typeparam name="TResult">Тип результата выполнения процесса</typeparam>
            <param name="dialogCaption">Заголовок окна</param>
            <param name="dialogFlags">Флаги, управляющие поведением окна</param>
            <param name="processAction">Выполняемый процесс</param>
            <returns>Результат выполнения процесса</returns>
            <exception cref="T:ArgumentNullException">Параметры <paramref name="dialogCaption"/>, <paramref name="processAction"/> не должны быть равны null</exception>
        </member>
        <member name="T:Intermech.UI.Winforms.ProposedPage">
            <summary>
            Описывает результат выбора страницы мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.ProposedPage.Page">
            <summary>
            Возвращает выбранную страницу мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.ProposedPage.FirstPage">
            <summary>
            Возвращает true, если это первая страница мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.ProposedPage.FinishPage">
            <summary>
            Возвращает true, если это последняя страница мастера.
            </summary>
        </member>
        <member name="F:Intermech.UI.Winforms.IconSize.Large">
            <summary>
            Retrieve the large version of the icon, as specified by the <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXICON"/> and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYICON"/> system metrics.
            </summary>
        </member>
        <member name="F:Intermech.UI.Winforms.IconSize.Small">
            <summary>
            Retrieve the small version of the icon, as specified by the <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXSMICON"/> and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYSMICON"/> system metrics.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.UIDispatcherService.FromCurrentUIThread">
            <summary>
            Создает сервис диспетчера UI-потока, используя текущий поток, который должен быть UI-потоком приложения System.Windows.Forms.
            </summary>
            <returns>Объект сервиса</returns>
            <exception cref="T:InvalidOperationException">Текущий поток не является UI-потоком System.Windows.Forms</exception>
        </member>
        <member name="T:Intermech.UI.Winforms.UIExceptionHandler">
            <summary>
            Позволяет перехватить все необработанные исключения в UI-потоке приложения и отобразить/записать их с помощью указанного обработчика.
            Реализация класса не является thread safe.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.UIExceptionHandler.#ctor(System.Action{System.Exception})">
            <summary>
            Создает объект.
            </summary>
            <param name="exceptionHandler">Обработчик исключений UI-потока приложения</param>
            <exception cref="T:ArgumentNullException">Параметр <paramref name="exceptionHandler"/> не должен быть равен null</exception>
        </member>
        <member name="M:Intermech.UI.Winforms.UIExceptionHandler.Activate">
            <summary>
            Активирует обработчик.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.UIExceptionHandler.Deactivate">
            <summary>
            Деактивирует обработчик.
            </summary>
        </member>
        <member name="T:Intermech.UI.Winforms.WizardForm">
            <summary>
            Реализует базу для создания мастеров в виде диалогового окна.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.WizardForm.#ctor">
            <summary>
            Создает мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.WizardForm.DefaultPageImage">
            <summary>
            Возвращает или устанавливает изображение для страниц мастера, используемое в том случае,
            если страница не имеет своего изображения.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.WizardForm.GetFirstPage">
            <summary>
            Возвращает страницу, с которой начинается работа мастера.
            </summary>
            <returns>Страница мастера</returns>
        </member>
        <member name="M:Intermech.UI.Winforms.WizardForm.GetPreviousPage">
            <summary>
            Возвращает предыдущую страницу по отношению к текущей.
            </summary>
            <returns>Страница мастера</returns>
        </member>
        <member name="M:Intermech.UI.Winforms.WizardForm.GetNextPage">
            <summary>
            Возвращает следующую страницу по отношению к текущей.
            </summary>
            <returns>Страница мастера</returns>
        </member>
        <member name="M:Intermech.UI.Winforms.WizardForm.ChangePage(Intermech.UI.Winforms.ProposedPage,System.Boolean)">
            <summary>
            Выполняет переключение страниц мастера.
            </summary>
            <param name="proposed">Новая страница, на которую выполняется переключение</param>
            <param name="rollback">True, если передвижение осуществляется по кнопке "Назад"</param>
        </member>
        <member name="M:Intermech.UI.Winforms.WizardForm.NewBadMethodException(System.String,System.String)">
            <summary>
            Формирует и возвращает исключение, которое можно использовать при неправильной реализации методов
            этого класса в его наследниках.
            </summary>
            <param name="what">Описание произошедшего</param>
            <param name="method">В каком методе случилась неприятность</param>
            <returns>Исключительная ситуация</returns>
        </member>
        <member name="P:Intermech.UI.Winforms.WizardForm.Pages">
            <summary>
            Возвращате коллекцию страниц мастера.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.WizardForm.ActivePage">
            <summary>
            Возвращает активную страницу в мастере.
            </summary>
        </member>
        <member name="P:Intermech.UI.Winforms.WizardForm.ShowHeaderPanel">
            <summary>
            Отображение панели с заголовком
            </summary>
        </member>
        <member name="F:Intermech.UI.Winforms.WizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Intermech.UI.Winforms.WizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Intermech.UI.Winforms.WizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Intermech.Win32.ForegroundWindowHelper">
            <summary>
            Вспомогательный объект для установки окна переднего плана. Реализация является thread safe.
            </summary>
            <remarks>
            В Win32 API для изменения окна переднего плана предназначена функция SetForegroundWindow, которая имеет очень много ограничений.
            Поэтому в этом классе для гарантированного изменения окна используются недокументированные возможности операционной системы.
            </remarks>
        </member>
        <member name="P:Intermech.Win32.ForegroundWindowHelper.ErrorLogger">
            <summary>
            Возвращает или задает объект для журналирования ошибок.
            По умолчанию свойство не задано.
            </summary>
        </member>
        <member name="M:Intermech.Win32.ForegroundWindowHelper.AllowActionToComObject(System.Object)">
            <summary>
            Передает привилегии на однократное изменение окна переднего плана процессу-серверу указанного COM-объекта.
            </summary>
            <param name="comObject">COM-объект, чьему процессу будут переданы привилегии</param>
            <returns>Признак, что передача привилегий успешно выполнена</returns>
            <exception cref="T:ArgumentNullException">Параметр <paramref name="comObject"/> не должен быть равен null</exception>
        </member>
        <member name="M:Intermech.Win32.ForegroundWindowHelper.AllowActionToProcess(System.Int32)">
            <summary>
            Передает привилегии на однократное изменение окна переднего плана указанному процессу.
            </summary>
            <param name="processId">Идентификатор процесса</param>
            <returns>Признак, что передача привилегий успешно выполнена</returns>
            <exception cref="T:ArgumentOutOfRangeException">Параметр <paramref name="processId"/> должен быть положительным числом или равен 0</exception>
        </member>
        <member name="M:Intermech.Win32.ForegroundWindowHelper.AllowActionToAnyProcess">
            <summary>
            Передает привилегии на однократное изменение окна переднего плана любому из выполняющихся процессов.
            </summary>
            <param name="processId">Идентификатор процесса</param>
            <returns>Признак, что передача привилегий успешно выполнена</returns>
        </member>
        <member name="M:Intermech.Win32.ForegroundWindowHelper.TryGetWindowHandle">
            <summary>
            Возвращает дескриптор окна переднего плана.
            </summary>
            <returns>Дескриптор окна переднего плана или IntPtr.Zero, если такое окно отсутствует</returns>
        </member>
        <member name="M:Intermech.Win32.ForegroundWindowHelper.TrySetWindow(System.IntPtr)">
            <summary>
            Устанавливает окно переднего плана.
            </summary>
            <param name="windowHandle">Дескриптор окна</param>
            <returns>Признак успешного изменения окна переднего плана</returns>
        </member>
        <member name="P:Intermech.Win32.ForegroundWindowHelper.Default">
            <summary>
            Возвращает экземпляр объекта, используемый по умолчанию.
            </summary>
        </member>
        <member name="P:Intermech.Win32.RegistryBuilder.DefaultValueName">
            <summary>
            Возвращает специальное имя для значения раздела по умолчанию.
            </summary>
        </member>
        <member name="F:Intermech.Win32.RegistryHelper.RegistryKeyCadPath">
            <summary>
            Наименование раздела реестра где храним все данные для интеграторов с CAD-системами
            </summary>
        </member>
        <member name="M:Intermech.Win32.RegistryHelper.GetAppExePathRegistryKey(System.String,System.Boolean)">
            <summary>
            Возвращает ключ реестра в котором хранится путь к exe интегрируемого приложения
            </summary>
            <param name="create">Если ключ отсутствует - создать его</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Win32.RegistryKeyLocation">
            <summary>
            Описывает путь к разделу реестра с учетом виртуализации доступа к реестру в современных версиях Windows.
            </summary>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.#ctor(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)">
            <summary>
            Создает объект.
            </summary>
            <param name="hive">Ветвь реестра</param>
            <param name="keyPath">Путь к разделу в ветви реестра. Может быть пустым, если путь указывает на корень ветви реестра</param>
            <param name="view">Виртуализованный вид реестра</param>
            <exception cref="T:System.ArgumentNullException">keyPath</exception>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.#ctor(Microsoft.Win32.RegistryHive,System.String)">
            <summary>
            Создает объект, используя вид реестра по умолчанию.
            </summary>
            <param name="hive">Ветвь реестра</param>
            <param name="keyPath">Путь к разделу в ветви реестра. Может быть пустым, если путь указывает на корень ветви реестра</param>
            <exception cref="T:System.ArgumentNullException">keyPath</exception>
        </member>
        <member name="P:Intermech.Win32.RegistryKeyLocation.Hive">
            <summary>
            Возвращает идентификатор ветви реестра.
            </summary>
        </member>
        <member name="P:Intermech.Win32.RegistryKeyLocation.KeyPath">
            <summary>
            Возвращает путь к разделу в ветви реестра. Значение свойства может быть пусто, если путь указывает на корень ветви реестра.
            </summary>
        </member>
        <member name="P:Intermech.Win32.RegistryKeyLocation.View">
            <summary>
            Возвращает виртуализованный вид реестра.
            </summary>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.GetHashCode">
            <summary>
            Вычисляет хэш-код объекта.
            </summary>
            <returns>Хэш-код объекта</returns>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.Equals(System.Object)">
            <summary>
            Проверяет эквивалентность текущего объекта и указанного.
            </summary>
            <param name="obj">Другой объект для сравнения</param>
            <returns>true - если объекты эквивалентны, иначе - false</returns>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.Equals(Intermech.Win32.RegistryKeyLocation)">
            <summary>
            Проверяет эквивалентность текущего объекта и указанного.
            </summary>
            <param name="other">Другой объект для сравнения</param>
            <returns>true - если объекты эквивалентны, иначе - false</returns>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.ToString">
            <summary>
            Возвращает текстовое представление объекта.
            </summary>
            <returns>Текстовое представление объекта</returns>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.GetDifferentView(Microsoft.Win32.RegistryView)">
            <summary>
            Создает и возвращает клон текущего объекта с другим видом реестра.
            </summary>
            <param name="newView">Новый виртуализованный вид реестра</param>
            <returns>Путь к разделу реестра</returns>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.GetParent">
            <summary>
            Возвращает путь к родительскому разделу.
            </summary>
            <returns>Путь к родительскому разделу</returns>
            <exception cref="T:Intermech.Win32.RegistryException">У данного раздела нет родителя, так как это раздел верхнего уровня</exception>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.Split">
            <summary>
            Разделяет путь к текущему разделу на путь к родительскому разделу и имя дочернего подраздела.
            </summary>
            <returns>Путь к родительскому разделу и имя дочернего подраздела</returns>
            <exception cref="T:Intermech.Win32.RegistryException">У данного раздела нет родителя, так как это раздел верхнего уровня</exception>
        </member>
        <member name="M:Intermech.Win32.RegistryKeyLocation.Join(System.String)">
            <summary>
            Вычисляет и возвращает путь к дочернему разделу.
            </summary>
            <param name="subKey">Имя дочернего раздела</param>
            <returns>Путь к дочернему разделу</returns>
            <exception cref="T:System.ArgumentException">Не задано имя дочернего раздела</exception>
        </member>
        <member name="T:Intermech.Win32.WindowsPrivilege">
            <summary>
            Класс для получения системных привилегий, необходимых для выполнения административных задач.
            </summary>
            <remarks>
            В сборке mscorlib уже существует встроенный закрытый класс System.Security.AccessControl.Privilege, реализующий требуемый функционал.
            Этот класс является открытой оберткой для встроенного класса. Для реализации используется Reflection.
            </remarks>
        </member>
        <member name="M:Intermech.Win32.WindowsPrivilege.#ctor(System.String)">
            <summary>
            Создает объект.
            </summary>
            <param name="name">Имя привилегии</param>
            <exception cref="T:ArgumentNullException">name</exception>
        </member>
        <member name="P:Intermech.Win32.WindowsPrivilege.Name">
            <summary>
            Возвращает имя привилегии.
            </summary>
        </member>
        <member name="M:Intermech.Win32.WindowsPrivilege.Enable">
            <summary>
            Получает привилегию, если она еще не была получена.
            </summary>
            <exception cref="T:InvalidOperationException">Привилегия уже была получена</exception>
        </member>
        <member name="M:Intermech.Win32.WindowsPrivilege.Revert">
            <summary>
            Восстанавливает исходное состояние владения привилегией.
            </summary>
        </member>
        <member name="M:Intermech.Win32.WindowsPrivilege.Dispose">
            <summary>
            Выполняет детерминированное освобождение управляемых и неуправляемых ресурсов.
            </summary>
        </member>
        <member name="P:Intermech.Win32.WindowsPrivilege.IsDisposed">
            <summary>
            Признак, что использование текущего объекта было завершено, а все ресурсы - возвращены системе.
            Дальнейшие обращения к этому объекту будут приводить к появлению исключения <see cref="T:ObjectDisposedException"/>.
            </summary>
        </member>
        <member name="T:Intermech.WindowsDll.Interop.RECT">
            <summary>Structure, that defines the coordinates of the upper-left and lower-right corners of a rectangle</summary>
        </member>
        <member name="T:Intermech.WindowsDll.Interop.POINT">
            <summary>The POINT structure defines the x- and y- coordinates of a point</summary>
        </member>
        <member name="T:Intermech.WindowsDll.Interop.SIZE">
            <summary>The SIZE structure defines width and height</summary>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.GlobalLock_ThrowWinErrors(System.IntPtr)">
            <summary>Вызов WinAPI <see cref="M:Intermech.WindowsDll.Kernel32.GlobalLock(System.IntPtr)"/> с обработкой возвращаемых ошибок, включая <seealso cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></summary>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.GlobalUnlock(System.IntPtr)">
            <summary>
            См. описание https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-globalunlock
             если GlobalUnlock вернул true это значит всё ок, память разблокирована
             если GlobalUnlock вернул false это значит, что память не разблокирована
                и это произошло либо по причине ошибки (GetLastError вернёт код ошибки)
                либо по причине того, что счётчик блокировок ещё не обнулился (GetLastError вернёт 0)
            </summary>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.GlobalUnlock_ThrowWinErrors(System.IntPtr)">
            <summary>Вызов WinAPI <see cref="M:Intermech.WindowsDll.Kernel32.GlobalUnlock(System.IntPtr)"/> с обработкой возвращаемых ошибок, включая <seealso cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></summary>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.GlobalFree_ThrowWinErrors(System.IntPtr)">
            <summary>Вызов WinAPI <see cref="M:Intermech.WindowsDll.Kernel32.GlobalFree(System.IntPtr)"/> с обработкой возвращаемых ошибок, включая <seealso cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></summary>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.GetCurrentThreadId">
            <summary>Retrieves the thread identifier of the calling thread</summary>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.LocalFree_ThrowWinErrors(System.IntPtr)">
            <summary>Вызов WinAPI <see cref="M:Intermech.WindowsDll.Kernel32.LocalFree(System.IntPtr)"/> с обработкой возвращаемых ошибок, включая <seealso cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></summary>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.OpenProcess_ThrowWinErrors(Intermech.WindowsDll.ProcessAccessFlags,System.Boolean,System.Int32)">
            <summary>Вызов WinAPI <see cref="M:Intermech.WindowsDll.Kernel32.OpenProcess(Intermech.WindowsDll.ProcessAccessFlags,System.Boolean,System.Int32)"/> с обработкой возвращаемых ошибок, включая <seealso cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></summary>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.CloseHandle_ThrowWinErrors(System.IntPtr)">
            <summary>Вызов WinAPI <see cref="M:Intermech.WindowsDll.Kernel32.CloseHandle(System.IntPtr)"/> с обработкой возвращаемых ошибок, включая <seealso cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></summary>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.WritePrivateProfileString(System.String,System.String,System.String,System.String)">
            <summary>Copies a string into the specified section of an initialization file</summary>
            <param name="section">
            The name of the section to which the string will be copied.
            If the section does not exist, it is created.
            The name of the section is case-independent; the string can be any combination of uppercase and lowercase letters.
            </param>
            <param name="key">
            The name of the key to be associated with a string.
            If the key does not exist in the specified section, it is created.
            If this parameter is NULL, the entire section, including all entries within the section, is deleted.
            </param>
            <param name="value">String to be written to the file. If this parameter is NULL, the key pointed to by the lpKeyName parameter is deleted</param>
            <param name="filePath">The name of the initialization file</param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.WritePrivateProfileString_ThrowWinErrors(System.String,System.String,System.String,System.String)">
            <summary>Copies a string into the specified section of an initialization file</summary>
            <param name="section">
            The name of the section to which the string will be copied.
            If the section does not exist, it is created.
            The name of the section is case-independent; the string can be any combination of uppercase and lowercase letters.
            </param>
            <param name="key">
            The name of the key to be associated with a string.
            If the key does not exist in the specified section, it is created.
            If this parameter is NULL, the entire section, including all entries within the section, is deleted.
            </param>
            <param name="value">String to be written to the file. If this parameter is NULL, the key pointed to by the lpKeyName parameter is deleted</param>
            <param name="filePath">The name of the initialization file</param>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)">
             <summary>Retrieves a string from the specified section in an initialization file</summary>
             <param name="section">
             The name of the section containing the key name.
             If this parameter is NULL, the GetPrivateProfileString function copies all section names in the file to the supplied buffer.
             </param>
             <param name="key">
             The name of the key whose associated string is to be retrieved.
             If this parameter is NULL, all key names in the section specified by the lpAppName parameter are copied
             to the buffer specified by the <see cref="!:retVal"/> parameter.
             </param>
             <param name="defaultValue">
             A default string.
             If the lpKeyName key cannot be found in the initialization file, method copies the default string to the <see cref="!:retVal"/> buffer.
             If this parameter is NULL, the default is an empty string, "".
             Avoid specifying a default string with trailing blank characters. The function inserts a null character
             in the <see cref="!:retVal"/> buffer to strip any trailing blanks.
             </param>
             <param name="retVal">Buffer that receives the retrieved string</param>
             <param name="size">The size of the buffer pointed to by the <see cref="!:retVal"/> parameter, in characters.</param>
             <param name="filePath">
             The name of the initialization file.
             If this parameter does not contain a full path to the file, the system searches for the file in the Windows directory.
             </param>
             <returns>
             Number of characters copied to the buffer, not including the terminating null character.
             
             If neither <see cref="!:section"/> nor <see cref="!:key"/> is NULL and the supplied destination buffer is too small
             to hold the requested string, the string is truncated and followed by a null character,
             and the return value is equal to <see cref="!:size"/> minus one.
             
             If either lpAppName or <see cref="!:key"/> is NULL and the supplied destination buffer is too small to hold all the strings,
             the last string is truncated and followed by two null characters. In this case, the return value is equal to <see cref="!:size"/> minus two.
            
             In the event the initialization file specified by <see cref="!:filePath"/> is not found, or contains invalid values,
             calling <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/> will return '0x2' (File Not Found).
             To retrieve extended error information, call GetLastError.
             </returns>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.GetPrivateProfileString_ThrowWinErrors(System.String,System.String,System.String,System.String,System.Int32)">
             <summary>Retrieves a string from the specified section in an initialization file</summary>
             <param name="section">
             The name of the section containing the key name.
             If this parameter is NULL, the GetPrivateProfileString function copies all section names in the file to the supplied buffer.
             </param>
             <param name="key">
             The name of the key whose associated string is to be retrieved.
             If this parameter is NULL, all key names in the section specified by the lpAppName parameter are copied
             to the buffer specified by the <see cref="!:retVal"/> parameter.
             </param>
             <param name="defaultValue">
             A default string.
             If the lpKeyName key cannot be found in the initialization file, method copies the default string to the <see cref="!:retVal"/> buffer.
             If this parameter is NULL, the default is an empty string, "".
             Avoid specifying a default string with trailing blank characters. The function inserts a null character
             in the <see cref="!:retVal"/> buffer to strip any trailing blanks.
             </param>
             <param name="retVal">Buffer that receives the retrieved string</param>
             <param name="size">The size of the buffer pointed to by the <see cref="!:retVal"/> parameter, in characters.</param>
             <param name="filePath">
             The name of the initialization file.
             If this parameter does not contain a full path to the file, the system searches for the file in the Windows directory.
             </param>
             <returns>
             Number of characters copied to the buffer, not including the terminating null character.
             
             If neither <see cref="!:section"/> nor <see cref="!:key"/> is NULL and the supplied destination buffer is too small
             to hold the requested string, the string is truncated and followed by a null character,
             and the return value is equal to <see cref="!:size"/> minus one.
             
             If either lpAppName or <see cref="!:key"/> is NULL and the supplied destination buffer is too small to hold all the strings,
             the last string is truncated and followed by two null characters. In this case, the return value is equal to <see cref="!:size"/> minus two.
            
             In the event the initialization file specified by <see cref="!:filePath"/> is not found, or contains invalid values,
             calling <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/> will return '0x2' (File Not Found).
             To retrieve extended error information, call GetLastError.
             </returns>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.LoadLibrary(System.String)">
            <summary>
            Loads the specified module into the address space of the calling process.
            The specified module may cause other modules to be loaded.
            </summary>
            <param name="lpFileName">
            The name of the module. This can be either a library module (a .dll file) or an executable module (an .exe file).
            The name specified is the file name of the module and is not related to the name stored in the library module itself,
              as specified by the LIBRARY keyword in the module-definition (.def) file.
            If the string specifies a full path, the function searches only that path for the module.
            If the string specifies a relative path or a module name without a path, the function uses a standard search strategy to find the module.
            If the function cannot find the module, the function fails. When specifying a path, be sure to use backslashes (\), not forward slashes (/).
            If the string specifies a module name without a path and the file name extension is omitted,
              the function appends the default library extension .dll to the module name.
              To prevent the function from appending .dll to the module name, include a trailing point character (.) in the module name string.
            </param>
            <returns>
            If the function succeeds, the return value is a handle to a to the module.
            If the function fails, the return value is NULL. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/>
            </returns>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.LoadLibrary_ThrowWinErrors(System.String)">
            <summary>
            Loads the specified module into the address space of the calling process.
            The specified module may cause other modules to be loaded.
            </summary>
            <param name="lpFileName">
            The name of the module. This can be either a library module (a .dll file) or an executable module (an .exe file).
            The name specified is the file name of the module and is not related to the name stored in the library module itself,
              as specified by the LIBRARY keyword in the module-definition (.def) file.
            If the string specifies a full path, the function searches only that path for the module.
            If the string specifies a relative path or a module name without a path, the function uses a standard search strategy to find the module.
            If the function cannot find the module, the function fails. When specifying a path, be sure to use backslashes (\), not forward slashes (/).
            If the string specifies a module name without a path and the file name extension is omitted,
              the function appends the default library extension .dll to the module name.
              To prevent the function from appending .dll to the module name, include a trailing point character (.) in the module name string.
            </param>
            <returns>Handle to a to the module</returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.Kernel32.TryLoadLibrary(System.String,System.IntPtr@,System.Exception@)">
            <summary>
            Try to loads the specified module into the address space of the calling process.
            The specified module may cause other modules to be loaded.
            </summary>
            <param name="lpFileName">
            The name of the module. This can be either a library module (a .dll file) or an executable module (an .exe file).
            The name specified is the file name of the module and is not related to the name stored in the library module itself,
              as specified by the LIBRARY keyword in the module-definition (.def) file.
            If the string specifies a full path, the function searches only that path for the module.
            If the string specifies a relative path or a module name without a path, the function uses a standard search strategy to find the module.
            If the function cannot find the module, the function fails. When specifying a path, be sure to use backslashes (\), not forward slashes (/).
            If the string specifies a module name without a path and the file name extension is omitted,
              the function appends the default library extension .dll to the module name.
              To prevent the function from appending .dll to the module name, include a trailing point character (.) in the module name string.
            </param>
            <param name="libHandle">Handle of the library</param>
            <param name="exception">The exception. This may be null</param>
            <returns>True if it succeeds, false if it fails</returns>
        </member>
        <member name="M:Intermech.WindowsDll.Psapi.GetModuleFileNameEx_ThrowWinErrors(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>Вызов WinAPI <see cref="M:Intermech.WindowsDll.Psapi.GetModuleFileNameEx(System.IntPtr,System.IntPtr,System.Text.StringBuilder,System.Int32)"/> с обработкой возвращаемых ошибок, включая <seealso cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></summary>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.SHGetFolderLocation(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>Retrieves the path of a folder as an PIDL</summary>
            <param name="hwndOwner">Handle to the owner window</param>
            <param name="nFolder">A CSIDL value that identifies the folder to be located</param>
            <param name="hToken">Token that can be used to represent a particular user</param>
            <param name="dwReserved">The reserved</param>
            <param name="ppidl">[out]
            Address of a pointer to an item identifier list structure specifying the folder's location
            relative to the root of the namespace (the desktop)/.
            </param>
            <returns>HRESULT</returns>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.DestroyIcon(System.IntPtr)">
            <summary>Destroys the icon described by handle</summary>
            <param name="handle">A handle to the icon to be destroyed. The icon must not be in use</param>
            <returns>True if it succeeds, false if it fails</returns>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.SHGetDesktopFolder(System.IntPtr@)">
            <summary>Retrieves the IShellFolder interface for the desktop folder, which is the root of the Shell's namespace.</summary>
            <param name="ppshf">[out] Address that receives an <see cref="T:Intermech.WindowsDll.Shell32.IShellFolder"/> interface pointer for the desktop folder</param>
            <returns>HRESULT</returns>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.StrRetToBuf(Intermech.WindowsDll.Shell32.STRRET@,System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Takes a STRRET structure returned by <see cref="M:Intermech.WindowsDll.Shell32.IShellFolder.GetDisplayNameOf(System.IntPtr,Intermech.WindowsDll.Shell32.ESHGDN,Intermech.WindowsDll.Shell32.STRRET@)"/>, converts it to a string,
            and places the result in a buffer.
            </summary>
            <param name="pstr">
            [in,out] Pointer to the <see cref="T:Intermech.WindowsDll.Shell32.STRRET"/> structure.
            When the function returns, this pointer will no longer be valid.
            </param>
            <param name="pidl">Pointer to the item's <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structure</param>
            <param name="pszBuf">
            Buffer to hold the display name.
            It will be returned as a null-terminated string.
            If cchBuf is too small, the name will be truncated to fit.
            </param>
            <param name="cchBuf">Size of pszBuf, in characters. If cchBuf is too small, the string will be truncated to fit</param>
            <returns>HRESULT</returns>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.SHGetFileInfo(System.String,System.Int32,Intermech.WindowsDll.Shell32.SHFILEINFO,System.Int32,Intermech.WindowsDll.Shell32.SHGFI)">
             <summary>Retrieves information about an object in the file system, such as a file, folder, directory, or drive root</summary>
             <param name="pszPath">
             A pointer to a null-terminated string of maximum length <see cref="F:Intermech.WindowsDll.Shell32.MAX_PATH"/> that contains the path and file name.
             Both absolute and relative paths are valid.
             </param>
             <param name="dwFileAttribs">
             A combination of one or more file attribute flags (FILE_ATTRIBUTE_ values as defined in Winnt.h).
             If uFlags does not include the <see cref="!:SHGFI.SHGFI_USEFILEATTRIBUTES"/> flag, this parameter is ignored.</param>
             <param name="psfi">[out] Pointer to a <see cref="T:Intermech.WindowsDll.Shell32.SHFILEINFO"/> structure to receive the file information</param>
             <param name="cbFileInfo">The size, in bytes, of the <see cref="T:Intermech.WindowsDll.Shell32.SHFILEINFO"/> structure pointed to by the psfi parameter</param>
             <param name="uFlags">The flags that specify the file information to retrieve.</param>
             <returns>
             Returns a value whose meaning depends on the uFlags parameter.
            
             If <see cref="!:uFlags"/> does not contain <see cref="!:SHGFI.SHGFI_EXETYPE"/> or <see cref="!:SHGFI.SHGFI_SYSICONINDEX"/>,
                 the return value is nonzero if successful, or zero otherwise.
            
             If <see cref="!:uFlags"/> contains the <see cref="!:SHGFI.SHGFI_EXETYPE"/> flag, the return value specifies the type of the executable file.
                It will be one of the following values:
             0 -- Nonexecutable file or an error condition.
             LOWORD = NE or PE and HIWORD = Windows version -- Windows application.
             LOWORD = MZ and HIWORD = 0 -- MS-DOS .exe or .com file
             LOWORD = PE and HIWORD = 0 -- Console application or .bat file
             </returns>
             <example>
             1) Get file type name:
             <code>
             Shell32.SHFILEINFO shinfo = new Shell32.SHFILEINFO();
             IntPtr hSuccess = Shell32.SHGetFileInfo(extension,
                                                     0,
                                                     ref shinfo,
                                                     Marshal.SizeOf(shinfo),
                                                     Shell32.SHGFI_TYPENAME | Shell32.SHGFI_USEFILEATTRIBUTES);
             if (hSuccess != IntPtr.Zero)
             {
                 return Convert.ToString(shinfo.szTypeName.Trim());
             }
             </code>
             
             2) Get file icon:
             <code>
             public static System.Drawing.Icon GetFileIcon(string name, IconSize size, bool linkOverlay)
             {
                 Shell32.SHFILEINFO shfi = new Shell32.SHFILEINFO();
                 int flags = Shell32.SHGFI_ICON | Shell32.SHGFI_USEFILEATTRIBUTES;
            
                 if (true == linkOverlay)
                     flags += Shell32.SHGFI_LINKOVERLAY;
            
            
                 /* Check the size specified for return. */
                 if (IconSize.Small == size)
                     flags += Shell32.SHGFI_SMALLICON ; // include the small icon flag
                 else
                     flags += Shell32.SHGFI_LARGEICON ;  // include the large icon flag
            
                 Shell32.SHGetFileInfo( name,
                                        Shell32.FILE_ATTRIBUTE_NORMAL,
                                        ref shfi,
                                        Marshal.SizeOf(shfi),
                                        flags );
            
            
                 // Copy (clone) the returned icon to a new object, thus allowing us
                 // to call DestroyIcon immediately
                 if (shfi.hIcon == IntPtr.Zero)
                     return null;
                 else
                 {
                     System.Drawing.Icon icon = (System.Drawing.Icon) System.Drawing.Icon.FromHandle(shfi.hIcon).Clone();
                     User32.DestroyIcon( shfi.hIcon ); // Cleanup
                     return icon;
                 }
             }
             </code>
             </example>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.SHGetFileInfo(System.IntPtr,System.Int32,Intermech.WindowsDll.Shell32.SHFILEINFO,System.Int32,Intermech.WindowsDll.Shell32.SHGFI)">
            <summary>Retrieves information about an object in the file system, such as a file, folder, directory, or drive root</summary>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.ILCombine(System.IntPtr,System.IntPtr)">
            <summary>Combines two <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structures</summary>
            <param name="pIDLParent">A pointer to the first <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structure</param>
            <param name="pIDLChild">A pointer to the second <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structure. This structure is appended to the structure pointed to by <see cref="!:pidl1"/></param>
            <returns>
            Returns an <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> containing the combined structures.
            If you set either <see cref="!:pidl1"/> or <see cref="!:pidl2"/> to NULL, the returned <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structure is a clone of the non-NULL parameter.
            Returns NULL if <see cref="!:pidl1"/> and <see cref="!:pidl2"/> are both set to NULL.
            </returns>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.SHGetStockIconInfo(Intermech.WindowsDll.Shell32.SHSTOCKICONID,Intermech.WindowsDll.Shell32.SHGSI,Intermech.WindowsDll.Shell32.SHSTOCKICONINFO)">
            <summary>
            Retrieves information about system-defined Shell icons.
            <see href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shgetstockiconinfo"/>
            </summary>
            <param name="siid">One of the values from the <see cref="T:Intermech.WindowsDll.Shell32.SHSTOCKICONID"/> enumeration that specifies which icon should be retrieved.</param>
            <param name="uFlags">A combination of zero or more of the flags from <see cref="T:Intermech.WindowsDll.Shell32.SHGSI"/> enumeration that specify which information is requested.</param>
            <param name="psii">[in,out]
            A pointer to a <see cref="T:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO"/> structure.
            When this function is called, the <see cref="F:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO.Size"/> member of this structure needs to be set to the size of the <see cref="T:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO"/> structure.
            When this function returns, contains a pointer to a <see cref="T:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO"/> structure that contains the requested information.
            </param>
            <remarks>
            If this function returns an icon handle in the hIcon member of the <see cref="T:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO"/> structure pointed to by psii,
                you are responsible for freeing the icon with <see cref="M:Intermech.WindowsDll.Shell32.DestroyIcon(System.IntPtr)"/> when you no longer need it.
            </remarks>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.MAX_PATH">
            <summary>Maximal Length of unmanaged Windows-Path-strings</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.MAX_TYPE">
            <summary>Maximal Length of unmanaged Typename</summary>
        </member>
        <member name="T:Intermech.WindowsDll.Shell32.SHFILEINFO">
            <summary>Contains information about a file object</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHFILEINFO.hIcon">
            <summary>
            A handle to the icon that represents the file.
            You are responsible for destroying this handle with DestroyIcon when you no longer need it.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHFILEINFO.iIcon">
            <summary>The index of the icon image within the system image list</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHFILEINFO.dwAttributes">
            <summary>
            An array of values that indicates the attributes of the file object.
            For information about these values, see the <see cref="M:Intermech.WindowsDll.Shell32.IShellFolder.GetAttributesOf(System.Int32,System.IntPtr[],Intermech.WindowsDll.Shell32.ESFGAO@)"/> method.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHFILEINFO.szDisplayName">
            <summary>
            A string that contains the name of the file as it appears in the Windows Shell,
            or the path and file name of the file that contains the icon representing the file.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHFILEINFO.szTypeName">
            <summary>A string that describes the type of file</summary>
        </member>
        <member name="T:Intermech.WindowsDll.Shell32.ITEMIDLIST">
            <summary>Contains a list of item identifiers</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.ITEMIDLIST.mkid">
            <summary>A list of item identifiers</summary>
        </member>
        <member name="T:Intermech.WindowsDll.Shell32.SHITEMID">
            <summary>Defines an item identifier </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHITEMID.cb">
            <summary>The size of identifier, in bytes, including cb itself</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHITEMID.abID">
            <summary>A variable-length item identifier</summary>
        </member>
        <member name="T:Intermech.WindowsDll.Shell32.IShellFolder">
            <summary>
             Managed equivalent of IShellFolder interface
             Msdn:      <see href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb775075(v=vs.85).aspx"/>
             Pinvoke:   <see href="http://pinvoke.net/default.aspx/Interfaces/IShellFolder.html"/>
            </summary>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.IShellFolder.ParseDisplayName(System.IntPtr,System.IntPtr,System.String,System.IntPtr,System.IntPtr@,System.IntPtr)">
            <summary>
            Translates a file object's or folder's display name into an item identifier list.
            </summary>
            <param name="hwnd">Optional window handle</param>
            <param name="pbc">Optional bind context that controls the parsing operation. This parameter is normally set to NULL</param>
            <param name="pszDisplayName">Null-terminated UNICODE string with the display name</param>
            <param name="pchEaten">Pointer to a ULONG value that receives the number of characters of the display name that was parsed</param>
            <param name="ppidl"> Pointer to an <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> pointer that receives the item identifier list for the object</param>
            <param name="pdwAttributes">Optional parameter that can be used to query for file attributes.this can be values from the SFGAO enum</param>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.IShellFolder.EnumObjects(System.IntPtr,Intermech.WindowsDll.Shell32.ESHCONTF,System.IntPtr@)">
            <summary>
            Allows a client to determine the contents of a folder by creating an item identifier enumeration object and returning its IEnumIDList interface.
            </summary>
            <param name="hwnd">
            If user input is required to perform the enumeration, this window handle should be used by the enumeration object as the parent window to take user input.
            </param>
            <param name="grfFlags">Flags indicating which items to include in the  enumeration. For a list of possible values, see the SHCONTF enum</param>
            <param name="ppenumIDList">Address that receives a pointer to the IEnumIDList interface of the enumeration object created by this method</param>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.IShellFolder.BindToObject(System.IntPtr,System.IntPtr,System.Guid@,System.IntPtr@)">
            <summary>Retrieves an IShellFolder object for a subfolder</summary>
            <param name="pidl">Address of an <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structure (PIDL) that identifies the subfolder</param>
            <param name="pbc">Optional address of an IBindCtx interface on a bind context object to be used during this operation</param>
            <param name="riid">[in,out] Identifier of the interface to return</param>
            <param name="ppv">[out] Address that receives the interface pointer</param>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.IShellFolder.BindToStorage(System.IntPtr,System.IntPtr,System.Guid@,System.IntPtr@)">
            <summary>
            Requests a pointer to an object's storage interface.
            </summary>
            <param name="pidl">Address of an <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structure that identifies the subfolder relative to its parent folder</param>
            <param name="pbc">Optional address of an IBindCtx interface on a bind context object to be  used during this operation</param>
            <param name="riid">Interface identifier (IID) of the requested storage interface</param>
            <param name="ppv"> Address that receives the interface pointer specified by riid</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Intermech.WindowsDll.Shell32.IShellFolder.CompareIDs(System.Int32,System.IntPtr,System.IntPtr)" -->
        <member name="M:Intermech.WindowsDll.Shell32.IShellFolder.CreateViewObject(System.IntPtr,System.Guid@,System.IntPtr@)">
            <summary>
            Requests an object that can be used to obtain information from or interact with a folder object.
            </summary>
            <param name="hwndOwner">Handle to the owner window</param>
            <param name="riid">Identifier of the requested interface</param>
            <param name="ppv">Address of a pointer to the requested interface</param>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.IShellFolder.GetAttributesOf(System.Int32,System.IntPtr[],Intermech.WindowsDll.Shell32.ESFGAO@)">
            <summary>
            Retrieves the attributes of one or more file objects or subfolders.
            </summary>
            <param name="cidl">Number of file objects from which to retrieve attributes</param>
            <param name="apidl">Address of an array of pointers to <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structures, each of which  uniquely identifies a file object relative to the parent folder</param>
            <param name="rgfInOut">Address of a single ULONG value that, on entry contains the attributes that the caller is
            requesting. On exit, this value contains the requested attributes that are common to all of the specified objects. this value can be from the SFGAO enum
            </param>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.IShellFolder.GetUIObjectOf(System.IntPtr,System.Int32,System.IntPtr[],System.Guid@,System.Int32,System.IntPtr@)">
            <summary>
            Retrieves an OLE interface that can be used to carry out actions on the specified file objects or folders.
            </summary>
            <param name="hwndOwner">Handle to the owner window that the client should specify if it displays a dialog box or message box</param>
            <param name="cidl">Number of file objects or subfolders specified in the apidl parameter</param>
            <param name="apidl">Address of an array of pointers to <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structures, each of which  uniquely identifies a file object or subfolder relative to the parent folder</param>
            <param name="riid">Identifier of the COM interface object to return</param>
            <param name="rgfReserved"> Reserved</param>
            <param name="ppv">Pointer to the requested interface</param>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.IShellFolder.GetDisplayNameOf(System.IntPtr,Intermech.WindowsDll.Shell32.ESHGDN,Intermech.WindowsDll.Shell32.STRRET@)">
            <summary>
            Retrieves the display name for the specified file object or subfolder.
            </summary>
            <param name="pidl">Address of an <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structure (PIDL)  that uniquely identifies the file  object or subfolder relative to the parent  folder</param>
            <param name="uFlags">Flags used to request the type of display name to return. For a list of possible values</param>
            <param name="pName"> Address of a STRRET structure in which to return the display name</param>
        </member>
        <member name="M:Intermech.WindowsDll.Shell32.IShellFolder.SetNameOf(System.IntPtr,System.IntPtr,System.String,Intermech.WindowsDll.Shell32.ESHCONTF,System.IntPtr@)">
            <summary>
            Sets the display name of a file object or subfolder, changing the item identifier in the process.
            </summary>
            <param name="hwnd"> Handle to the owner window of any dialog or message boxes that the client displays</param>
            <param name="pidl"> Pointer to an <see cref="T:Intermech.WindowsDll.Shell32.ITEMIDLIST"/> structure that uniquely identifies the file object or subfolder relative to the parent folder</param>
            <param name="pszName"> Pointer to a null-terminated string that specifies the new display name</param>
            <param name="uFlags">Flags indicating the type of name specified by  the lpszName parameter. For a list of possible values, see the description of the SHGNO enum</param>
            <param name="ppidlOut"></param>
        </member>
        <member name="T:Intermech.WindowsDll.Shell32.SHSTOCKICONID">
            <summary>
            Used by SHGetStockIconInfo to identify which stock system icon to retrieve.
            <see href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/ne-shellapi-shstockiconid"/>
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.Icon">
            <summary>get icon</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.DisplayName">
            <summary>get display name</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.TypeName">
            <summary>get type name</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.Attributes">
            <summary>get attributes</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.IconLocation">
            <summary>get icon location</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.ExeType">
            <summary>return exe type</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.SysIconIndex">
            <summary>get system icon index</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.LinkOverlay">
            <summary>put a link overlay on icon</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.Selected">
            <summary>show icon in selected state</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.Attr_Specified">
            <summary>get only specified attributes</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.LargeIcon">
            <summary>get large icon</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.SmallIcon">
            <summary>get small icon</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.OpenIcon">
            <summary>get open icon</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.ShellIconSize">
            <summary>get shell size icon</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.PIDL">
            <summary>pszPath is a pidl</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.UseFileAttributes">
            <summary>use passed dwFileAttribute</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.AddOverlays">
            <summary>apply the appropriate overlays</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGFI.OverlayIndex">
            <summary>Get the index of the overlay in the upper 8 bits of the iIcon</summary>
        </member>
        <member name="T:Intermech.WindowsDll.Shell32.SHGSI">
            <summary>
            Flags, that specify which information is requested by <see cref="M:Intermech.WindowsDll.Shell32.SHGetStockIconInfo(Intermech.WindowsDll.Shell32.SHSTOCKICONID,Intermech.WindowsDll.Shell32.SHGSI,Intermech.WindowsDll.Shell32.SHSTOCKICONINFO)"/> method.
            <see href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shgetstockiconinfo"/>
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGSI.ICONLOCATION">
            <summary>
            The szPath and iIcon members of the <see cref="T:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO"/> structure receive the path and icon index of the requested icon,
                in a format suitable for passing to the <see cref="!:ExtractIcon"/> function.
            The numerical value of this flag is zero, so you always get the icon location regardless of other flags.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGSI.ICON">
            <summary>The hIcon member of the <see cref="T:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO"/> structure receives a handle to the specified icon</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGSI.SYSICONINDEX">
            <summary>The iSysImageImage member of the <see cref="T:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO"/> structure receives the index of the specified icon in the system imagelist</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGSI.LINKOVERLAY">
            <summary>Modifies the <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.ICON"/> value by causing the function to add the link overlay to the file's icon.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGSI.SELECTED">
            <summary>Modifies the <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.ICON"/> value by causing the function to blend the icon with the system highlight color.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGSI.LARGEICON">
            <summary>
            Modifies the <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.ICON"/> value by causing the function to retrieve the large version of the icon,
            as specified by the <see cref="!:User32.SystemMetric.CXSICON"/> and <see cref="!:User32.SystemMetric.CYSICON"/> system metrics.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGSI.SMALLICON">
            <summary>
            Modifies the <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.ICON"/> value by causing the function to retrieve the small version of the icon,
                as specified by the <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXSMICON"/> and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYSMICON"/> system metrics.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHGSI.SHELLICONSIZE">
            <summary>
            Modifies the <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.LARGEICON"/> or <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.SMALLICON"/> values by causing the function
               to retrieve the Shell-sized icons rather than the sizes specified by the system metrics.
            </summary>
        </member>
        <member name="T:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO">
            <summary>
            Receives information used to retrieve a stock Shell icon. This structure is used in a call <see cref="M:Intermech.WindowsDll.Shell32.SHGetStockIconInfo(Intermech.WindowsDll.Shell32.SHSTOCKICONID,Intermech.WindowsDll.Shell32.SHGSI,Intermech.WindowsDll.Shell32.SHSTOCKICONINFO)"/>.
            <see href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/ns-shellapi-shstockiconinfo"/>
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO.Size">
            <summary>The size of this structure, in bytes</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO.hIcon">
            <summary>When <see cref="M:Intermech.WindowsDll.Shell32.SHGetStockIconInfo(Intermech.WindowsDll.Shell32.SHSTOCKICONID,Intermech.WindowsDll.Shell32.SHGSI,Intermech.WindowsDll.Shell32.SHSTOCKICONINFO)"/> is called with the <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.ICON"/> flag, this member receives a handle to the icon.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO.iSysIconIndex">
            <summary>
            When <see cref="M:Intermech.WindowsDll.Shell32.SHGetStockIconInfo(Intermech.WindowsDll.Shell32.SHSTOCKICONID,Intermech.WindowsDll.Shell32.SHGSI,Intermech.WindowsDll.Shell32.SHSTOCKICONINFO)"/> is called with the <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.SYSICONINDEX"/> flag, this member receives the index of the image in the system icon cache.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO.iIcon">
            <summary>
            When <see cref="M:Intermech.WindowsDll.Shell32.SHGetStockIconInfo(Intermech.WindowsDll.Shell32.SHSTOCKICONID,Intermech.WindowsDll.Shell32.SHGSI,Intermech.WindowsDll.Shell32.SHSTOCKICONINFO)"/> is called with the <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.ICONLOCATION"/> flag,
                this member receives the index of the icon in the resource whose path is received in <see cref="F:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO.szPath"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.Shell32.SHSTOCKICONINFO.szPath">
            <summary>
            When <see cref="M:Intermech.WindowsDll.Shell32.SHGetStockIconInfo(Intermech.WindowsDll.Shell32.SHSTOCKICONID,Intermech.WindowsDll.Shell32.SHGSI,Intermech.WindowsDll.Shell32.SHSTOCKICONINFO)"/> is called with the <see cref="F:Intermech.WindowsDll.Shell32.SHGSI.ICONLOCATION"/> flag,
                this member receives the path of the resource that contains the icon.
                The index of the icon within the resource is received in iIcon.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTBORDER">
            <summary>In the border of a window that does not have a sizing border</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTBOTTOM">
            <summary>In the lower-horizontal border of a resizable window (the user can click the mouse to resize the window vertically)</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTBOTTOMLEFT">
            <summary>In the lower-left corner of a border of a resizable window (the user can click the mouse to resize the window diagonally)</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTBOTTOMRIGHT">
            <summary>In the lower-right corner of a border of a resizable window (the user can click the mouse to resize the window diagonally)</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTCAPTION">
            <summary>In a title bar</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTCLIENT">
            <summary>In a client area</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTCLOSE">
            <summary>In a Close button</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTERROR">
            <summary>
            On the screen background or on a dividing line between windows
            (same as <see cref="F:Intermech.WindowsDll.HitTestValues.HTNOWHERE"/>, except that the DefWindowProc function produces a system beep to indicate an error).
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTGROWBOX">
            <summary>In a size box (same as <see cref="F:Intermech.WindowsDll.HitTestValues.HTSIZE"/>)</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTHELP">
            <summary>In a Help button</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTHSCROLL">
            <summary>In a horizontal scroll bar</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTLEFT">
            <summary>In the left border of a resizable window (the user can click the mouse to resize the window horizontally)</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTMENU">
            <summary>In a menu</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTMAXBUTTON">
            <summary>In a Maximize button</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTMINBUTTON">
            <summary>In a Minimize button</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTNOWHERE">
            <summary>On the screen background or on a dividing line between windows</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTREDUCE">
            <summary>In a Minimize button</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTRIGHT">
            <summary>In the right border of a resizable window (the user can click the mouse to resize the window horizontally)</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTSIZE">
            <summary>In a size box (same as <see cref="F:Intermech.WindowsDll.HitTestValues.HTGROWBOX"/>)</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTSYSMENU">
            <summary>In a window menu or in a Close button in a child window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTTOP">
            <summary>In the upper-horizontal border of a window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTTOPLEFT">
            <summary>In the upper-left corner of a window border</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTTOPRIGHT">
            <summary>In the upper-right corner of a window border</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTTRANSPARENT">
            <summary>
            In a window currently covered by another window in the same thread
            (the message will be sent to underlying windows in the same thread until one of them returns a code that is not <see cref="F:Intermech.WindowsDll.HitTestValues.HTTRANSPARENT"/>).
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTVSCROLL">
            <summary>In the vertical scroll bar</summary>
        </member>
        <member name="F:Intermech.WindowsDll.HitTestValues.HTZOOM">
            <summary>In a Maximize button</summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32">
            <summary>Функции User32.dll</summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32.EnumThreadWndProc">
            <summary>Method, that receives the window handles associated with a thread</summary>
        </member>
        <member name="M:Intermech.WindowsDll.User32.EnumThreadWindows(System.Int32,Intermech.WindowsDll.User32.EnumThreadWndProc,System.IntPtr)">
            <summary>
            Enumerates all nonchild windows associated with a thread by passing the handle to each window, in turn, to an application-defined callback function.
            EnumThreadWindows continues until the last window is enumerated or the callback function returns FALSE. To enumerate child windows of a particular
            window, use the EnumChildWindows function
            </summary>
            <param name="tid">The identifier of the thread whose windows are to be enumerated</param>
            <param name="callback">Method, that receives the window handles associated with a thread</param>
            <param name="lp">An application-defined value to be passed to the callback function</param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetClassName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>Retrieves the name of the class to which the specified window belongs</summary>
            <param name="hWnd">A handle to the window and, indirectly, the class to which the window belongs</param>
            <param name="buffer">The class name string</param>
            <param name="bufLen">The class name length</param>
            <returns>
            If the function succeeds, the return value is the number of characters copied to the buffer, not including the terminating null character.
            If the function fails, the return value is zero. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/>
            </returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetClassName_ThrowWinErrors(System.IntPtr,System.Int32)">
            <summary>Retrieves the name of the class to which the specified window belongs</summary>
            <param name="hWnd">A handle to the window and, indirectly, the class to which the window belongs</param>
            <param name="buffer">The class name string</param>
            <param name="bufLen">The class name length</param>
            <returns>Number of characters copied to the buffer, not including the terminating null character</returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">if result value is 0</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowRect(System.IntPtr,Intermech.WindowsDll.Interop.RECT@)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window.
            The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen
            </summary>
            <param name="hWnd">A handle to the window</param>
            <param name="rc">[out] RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowRect_ThrowWinErrors(System.IntPtr)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window.
            The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen
            </summary>
            <param name="hWnd">A handle to the window</param>
            <returns>RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window</returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.MoveWindow(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Changes the position and dimensions of the specified window.
            For a top-level window, the position and dimensions are relative to the upper-left corner of the screen.
            For a child window, they are relative to the upper-left corner of the parent window's client area
            </summary>
            <param name="hWnd">A handle to the window</param>
            <param name="x">The x coordinate</param>
            <param name="y">The y coordinate</param>
            <param name="w">The width</param>
            <param name="h">The height</param>
            <param name="repaint">True to repaint</param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.MoveWindow_ThrowWinErrors(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Changes the position and dimensions of the specified window.
            For a top-level window, the position and dimensions are relative to the upper-left corner of the screen.
            For a child window, they are relative to the upper-left corner of the parent window's client area
            </summary>
            <param name="hWnd">A handle to the window</param>
            <param name="x">The x coordinate</param>
            <param name="y">The y coordinate</param>
            <param name="w">The width</param>
            <param name="h">The height</param>
            <param name="repaint">True to repaint</param>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetClientRect(System.IntPtr,Intermech.WindowsDll.Interop.RECT@)">
            <summary>
            Retrieves the coordinates of a window's client area.
            The client coordinates specify the upper-left and lower-right corners of the client area.
            Because client coordinates are relative to the upper-left corner of a window's client area, the coordinates of the upper-left corner are (0,0)
            </summary>
            <param name="hWnd">A handle to the window</param>
            <param name="rect">[out] The rectangle</param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetClientRect_ThrowWinErrors(System.IntPtr)">
            <summary>
            Retrieves the coordinates of a window's client area.
            The client coordinates specify the upper-left and lower-right corners of the client area.
            Because client coordinates are relative to the upper-left corner of a window's client area, the coordinates of the upper-left corner are (0,0)
            </summary>
            <param name="hWnd">A handle to the window</param>
            <returns>The rectangle</returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.ClientToScreen(System.IntPtr,Intermech.WindowsDll.Interop.POINT@)">
            <summary>The ClientToScreen function converts the client-area coordinates of a specified point to screen coordinates</summary>
            <param name="hWnd">A handle to the window</param>
            <param name="pt">[out] The point</param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.ClientToScreen_ThrowWinErrors(System.IntPtr,Intermech.WindowsDll.Interop.POINT@)">
            <summary>The ClientToScreen function converts the client-area coordinates of a specified point to screen coordinates</summary>
            <param name="hWnd">A handle to the window</param>
            <param name="pt">The point in client coordinats</param>
            <returns>The point in screen coordinats</returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowThreadProcessId(System.IntPtr,System.IntPtr)">
            <summary>
            Retrieves the identifier of the thread that created the specified window and,
            optionally, the identifier of the process that created the window
            </summary>
            <param name="hWnd">A handle to the window</param>
            <param name="processID">Identifier for the process</param>
            <returns>The window thread process identifier</returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowThreadProcessId_ThrowWinErrors(System.IntPtr,System.IntPtr)">
            <summary>Retrieves the identifier of the thread that created the specified window and, optionally, the identifier of the process that created the window</summary>
            <param name="hWnd">A handle to the window</param>
            <param name="processID">Identifier for the process</param>
            <returns>The window thread process identifier</returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetDesktopWindow">
            <summary>
            Retrieves a handle to the desktop window. The desktop window covers the entire screen.
            The desktop window is the area on top of which other windows are painted
            </summary>
        </member>
        <member name="M:Intermech.WindowsDll.User32.MonitorFromWindow(System.IntPtr,Intermech.WindowsDll.User32.DefaultMonitor)">
            <summary>Retrieves a handle to the display monitor that has the largest area of intersection with the bounding rectangle of a specified window</summary>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetMonitorInfo(System.IntPtr,Intermech.WindowsDll.User32.MonitorInfoEx)">
            <summary>Retrieves information about a display monitor</summary>
            <param name="hMonitor">The monitor</param>
            <param name="monitorInfo">Information describing the monitor</param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetMonitorInfo_ThrowWinErrors(System.IntPtr)">
            <summary>Retrieves information about a display monitor</summary>
            <param name="hMonitor">The monitor</param>
            <param name="monitorInfo">Information describing the monitor</param>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.ShowWindow(System.IntPtr,Intermech.WindowsDll.User32.ShowWindowCommand)">
            <summary>Sets the specified window's show state</summary>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.ShowWindow_HandleWinErros(System.IntPtr,Intermech.WindowsDll.User32.ShowWindowCommand)">
            <summary>Sets the specified window's show state</summary>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.ReleaseCapture">
            <summary>Releases the mouse capture from a window in the current thread and restores normal mouse input processing</summary>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.ReleaseCapture_ThrowWinErrors">
            <summary>Releases the mouse capture from a window in the current thread and restores normal mouse input processing</summary>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowInfo(System.IntPtr,Intermech.WindowsDll.User32.WINDOWINFO)">
            <summary>Retrieves information about the specified window</summary>
            <param name="hWnd">A handle to the window</param>
            <param name="WindowInfo">[in,out] Information describing the window</param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowInfo_ThrowWinErrors(System.IntPtr)">
            <summary>Retrieves information about the specified window</summary>
            <param name="hWnd">A handle to the window</param>
            <param name="WindowInfo">[in,out] Information describing the window</param>
            <returns><see cref="T:Intermech.WindowsDll.User32.WINDOWINFO"/></returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowPlacement(System.IntPtr,Intermech.WindowsDll.User32.WINDOWPLACEMENT)">
            <summary>Retrieves the show state and the restored, minimized, and maximized positions of the specified window</summary>
            <param name="hWnd">A handle to the window</param>
            <param name="lpwndpl"><see cref="T:Intermech.WindowsDll.User32.WINDOWPLACEMENT"/></param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowPlacement_ThrowWinErros(System.IntPtr)">
            <summary>Retrieves the show state and the restored, minimized, and maximized positions of the specified window</summary>
            <param name="hWnd">A handle to the window</param>
            <returns><see cref="T:Intermech.WindowsDll.User32.WINDOWPLACEMENT"/></returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.SetWindowPlacement(System.IntPtr,Intermech.WindowsDll.User32.WINDOWPLACEMENT)">
            <summary>Sets the show state and the restored, minimized, and maximized positions of the specified window</summary>
            <param name="hWnd">A handle to the window</param>
            <param name="lpwndpl"><see cref="T:Intermech.WindowsDll.User32.WINDOWPLACEMENT"/></param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.SetWindowPlacement_ThrowWinErrors(System.IntPtr,Intermech.WindowsDll.User32.WINDOWPLACEMENT)">
            <summary>Sets the show state and the restored, minimized, and maximized positions of the specified window</summary>
            <param name="hWnd">A handle to the window</param>
            <param name="lpwndpl"><see cref="T:Intermech.WindowsDll.User32.WINDOWPLACEMENT"/></param>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetSystemMetrics(Intermech.WindowsDll.User32.SystemMetric)">
            <summary>
            Retrieves the specified system metric or system configuration setting.
            All dimensions retrieved by GetSystemMetrics are in pixels.
            </summary>
            <param name="smIndex">The system metric or configuration setting to be retrieved.</param>
            <returns>
            System metric or configuration setting.
            If the function fails, the return value is 0. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/>
            </returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetSystemMetrics_ThrowWinErrors(Intermech.WindowsDll.User32.SystemMetric)">
            <summary>
            Retrieves the specified system metric or system configuration setting.
            All dimensions retrieved by GetSystemMetrics are in pixels.
            </summary>
            <param name="smIndex">The system metric or configuration setting to be retrieved.</param>
            <returns>System metric or configuration setting</returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetKeyboardLayout(System.Int32)">
            <summary>Retrieves the active input locale identifier (formerly called the keyboard layout)</summary>
            <param name="idThread">The identifier of the thread to query, or 0 for the current thread</param>
            <returns>
            The return value is the input locale identifier for the thread.
            The low word contains a Language Identifier for the input language,
            the high word contains a device handle to the physical layout of the keyboard.
            </returns>
            <remarks>
            Beginning in Windows 8:
            The preferred method to retrieve the language associated with the current keyboard layout or
            input method is a call to Windows.Globalization.Language.CurrentInputMethodLanguageTag.
            If your app passes language tags from CurrentInputMethodLanguageTag to any National Language Support functions,
            it must first convert the tags by calling ResolveLocaleName.
            </remarks>
        </member>
        <member name="M:Intermech.WindowsDll.User32.WindowFromPoint(Intermech.WindowsDll.Interop.POINT)">
            <summary>Retrieves a handle to the window that contains the specified point</summary>
            <param name="pnt">The point to be checked</param>
            <returns>
            Handle to the window that contains the point. If no window exists at the given point, the return value is NULL.
            If the point is over a static text control, the return value is a handle to the window under the static text control.
            </returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.RealChildWindowFromPoint(System.IntPtr,Intermech.WindowsDll.Interop.POINT)">
            <summary>
            Retrieves a handle to the child window at the specified point.
            The search is restricted to immediate child windows; grandchildren and deeper descendant windows are not searched.
            </summary>
            <param name="hwndParent">A handle to the window whose child is to be retrieved</param>
            <param name="ptParentClientCoords">A <see cref="T:Intermech.WindowsDll.Interop.POINT"/> structure that defines the client coordinates of the point to be checked.</param>
            <returns>The return value is a handle to the child window that contains the specified point.</returns>
            <remarks>
            <see cref="M:Intermech.WindowsDll.User32.RealChildWindowFromPoint(System.IntPtr,Intermech.WindowsDll.Interop.POINT)"/> treats <see cref="F:Intermech.WindowsDll.HitTestValues.HTTRANSPARENT"/> areas of a standard control differently from other areas of the control;
            it returns the child window behind a transparent part of a control.
            In contrast, <see cref="!:ChildWindowFromPoint"/> treats <see cref="F:Intermech.WindowsDll.HitTestValues.HTTRANSPARENT"/> areas of a control the same as other areas.
            For example, if the point is in a transparent area of a groupbox, <see cref="M:Intermech.WindowsDll.User32.RealChildWindowFromPoint(System.IntPtr,Intermech.WindowsDll.Interop.POINT)"/> returns the child window behind a groupbox,
            whereas <see cref="!:ChildWindowFromPoint"/> returns the groupbox. However, both APIs return a static field, even though it, too,
            returns <see cref="F:Intermech.WindowsDll.HitTestValues.HTTRANSPARENT"/>.
            </remarks>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetComboBoxInfo(System.IntPtr,Intermech.WindowsDll.User32.ComboBoxInfo)">
            <summary>Retrieves information about the specified combo box</summary>
            <param name="hwndCombo">A handle to the combo box</param>
            <param name="info"><see cref="T:Intermech.WindowsDll.User32.ComboBoxInfo"/> structure that receives the information</param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetComboBoxInfo_ThrowWinErrors(System.IntPtr)">
            <summary>Retrieves information about the specified combo box</summary>
            <param name="hwndCombo">A handle to the combo box</param>
            <returns><see cref="T:Intermech.WindowsDll.User32.ComboBoxInfo"/> structure that receives the information</returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowDC(System.IntPtr)">
            <summary>
            Retrieves the device context (DC) for the entire window, including title bar, menus, and scroll bars.
            A window device context permits painting anywhere in a window,
            because the origin of the device context is the upper-left corner of the window instead of the client area.
            </summary>
            <param name="hWnd">
            A handle to the window with a device context that is to be retrieved. If this value is NULL, GetWindowDC retrieves the device context for the entire screen.
            If this parameter is NULL, method retrieves the device context for the primary display monitor.
            To get the device context for other display monitors, use the <see cref="!:EnumDisplayMonitors"/> and <see cref="!:Gdi32.CreateDC"/> functions.
            </param>
            <returns>
            If the function succeeds, the return value is a handle to a device context for the specified window.
            If the function fails, the return value is NULL. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/>
            </returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.GetWindowDC_ThrowWinErrors(System.IntPtr)">
            <summary>
            Retrieves the device context (DC) for the entire window, including title bar, menus, and scroll bars.
            A window device context permits painting anywhere in a window,
            because the origin of the device context is the upper-left corner of the window instead of the client area.
            </summary>
            <param name="hWnd">
            A handle to the window with a device context that is to be retrieved. If this value is NULL, GetWindowDC retrieves the device context for the entire screen.
            If this parameter is NULL, method retrieves the device context for the primary display monitor.
            To get the device context for other display monitors, use the <see cref="!:EnumDisplayMonitors"/> and <see cref="!:Gdi32.CreateDC"/> functions.
            </param>
            <returns>Handle to a device context for the specified window</returns>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="M:Intermech.WindowsDll.User32.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            Releases a device context (DC), freeing it for use by other applications. The effect of the ReleaseDC function depends on the type of DC.
            It frees only common and window DCs. It has no effect on class or private DCs.
            </summary>
            <param name="hWnd">A handle to the window whose DC is to be released</param>
            <param name="hDc">A handle to the DC to be released</param>
            <returns>True if it succeeds, false if it fails. To get extended error information, call <see cref="M:System.Runtime.InteropServices.Marshal.GetLastWin32Error"/></returns>
        </member>
        <member name="M:Intermech.WindowsDll.User32.ReleaseDC_ThrowWinErrors(System.IntPtr,System.IntPtr)">
            <summary>
            Releases a device context (DC), freeing it for use by other applications. The effect of the ReleaseDC function depends on the type of DC.
            It frees only common and window DCs. It has no effect on class or private DCs.
            </summary>
            <param name="hWnd">A handle to the window whose DC is to be released</param>
            <param name="hDc">A handle to the DC to be released</param>
            <exception cref="T:Intermech.Diagnostics.WindowsApiException">Если вызов метода завершится ошибкой</exception>
        </member>
        <member name="T:Intermech.WindowsDll.User32.MonitorInfoEx">
            <summary>The MONITORINFOEX structure contains information about a display monitor. The GetMonitorInfo function stores information into a MONITORINFOEX structure or
                     a MONITORINFO structure. The MONITORINFOEX structure is a superset of the MONITORINFO structure. The MONITORINFOEX structure adds a string member to
                     contain a name for the display monitor</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.MonitorInfoEx.Size">
            <summary>The size, in bytes, of the structure. Set this member to sizeof(MONITORINFOEX) (72) before calling the GetMonitorInfo function. Doing so lets the function
                     determine the type of structure you are passing to it</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.MonitorInfoEx.Monitor">
            <summary>A RECT structure that specifies the display monitor rectangle, expressed in virtual-screen coordinates. Note that if the monitor is not the primary display
                     monitor, some of the rectangle's coordinates may be negative values</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.MonitorInfoEx.WorkArea">
            <summary>A RECT structure that specifies the work area rectangle of the display monitor that can be used by applications, expressed in virtual-screen coordinates.
                     Windows uses this rectangle to maximize an application on the monitor. The rest of the area in rcMonitor contains system windows such as the task bar
                     and side bars. Note that if the monitor is not the primary display monitor, some of the rectangle's coordinates may be negative values</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.MonitorInfoEx.Flags">
            <summary>
            The attributes of the display monitor.
            
            This member can be the following value:
              1 : MONITORINFOF_PRIMARY
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.MonitorInfoEx.DeviceName">
            <summary>
            A string that specifies the device name of the monitor being used. Most applications have no use for a display monitor name,
            and so can save some bytes by using a MONITORINFO structure.
            </summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32.DefaultMonitor">
            <summary>Determines the function's return value if the window does not intersect any display monitor</summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32.DisplayDeviceStateFlags">
            <summary>Device state flags</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DisplayDeviceStateFlags.AttachedToDesktop">
            <summary>The device is part of the desktop</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DisplayDeviceStateFlags.PrimaryDevice">
            <summary>The device is part of the desktop</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DisplayDeviceStateFlags.MirroringDriver">
            <summary>Represents a pseudo device used to mirror application drawing for remoting or other purposes</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DisplayDeviceStateFlags.VGACompatible">
            <summary>The device is VGA compatible</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DisplayDeviceStateFlags.Removable">
            <summary>The device is removable; it cannot be the primary display</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DisplayDeviceStateFlags.ModesPruned">
            <summary>The device has more display modes than its output devices support</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DisplayDeviceStateFlags.Remote">
            <summary>The device is removable; it cannot be the primary display</summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32.DISPLAY_DEVICE">
            <summary>Structure that receives information about the display device specified by the iDevNum parameter of the <see cref="!:EnumDisplayDevices"/> function</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DISPLAY_DEVICE.Size">
            <summary>The size of the structure, in bytes</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DISPLAY_DEVICE.DeviceName">
            <summary>
            String that identifying the device name.
            This is either the adapter device or the monitor device.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DISPLAY_DEVICE.DeviceString">
            <summary>
            String that containing the device context string.
            This is either a description of the display adapter or of the display monitor.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DISPLAY_DEVICE.StateFlags">
            <summary>Device state flags</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DISPLAY_DEVICE.DeviceID">
            <summary>Not used</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.DISPLAY_DEVICE.DeviceKey">
            <summary>Reserved</summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32.WindowStyles">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_BORDER">
            <summary>The window has a thin-line border</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_CAPTION">
            <summary>The window has a title bar (includes the WS_BORDER style)</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_CHILD">
            <summary>The window is a child window. A window with this style cannot have a menu bar. This style cannot be used with the WS_POPUP style</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_CLIPCHILDREN">
            <summary>Excludes the area occupied by child windows when drawing occurs within the parent window. This style is used when creating the parent window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_CLIPSIBLINGS">
            <summary>Clips child windows relative to each other; that is, when a particular child window receives a WM_PAINT message,
            the WS_CLIPSIBLINGS style clips all other overlapping child windows out of the region of the child window to be updated.
            If WS_CLIPSIBLINGS is not specified and child windows overlap, it is possible, when drawing within the client area of a child window,
            to draw within the client area of a neighboring child window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_DISABLED">
            <summary>The window is initially disabled. A disabled window cannot receive input from the user.
            To change this after a window has been created, use the EnableWindow function</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_DLGFRAME">
            <summary>The window has a border of a style typically used with dialog boxes.
            A window with this style cannot have a title bar</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_GROUP">
            <summary>
            The window is the first control of a group of controls. The group consists of this first control and all controls defined after it,
                up to the next control with the WS_GROUP style.
            The first control in each group usually has the WS_TABSTOP style so that the user can move from group to group.
            The user can subsequently change the keyboard focus from one control in the group to the next control in the group by using the direction keys.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_HSCROLL">
            <summary>The window has a horizontal scroll bar</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_MAXIMIZE">
            <summary>The window is initially maximized</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_MAXIMIZEBOX">
            <summary>The window has a maximize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_MINIMIZE">
            <summary>The window is initially minimized</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_MINIMIZEBOX">
            <summary>The window has a minimize button. Cannot be combined with the WS_EX_CONTEXTHELP style. The WS_SYSMENU style must also be specified</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_OVERLAPPED">
            <summary>The window is an overlapped window. An overlapped window has a title bar and a border</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_OVERLAPPEDWINDOW">
            <summary>The window is an overlapped window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_POPUP">
            <summary>The window is a pop-up window. This style cannot be used with the WS_CHILD style</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_POPUPWINDOW">
            <summary>The window is a pop-up window. The WS_CAPTION and WS_POPUPWINDOW styles must be combined to make the window menu visible</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_SIZEFRAME">
            <summary>The window has a sizing border</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_SYSMENU">
            <summary>The window has a window menu on its title bar. The WS_CAPTION style must also be specified</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_TABSTOP">
            <summary>
            The window is a control that can receive the keyboard focus when the user presses the TAB key.
            Pressing the TAB key changes the keyboard focus to the next control with the WS_TABSTOP style.
            You can turn this style on and off to change dialog box navigation. To change this style after a window has been created, use the SetWindowLong function.
            For user-created windows and modeless dialogs to work with tab stops, alter the message loop to call the IsDialogMessage function.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_VISIBLE">
            <summary>The window is initially visible. This style can be turned on and off by using the ShowWindow or SetWindowPos function</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStyles.WS_VSCROLL">
            <summary>The window has a vertical scroll bar</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_ACCEPTFILES">
            <summary>Specifies that a window created with this style accepts drag-drop files</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_APPWINDOW">
            <summary>Forces a top-level window onto the taskbar when the window is visible</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_CLIENTEDGE">
            <summary>Specifies that a window has a border with a sunken edge</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering.
            This cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer.
            If the user then clicks a child window, the child receives a WM_HELP message.
            The child window should pass the message to the parent window procedure, which should call the WinHelp function using the HELP_WM_HELP command.
            The Help application displays a pop-up window that typically contains help for the child window.
            WS_EX_CONTEXTHELP cannot be used with the WS_MAXIMIZEBOX or WS_MINIMIZEBOX styles.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_CONTROLPARENT">
            <summary>
            The window itself contains child windows that should take part in dialog box navigation.
            If this style is specified, the dialog manager recurses into children of this window when performing navigation operations such as handling the TAB key,
                an arrow key, or a keyboard mnemonic.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_DLGMODALFRAME">
            <summary>
            Creates a window that has a double border;
            the window can, optionally, be created with a title bar by specifying the WS_CAPTION style in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window.
            Note that this cannot be used for child windows.
            Also, this cannot be used if the window has a class style of either CS_OWNDC or CS_CLASSDC.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge.
            Increasing horizontal values advance to the left.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_LEFT">
            <summary>Creates a window that has generic left-aligned properties. This is the default</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_LEFTSCROLLBAR">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading order alignment,
                the vertical scroll bar (if present) is to the left of the client area. For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_LTRREADING">
            <summary> The window text is displayed using left-to-right reading-order properties. This is the default</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_MDICHILD">
            <summary>Creates a multiple-document interface (MDI) child window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it.
            The system does not bring this window to the foreground when the user minimizes or closes the foreground window.
            To activate the window, use the SetActiveWindow or SetForegroundWindow function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the WS_EX_APPWINDOW style.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_NOINHERITLAYOUT">
            <summary>Windows 2000/XP: A window created with this style does not pass its window layout to its child windows</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style does not send the WM_PARENTNOTIFY message to its parent window when it is created or destroyed.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_OVERLAPPEDWINDOW">
            <summary> Combines the WS_EX_CLIENTEDGE and WS_EX_WINDOWEDGE styles</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_PALETTEWINDOW">
            <summary>Combines the WS_EX_WINDOWEDGE, WS_EX_TOOLWINDOW, and WS_EX_TOPMOST styles</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_RIGHT">
            <summary>
            The window has generic "right-aligned" properties.
            This depends on the window class. This style has an effect only if the shell language is Hebrew, Arabic, or another language that supports reading-order alignment;
            otherwise, the style is ignored.
            Using the WS_EX_RIGHT style for static or edit controls has the same effect as using the SS_RIGHT or ES_RIGHT style, respectively.
            Using this style with button controls has the same effect as using BS_RIGHT and BS_RIGHTBUTTON styles.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_RIGHTSCROLLBAR">
            <summary>Vertical scroll bar (if present) is to the right of the client area. This is the default</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_RTLREADING">
            <summary>
            If the shell language is Hebrew, Arabic, or another language that supports reading-order alignment,
                the window text is displayed using right-to-left reading-order properties.
            For other languages, the style is ignored.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_TOOLWINDOW">
            <summary>
            Creates a tool window; that is, a window intended to be used as a floating toolbar.
            A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font.
            A tool window does not appear in the taskbar or in the dialog that appears when the user presses ALT+TAB.
            If a tool window has a system menu, its icon is not displayed on the title bar.
            However, you can display the system menu by right-clicking or by typing ALT+SPACE.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all non-topmost windows and should stay above them, even when the window is deactivated.
            To add or remove this style, use the SetWindowPos function.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style should not be painted until siblings beneath the window (that were created by the same thread) have been painted.
            The window appears transparent because the bits of underlying sibling windows have already been painted.
            To achieve transparency without these restrictions, use the SetWindowRgn function.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowStylesEx.WS_EX_WINDOWEDGE">
            <summary>Specifies that a window has a border with a raised edge</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WS_ACTIVECAPTION">
            <summary>Window status "window is active"</summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32.WINDOWINFO">
            <summary>A windowinfo</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.Size">
            <summary>The size of the structure, in bytes</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.rcWindow">
            <summary>The coordinates of the window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.rcClient">
            <summary>The coordinates of the client area</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.Style">
            <summary>The window styles</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.ExStyle">
            <summary>The extended window styles</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.dwWindowStatus">
            <summary>The window status. If this member is <see cref="F:Intermech.WindowsDll.User32.WS_ACTIVECAPTION"/> (0x0001), the window is active. Otherwise, this member is zero</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.cxWindowBorders">
            <summary>The width of the window border, in pixels</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.cyWindowBorders">
            <summary>The height of the window border, in pixels</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.atomWindowType">
            <summary>The window class atom (see RegisterClass)</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWINFO.CreatorVersion">
            <summary>The Windows version of the application that created the window</summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32.WindowPlacementFlags">
            <summary>The flags that control the position of the minimized window and the method by which the window is restored</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowPlacementFlags.WPF_SETMINPOSITION">
            <summary>
            The coordinates of the minimized window may be specified.
            This flag must be specified if the coordinates are set in the ptMinPosition member.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowPlacementFlags.WPF_RESTORETOMAXIMIZED">
            <summary>
            The restored window will be maximized, regardless of whether it was maximized before it was minimized.
            This setting is only valid the next time the window is restored.
            It does not change the default restoration behavior.
            </summary>
            <remarks>This flag is only valid when the SW_SHOWMINIMIZED value is specified for the showCmd member.</remarks>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WindowPlacementFlags.WPF_ASYNCWINDOWPLACEMENT">
            <summary>
            If the calling thread and the thread that owns the window are attached to different input queues,
                the system posts the request to the thread that owns the window.
            This prevents the calling thread from blocking its execution while other threads process the request.
            </summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32.ShowWindowCommand">
            <summary>The current show state of the window, or state to be set</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_HIDE">
            <summary>Hides the window and activates another window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_NORMAL">
            <summary>
            Activates and displays a window.
            If the window is minimized or maximized, the system restores it to its original size and position.
            An application should specify this flag when displaying the window for the first time.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_SHOWMINIMIZED">
            <summary>Activates the window and displays it as a minimized window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_SHOWMAXIMIZED">
            <summary>Activates the window and displays it as a maximized window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_MAXIMIZE">
            <summary>Maximizes the specified window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_SHOWNOACTIVATE">
            <summary>
            Displays a window in its most recent size and position.
            This value is similar to <see cref="!:SW_SHOWNORMAL"/>, except the window is not activated.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_SHOW">
            <summary>Activates the window and displays it in its current size and position</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_MINIMIZE">
            <summary>Minimizes the specified window and activates the next top-level window in the z-order</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_SHOWMINNOACTIVE">
            <summary>
            Displays the window as a minimized window.
            This value is similar to <see cref="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_SHOWMINIMIZED"/>, except the window is not activated.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_SHOWNA">
            <summary>
            Displays the window in its current size and position.
            This value is similar to <see cref="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_SHOW"/>, except the window is not activated.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_RESTORE">
            <summary>
            Activates and displays the window.
            If the window is minimized or maximized, the system restores it to its original size and position.
            An application should specify this flag when restoring a minimized window.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_SHOWDEFAULT">
            <summary>
            Sets the show state based on the SW_ value specified in the STARTUPINFO structure passed to the CreateProcess function by the program that started the application.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.ShowWindowCommand.SW_FORCEMINIMIZE">
            <summary>
            Minimizes a window, even if the thread that owns the window is not responding.
            This flag should only be used when minimizing windows from a different thread.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWPLACEMENT.Size">
            <summary>The size of the structure, in bytes</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWPLACEMENT.Flags">
            <summary>The flags that control the position of the minimized window and the method by which the window is restored</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWPLACEMENT.ShowCmd">
            <summary>The current show state of the window</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWPLACEMENT.ptMinPosition">
            <summary>The coordinates of the window's upper-left corner when the window is minimized</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWPLACEMENT.ptMaxPosition">
            <summary>The coordinates of the window's upper-left corner when the window is maximized</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.WINDOWPLACEMENT.rcNormalPosition">
            <summary>The window's coordinates when the window is in the restored position</summary>
        </member>
        <member name="T:Intermech.WindowsDll.User32.SystemMetric">
            <summary> Flags used with the Windows API <see cref="M:Intermech.WindowsDll.User32.GetSystemMetrics(Intermech.WindowsDll.User32.SystemMetric)"/>.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.ARRANGE">
            <summary>The flags that specify how the system arranged minimized windows.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CLEANBOOT">
            <summary>
            The value that specifies how the system is started:
            0 Normal boot
            1 Fail-safe boot
            2 Fail-safe with network boot
            A fail-safe boot (also called SafeBoot, Safe Mode, or Clean Boot) bypasses the user startup files.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CMONITORS">
            <summary>The number of display monitors on a desktop.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CMOUSEBUTTONS">
            <summary>The number of buttons on a mouse, or zero if no mouse is installed. </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXBORDER">
            <summary>
            The width of a window border, in pixels. This is equivalent to the <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXEDGE"/> value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXCURSOR">
            <summary>The width of a cursor, in pixels. The system cannot create cursors of other sizes.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXDLGFRAME">
            <summary> This value is the same as <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXFIXEDFRAME"/>. </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXDOUBLECLK">
            <summary>
            The width of the rectangle around the location of a first click in a double-click sequence, in pixels.
            The second click must occur within the rectangle that is defined by <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXDOUBLECLK"/> and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYDOUBLECLK"/> for the system
            to consider the two clicks a double-click. The two clicks must also occur within a specified time.
            To set the width of the double-click rectangle, call <see cref="!:SystemParametersInfo"/> with <see cref="!:SPI_SETDOUBLECLKWIDTH"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXDRAG">
            <summary>
            The number of pixels on either side of a mouse-down point that the mouse pointer can move before a drag operation begins.
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation.
            If this value is negative, it is subtracted from the left of the mouse-down point and added to the right of it.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXEDGE">
            <summary>The width of a 3-D border, in pixels. This metric is the 3-D counterpart of <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXBORDER"/>.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels.
            <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXFIXEDFRAME"/> is the height of the horizontal border, and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYFIXEDFRAME"/> is the width of the vertical border.
            This value is the same as <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXDLGFRAME"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXFOCUSBORDER">
            <summary>
            The width of the left and right edges of the focus rectangle that the DrawFocusRectdraws.
            This value is in pixels.
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXFRAME">
            <summary>This value is the same as <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXSIZEFRAME"/>.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXFULLSCREEN">
            <summary>
            The width of the client area for a full-screen window on the primary display monitor, in pixels.
            To get the coordinates of the portion of the screen that is not obscured by the system taskbar or by application desktop toolbars,
            call the <see cref="!:SystemParametersInfo"/> function with the <see cref="!:SPI_GETWORKAREA"/> value.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXHSCROLL">
            <summary>The width of the arrow bitmap on a horizontal scroll bar, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXHTHUMB">
            <summary>The width of the thumb box in a horizontal scroll bar, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXICON">
            <summary>
            The default width of an icon, in pixels. The LoadIcon function can load only icons with the dimensions
            that <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXICON"/> and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYICON"/> specifies.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXICONSPACING">
            <summary>
            The width of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size
            <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXICONSPACING"/> by <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYICONSPACING"/> when arranged.
            This value is always greater than or equal to <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXICON"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXMAXIMIZED">
            <summary>The default width, in pixels, of a maximized top-level window on the primary display monitor.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXMAXTRACK">
            <summary>
            The default maximum width of a window that has a caption and sizing borders, in pixels.
            This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions.
            A window can override this value by processing the <see cref="!:WM_GETMINMAXINFO"/> message.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXMENUCHECK">
            <summary>The width of the default menu check-mark bitmap, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXMENUSIZE">
            <summary>
            The width of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXMIN">
            <summary>The minimum width of a window, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXMINIMIZED">
            <summary>The width of a minimized window, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXMINSPACING">
            <summary>
            The width of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged.
            This value is always greater than or equal to CXMINIMIZED.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXMINTRACK">
            <summary>
            The minimum tracking width of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions.
            A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXPADDEDBORDER">
            <summary>
            The amount of border padding for captioned windows, in pixels.
            Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXSCREEN">
            <summary>
            The width of the screen of the primary display monitor, in pixels. This is the same value obtained by calling
            GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXSIZE">
            <summary>The width of a button in a window caption or title bar, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels.
            CXSIZEFRAME is the width of the horizontal border, and CYSIZEFRAME is the height of the vertical border.
            This value is the same as CXFRAME.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXSMICON">
            <summary>The recommended width of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXSMSIZE">
            <summary>The width of small caption buttons, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXVIRTUALSCREEN">
            <summary>
            The width of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors.
            The <see cref="F:Intermech.WindowsDll.User32.SystemMetric.XVIRTUALSCREEN"/> metric is the coordinates for the left side of the virtual screen.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CXVSCROLL">
            <summary>The width of a vertical scroll bar, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYBORDER">
            <summary>The height of a window border, in pixels. This is equivalent to the CYEDGE value for windows with the 3-D look.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYCAPTION">
            <summary>The height of a caption area, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYCURSOR">
            <summary>The height of a cursor, in pixels. The system cannot create cursors of other sizes.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYDLGFRAME">
            <summary>This value is the same as <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYFIXEDFRAME"/>.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYDOUBLECLK">
            <summary>
            The height of the rectangle around the location of a first click in a double-click sequence, in pixels.
            The second click must occur within the rectangle defined by <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXDOUBLECLK"/> and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYDOUBLECLK"/> for the system to consider
            the two clicks a double-click. The two clicks must also occur within a specified time. To set the height of the double-click
            rectangle, call <see cref="!:SystemParametersInfo"/> with <see cref="!:SPI_SETDOUBLECLKHEIGHT"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYDRAG">
            <summary>
            The number of pixels above and below a mouse-down point that the mouse pointer can move before a drag operation begins.
            This allows the user to click and release the mouse button easily without unintentionally starting a drag operation.
            If this value is negative, it is subtracted from above the mouse-down point and added below it.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYEDGE">
            <summary>The height of a 3-D border, in pixels. This is the 3-D counterpart of <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYBORDER"/>.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYFIXEDFRAME">
            <summary>
            The thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels.
            <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXFIXEDFRAME"/> is the height of the horizontal border, and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYFIXEDFRAME"/> is the width of the vertical border.
            This value is the same as <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYDLGFRAME"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYFOCUSBORDER">
            <summary>
            The height of the top and bottom edges of the focus rectangle drawn byDrawFocusRect.
            This value is in pixels.
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYFRAME">
            <summary>This value is the same as <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYSIZEFRAME"/>.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYFULLSCREEN">
            <summary>
            The height of the client area for a full-screen window on the primary display monitor, in pixels.
            To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars,
            call the <see cref="!:SystemParametersInfo"/> function with the <see cref="!:SPI_GETWORKAREA"/> value.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYHSCROLL">
            <summary>The height of a horizontal scroll bar, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYICON">
            <summary>
            The default height of an icon, in pixels. The LoadIcon function can load only icons with the dimensions <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXICON"/> and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYICON"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYICONSPACING">
            <summary>
            The height of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size
            <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXICONSPACING"/> by <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYICONSPACING"/> when arranged. This value is always greater than or equal to <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYICON"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYKANJIWINDOW">
            <summary>
            For double byte character set versions of the system, this is the height of the Kanji window at the bottom of the screen, in pixels.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYMAXIMIZED">
            <summary>The default height, in pixels, of a maximized top-level window on the primary display monitor.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYMAXTRACK">
            <summary>
            The default maximum height of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop.
            The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing
            the <see cref="!:WM_GETMINMAXINFO"/> message.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYMENU">
            <summary>The height of a single-line menu bar, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYMENUCHECK">
            <summary>The height of the default menu check-mark bitmap, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYMENUSIZE">
            <summary>
            The height of menu bar buttons, such as the child window close button that is used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYMIN">
            <summary>The minimum height of a window, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYMINIMIZED">
            <summary>The height of a minimized window, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYMINSPACING">
            <summary>
            The height of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged.
            This value is always greater than or equal to <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYMINIMIZED"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYMINTRACK">
            <summary>
            The minimum tracking height of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions.
            A window can override this value by processing the <see cref="!:WM_GETMINMAXINFO"/> message.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYSCREEN">
            <summary>
            The height of the screen of the primary display monitor, in pixels. This is the same value obtained by calling
            <see cref="!:GetDeviceCaps"/> as follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYSIZE">
            <summary>The height of a button in a window caption or title bar, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYSIZEFRAME">
            <summary>
            The thickness of the sizing border around the perimeter of a window that can be resized, in pixels.
            <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXSIZEFRAME"/> is the width of the horizontal border, and <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYSIZEFRAME"/> is the height of the vertical border.
            This value is the same as <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYFRAME"/>.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYSMCAPTION">
            <summary>The height of a small caption, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYSMICON">
            <summary>
            The recommended height of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYSMSIZE">
            <summary>The height of small caption buttons, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYVIRTUALSCREEN">
            <summary>
            The height of the virtual screen, in pixels. The virtual screen is the bounding rectangle of all display monitors.
            The <see cref="F:Intermech.WindowsDll.User32.SystemMetric.YVIRTUALSCREEN"/> metric is the coordinates for the top of the virtual screen.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYVSCROLL">
            <summary>The height of the arrow bitmap on a vertical scroll bar, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.CYVTHUMB">
            <summary>The height of the thumb box in a vertical scroll bar, in pixels.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.DBCSENABLED">
            <summary>Nonzero if User32.dll supports DBCS; otherwise, 0.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.DEBUG">
            <summary>Nonzero if the debug version of User.exe is installed; otherwise, 0.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.DIGITIZER">
            <summary>
            Nonzero if the current operating system is Windows 7 or Windows Server 2008 R2 and the Tablet PC Input
            service is started; otherwise, 0. The return value is a bitmask that specifies the type of digitizer input supported by the device.
            Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.IMMENABLED">
            <summary>
            Nonzero if Input Method Manager/Input Method Editor features are enabled; otherwise, 0.
            <see cref="F:Intermech.WindowsDll.User32.SystemMetric.IMMENABLED"/> indicates whether the system is ready to use a Unicode-based IME on a Unicode application.
            To ensure that a language-dependent IME works, check <see cref="F:Intermech.WindowsDll.User32.SystemMetric.DBCSENABLED"/> and the system ANSI code page.
            Otherwise the ANSI-to-Unicode conversion may not be performed correctly, or some components like fonts
            or registry settings may not be present.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.MAXIMUMTOUCHES">
            <summary>
            Nonzero if there are digitizers in the system; otherwise, 0. <see cref="F:Intermech.WindowsDll.User32.SystemMetric.MAXIMUMTOUCHES"/> returns the aggregate maximum of the
            maximum number of contacts supported by every digitizer in the system. If the system has only single-touch digitizers,
            the return value is 1. If the system has multi-touch digitizers, the return value is the number of simultaneous contacts
            the hardware can provide.
            Windows Server 2008, Windows Vista, and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.MEDIACENTER">
            <summary>Nonzero if the current operating system is the Windows XP, Media Center Edition, 0 if not.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.MENUDROPALIGNMENT">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding menu-bar item; 0 if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.MIDEASTENABLED">
            <summary>Nonzero if the system is enabled for Hebrew and Arabic languages, 0 if not.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.MOUSEPRESENT">
            <summary>
            Nonzero if a mouse is installed; otherwise, 0. This value is rarely zero, because of support for virtual mice and because
            some systems detect the presence of the port instead of the presence of a mouse.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.MOUSEHORIZONTALWHEELPRESENT">
            <summary>Nonzero if a mouse with a horizontal scroll wheel is installed; otherwise 0.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.MOUSEWHEELPRESENT">
            <summary>Nonzero if a mouse with a vertical scroll wheel is installed; otherwise 0.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.NETWORK">
            <summary>
            The least significant bit is set if a network is present; otherwise, it is cleared. The other bits are reserved for future use.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.PENWINDOWS">
            <summary>Nonzero if the Microsoft Windows for Pen computing extensions are installed; zero otherwise.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.REMOTECONTROL">
            <summary>
            This system metric is used in a Terminal Services environment to determine if the current Terminal Server session is
            being remotely controlled. Its value is nonzero if the current session is remotely controlled; otherwise, 0.
            You can use terminal services management tools such as Terminal Services Manager (tsadmin.msc) and shadow.exe to
            control a remote session. When a session is being remotely controlled, another user can view the contents of that session
            and potentially interact with it.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.REMOTESESSION">
            <summary>
            This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services
            client session, the return value is nonzero. If the calling process is associated with the Terminal Services console session,
            the return value is 0.
            Windows Server 2003 and Windows XP:  The console session is not necessarily the physical console.
            For more information, seeWTSGetActiveConsoleSessionId.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.SAMEDISPLAYFORMAT">
            <summary>
            Nonzero if all the display monitors have the same color format, otherwise, 0. Two displays can have the same bit depth,
            but different color formats. For example, the red, green, and blue pixels can be encoded with different numbers of bits,
            or those bits can be located in different places in a pixel color value.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.SECURE">
            <summary>This system metric should be ignored; it always returns 0.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.SERVERR2">
            <summary>The build number if the system is Windows Server 2003 R2; otherwise, 0.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.SHOWSOUNDS">
            <summary>
            Nonzero if the user requires an application to present information visually in situations where it would otherwise present
            the information only in audible form; otherwise, 0.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.SHUTTINGDOWN">
            <summary>
            Nonzero if the current session is shutting down; otherwise, 0.
            Windows 2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.SLOWMACHINE">
            <summary>Nonzero if the computer has a low-end (slow) processor; otherwise, 0.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.STARTER">
            <summary>
            Nonzero if the current operating system is Windows 7 Starter Edition, Windows Vista Starter, or Windows XP Starter Edition; otherwise, 0.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.SWAPBUTTON">
            <summary>Nonzero if the meanings of the left and right mouse buttons are swapped; otherwise, 0.</summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.TABLETPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC edition or if the current operating system is Windows Vista
            or Windows 7 and the Tablet PC Input service is started; otherwise, 0. The <see cref="F:Intermech.WindowsDll.User32.SystemMetric.DIGITIZER"/> setting indicates the type of digitizer
            input supported by a device running Windows 7 or Windows Server 2008 R2.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.XVIRTUALSCREEN">
            <summary>
            The coordinates for the left side of the virtual screen. The virtual screen is the bounding rectangle of all display monitors.
            The <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CXVIRTUALSCREEN"/> metric is the width of the virtual screen.
            </summary>
        </member>
        <member name="F:Intermech.WindowsDll.User32.SystemMetric.YVIRTUALSCREEN">
            <summary>
            The coordinates for the top of the virtual screen. The virtual screen is the bounding rectangle of all display monitors.
            The <see cref="F:Intermech.WindowsDll.User32.SystemMetric.CYVIRTUALSCREEN"/> metric is the height of the virtual screen.
            </summary>
        </member>
        <member name="T:Intermech.ApplicationModel.WindowsConsoleSystemEventsHandler">
            <summary>
            Класс подключаемого обработчика событий консольного приложения, специфичных для Windows.
            </summary>
            <remarks>
            Реализация не является thread safe.
            </remarks>
        </member>
        <member name="M:Intermech.ApplicationModel.WindowsConsoleSystemEventsHandler.#ctor(System.Object)">
            <summary>
            Создает обработчик событий консольного приложения, специфичных для Windows.
            </summary>
            <param name="owner">Владелец обработчика</param>
            <exception cref="T:System.ArgumentNullException">параметр <paramref name="owner"/> не должен быть null</exception>
        </member>
        <member name="M:Intermech.ApplicationModel.WindowsConsoleSystemEventsHandler.Activate">
            <inheritdoc/>
        </member>
        <member name="M:Intermech.ApplicationModel.WindowsConsoleSystemEventsHandler.Deactivate(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="E:Intermech.ApplicationModel.WindowsConsoleSystemEventsHandler.OnCloseWindow">
            <inheritdoc/>
        </member>
    </members>
</doc>
