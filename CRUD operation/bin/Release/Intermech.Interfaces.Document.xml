<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Intermech.Interfaces.Document</name>
    </assembly>
    <members>
        <member name="M:Intermech.Interfaces.Document.AddAttrValue.Clone">
            <summary>
            Создать другой экземпляр - копию текущего
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.AddAttrValue.AssignValue(System.Object,System.Type)">
            <summary>
            Поместить значение в контейнер
            </summary>
            <param name="newvalue">Само значение</param>
            <param name="type">Тип значения</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.AdditionalAttributeCollection">
            <summary>Коллекция атрибутов. Вспомогательный класс для внутреннего пользования</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalAttributeCollection.Owner">
            <summary>Владелец коллекции</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributeCollection.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор. Создает коллекцию для заданного владельца</summary>
            <param name="owner">Владелец коллекции</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalAttributeCollection.Count">
            <summary>Количество атрибутов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributeCollection.ContainsAttribute(System.String)">
            <summary>Проверяет содержит ли коллекция атрибут с заданным именем</summary>
            <param name="attributeName">Имя атрибута</param>
            <returns>Возвращеает true, если коллекция содержит атрибут с заданным именем</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalAttributeCollection.Keys">
            <summary>Коллекция имен атрибутов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributeCollection.SetAttributeStringValue(System.String,System.String)">
            <summary>Установить строковое значение атрибута. 
            Если атрибута нет в коллекции, то он будет добавлен.</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="attributeValue">Значение атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributeCollection.SetAttributeValue(System.String,System.Object,System.Nullable{System.Boolean},System.Type,System.ComponentModel.TypeConverter)">
            <summary>Установить значение атрибута. 
            Если атрибута нет в коллекции, то он будет добавлен.</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="attributeValue">Значение (не обязательно строковое) атрибута</param>
            <param name="attributeType">Тип значения атрибута</param>
            <param name="showInPropGrid">Показывать атрибут пользоателю. null если не менять существующее значение</param>
            <param name="converter">Конвертер значений. null если не менять существующее значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributeCollection.SetAdditionalAttributes(Intermech.Interfaces.Document.DocumentTreeNode,System.String,System.String)">
            <summary>Установить атрибуты дочерних ячеек</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributeCollection.GetAttributeValue(System.String)">
            <summary>Получить значение атрибута с заданным именем</summary>
            <param name="attributeName">Имя атрибута</param>
            <returns>Возвращает значение атрибута с заданным именем. 
            Если атрибута нет в коллекции, то вернет null.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributeCollection.GetAttributeStringValue(System.String,System.Boolean)">
            <summary>Получить строковое значение атрибута с заданным именем</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="notNull">Вернуть пустую строку ("") вместо null</param>
            <returns>Возвращает строковое значение атрибута. Если notNull = true, 
            то вернет пустую строку вместо null.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributeCollection.RemoveAttribute(System.String)">
            <summary>Удалить атрибут с заданным именем из коллекции</summary>
            <param name="attributeName">Имя атрибута</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalAttributeCollection.Attributes">
            <summary>Словарь с парами имя-значение</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributeCollection.Clone">
            <summary>Создать полную копию коллекции</summary>
            <returns>Возвращает полную копию коллекции</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeValueChanging_EventHandler">
            <summary>Делегат для обработчика события AttributeValueChanging</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeValueChanged_EventHandler">
            <summary>Делегат для обработчика события AttributeValueChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeRemoving_EventHandler">
            <summary>Делегат для обработчика события AttributeRemoving</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeRemoved_EventHandler">
            <summary>Делегат для обработчика события AttributeRemoved</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeValueChanging_EventArgs">
            <summary>Аргумент обработчика события AttributeValueChanging</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeValueChanging_EventArgs.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeValueChanging_EventArgs.OldValue">
            <summary>Старое значение атрибута</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeValueChanging_EventArgs.NewValue">
            <summary>Новое значение атрибута</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeValueChanging_EventArgs.Cancel">
            <summary>Отменить изменение атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeValueChanging_EventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>Конструктор аргумента события AttributeValueChanging</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="oldValue">Старое значение атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeValueChanged_EventArgs">
            <summary>Аргумент обработчика события AttributeValueChanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeValueChanged_EventArgs.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeValueChanged_EventArgs.OldValue">
            <summary>Старое значение атрибута</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeValueChanged_EventArgs.NewValue">
            <summary>Новое значение атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeValueChanged_EventArgs.#ctor(System.String,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>Конструктор аргумента события AttributeValueChanged</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="oldValue">Старое значение атрибута</param>
            <param name="newValue">Новое значение атрибута</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeRemoving_EventArgs">
            <summary>Аргумент обработчика события AttributeRemoving</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeRemoving_EventArgs.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeRemoving_EventArgs.Cancel">
            <summary>Отменить удаление атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeRemoving_EventArgs.#ctor(System.String)">
            <summary>Конструктор аргумента события AttributeRemoving</summary>
            <param name="attributeName">Имя атрибута</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeRemoved_EventArgs">
            <summary>Аргумент обработчика события AttributeRemoved</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeRemoved_EventArgs.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeRemoved_EventArgs.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>Конструктор аргумента события AttributeRemoved</summary>
            <param name="attributeName">Имя атрибута</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.AdditionalAttributesConverter">
            <summary>Конвертер класса AdditionalAttributeCollection</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Поддерживает ли класс получение свойств GetProperties()</summary>
            <param name="context">Контекст дескриптора</param>
            <returns>true, если класс получение свойств GetProperties()</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesConverter.GetAdditionalAttributesNames(Intermech.Interfaces.Document.DocumentTreeNode,System.Collections.Specialized.StringCollection@)">
            <summary>Получить атрибуты дочерних ячеек</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Получить дескрипторы свойств</summary>
            <param name="context">Контекст</param>
            <param name="value">Объект</param>
            <param name="attributes">Атрибуты свойств</param>
            <returns>Коллекция дескрипторов свойств объекта</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeDescriptor">
            <summary>Описатель атрибута из AdditionalAttributeCollection для преставления его в PropertyGrid</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeDescriptor.attributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeDescriptor.#ctor(System.String)">
            <summary>Конструктор</summary>
            <param name="attributeName">Имя атрибута</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.AttributeDescriptor.Attributes">
            <summary>Атрибуты свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeDescriptor.GetValue(System.Object)">
            <summary>Получить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Значение свойства</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeDescriptor.SetValue(System.Object,System.Object)">
            <summary>Установить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <param name="value">Значение свойства</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.AttributeDescriptor.DisplayName">
            <summary>Отображаемое имя свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeDescriptor.CanResetValue(System.Object)">
            <summary>Можно ли сбросить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Можно ли сбросить значение свойства</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.AttributeDescriptor.ComponentType">
            <summary>Тип владельца свойства</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.AttributeDescriptor.PropertyType">
            <summary>Тип свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeDescriptor.ResetValue(System.Object)">
            <summary>Сбросить значение свойства</summary>
            <param name="component">Владелец свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeDescriptor.ShouldSerializeValue(System.Object)">
            <summary>Нужно ли сохранить данное значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Нужно ли сохранить данное значение свойства</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.AttributeDescriptor.IsReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.AttributeDescriptor.Category">
            <summary>Категория свойства</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AdditionalAttributesDescriptor">
            <summary>Описатель свойства типа AdditionalAttributeCollection для преставления его в PropertyGrid</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
            <summary>Конструктор</summary>
            <param name="descr">Базовый дескриптор</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
            <summary>Конструктор</summary>
            <param name="descr">Базовый дескриптор</param>
            <param name="attrs">Атрибуты свойств</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.#ctor(System.String,System.Attribute[])">
            <summary>Конструктор</summary>
            <param name="name">Имя свойства</param>
            <param name="attrs">Атрибуты свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.#ctor(System.Attribute[])">
            <summary>Конструктор</summary>
            <param name="attrs">Атрибуты свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.CanResetValue(System.Object)">
            <summary>Можно ли сбросить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Можно ли сбросить значение свойства</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.ComponentType">
            <summary>Тип владельца свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.GetValue(System.Object)">
            <summary>Получить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Значение свойства</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.SetValue(System.Object,System.Object)">
            <summary>Установить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <param name="value">Значение свойства</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.IsReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.PropertyType">
            <summary>Тип свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.ResetValue(System.Object)">
            <summary>Сбросить значение свойства</summary>
            <param name="component">Владелец свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalAttributesDescriptor.ShouldSerializeValue(System.Object)">
            <summary>Нужно ли сохранить данное значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Нужно ли сохранить данное значение свойства</returns>
        </member>
        <member name="E:Intermech.Interfaces.Document.AdditionalPropertiesManager.GetAdditionalProperties">
            <summary>Происходит когда произошли изменения</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ArrayEditHelper">
            <summary>Вспомогательный класс для изменения массивов</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ArrayEditHelper.ValidateItemDelegate">
            <summary> Процедура валидаци элемента массива </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ArrayEditHelper.DeleteValues(System.Array,Intermech.Interfaces.Document.ArrayEditHelper.ValidateItemDelegate)">
            <summary> Удаление из массива всех элементов не удовлетворяющих условиям валидации </summary>
            <param name="array"> массив </param>
            <param name="itemValidator"> процедура валидации элемента массива </param>
            <returns> Подчищеный массив </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ArrayEditHelper.DeleteValues(System.Array,System.Object)">
            <summary> Удаление из массива всех элементов со значениями = delValue </summary>
            <param name="array"> массив </param>
            <param name="delValue"> Удаляемое значение </param>
            <returns> Подчищенный массив </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ArrayEditHelper.IsArraysContentEqual(System.Array,System.Array)">
            <summary>Сравнение содержимого двух массивов вне зависимости от того, в каком порядке они расположены</summary>
            <param name="array1">Массив 1</param>
            <param name="array2">Массив 2</param>
            <returns>Содержат ли переданные массивы одинаковые элементы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ArrayEditHelper.AddItemToArray(System.Array,System.Object)">
            <summary>Добавить элемент в массив</summary>
            <param name="array">Массив</param>
            <param name="newItem">Новый элемент массива</param>
            <returns>Новый массив с новым элементом</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ArrayEditHelper.InsertItemToArray(System.Array,System.Object,System.Int32)">
            <summary>Вставить элемент в массив</summary>
            <param name="array">Массив</param>
            <param name="newItem">Новый элемент массива</param>
            <param name="index">Индекс элемента</param>
            <returns>Новый массив с новым элементом</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ArrayEditHelper.RemoveItemAt(System.Array,System.Int32)">
            <summary>Удалить элемент из массива</summary>
            <param name="array">Массив</param>
            <param name="index">Индекс удаляемого элемента</param>
            <returns>Новый массив без элемента</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ArrayEditHelper.MoveItem(System.Collections.IList,System.Int32,System.Int32)">
            <summary>Переместить элемент массива</summary>
            <param name="list">Исходный массив</param>
            <param name="index">Индекс элемента</param>
            <param name="newIndex">Новый индекс элемента</param>
            <returns>Массив с перемещенным элементом</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ArrayEditHelper.MoveItem(System.Array,System.Int32,System.Int32,System.Boolean)">
            <summary>Переместить элемент массива</summary>
            <param name="array">Исходный массив</param>
            <param name="index">Индекс элемента</param>
            <param name="newIndex">Новый индекс элемента</param>
            <param name="useSourceArray">Перемещать в исходном массиве, 
            иначе создавать копию и перемещать в ней</param>
            <returns>Массив с перемещенным элементом</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Code128Content">
            <summary>
            Represent the set of code values to be output into barcode form
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Content.#ctor(System.String)">
            <summary>
            Create content based on a string of ASCII data
            </summary>
            <param name="AsciiData">the string that should be represented</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Code128Content.Codes">
            <summary>
            Provides the Code128 code values representing the object's string
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Content.StringToCode128(System.String)">
            <summary>
            Transform the string into integers representing the Code128 codes
            necessary to represent it
            </summary>
            <param name="AsciiData">String to be encoded</param>
            <returns>Code128 representation</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Content.GetBestStartSet(Intermech.Interfaces.Document.Barcode.Code128Code.CodeSetAllowed,Intermech.Interfaces.Document.Barcode.Code128Code.CodeSetAllowed)">
            <summary>
            Determines the best starting code set based on the the first two 
            characters of the string to be encoded
            </summary>
            <param name="csa1">First character of input string</param>
            <param name="csa2">Second character of input string</param>
            <returns>The codeset determined to be best to start with</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Code128Code">
            <summary>
            Static tools for determining codes for individual characters in the content
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Code.CodesForChar(System.Int32,System.Int32,Intermech.Interfaces.Document.Barcode.CodeSet@)">
            <summary>
            Get the Code128 code value(s) to represent an ASCII character, with 
            optional look-ahead for length optimization
            </summary>
            <param name="CharAscii">The ASCII value of the character to translate</param>
            <param name="LookAheadAscii">The next character in sequence (or -1 if none)</param>
            <param name="CurrCodeSet">The current codeset, that the returned codes need to follow;
            if the returned codes change that, then this value will be changed to reflect it</param>
            <returns>An array of integers representing the codes that need to be output to produce the 
            given character</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Code.CodesetAllowedForChar(System.Int32)">
            <summary>
            Tells us which codesets a given character value is allowed in
            </summary>
            <param name="CharAscii">ASCII value of character to look at</param>
            <returns>Which codeset(s) can be used to represent this character</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Code.CharCompatibleWithCodeset(System.Int32,Intermech.Interfaces.Document.Barcode.CodeSet)">
            <summary>
            Determine if a character can be represented in a given codeset
            </summary>
            <param name="CharAscii">character to check for</param>
            <param name="currcs">codeset context to test</param>
            <returns>true if the codeset contains a representation for the ASCII character</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Code.CodeValueForChar(System.Int32)">
            <summary>
            Gets the integer code128 code value for a character (assuming the appropriate code set)
            </summary>
            <param name="CharAscii">character to convert</param>
            <returns>code128 symbol value for the character</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Code.StartCodeForCodeSet(Intermech.Interfaces.Document.Barcode.CodeSet)">
            <summary>
            Return the appropriate START code depending on the codeset we want to be in
            </summary>
            <param name="cs">The codeset you want to start in</param>
            <returns>The code128 code to start a barcode in that codeset</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Code.StopCode">
            <summary>
            Return the Code128 stop code
            </summary>
            <returns>the stop code</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Code128Code.CodeSetAllowed">
            <summary>
            Indicates which code sets can represent a character -- CodeA, CodeB, or either
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Code128Rendering">
            <summary>
            Summary description for Code128Rendering.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Code128Rendering.MakeBarcodeImage(System.String,System.Int32,System.Boolean)">
            <summary>
            Make an image of a Code128 barcode for a given string
            </summary>
            <param name="InputData">Message to be encoded</param>
            <param name="BarWeight">Base thickness for bar width (1 or 2 works well)</param>
            <param name="AddQuietZone">Add required horiz margins (use if output is tight)</param>
            <returns>An Image of the Code128 barcode representing the message</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Barcode">
            <summary>
            Generates a barcode image of a specified symbology from a string of data.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.#ctor">
            <summary>
            Default constructor.  Does not populate the raw data.  MUST be done via the RawData property before encoding.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.#ctor(System.String)">
            <summary>
            Constructor. Populates the raw data. No whitespace will be added before or after the barcode.
            </summary>
            <param name="data">String to be encoded.</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.RawData">
            <summary>
            Gets or sets the raw data to encode.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.EncodedValue">
            <summary>
            Gets the encoded value.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.Country_Assigning_Manufacturer_Code">
            <summary>
            Gets the Country that assigned the Manufacturer Code.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.EncodedType">
            <summary>
            Gets or sets the Encoded Type (ex. UPC-A, EAN-13 ... etc)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.EncodedImage">
            <summary>
            Gets the Image of the generated barcode.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.ForeColor">
            <summary>
            Gets or sets the color of the bars. (Default is black)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.BackColor">
            <summary>
            Gets or sets the background color. (Default is white)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.LabelFont">
            <summary>
            Gets or sets the label font. (Default is Microsoft Sans Serif, 10pt, Bold)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.LabelPosition">
            <summary>
            Gets or sets the location of the label in relation to the barcode. (BOTTOMCENTER is default)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.Width">
            <summary>
            Gets or sets the width of the image to be drawn. (Default is 300 pixels)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.Height">
            <summary>
            Gets or sets the height of the image to be drawn. (Default is 150 pixels)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.IncludeLabel">
            <summary>
            Gets or sets whether a label should be drawn below the image. (Default is false)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.AlternateLabel">
            <summary>
            Alternate label to be displayed.  (IncludeLabel must be set to true as well)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.EncodingTime">
            <summary>
            Gets or sets the amount of time in milliseconds that it took to encode and draw the barcode.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.XML">
            <summary>
            Gets the XML representation of the Barcode data and image.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.Errors">
            <summary>
            Gets the list of errors encountered.
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.Alignment">
            <summary>
            Gets or sets the alignment of the barcode inside the image. (Not for Postnet or ITF-14)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.Encoded_Image_Bytes">
            <summary>
            Gets a byte array representation of the encoded image. (Used for Crystal Reports)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Barcode.Barcode.Version">
            <summary>
            Gets the assembly version information.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Barcode.ImageSize">
            <summary>
            Represents the size of an image in real world coordinates (millimeters or inches).
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.Encode(Intermech.Interfaces.Document.Barcode.TYPE,System.String,System.Int32,System.Int32)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.Encode(Intermech.Interfaces.Document.Barcode.TYPE,System.String,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniColor,System.Int32,System.Int32)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.Encode(Intermech.Interfaces.Document.Barcode.TYPE,System.String,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniColor)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.Encode(Intermech.Interfaces.Document.Barcode.TYPE,System.String)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="StringToEncode">Raw data to encode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.Encode(Intermech.Interfaces.Document.Barcode.TYPE)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.Encode">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.Generate_Image">
            <summary>
            Gets a bitmap representation of the encoded data.
            </summary>
            <returns>Bitmap of encoded value.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.GetImageData(Intermech.Interfaces.Document.Barcode.SaveTypes)">
            <summary>
            Gets the bytes that represent the image.
            </summary>
            <param name="savetype">File type to put the data in before returning the bytes.</param>
            <returns>Bytes representing the encoded image.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.SaveImage(System.String,Intermech.Interfaces.Document.Barcode.SaveTypes)">
            <summary>
            Saves an encoded image to a specified file and type.
            </summary>
            <param name="Filename">Filename to save to.</param>
            <param name="FileType">Format to use.</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.SaveImage(System.IO.Stream,Intermech.Interfaces.Document.Barcode.SaveTypes)">
            <summary>
            Saves an encoded image to a specified stream.
            </summary>
            <param name="stream">Stream to write image to.</param>
            <param name="FileType">Format to use.</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.DoEncode(Intermech.Interfaces.Document.Barcode.TYPE,System.String)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.DoEncode(Intermech.Interfaces.Document.Barcode.TYPE,System.String,System.String@)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="XML">XML representation of the data and the image of the barcode.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.DoEncode(Intermech.Interfaces.Document.Barcode.TYPE,System.String,System.Boolean)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.DoEncode(Intermech.Interfaces.Document.Barcode.TYPE,System.String,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.DoEncode(Intermech.Interfaces.Document.Barcode.TYPE,System.String,System.Boolean,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniColor)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Barcode.DoEncode(Intermech.Interfaces.Document.Barcode.TYPE,System.String,System.Boolean,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniColor,System.Int32,System.Int32)">
            <summary>
            Encodes the raw data into binary form representing bars and spaces.  Also generates an Image of the barcode.
            </summary>
            <param name="iType">Type of encoding to use.</param>
            <param name="Data">Raw data to encode.</param>
            <param name="IncludeLabel">Include the label at the bottom of the image with data encoded.</param>
            <param name="DrawColor">Foreground color</param>
            <param name="BackColor">Background color</param>
            <param name="Width">Width of the resulting barcode.(pixels)</param>
            <param name="Height">Height of the resulting barcode.(pixels)</param>
            <returns>Image representing the barcode.</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.IBarcode">
            <summary>
             Barcode interface for symbology layout.
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Blank">
            <summary>
             Blank encoding template
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Codabar">
            <summary>
             Codabar encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Codabar.Encode_Codabar">
            <summary>
            Encode the raw data using the Codabar algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Code11">
            <summary>
             Code 11 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Code11.Encode_Code11">
            <summary>
            Encode the raw data using the Code 11 algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Code128">
            <summary>
             Code 128 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Code128.#ctor(System.String)">
            <summary>
            Encodes data in Code128 format.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Code128.#ctor(System.String,Intermech.Interfaces.Document.Barcode.Symbologies.Code128.TYPES)">
            <summary>
            Encodes data in Code128 format.
            </summary>
            <param name="input">Data to encode.</param>
            <param name="type">Type of encoding to lock to. (Code 128A, Code 128B, Code 128C)</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Code39">
            <summary>
             Code 39 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Code39.#ctor(System.String)">
            <summary>
            Encodes with Code39.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Code39.#ctor(System.String,System.Boolean)">
            <summary>
            Encodes with Code39.
            </summary>
            <param name="input">Data to encode.</param>
            <param name="AllowExtended">Allow Extended Code 39 (Full Ascii mode).</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Code39.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Encodes with Code39.
            </summary>
            <param name="input">Data to encode.</param>
            <param name="AllowExtended">Allow Extended Code 39 (Full Ascii mode).</param>
            <param name="EnableChecksum">Whether to calculate the Mod 43 checksum and encode it into the barcode</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Code39.Encode_Code39">
            <summary>
            Encode the raw data using the Code 39 algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Code93">
            <summary>
             Code 93 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Code93.#ctor(System.String)">
            <summary>
            Encodes with Code93.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Code93.Encode_Code93">
            <summary>
            Encode the raw data using the Code 93 algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.EAN13">
            <summary>
             EAN-13 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.EAN13.Encode_EAN13">
            <summary>
            Encode the raw data using the EAN-13 algorithm. (Can include the checksum already.  If it doesnt exist in the data then it will calculate it for you.  Accepted data lengths are 12 + 1 checksum or just the 12 data digits)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.EAN8">
            <summary>
             EAN-8 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.EAN8.Encode_EAN8">
            <summary>
            Encode the raw data using the EAN-8 algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.FIM">
            <summary>
             FIM encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Interleaved2of5">
            <summary>
             Interleaved 2 of 5 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Interleaved2of5.Encode_Interleaved2of5">
            <summary>
            Encode the raw data using the Interleaved 2 of 5 algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.ISBN">
            <summary>
             ISBN encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.ISBN.Encode_ISBN_Bookland">
            <summary>
            Encode the raw data using the Bookland/ISBN algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.ITF14">
            <summary>
             ITF-14 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.ITF14.Encode_ITF14">
            <summary>
            Encode the raw data using the ITF-14 algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.JAN13">
            <summary>
             JAN-13 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.JAN13.Encode_JAN13">
            <summary>
            Encode the raw data using the JAN-13 algorithm.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.Barcode.Symbologies.MSI.MSI_Code">
            <summary>
             MSI encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.MSI.Encode_MSI">
            <summary>
            Encode the raw data using the MSI algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Pharmacode">
            <summary>
             Pharmacode encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Pharmacode.#ctor(System.String)">
            <summary>
            Encodes with Pharmacode.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Pharmacode.Encode_Pharmacode">
            <summary>
            Encode the raw data using the Pharmacode algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Postnet">
            <summary>
             Postnet encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Postnet.Encode_Postnet">
            <summary>
            Encode the raw data using the PostNet algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Standard2of5">
            <summary>
             Standard 2 of 5 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Standard2of5.Encode_Standard2of5">
            <summary>
            Encode the raw data using the Standard 2 of 5 algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.Telepen">
            <summary>
             Telepen encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Telepen.#ctor(System.String)">
            <summary>
            Encodes data using the Telepen algorithm.
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.Telepen.Encode_Telepen">
            <summary>
            Encode the raw data using the Telepen algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.UPCA">
            <summary>
             UPC-A encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.UPCA.Encode_UPCA">
            <summary>
            Encode the raw data using the UPC-A algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.UPCE">
            <summary>
             UPC-E encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.UPCE.#ctor(System.String)">
            <summary>
            Encodes a UPC-E symbol.
            </summary>
            <param name="input">Data to encode.</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.UPCE.Encode_UPCE">
            <summary>
            Encode the raw data using the UPC-E algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.UPCSupplement2">
            <summary>
             UPC Supplement-2 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.UPCSupplement2.Encode_UPCSupplemental_2">
            <summary>
            Encode the raw data using the UPC Supplemental 2-digit algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Barcode.Symbologies.UPCSupplement5">
            <summary>
             UPC Supplement-5 encoding
             Written by: Brad Barnhill
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Barcode.Symbologies.UPCSupplement5.Encode_UPCSupplemental_5">
            <summary>
            Encode the raw data using the UPC Supplemental 5-digit algorithm.
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.BorderLineTE">
            <summary>Класс описывающий линию границы элемента для виртуального TableElement</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineTE.Clone">
            <summary>Создать полную копию линии</summary>
            <returns>Возвращает полную копию линии</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineTE.Equals(System.Object)">
            <summary>Проверяет равенство объектов</summary>
            <param name="obj">Объект с которым сравнивать</param>
            <returns>true, если объекты эквивалентны</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineTE.GetHashCode">
            <summary>Получить хэш код объекта</summary>
            <returns>Хэш код объекта</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLineTE.ColorTE">
            <summary>Цвет</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLineTE.StyleTE">
            <summary>Стиль</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLineTE.WidthTE">
            <summary>Толщина линии в миллиметрах. 0 означает толщину по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLineTE.SerifWidthTE">
            <summary>
            Длина штриха в миллиметрах при стиле линии "Один штрих в начале"
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.BorderLine">
            <summary>Класс описывающий линию границы элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.#ctor">
            <summary>Создать линию с параметрами по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.#ctor(Intermech.Drawing.Common.UniColor,Intermech.Interfaces.Document.BorderStyles,System.Single)">
            <summary>Создать линию с заданными параметрами</summary>
            <param name="color">Цвет</param>
            <param name="style">Стиль</param>
            <param name="width">Толщина. Если толщина 0, то используется толщина линии по умолчанию</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.#ctor(Intermech.Drawing.Common.UniColor,Intermech.Interfaces.Document.BorderStyles,System.Single,System.Single)">
            <summary>Создать линию с заданными параметрами</summary>
            <param name="color">Цвет</param>
            <param name="style">Стиль</param>
            <param name="width">Толщина. Если толщина 0, то используется толщина линии по умолчанию</param>
            <param name="serifWidth">Длина штриха в миллиметрах, для стиля "один штрих в начале"</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.#ctor(System.Single)">
            <summary>Создать линию с заданными параметрами</summary>
            <param name="width">Толщина. Если толщина 0, то используется толщина линии по умолчанию</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.#ctor(Intermech.Interfaces.Document.BorderStyles)">
            <summary>Создать линию заданного стиля</summary>
            <param name="style">Стиль</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.#ctor(Intermech.Interfaces.Document.BorderStyles,System.Single)">
            <summary>Создать линию заданного стиля</summary>
            <param name="style">Стиль</param>
            <param name="width">Толщина. Если толщина 0, то используется толщина линии по умолчанию</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.Clone">
            <summary>Создать полную копию линии</summary>
            <returns>Возвращает полную копию линии</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.System#ICloneable#Clone">
            <summary>Создать полную копию линии</summary>
            <returns>Возвращает полную копию линии</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLine.Color">
            <summary>Цвет</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLine.Style">
            <summary>Стиль</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLine.Width">
            <summary>Толщина линии в миллиметрах. 0 означает толщину по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLine.SerifWidth">
            <summary>
            Длина штриха в миллиметрах при стиле линии "Один штрих в начале"
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLine.WidthNot0">
            <summary>Ненулевая толщина линии. Значение 0, заменяется на значение по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.ConvertToDashStyle(Intermech.Interfaces.Document.BorderStyles)">
            <summary>Преобразовать стиль границы в стиль линии</summary>
            <param name="style">Стиль границы</param>
            <returns>Стиль линии</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.BorderLine.PenDashStyle">
            <summary>Стиль штрихов линии</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.GetPen">
            <summary>Получить объект Pen соответствующий стилю линии, для отрисовки в миллиметрах</summary>
            <returns>Возвращает объект Pen соответствующий стилю линии</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать поле из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле было прочитано</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.Equals(System.Object)">
            <summary>Проверяет равенство объектов</summary>
            <param name="obj">Объект с которым сравнивать</param>
            <returns>true, если объекты эквивалентны</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLine.GetHashCode">
            <summary>Получить хэш код объекта</summary>
            <returns>Хэш код объекта</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.BorderLineConverter">
            <summary>Конвертер типа BorderLine</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverter.HasTemplate(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Имеют ли элементы шаблон
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverterTE.HasTemplate(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Имеют ли элементы шаблон
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverterTE.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverterTE.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverterTE.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverterTE.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverterTE.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.BorderLineConverterTE.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.BorderStyles">
            <summary>Перечисление перечисление стилей линии</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BorderStyles.None">
            <summary>Нет линии</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BorderStyles.SolidLine">
            <summary>Сплошная</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BorderStyles.Dash">
            <summary>Штриховая</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BorderStyles.DashDot">
            <summary>Штрих-пунктирная</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BorderStyles.DashDotDot">
            <summary>Штрих-точка-точка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BorderStyles.Dot">
            <summary>Пунктирная</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BorderStyles.Serif">
            <summary>Один штрих в начале</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.CharFormat">
            <summary> Дескриптор шрифта </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.FontFamily">
            <summary> Название шрифта </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.GdiCharSet">
            <summary>Кодовая страница</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.BoldItalic">
            <summary>Стиль символа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.FontSize">
            <summary>Размер шрифта, в точках</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.FontSizeMm">
            <summary> Размер шрифта, в мм</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.TextColor">
            <summary> Цвет текста </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.TextColorForUser">
            <summary> Цвет текста </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.TextBkColor">
            <summary>Цвет фона текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.TextBkColorForUser">
            <summary> Цвет текста </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.Underline">
            <summary> Стиль подчёркивания </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.Strike">
            <summary> Стиль зачеркивания </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.AllCaps">
            <summary> Все Прописные </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.AllSmallCaps">
            <summary> Малые прописные </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.Subscript">
            <summary>Подстрочный </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.Superscript">
            <summary>Надстрочный </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.HiddenText">
            <summary>Скрытый </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.UnderlineColor">
            <summary> Цвет подчёркивания. Если равен null, то цвет подчёркивания = цвету текста </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.CharStyle">
            <summary> Модификаторы </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.UndefinedCharStyles">
            <summary> 
            Модификаторы у которых неопределены значения. 
            Например, в том случае, если выбран и зачёркнутый и не зачёркнутый текст, то в данной структуре будет установлен флаг BOLD 
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.Zoom">
            <summary> Масштаб </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.Interval">
            <summary> Интервал </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.Displacement">
            <summary> Смещение </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CharFormat.CalcFontSize">
            <summary>
            Автоматически расчитанный размер шрифта (для авторазмера текста в ячейке) 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.System#ICloneable#Clone">
            <summary> Создание копии </summary>
            <returns> Копия объекта </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.#ctor(Intermech.Drawing.Common.IUniFont)">
            <summary>Конструктор</summary>
            <param name="font">Шрифт на основе которого создать</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.#ctor(System.String,System.Single,Intermech.Interfaces.Document.CharStyle)">
            <summary>Конструктор</summary>
            <param name="fontFamily">Имя шрифта</param>
            <param name="fontSize">Размер шрифта</param>
            <param name="charStyle">Стиль шрифта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.FontStyleToCharStyle(Intermech.Drawing.Common.UniFontStyle)">
            <summary>Преобразовать FontStyle в CharStyle</summary>
            <param name="fontStyle">FontStyle</param>
            <returns>CharStyle</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.CharStyleToFontStyle(Intermech.Interfaces.Document.CharStyle)">
            <summary>Преобразовать FontStyle в CharStyle</summary>
            <param name="charStyle">CharStyle</param>
            <returns>FontStyle</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.Clone">
            <summary> Создание копии </summary>
            <returns> Копия объекта </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.CopyParamsFrom(Intermech.Interfaces.Document.CharFormat)">
            <summary> Копирование параметров из некоторого другого объекта </summary>
            <param name="CharFormat"> Дексриптор шрифта, параметры которого должны быть скопированы в данный </param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.GetFont">
            <summary>Получить соответствующий экземпляр класса Font. 
            Учитываются поля fontFamily, fontSize, charStyle, gdiCharSet</summary>
            <returns>Соответствующий экземпляр класса Font</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormat.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать одно поле из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле прочитано</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.CharFormatConverter">
            <summary>Конвертер типа CharFormat</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormatConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CharFormatConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.DefaultCharFormatConverter">
            <summary>Конвертер типа CharFormat для настроек по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DefaultCharFormatConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DefaultCharFormatConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DefaultCharFormatConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DefaultCharFormatConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.BoldItalicStyle">
            <summary> Стиль шрифта </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BoldItalicStyle.Regular">
            <summary>Обычный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BoldItalicStyle.Bold">
            <summary> Жирный </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BoldItalicStyle.Italic">
            <summary> Курсив </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BoldItalicStyle.BoldItalic">
            <summary>Все</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.UnderlineStyle">
            <summary> Стиль подчёркивания </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UnderlineStyle.None">
            <summary> Подчёркивание отсутствует </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UnderlineStyle.Underline">
            <summary> Подчеркивание </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UnderlineStyle.DoubleUnderline">
            <summary> Двойное подчеркивание </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UnderlineStyle.All">
            <summary>Все</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.StrikeoutLineStyle">
            <summary> Стиль линии перечеркивания </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.StrikeoutLineStyle.None">
            <summary> Нет перечёркивания </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.StrikeoutLineStyle.SingleLine">
            <summary> Перечёркивание </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.StrikeoutLineStyle.DoubleLine">
            <summary> Двойное перечёркивание </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.StrikeoutLineStyle.All">
            <summary>Все</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.CharStyle">
            <summary>Стиль символа для RTF</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.Regular">
            <summary>Обычный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.Bold">
            <summary>Полужирный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.Underline">
            <summary>Подчеркивание</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.DoubleUnderline">
            <summary>Двойное подчеркивание</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.Italic">
            <summary>Курсив</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.Strikethrough">
            <summary>Зачеркнутый</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.Superscript">
            <summary>Надстрочный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.Subscript">
            <summary>Подстрочный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.HiddenText">
            <summary>Скрытый</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.ProtectedText">
            <summary>Защищенный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.Hyperlink">
            <summary>Гиперссылка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.AllCaps">
            <summary>Все прописные</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.AllSmallCaps">
            <summary>Все малые прописные</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.Picture">
            <summary>Рисунок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.StrikeNull">
            <summary>Стиль не определен</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CharStyle.DoubleStrikethrough">
            <summary>Двойное зачёркивание</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ContainerData">
            <summary>Контейнер OLE объектов и рисунков</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ContainerData.TypeNameForConstructorDictionary">
            <summary>Имя типа для словаря конструкторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать метод инициализации полей InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Границы элемента</param>
            <param name="visible">Видимый элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.CreateEmptySingleCell(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Создать пустую ячейку таблицы</summary>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Границы элемента</param>
            <param name="visible">Видимый элемент</param>
            <returns>Ячейка таблицы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.CreateEmptyTable(System.Boolean,Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Создать пустую таблицу</summary>
            <param name="isColumn">Столбец</param>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Размеры элемента</param>
            <param name="visible">Видимый</param>
            <returns>Таблица</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.ContainerData.ElementTypeName">
            <summary>Имя типа элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.Draw(Intermech.Interfaces.Document.DrawContext)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.DrawCell(Intermech.Interfaces.Document.DrawContext,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="colIndex">Индекс столбца</param>
            <param name="gridRows">Строки сетки</param>
            <param name="rowIndex">Индекс строки</param>
            <param name="findGridParams">Искать столбец и строк если не заданы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.SaveImageToFile(Intermech.Drawing.Common.IUniImage,System.String)">
            <summary>
            Сохранить Image в файл
            </summary>
            <param name="image">Изображение</param>
            <param name="filename">Путь к файлу</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.SaveImageToStream(Intermech.Drawing.Common.IUniImage,System.IO.Stream)">
            <summary>Сохранить Image в Stream</summary>
            <param name="image">Изображение</param>
            <param name="stream">Поток</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.CanUseNodeAsTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Можно ли использовать заданный узел как шаблон</summary>
            <param name="node">Узел</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.Reference">
            <summary>Ссылка на объект содержащий данные</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.AssignReference(Intermech.Interfaces.Document.ReferenceToGraphicsBase,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить ссылку на изображение</summary>
            <param name="value">Значение ссылки</param>
            <param name="resetImageAndDataStream">Сбросить значения для Image и DataStream</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.Intermech#Interfaces#Document#INodeWithReference#Reference">
            <summary>Свойство для интерфейса INodeWithReference</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.OriginalSize">
            <summary>Оригинальный размер рисунка, мм</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.AssignOriginalSize(Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean)">
            <summary>Назначить свойство OriginalSize</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.GetOriginalImageSizeInMM(Intermech.Drawing.Common.IUniImage)">
            <summary>Получить оригинальный размер изображения в мм</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.OriginalContentHeight">
            <summary>Высота содержимого ячейки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.ContentHeight">
            <summary>Высота содержимого ячейки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.UpdateImageIfNotLoaded">
            <summary>
            Обновить изображение если не загружено
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.DistributeCell(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Распределить данные по ячейке представления</summary>
            <param name="newSize">Новый размер</param>
            <param name="maxSize">Максимальный размер</param>
            <param name="distributed">Результат распределения</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.ScaleMode">
            <summary>Режим масштабирования</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.AssignScaleMode(Intermech.Interfaces.Document.ImageScaleMode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить свойство ScaleMode</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.VertAlignment">
            <summary>Вертикальное выравнивания изображения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.SetVertAlignment(Intermech.Interfaces.Document.VertAlignment,System.Boolean)">
            <summary>Назначить значение VertAlignment</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.HorzAlignment">
            <summary>Горизонтальное выравнивания изображения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.SetHorzAlignment(Intermech.Interfaces.Document.ContainerHorzAlignment,System.Boolean)">
            <summary>Назначить значение HorzAlignment</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.OnBranchRemoved(Intermech.Interfaces.Document.Removed_EventArgs)">
            <summary>Метод вызывается при удалении ветки, в которой находится этот узел</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.DataSourceType">
            <summary>Тип данных хранимых в dataStream или image</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.ConvertToHeader(System.Boolean)">
            <summary>Преобразовать в ячейку-шапку рекурсивно. Удаляет ячейки данных</summary>
            <param name="removeData">Удалить данные</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.Image">
            <summary>Рисунок</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.SetImage(Intermech.Drawing.Common.IUniImage,System.Boolean,System.Boolean)">
            <summary>Назначить значение Image</summary>
            <param name="value"></param>
            <param name="updateUI"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.AssignImage(Intermech.Drawing.Common.IUniImage,Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойства Image</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.GetDataStream">
            <summary>Поток данных рисунка. OLE или DWG файл. 
            Желательно устанавливать соответствующее значение DataSourceType</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.SetFieldValue(System.String,System.Object)">
            <summary>Установить значение поля</summary>
            <param name="fieldName">Имя поля</param>
            <param name="value">Значение поля</param>
            <returns>true, если поле найдено</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.ArcMethod">
            <summary>Метод упаковки данных в DataStream</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.AssignDataStream(System.IO.Stream,Intermech.Interfaces.Document.DataSourceType,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойства DataStream</summary>
            <param name="value">Поток данных</param>
            <param name="sourceType">Тип данных</param>
            <param name="resetReference">Сбросить ссылку на данные</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="setOverrideFlag">Установить флаг перекрытия шаблона</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.AssignDataStream(System.IO.Stream,Intermech.Interfaces.Document.DataSourceType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойства DataStream</summary>
            <param name="value">Поток данных</param>
            <param name="sourceType">Тип данных</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="setOverrideFlag">Установить флаг перекрытия шаблона</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.AssignDataStream(System.IO.Stream,Intermech.ArcMethods,Intermech.Interfaces.Document.DataSourceType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойства DataStream</summary>
            <param name="value">Поток данных</param>
            <param name="arcMethod">Тип упаковки поданного потока данных, поток хранится в поданном виде и распаковывается по необходимости
            Этот метод сам не производит упаковку!</param>
            <param name="sourceType">Тип данных</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="setOverrideFlag">Установить флаг перекрытия шаблона</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.AssignDataStream(System.IO.Stream,Intermech.ArcMethods,Intermech.Interfaces.Document.DataSourceType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойства DataStream</summary>
            <param name="value">Поток данных</param>
            <param name="arcMethod">Тип упаковки поданного потока данных, поток хранится в поданном виде и распаковывается по необходимости
            Этот метод сам не производит упаковку!</param>
            <param name="sourceType">Тип данных</param>
            <param name="resetReference">Сбросить ссылку на данные</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="setOverrideFlag">Установить флаг перекрытия шаблона</param>
            <param name="check">Проверка на возможность вставки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.LoadToMemoryStream(System.IO.Stream,System.Int32)">
            <summary>Загрузить поток в поток в памяти</summary>
            <param name="sourceStream">Поток источник</param>
            <param name="bufferSize">Размер буфера чтения</param>
            <returns>Возвращает поток в памяти с данными из потока источника</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.FileName">
            <summary>Имя файла, из которого по ссылке был загружен поток</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ContainerData.Layers">
            <summary>Слои в ссылке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ContainerData.Dispose">
            <summary>Освободить все ресурсы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ContainerData.drawImageFailed">
            <summary>Не удалось отобразить изображение</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ContainerData.firstDrawImage">
            <summary>
            Первая отрисовка после загрузки, флаг используется для попытки обновления Image после загрузки
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImageScaleMode">
            <summary>Режим масштабирования изображения и автоподбора размера контейнера</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImageScaleMode.OriginalClip">
            <summary>Масштаб 1:1, обрезать лишнее</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImageScaleMode.OriginalAutoSize">
            <summary>Масштаб 1:1, размер контейнера по изображению</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImageScaleMode.FitWidthHeight">
            <summary>Вписать по ширине и высоте</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ContainerHorzAlignment">
            <summary>Горизонтальное выравнивание изображения</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ContainerHorzAlignment.Left">
            <summary>Слева</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ContainerHorzAlignment.Center">
            <summary>По центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ContainerHorzAlignment.Right">
            <summary>Справа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DataSourceType.Unknown">
            <summary>Тип неизвестен</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DataSourceType.Image">
            <summary>Картинка типа поддерживаемая типом Image</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DataSourceType.ShowNET">
            <summary>Картинка типа поддерживаемая ShowObject</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DataSourceType.OLE">
            <summary>OLE объект</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DataSourceType.OLE_File">
            <summary>
            OLE объект в котором хранится файл, т.к. из потока создать объект нельзя
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DataSourceType.OLE_Clipboard">
            <summary>OLE объект из системного буфера обмена</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DataSourceType.Pdf">
            <summary>
            В файл хранится pdf
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.CustomBooleanConverter">
            <summary>Конвертер для булевского типа. При конвертировании в строку выдает Да/Нет. 
            Имеет список стандартных значений.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CustomBooleanConverter.TrueString">
            <summary>Расшифровка значения true</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CustomBooleanConverter.FalseString">
            <summary>Расшифровка значения false</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanConverter.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanConverter.#ctor(System.String,System.String)">
            <summary>Конструктор</summary>
            <param name="trueString">Расшифровка для true</param>
            <param name="falseString">Расшифровка для false</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Получает значение, показывающее, поддерживает ли этот объект стандартный 
            набор значений, которые можно выбрать из списка, используя заданную 
            контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <returns>true, если, чтобы найти стандартный набор значений, поддерживаемых данным объектом, следует 
            вызвать метод GetStandardValues, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает коллекцию стандартных значений для того типа данных, 
            которым предназначен этот конвертер типа, если предоставлена контекстная 
            информация о формате</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате, которая может быть использована для извлечения дополнительных сведений о среде,
             из которой вызывается этот конвертер. Этот параметр или свойства этого параметра 
             могут иметь значение пустая ссылка</param>
            <returns>TypeConverter.StandardValuesCollection, содержащий стандартный 
            набор допустимых значений, или пустая ссылка, если этот тип данных не поддерживает 
            стандартный набор значений</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, является ли исчерпывающим списком возможных 
            значений коллекция стандартных значений, возвращаемая методом GetStandardValues, 
            используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <returns>true, если объект TypeConverter.StandardValuesCollection, возвращенный 
            методом GetStandardValues, является исчерпывающим списком возможных значений, 
            false, если возможны другие значения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanNullableConverter.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanNullableConverter.#ctor(System.String,System.String)">
            <summary>Конструктор</summary>
            <param name="trueString">Расшифровка для true</param>
            <param name="falseString">Расшифровка для false</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanNullableConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, является ли исчерпывающим списком возможных 
            значений коллекция стандартных значений, возвращаемая методом GetStandardValues, 
            используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <returns>true, если объект TypeConverter.StandardValuesCollection, возвращенный 
            методом GetStandardValues, является исчерпывающим списком возможных значений, 
            false, если возможны другие значения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanNullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBooleanNullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.CustomPropertyDescriptor">
            <summary>Настраиваемый PropertyDescriptor, 
            который является оболочкой для PropertyDescriptor выдаваемого 
            TypeDescriptor.GetProperties</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.AddAttribute(System.Attribute)">
            <summary>Добавить атрибут свойства</summary>
            <param name="attr">Атрибут</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomPropertyDescriptor.Attributes">
            <summary>Атрибуты свойства</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CustomPropertyDescriptor._PropDesc">
            <summary>Исходный PropertyDescriptor полученный TypeDescriptor.GetProperties</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>Конструктор</summary>
            <param name="PropDesc">Исходный PropertyDescriptor полученный TypeDescriptor.GetProperties, 
            на основе которого работает класс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.#ctor(System.String,System.Attribute[])">
            <summary>Конструктор</summary>
            <param name="displayName"></param>
            <param name="attrs"></param>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomPropertyDescriptor.Category">
            <summary>Категория свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.SetName(System.String)">
            <summary>
            Установить имя
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomPropertyDescriptor.ComponentType">
            <summary>Просто обращается к исходному объекту</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomPropertyDescriptor.IsReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.SetIsReadOnly(System.Boolean)">
            <summary>Устанавливает значение IsReadOnly поверх базового. Если true, то перекрывает ReadOnly, 
            если false, то зависит от базового</summary>
            <param name="value">Новое значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomPropertyDescriptor.PropertyType">
            <summary>Просто обращается к исходному объекту</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.CanResetValue(System.Object)">
            <summary>Можно ли сбросить значение свойства</summary>
            <remarks>Просто обращается к исходному объекту</remarks>
            <param name="component">Владелец свойства</param>
            <returns>Можно ли сбросить значение свойства</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.GetValue(System.Object)">
            <summary>Получить значение свойства</summary>
            <remarks>Просто обращается к исходному объекту</remarks>
            <param name="component">Владелец свойства</param>
            <returns>Значение свойства</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.ResetValue(System.Object)">
            <summary>Сбросить значение свойства</summary>
            <remarks>Просто обращается к исходному объекту</remarks>
            <param name="component">Владелец свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>Установить значение свойства</summary>
            <remarks>Просто обращается к исходному объекту</remarks>
            <param name="component">Владелец свойства</param>
            <param name="value">Значение свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>Нужно ли сохранить данное значение свойства</summary>
            <remarks>Просто обращается к исходному объекту</remarks>
            <param name="component">Владелец свойства</param>
            <returns>Нужно ли сохранить данное значение свойства</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PropertiesExtensionHelper.RemoveProperty(System.Collections.IDictionary,System.String)">
            <summary>Удалить свойство из списка</summary>
            <param name="properties">Список свойств</param>
            <param name="propertyName">Имя свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PropertiesExtensionHelper.SetReadOnlyProperty(System.Collections.IDictionary,System.String,System.Boolean)">
            <summary>
            Установить флаг ReadOnly для свойства, если оно есть
            </summary>
            <param name="properties">Словарь свойств</param>
            <param name="propertyName">Имя свойства</param>
            <param name="value">Значение</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.DictionaryHelper">
            <summary> Всякие полезные функции для работы со словарём </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DictionaryHelper.ValidateItemDelegate">
            <summary> Процедура валидаци элемента словаря </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DictionaryHelper.ValidateDictionary(System.Object@,Intermech.Interfaces.Document.DictionaryHelper.ValidateItemDelegate)">
            <summary> Валидация словаря. Удаляет элементы, которые не проходят валидацию </summary>
            <param name="dictionary"> Объект, поддерживающий интерфейс IDictionary </param>
            <param name="itemValidator"> Процедура валидации элемента</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.LocalizedExpandableObjectConverter">
            <summary>Локализованный конвертер типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.LocalizedExpandableObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.LocalizedExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.LocalizedExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Поддерживает ли класс получение свойств GetProperties()</summary>
            <param name="context">Контекст дескриптора</param>
            <returns>true, если класс получение свойств GetProperties()</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.LocalizedExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Получить дескрипторы свойств</summary>
            <param name="context">Контекст</param>
            <param name="value">Объект</param>
            <param name="attributes">Атрибуты свойств</param>
            <returns>Коллекция дескрипторов свойств объекта</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.DistributeContext">
            <summary>Вспомогательный класс для передачи контекста разбивки и наследуемых параметров</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeContext.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniSizeF,Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец контекста</param>
            <param name="newSize">Новый размер</param>
            <param name="maxSize">Максимальный размер</param>
            <param name="canDistributeTopTable">Может ли разбиваться таблица верхнего уровня</param>
            <param name="force">Разбивать игнорируя флаг NeedUpdateLayoutFlag</param>
            <param name="firstPass">Первый проход разбивки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeContext.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniSizeF,Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean,Intermech.Interfaces.Document.DistributeContext)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец контекста</param>
            <param name="newSize">Новый размер</param>
            <param name="maxSize">Максимальный размер</param>
            <param name="isFirstCell">Является ли текущая ячейка первой ячейкой</param>
            <param name="isFirstDataCell">Является ли текущая ячейка первой ячейкой данных</param>
            <param name="parentContext">Контекст разбивки родительского элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeContext.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец контекста</param>
            <param name="force">Разбивать игнорируя флаг NeedUpdateLayoutFlag</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeContext.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.ParentContext">
            <summary>Родительский контекст разбивки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.Force">
            <summary>Разбивать игнорируя флаг NeedUpdateLayoutFlag</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.NewSize">
            <summary>Новый размер элемента</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.MaxSize">
            <summary>Максимальный размер элемента</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.TryNotBreak_Failed">
            <summary>Попытка не разбивать элемент в этом и внутренних элементах была неудачной</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DistributeContext.SecondDynamicHeaderIteration">
            <summary>Вторая итерация разбивки для динамических заголовков</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DistributeContext.CalculatedForCellsProperBounds">
            <summary>
            Текущие границы таблицы без пропусков, на основе размещённых в ней ячеек
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.InsufficientPageSize">
            <summary>Размера страницы недостаточно для разбивки элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DistributeContext.Deleted">
            <summary>Элемент был удалён, как пустой "хвост" цепочки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.colParams">
            <summary>Параметры столбцов сетки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.rowParams">
            <summary>Параметры строк сетки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.cellCollParams">
            <summary>Параметры столбца</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.cellRowParams">
            <summary>Параметры строки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.TryNotBreak">
            <summary>Пытаться не разбивать элемент</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.FirstOnPage">
            <summary>Элемент должен быть первым на странице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.FirstDataOnPage">
            <summary>Элемент должен быть первым из данных на странице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.KeepWithNext_IsFirstDataOnPage">
            <summary>Перед этой таблицей идёт блок KeepWithNext и он начинается с начала страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.CanDistributeTopTable">
            <summary>Может ли разбиваться таблица верхнего уровня</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.SkipSizeAfter">
            <summary>Размер пропуска строк текущий момент. Нужен для слежением за изменениями пропусков при переносах</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.FirstPass">
            <summary>Первый проход разбивки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext.OwnerNode">
            <summary>Узел владелец контекста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DistributeContext.MoveTailToFinalPage">
            <summary>Специальный проход для перемещения части данных на последний лист, чтобы он не оставался пустым</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DistributeDataEnumerator">
            <summary>Специальный энумератор для прохода по ячейкам при разбивке таблицы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeDataEnumerator._baseTable">
            <summary>Разбиваемая таблица для которой собираются ячейки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeDataEnumerator._headerCellsIsAvailable">
            <summary>В этой таблице могут быть ячейки типа заголовок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeDataEnumerator._canVerticalDistribute">
            <summary>Эту таблицу можно разбивать по вертикали</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeDataEnumerator.#ctor(Intermech.Interfaces.Document.TableData,System.Boolean,System.Boolean,Intermech.Interfaces.Document.DistributeContext)">
            <summary>Конструктор</summary>
            <param name="table">Разбиваемая таблица для которой собираются ячейки</param>
            <param name="headerCellsIsAvailable">В этой таблице могут быть ячейки типа заголовок</param>
            <param name="canVerticalDistribute">Эту таблицу можно разбивать по вертикали</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentsComplect.TypeNameForConstructorDictionary">
            <summary>Имя типа для словаря конструкторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.InitFields">
            <summary>Инициализировать поля объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызвать метод InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.#cctor">
            <summary>Конструктор</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentsComplect.ElementTypeName">
            <summary>Имя типа элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentsComplect.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.GetDefautCaption">
            <summary>Получить подпись элемента по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentsComplect.OpenMode">
            <summary>
            Режим открытия документа
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.GetRootDocumentsComplect">
            <summary>Получить корневой комплект документов</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.GetPrevDocument(Intermech.Interfaces.Document.DocumentTreeNode,System.Int32,System.Boolean)">
            <summary>Получить документ идущий перед текущим</summary>
            <param name="currDocumentParent">Владелец текущего документа</param>
            <param name="currDocumentIndex">Индекс текущего документа в коллекции владельца</param>
            <param name="inOwnerComplectOnly">Только в пределах комплекта документов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.GetNextDocument(Intermech.Interfaces.Document.DocumentTreeNode,System.Int32,System.Boolean)">
            <summary>Получить страницу идущую после текущей в документе</summary>
            <param name="currDocumentParent">Владелец текущего документа</param>
            <param name="currDocumentIndex">Индекс текущего документа в коллекции владельца</param>
            <param name="inOwnerComplectOnly">Только в пределах комплекта документов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.GetAllDocuments">
            <summary>
            Получить все документы входящие в комплект
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.GetFirstDocument(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Получить первый документ у заданного владельца</summary>
            <param name="documentParent">Владелец документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.GetLastDocument(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Получить последний документ у заданного владельца</summary>
            <param name="documentParent">Владелец документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.GetPageEnumerator">
            <summary>Получить энумератор для проматывания страниц</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.GetEnumerator">
            <summary>Получить энумератор для проматывания документов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.System#Collections#IEnumerable#GetEnumerator">
            <summary>Получить энумератор для проматывания документов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentsComplect.Modified">
            <summary>Документ изменен после сохранения или открытия</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.SetModifiedRecursive(System.Boolean)">
            <summary>Назначить вниз по всему дереву значение флага Modified</summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.SetIsDocumentLoadingRecursive(System.Boolean)">
            <summary>Назначить вниз по всему дереву значение флага IsDocumentLoading</summary>
            <param name="value">Значение</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentsComplect.ModifiedChanged">
            <summary>Событие Изменено свойство Modified</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.OnModifiedChanged(Intermech.Interfaces.Document.ModifiedChanged_EventArgs)">
            <summary>Вызывает событие ModifiedChanged</summary>
            <param name="e">Аргументы события</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentsComplect.PageCount">
            <summary>Количество страниц в комплекте</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.UpdatePageNumbers(Intermech.Interfaces.Document.ImDocumentData,System.Int32,System.Boolean,System.Boolean)">
            <summary>Обновить номера страниц</summary>
            <param name="startIndex">Индекс страницы с которой начать обновление</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentsComplect.PrintDocument">
            <summary>Объект посылающий данные на печать</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.InitPrintDocument">
            <summary>Инициализировать объект для печати документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.BeginPrint(System.Object,Intermech.Drawing.Common.Events.UniPrintEventArgs)">
            <summary>Обработчик события "Начало печати документа"</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.BeforeShowPrintDialog">
            <summary>
            Метод вызывается перед открытием диалога печати
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.HasPagesForPrint(Intermech.Interfaces.Document.ImDocumentData)">
            <summary>
            В документе имеются страницы для печати
            </summary>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.printDocument_PrintPage(System.Object,Intermech.Drawing.Common.Events.UniPrintPageEventArgs)">
            <summary>Обработчик события "Печать страницы"</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.EndPrint(System.Object,Intermech.Drawing.Common.Events.UniPrintEventArgs)">
            <summary>Обработчик события "Конец печати"</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.printDocument_QueryPageSettings(System.Object,Intermech.Drawing.Common.Events.UniQueryPageSettingsEventArgs)">
            <summary>Обработчик события перед печатью каждой страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.SaveToXml(System.IO.Stream)">
            <summary>Сохранить комплект в поток в формате XML</summary>
            <param name="stream">Поток</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.SaveToXml(System.String,System.Boolean)">
            <summary>Сохранить комплект в файл в формате XML.
            Если файл с этим именем уже существует, он будет переписан!</summary>
            <param name="fileName">Имя файла</param>
            <param name="packFile">Сжимать файл</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.LoadFromXml(System.IO.Stream,System.Boolean,System.Boolean)">
            <summary>Загрузить данные документа из потока</summary>
            <param name="stream">Поток данных документа</param>
            <param name="notCloseStream">Не закрывать поток после загрузки</param>
            <param name="loadInThread">Загружать в фоновом потоке</param>
            <returns>Документ</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentsComplect.IsLoading">
            <summary>Идёт загрузка документа из файла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentsComplect.BackThreadIsActive">
            <summary>Есть активные фоновые потоки</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentsComplect.BackgroundLoadFinished">
            <summary>Событие при завершении фоновой процесса загрузки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentsComplect.OnBackgroundLoadFinished(Intermech.Interfaces.Document.BackgroundThreadsFinishedArgs)">
            <summary>Генерирует событие BackgroundLoadFinished</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentsComplect.IsFileLoading">
            <summary>Идёт загрузка документа из файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentsComplect.IsDocumentLoading">
            <summary>Идёт загрузка данных документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentsComplect.LoadFromStreamThread">
            <summary>Фоновый процесс загрузки комплекта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentsComplect.LoadedFileProductVersion">
            <summary>Версия приложения сохранившего документ. Только начиная с документов версии 40</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImDocumentEnumerator">
            <summary>Класс для промотки документов в комплектах</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentEnumerator.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец страниц в пределах которой нужно проматывать страницы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentEnumerator.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.ImDocumentData)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец страниц в пределах которой нужно проматывать страницы</param>
            <param name="startPage">Страница на которую установится энумератор после первого MoveNext</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentEnumerator.Current">
            <summary>Текущая страница</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentEnumerator.SetCurrent(Intermech.Interfaces.Document.ImDocumentData)">
            <summary>Изменить текущее положение энумератора</summary>
            <param name="value">Новое текущее положение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentEnumerator.Dispose">
            <summary>Освободить все ресурсы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentEnumerator.System#Collections#IEnumerator#Current">
            <summary>Текущий элемент</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentEnumerator.MoveNext">
            <summary>Перейти к следующему элементу</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentEnumerator.Reset">
            <summary>Сбросить энумератор в начальное состояние, т.е. до первой позиции</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentSection">
            <summary>Раздел документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.InitFields">
            <summary>Инициализировать поля объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызвать метод InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentSection.ElementTypeName">
            <summary>Имя типа элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentSection.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.GetDefautCaption">
            <summary>Получить подпись элемента по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.AddChildUI(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Добавить и связать объекты интерфейса пользователя</summary>
            <param name="child">Дочерний узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.GeneratePageMetafiles(System.Int32[],System.String)">
            <summary>Сгенерировать метафайлы для страниц</summary>
            <param name="pages">Список номеров страниц (индекс в nodes). Если значение null, то все страницы</param>
            <param name="baseFilename">Базовое имени файла. К нему будет добавляться значок '#' и номер страницы</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentSection.ReadOnlyStructure">
            <summary>Запрет на изменение пользователем структуры узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.OnChildNodeRemoved(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Генерирует событие ChildNodeRemoved</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.GetFirstPageTemplate">
            <summary>Получить первый шаблон страницы</summary>
            <returns>Первый шаблон страницы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.CreateFirstPage(System.Boolean)">
            <summary>Создать первую страницу документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentSection.OwnerDocument">
            <summary>Документ владелец</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentSection.DocumentTemplateOwner">
            <summary>Документ владеющий шаблоном документа, 
            которому принадлежит элемент. 
            Если элемент не принадлежит шаблону, то null</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentSection.IsTemplate">
            <summary>Узел является шаблоном</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentSection.TemplateRoot">
            <summary>Корень дерева в котором должен находиться шаблон этого узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.FindTemplate(System.String)">
            <summary>Найти шаблон этого узла по идентификатору templateId</summary>
            <param name="templateId">Идентификатор шаблона</param>
            <returns>Шаблон узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentSection.GetSnapPoints(Intermech.Drawing.Common.UniPointF,System.Single,System.Collections.Generic.List{Intermech.Interfaces.Document.SnapPoint},Intermech.Interfaces.Document.VisualNode)">
            <summary>Получить список узлов привязки</summary>
            <param name="originalPoint">Оригинальная точка</param>
            <param name="snapSize">Размер области привязки</param>
            <param name="snapPointList">Список полученных точек</param>
            <param name="excludeNode">Узел который должен исключаться из рассмотрения</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentTreeNode">
            <summary>Базовый класс узла дерева документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.FileVersion">
            <summary>Текущая версия формата файла XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.InitFields">
            <summary>Инициализировать поля объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать метод инициализации полей InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.InitTypeNameDictionary">
            <summary>Инициализация словарей TypeConstructorDictionary и TypeNameDictionary</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.TypeNameDictionary">
            <summary>Словарь имен типов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.TypeAliasDictionary">
            <summary>Словарь имен типов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.TypeConstructorDictionary">
            <summary>Словарь конструкторов типов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.CanCallExternalEditor">
            <summary>Делегат проверки возможности вызова внешнего редактора для элемента документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.CanCallEditor">
            <summary>Возможен вызов дополнительного редактора для элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CallEditor">
            <summary>Вызвать дополнительный редактор для элемента</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.CallExternalEditor">
            <summary>Делегат вызова внешнего редактора для элемента документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.ShowInTreeView">
            <summary>Отображать узел в дереве</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.HighlightColor">
            <summary>Отображать узел в дереве</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.UserCommand_Delete(System.Boolean)">
            <summary>Команда пользователя "Удалить". В общем случае не совпадает с Remove()</summary>
            <param name="update">Обновлять внешний вид и разбивку по страницам</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.OwnerDocument">
            <summary>Документ владелец</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetNodesWithoutChilds(Intermech.Interfaces.Document.DocumentTreeNode[])">
            <summary>Для внутреннего использования. Применяется в операциях с выделением, 
            когда одновременно выбраны и родители и дочерние элементы, а операции нужно выполнить только с родителями.</summary>
            <param name="treeNodes">Исходный массив</param>
            <returns>Отфильтрованный массив</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetNodesWithoutChilds(Intermech.Interfaces.Document.DocumentTreeNode[],System.Boolean)">
            <summary>Для внутреннего использования. Применяется в операциях с выделением, 
            когда одновременно выбраны и родители и дочерние элементы, а операции нужно выполнить только с родителями.</summary>
            <param name="treeNodes">Исходный массив</param>
            <param name="includeVirtual">Учитывать виртуальные узлы</param>
            <returns>Отфильтрованный массив</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetNodesWithoutChilds(System.Collections.Generic.IList{Intermech.Interfaces.Document.DocumentTreeNode},System.Boolean)">
            <summary>Для внутреннего использования. Применяется в операциях с выделением, 
            когда одновременно выбраны и родители и дочерние элементы, а операции нужно выполнить только с родителями.</summary>
            <param name="treeNodes">Исходная коллекция</param>
            <param name="includeVirtual">Учитывать виртуальные узлы</param>
            <returns>Отфильтрованная коллекция</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetChildNodes(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>
            Получить все дочерние элементы
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetNodesFromVirtualNode">
            <summary>Нахождение элементов виртуальной ячейки</summary>
            <returns>список реальных ячеек</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetNodesFromVirtualNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Нахождение элементов виртуальной ячейки</summary>
            <param name="node">Узел в котором нужно искать</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindNode(System.String)">
            <summary>Поиск узла в дереве по идентификатору</summary>
            <param name="nodeId">Идентификатор узла</param>
            <returns>Возвращает найденный узел, или null, если узел не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindFirstNodeByName(System.String)">
            <summary>Поиск первого узла в дереве по имени</summary>
            <param name="nodeName">Имя узла</param>
            <returns>Возвращает найденный узел, или null, если узел не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindFirstChildNodeByName(System.String)">
            <summary>Поиск первого дочернего узла по имени</summary>
            <param name="nodeName">Имя узла</param>
            <returns>Возвращает найденный узел, или null, если узел не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindNode(System.String,System.Type)">
            <summary>Поиск узла в дереве по идентификатору и типу</summary>
            <param name="nodeId">Идентификатор узла</param>
            <param name="type">Тип узла</param>
            <returns>Возвращает найденный узел, или null, если узел не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindNodes(System.Type,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Поиск узлов в дереве по типу</summary>
            <param name="type">Тип узла</param>
            <param name="foundNodes">Найденные узлы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindNode(Intermech.Interfaces.Document.FindCondition,System.Object)">
            <summary>Поиск узла в дереве по условию</summary>
            <param name="condition">Условие поиска</param>
            <param name="conditionValue">Значение используемое в условии поиска</param>
            <returns>Возвращает первый узел удовлетворяющий заданному условию</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindNodes(Intermech.Interfaces.Document.FindCondition,System.Object,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Поиск узлов в дереве по условию</summary>
            <param name="condition">Условие поиска</param>
            <param name="conditionValue">Значение используемое в условии поиска</param>
            <param name="foundNodes">Узлы удовлетворяющие заданному условию</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindNodes(System.String,System.String,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Поиск узлов в дереве по значению атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="foundNodes">Найденные узлы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindNodesFromTemplate(Intermech.Interfaces.Document.DocumentTreeNode,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Поиск всех узлов созданных по заданному шаблону</summary>
            <param name="nodeTemplate">Шаблон</param>
            <param name="foundNodes">Найденные узлы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindFirstNodeFromTemplate(System.String)">
            <summary>Найти первый узел созданный по шаблону</summary>
            <remarks>В отличии от FindNodesFromTemplate находит первый узел и прекращает поиск. 
            Используется когда не должно быть более одного шаблона</remarks>
            <param name="nodeTemplate">Шаблон</param>
            <returns>Возвращает найденный узел, или null, если узел не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindFirstNodeFromTemplate_Recursive(System.String)">
            <summary>Найти первый узел созданный по шаблону. Искать только внутри данной ветки дерева</summary>
            <remarks>В отличии от FindNodesFromTemplate находит первый узел и прекращает поиск. 
            Используется когда не должно быть более одного шаблона.
            Обходит рекурсивно всю данную ветку дерева</remarks>
            <param name="nodeTemplate">Шаблон</param>
            <returns>Возвращает найденный узел, или null, если узел не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindFirstNodeFromTemplate_Recursive(System.String,System.Boolean)">
            <summary>Найти первый узел созданный по шаблону. Искать только внутри данной ветки дерева</summary>
            <remarks>В отличии от FindNodesFromTemplate находит первый узел и прекращает поиск. 
            Используется когда не должно быть более одного шаблона.
            Обходит рекурсивно всю данную ветку дерева</remarks>
            <param name="nodeTemplate">Шаблон</param>
            <param name="notThis">Искать только в дочерних узлах - этот узел не учитывать</param>
            <returns>Возвращает найденный узел, или null, если узел не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindFirstNodeFromTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Найти первый узел созданный по шаблону</summary>
            <remarks>В отличии от FindNodesFromTemplate находит первый узел и прекращает поиск. 
            Используется когда не должно быть более одного шаблона</remarks>
            <param name="nodeTemplate">Шаблон</param>
            <returns>Возвращает найденный узел, или null, если узел не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindFirstNodeFromTemplate_Recursive(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Найти первый узел созданный по шаблону</summary>
            <remarks>В отличии от FindNodesFromTemplate находит первый узел и прекращает поиск. 
            Используется когда не должно быть более одного шаблона. 
            Обходит рекурсивно всю данную ветку дерева</remarks>
            <param name="nodeTemplate">Шаблон</param>
            <returns>Возвращает найденный узел, или null, если узел не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindNearestNodeFromTemplate(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean)">
            <summary>Найти ближайший к данному узел, созданный по шаблону</summary>
            <param name="nodeTemplate">Шаблон узла</param>
            <param name="onePageFlow">Искать только внутри одного потока страниц</param>
            <param name="onlyPrev">Искать только предыдущие элементы</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SelectNearestNodeFromClonesByTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Найти ближайший к данному узел, созданный по шаблону</summary>
            <param name="nodeTemplate">Шаблон узла</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IsVirtualNode">
            <summary>Виртуальный узел. Не входит в состав дерева документа. Не имеет идентификатора. 
            Не сохраняется в xml файле. Не владеет узлами. Только для внутреннего использования!</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IsDataNode">
            <summary>Узел являющийся переносимыми данными в таблице.
            Только для внутреннего использования!</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetIsVirtualNode(System.Boolean)">
            <summary>Назначить значение свойству IsVirtualNode</summary>
            <param name="value">Значение свойства</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.ReadOnlyStructure">
            <summary>Запрет на изменение пользователем структуры узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.IsChildForNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Этот узел является дочерним для заданного</summary>
            <param name="node">Узел</param>
            <param name="includeVirtual">Включая виртуальные узлы</param>
            <returns>true, если этот узел является дочерним для заданного</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.IsParentForNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Этот узел является родительским для заданного</summary>
            <param name="node">Узел</param>
            <param name="includeVirtual">Включая виртуальные узлы</param>
            <returns>true, если этот узел является родительским для заданного</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.MoveDataElementUp(System.Boolean)">
            <summary>
            Переместить элемент документа на позицию выше с учётом логической структуры данных, разбитых по страницам
            </summary>
            <param name="updateLayoutAndUI">Обновить разбивку данных по страницам и внешний вид документа в интерфейсе пользователя. 
            Если False, после всех манипуляций с документом необходимо вызывать UpdateLayout</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.MoveDataElementDown(System.Boolean)">
            <summary>
            Переместить элемент документа на позицию ниже с учётом логической структуры данных, разбитых по страницам
            </summary>
            <param name="updateLayoutAndUI">Обновить разбивку данных по страницам и внешний вид документа в интерфейсе пользователя. 
            Если False, после всех манипуляций с документом необходимо вызывать UpdateLayout</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.MoveDataElementToBegin(System.Boolean)">
            <summary>
            Переместить элемент документа на позицию выше с учётом логической структуры данных, разбитых по страницам
            </summary>
            <param name="updateLayoutAndUI">Обновить разбивку данных по страницам и внешний вид документа в интерфейсе пользователя. 
            Если False, после всех манипуляций с документом необходимо вызывать UpdateLayout</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.MoveDataElementToEnd(System.Boolean)">
            <summary>
            Переместить элемент документа на позицию ниже с учётом логической структуры данных, разбитых по страницам
            </summary>
            <param name="updateLayoutAndUI">Обновить разбивку данных по страницам и внешний вид документа в интерфейсе пользователя. 
            Если False, после всех манипуляций с документом необходимо вызывать UpdateLayout</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IsFirstCellInParentDataFlow">
            <summary>Узел является первым у родительского элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IsLastCellInParentDataFlow">
            <summary>Узел является последним у родительского элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CanRemove">
            <summary>Этот узел можно удалить. Влияет только на интерфейс пользователя.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CanAddChildElement(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Проверить можно ли добавить заданный элемент в этот элемент</summary>
            <param name="child">Вставляемый элемент</param>
            <returns>Возвращает true, если заданный элемент можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CanAddChildElement(System.Type)">
            <summary>Проверить можно ли добавить элемент заданного типа в этот элемент</summary>
            <param name="type">Тип вставляемого элемента</param>
            <returns>Возвращает true, если элемент заданного типа можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetParent(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean)">
            <summary>Назначает значение свойству Parent. При этом удаляет у старого parent и добавляет в новый</summary>
            <param name="value">Новое значение Parent</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignParent(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить значение свойству Parent</summary>
            <param name="value">Новое значение Parent</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.Parent">
            <summary>Предок узла документа. 
            Должен быть перекрыт для связи UIControl и IdService родителя и узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CheckParentList(System.String[])">
            <summary>Проверить соответствие иерархии родителей по списку идентификаторов</summary>
            <param name="parents"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetDocTreeRoot">
            <summary>Корень дерева документа в котором находится этот узел. 
            <remarks>Документ который владеет этим узлом. Если узел не принадлежит документу, то null</remarks>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetTreeRoot">
            <summary>Получить корень дерева в котором находится этот узел
            <remarks>Корнем считается первый узел без родителя вверх по иерархии</remarks>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddChildNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Добавить узел в коллекцию дочерних узлов</summary>
            <param name="child">Добавляемый узел</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="uniteTable">Объединить распределенные ячейки перед вставкой</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddChildNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean)">
            <summary>Добавить узел в коллекцию дочерних узлов</summary>
            <param name="child">Добавляемый узел</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddChildNodes(Intermech.Interfaces.Document.DocumentTreeNode[],System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Добавить узлы в коллекцию дочерних узлов</summary>
            <param name="nodes">Узлы</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="uniteTable">Объединить распределенные ячейки перед вставкой</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddChildNodes(Intermech.Interfaces.Document.DocumentTreeNode[],System.Boolean,System.Boolean)">
            <summary>Добавить узлы в коллекцию дочерних узлов</summary>
            <param name="nodes">Узлы</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddChildNodes(System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Добавить узлы в коллекцию дочерних узлов</summary>
            <param name="nodes">Узлы</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="uniteTable">Объединить распределенные ячейки перед вставкой</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddChildNodes(System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode},System.Boolean,System.Boolean)">
            <summary>Добавить узлы в коллекцию дочерних узлов</summary>
            <param name="nodes">Узлы</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.PreProcessAddChildNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Метод вызываемый до добавления дочернего узла</summary>
            <param name="child">Дочерний узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ReserveIdForTemplateClone(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Зарезервировать идентификатор для клона по шаблону</summary>
            <param name="idServiceOwner">Владелец сервиса идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.PostProcessAddChildNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Метод вызывается после добавления дочернего элемента, но до вызова события ChildNodeAdded</summary>
            <param name="child">Дочерний элемент</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.InsertNewChildNode(System.Int32,Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>
            Вставить новый дочерний узел.
            </summary>
            <param name="index">Позиция вставки</param>
            <param name="child">Новый дочерний узел</param>
            <param name="updateDocument">Обновить внешний вид документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.InsertChildNode(System.Int32,Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Вставить в заданную позицию дочерний узел</summary>
            <param name="index">Позиция в которую будет вставлен узел</param>
            <param name="child">Узел</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="uniteTable">Объединить распределенные ячейки перед вставкой</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isNew">Узел новый и не требуется это проверять</param>
            <returns>true, если вставка не была отменена</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.PostExchangeChildsMethod(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Метод вызывается после того как два дочерних элемента поменяются местами</summary>
            <param name="index1">Индекс одного элемента</param>
            <param name="index2">Индекс второго элемента</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RemoveChildNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean)">
            <summary>Удалить дочерний узел</summary>
            <param name="node">Удаляемый узел</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RemoveChildNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Удалить дочерний узел</summary>
            <param name="node">Удаляемый узел</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RemoveChildNodeAt(System.Int32,System.Boolean,System.Boolean)">
            <summary>Удалить элемент с заданным индексом</summary>
            <param name="index">Индекс удаляемого элемента</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RemoveChildNodeAt(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Удалить элемент с заданным индексом</summary>
            <param name="index">Индекс удаляемого элемента</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.MoveChildNode(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Переместить дочерний узел на другую позицию в пределах коллекции</summary>
            <param name="index">Индекс перемещаемого узла</param>
            <param name="newIndex">Новый индекс узла</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.Remove(System.Boolean,System.Boolean)">
            <summary>Удалить элемент из списка элемента родителей</summary>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.Remove(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Удалить элемент из списка элемента родителей</summary>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.Clear(System.Boolean,System.Boolean)">
            <summary>Очистить узел</summary>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.NodesCount">
            <summary>Количество узлов в дереве</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.Nodes">
            <summary>Подузлы элемента. Если узел не должен иметь дочерних узлов, то значение null</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.Index">
            <summary>Индекс узла в родительском узле</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.NodesRecursive">
            <summary>
            Перечисление всех дочерних узлов рекурсивно
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.NodesRecursiveByCondition(System.Func{Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean})">
            <summary>
            Перечисление всех дочерних узлов рекурсивно, с условием сбора подузлов
            Узлы не подходящие по условию игнорируются и внутрь них рекурсия тоже не заходит
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ChildNodesByCondition``1(System.Func{``0,System.Boolean})">
            <summary>
            Перечисление всех дочерних узлов заданного типа рекурсивно, с условием сбора подузлов
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CompareTreePositions(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Сравнить положение узлов в дереве</summary>
            <param name="nodeX">Узел X</param>
            <param name="nodeY">Узел Y</param>
            <returns>Результат сравнения. 
            -1 означает x меньше y
            0 означает x равно y, либо узлы находятся в разных деревьях
            1 означает x больше y
            </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindChildsForLowestCommonAncestor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Найти ближайшего общего предка двух узлов дерева</summary>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.NodeClass">
            <summary>Класс элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetDefautCaption">
            <summary>Получить подпись элемента по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetCaptionForMessage">
            <summary>Получить подпись элемента для сообщений</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FilterCheck(System.Type[],System.Type[])">
            <summary>Пропустить через фильтр.
            Параметр exclude имеет больший приоритет, чем include</summary>
            <param name="exclude">Типы элементов, которые должны быть исключены. 
            Допустимо значение null, или пустой массив</param>
            <param name="include">Типы элементов, которые должны быть включены.
            Если значение null или массив пустой то включаются все элементы</param>
            <returns>true, если проходит через фильтр</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IsChanging">
            <summary>Производятся изменения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.BeginChanges(System.Boolean)">
            <summary>Начать изменение</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.EndChanges(System.Boolean)">
            <summary>Завершить изменение</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetChangingCount(System.Int32)">
            <summary>Установить счетчик незаконченных изменений</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.BeginChangingStructure">
            <summary>Начать изменение структуры дерева, 
            служит для блокирования некоторых действий 
            пока изменения дерева не закончены (EndChangingStructure)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IsChangingStructure">
            <summary>Структура таблицы изменяется</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.PreProcessEndChangingStructure(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Выполнить предварительные действия перед окончанием изменения структуры</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="refreshUI">Обновить изображение в интерфейсе пользователя</param>
            <param name="updateTemplateLinks">Обновить ссылки на шаблоны</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.EndChangingStructure(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Закончить изменения структуры таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.ConnectionList">
            <summary>Список ссылок, указывающих на этот узел. Используется для обратной связи.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RemoveConnection(Intermech.Interfaces.Document.ReferenceToNode)">
            <summary>Добавить связь указывающую на этот узел</summary>
            <param name="link">Связь</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddConnection(Intermech.Interfaces.Document.ReferenceToNode)">
            <summary>Добавить связь указывающую на этот узел</summary>
            <param name="link">Связь</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.IsOverridden(Intermech.Interfaces.Document.OverrideFlags)">
            <summary>Установить значение флагов OverrideFlags</summary>
            <param name="flags">Проверяемые флаги</param>
            <returns>Возвращает true, если все флаги установлены в 1</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetOverrideFlags(Intermech.Interfaces.Document.OverrideFlags)">
            <summary>Установить битовые флаги в поле overrideFlags</summary>
            <param name="flags">Флаги, которые нужно установить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ResetOverrideFlags(Intermech.Interfaces.Document.OverrideFlags)">
            <summary>Сбросить битовые флаги в поле overrideFlags</summary>
            <param name="flags">Флаги, которые нужно сбросить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.IsOverridden2(Intermech.Interfaces.Document.OverrideFlags2)">
            <summary>Установить значение флагов OverrideFlags2</summary>
            <param name="flag">Проверяемые флаги</param>
            <returns>Возвращает true, если все флаги установлены в 1</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetOverrideFlags2(Intermech.Interfaces.Document.OverrideFlags2)">
            <summary>Установить битовые флаги в поле overrideFlags2</summary>
            <param name="flags">Флаги, которые нужно установить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ResetOverrideFlags2(Intermech.Interfaces.Document.OverrideFlags2)">
            <summary>Сбросить битовые флаги в поле overrideFlags2</summary>
            <param name="flags">Флаги, которые нужно сбросить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.IsOverridden3(Intermech.Interfaces.Document.OverrideFlags3)">
            <summary>Установить значение флагов OverrideFlags3</summary>
            <param name="flag">Проверяемые флаги</param>
            <returns>Возвращает true, если все флаги установлены в 1</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetOverrideFlags3(Intermech.Interfaces.Document.OverrideFlags3)">
            <summary>Установить битовые флаги в поле overrideFlags3</summary>
            <param name="flags">Флаги, которые нужно установить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ResetOverrideFlags3(Intermech.Interfaces.Document.OverrideFlags3)">
            <summary>Сбросить битовые флаги в поле overrideFlags3</summary>
            <param name="flags">Флаги, которые нужно сбросить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CheckFlags(System.Byte)">
            <summary>Проверить значение флагов в поле flag</summary>
            <param name="flag">Проверяемые флаги, заданные константами Flag_...</param>
            <returns>Возвращает true, если все флаги установлены в 1</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetFlags(System.Byte,System.Boolean)">
            <summary>Только для внутреннего пользования. Установить значение битовых флагов в поле flag</summary>
            <param name="flags">Биты которые нужно установить</param>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.InsertNextFlowChaineElement(Intermech.Interfaces.Document.IParentFlow)">
            <summary>Вставить следующий элемент потока в цепочку</summary>
            <param name="newNextFlow">Новый следующий родительский элемент потока</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.UpdateNodeLinks(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить ссылки на узлы</summary>
            <param name="recursive">Для всех дочерних элементов</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.UpdatePrintLinks(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Обновить ссылки на узлы обновляемые при печати
            </summary>
            <param name="recursive">Для всех дочерних элементов</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.UpdateNodeAttributeLinks(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить ссылки на атрибуты</summary>
            <param name="recursive">Для всех дочерних элементов</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.UpdateLayout(System.Boolean)">
            <summary>Обновить разбивку по страницам. 
            Вызывает UpdateLayout для вышестоящих узлов или Distribute для себя.
            Вызов UpdateLayout для дочерних узлов недопустим!</summary>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.Distribute(Intermech.Interfaces.Document.DistributeContext,System.Boolean)">
            <summary>Вызывает разбивку по страницам</summary>
            <param name="context">Контекст разбивки</param>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.SuspendedUpdateLayoutFlag">
            <summary>Обновление представлений данных временно заблокировано</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetSuspendUpdateLayoutCount(System.Int32)">
            <summary>Установить значение suspendUpdateLayoutCount</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SuspendUpdateLayout">
            <summary>Приостановить автоматическое обновление представлений данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ResumeUpdateLayout(System.Boolean,System.Boolean)">
            <summary>Возобновить автоматическое обновление представлений данных</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignNeedUpdateLayoutFlag(System.Boolean)">
            <summary>Установить значение NeedUpdateLayoutFlag без автоматического обновления</summary>
            <param name="value">Новое значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.NeedUpdateLayoutFlag">
            <summary>Требуется обновить отображение данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetNeedUpdateLayoutFlag(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить флаг NeedUpdateLayoutFlag</summary>
            <param name="value">Значение флага</param>
            <param name="setInPrevCell">Установить флаг и для предыдущих ячеек</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="recursive">Установить флаг и для всех дочерних узлов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetNeedUpdateLayoutFlag(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить флаг NeedUpdateLayoutFlag</summary>
            <param name="value">Значение флага</param>
            <param name="setInPrevCell">Установить флаг и для предыдущих ячеек</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ResetNeedUpdateLayoutFlag(System.Boolean)">
            <summary>Сбросить флаг NeedUpdateLayoutFlag</summary>
            <param name="recursive">Рекурсивно</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.UpdateFormulasInTextBox">
            <summary>Обновить формулы в текстовых полях</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IsFormulaLib">
            <summary>Элемент принадлежит библиотеке формул</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CheckCrossPlatformCompatibility(System.Collections.Generic.List{Intermech.Interfaces.Document.CrossPlatformLimitation})">
            <summary>
            Проверить документ на наличие несовместимых с кроссплатформенностью данных
            </summary>
            <param name="crossPlatformLimitations">Список обнаруженных ограничений кроссплатформенности</param>
            <returns>Возвращает true, если в документе есть только совместимые данные (нет данных поддерживаемых только в Windows)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetAdditionalAttributes">
            <summary>Получить список дополнительных атрибутов</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetAdditionalAttributes(Intermech.Interfaces.Document.AdditionalAttributeCollection)">
            <summary>Назначить список дополнительных атрибутов</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddAdditionalAttributes(System.Collections.IDictionary)">
            <summary>Для внутреннего использования. Добавить дополнительные атрибуты. Не производит обновлений</summary>
            <param name="newAttributes">Словарь с атрибутами</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.AdditionalAttributes">
            <summary>Список дополнительных атрибутов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ContainsAttribute(System.String)">
            <summary>Содержит ли объект атрибут с указанным именем</summary>
            <param name="attributeName">Имя атрибута</param>
            <returns>Возвращает true, если объект содержит атрибут с указанным именем</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetAttributeValue(System.String,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить значение атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="notNull">Вернуть пустую строку вместо значения null</param>
            <param name="callChain">Цепочка вызовов для защиты от циклических связей. Если null, то работает без проверок</param>
            <returns>Возвращает значение атрибута. Если атрибута нет, вернет null.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetAttributeValue(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить значение атрибута. Если атрибута не было, то он создается</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Возвращает true, если удалось установить значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetAttributeValue(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Установить значение атрибута. Если атрибута не было, то он создается</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Возвращает true, если удалось установить значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RemoveAttributeWithoutEvents(System.String)">
            <summary>
            Удалить атрибут без вызова обработчиков событий и установки флага Modified. Только для внутреннего использования.
            </summary>
            <param name="attributeName">Имя атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RemoveAttribute(System.String,System.Boolean,System.Boolean)">
            <summary>Удалить атрибут</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Результат удаления</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetAttributeNames(System.Boolean)">
            <summary>Получить список всех имен атрибутов</summary>
            <param name="includeVirtual">Включая виртуальные атрибуты</param>
            <returns>Список всех имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetAttributes(System.Collections.IDictionary,System.Boolean)">
            <summary>Получить все атрибуты</summary>
            <param name="attributes">Словарь куда будут помещены атрибуты</param>
            <param name="includeVirtual">Включая виртуальные атрибуты</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ContainsVirtualAttribute(System.String)">
            <summary>Содержит ли объект виртуальный атрибут с указанным именем</summary>
            <param name="attributeName">Имя виртуального атрибута</param>
            <returns>Возвращает true, если объект содержит виртуальный атрибут 
            с указанным именем</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetVirtualAttributeValue(System.String,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить значение виртуального атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="notNull">Вернуть пустую строку вместо значения null</param>
            <param name="callChain">Цепочка вызовов для защиты от циклических связей. Если null, то работает без проверок</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.GetPluginVirtualAttributeValue">
            <summary>Событие получения значения виртуального атрибута. Вызывается в GetVirtualAttributeValue. Используется для плагинов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetVirtualAttributeValue(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Установить значение виртуального атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="callChain">Цепочка вызовов, для защиты от зацикливания</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetVirtualAttributeNames(System.Collections.Specialized.StringCollection,System.Boolean)">
            <summary>Получить список всех имен атрибутов</summary>
            <param name="attributeNames">Список в который добавляются имена атрибутов</param>
            <param name="forSaveOnly">Добавлять в список только те атрибуты, которые должны сохраниться в XML или копироваться при копировании через буфер</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.GetPluginVirtualAttributeNames">
            <summary>Событие Получение имён виртуальных атрибутов. Вызывается в GetVirtualAttributeNames</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetVirtualAttributes(System.Collections.IDictionary,System.Boolean)">
            <summary>Получить все виртуальные атрибуты</summary>
            <param name="attributes">Словарь куда будут помещены виртуальные атрибуты</param>
            <param name="forSaveOnly">Добавлять в только те атрибуты, которые должны сохраниться в XML или копироваться при копировании через буфер</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.AttributeValueChanging">
            <summary>Событие Изменение значения атрибута. Возникает до изменения</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.AttributeValueChanged">
            <summary>Событие Изменилось значение атрибута</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.AttributeRemoving">
            <summary>Событие Удаляется атрибут</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.AttributeRemoved">
            <summary>Событие Удален атрибут</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnAttributeValueChanging(Intermech.Interfaces.Document.AttributeValueChanging_EventArgs)">
            <summary>Вызывает событие AttributeValueChanging</summary>
            <param name="e">Аргументы события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnAttributeValueChanged(Intermech.Interfaces.Document.AttributeValueChanged_EventArgs)">
            <summary>Вызывает событие AttributeValueChanged</summary>
            <param name="e">Аргументы события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnAttributeRemoving(Intermech.Interfaces.Document.AttributeRemoving_EventArgs)">
            <summary>Вызывает событие AttributeRemoving</summary>
            <param name="e">Аргументы события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnAttributeRemoved(Intermech.Interfaces.Document.AttributeRemoved_EventArgs)">
            <summary>Вызывает событие AttributeRemoved</summary>
            <param name="e">Аргументы события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.BeforeAddChildNode">
            <summary>Событие Перед добавлением дочернего узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnBeforeAddChildNode(Intermech.Interfaces.Document.BeforeAddChildNode_EventArgs)">
            <summary>Вызывает событие BeforeAddChildNode</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.ChildNodeAdded">
            <summary>Событие Добавлен дочерний узел</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.TreeNodeAdded">
            <summary>Событие Добавлен узел дерева (вызывается из документа)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnChildNodeAdded(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Вызывает событие ChildNodeAdded</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnChildNodeAddedCore(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Базовая часть обработки события ChildNodeAdded
            Вспомогательный метод, чтобы можно было переопределять обработку не меняя последовательности вызова событий</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnTreeNodeAdded(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Вызывает событие TreeNodeAdded</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.BeforeRemoveChildNode">
            <summary>Событие Перед удалением дочернего узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnBeforeRemoveChildNode(Intermech.Interfaces.Document.BeforeRemoveChildNode_EventArgs)">
            <summary>Вызывает событие BeforeRemoveChildNode</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.ChildNodeRemoved">
            <summary>Событие Удален дочерний узел</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.TreeNodeRemoved">
            <summary>Событие Удален узел дерева(Вызывается из документа)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnChildNodeRemoved(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Вызывает событие ChildNodeRemoved</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnChildNodeRemovedCore(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Базовая часть обработки события ChildNodeRemoved
            Вспомогательный метод, чтобы можно было переопределять обработку не меняя последовательности вызова событий</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnTreeNodeRemoved(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Вызывает событие OnTreeNodeRemoved</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.BranchRemoved">
            <summary>Вызывается при удалении ветки, в которой находится этот узел</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnBranchRemoved(Intermech.Interfaces.Document.Removed_EventArgs)">
            <summary>Метод вызывается при удалении ветки, в которой находится этот узел</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.NodeRemoved">
            <summary>Происходит когда узел удален</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnRemoved(Intermech.Interfaces.Document.Removed_EventArgs)">
            <summary>Генерирует событие Removed</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.ParentChanged">
            <summary>Происходит когда изменен родительский узел (Parent)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnParentChanged(Intermech.Interfaces.Document.ParentChanged_EventArgs)">
            <summary>Генерирует событие ParentChanged</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.NameChanged">
            <summary>Происходит когда изменено имя (Name) узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnNameChanged(Intermech.Interfaces.Document.NameChanged_EventArgs)">
            <summary>Генерирует событие NameChanged</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.Changed">
            <summary>Происходит когда произошли изменения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnChanged(Intermech.Interfaces.Document.Changed_EventArgs)">
            <summary>Генерирует событие Changed</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.ChildNodesPositionExchanged">
            <summary>Генерируется когда два узла поменялись местами в пределах одного родителя</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnChildNodesPositionExchanged(Intermech.Interfaces.Document.ChildNodesPositionExchanged_EventArgs)">
            <summary>Генерирует событие ChildNodesPositionExchanged</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.ChildNodePositionChanged">
            <summary>Генерируется когда дочерний узел меняет позицию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnChildNodePositionChanged(Intermech.Interfaces.Document.ChildNodePositionChanged_EventArgs)">
            <summary>Генерирует событие ChildNodePositionChanged</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SynchronizeNodePositionWithUI(Intermech.Interfaces.Document.DocumentTreeNode,System.Int32,System.Int32)">
            <summary>
            Синхронизировать изменение позиции дочернего элемента дерева структуры с визуальным деревом документа
            </summary>
            <param name="oldIndex">Прежний индекс позиции дочернего элемента</param>
            <param name="newIndex">Новый индекс позиции дочернего элемента</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.BeginStructureChangingEvent">
            <summary>Происходит когда произошли изменения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnBeginStructureChanging(Intermech.Interfaces.Document.StructureChanging_EventArgs)">
            <summary>Генерирует событие Changed</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.DocumentTreeNode.EndStructureChangingEvent">
            <summary>Происходит когда произошли изменения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnEndStructureChanging(Intermech.Interfaces.Document.StructureChanging_EventArgs)">
            <summary>Генерирует событие Changed</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CanUseNodeAsTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Можно ли использовать заданный узел как шаблон</summary>
            <param name="node">Узел</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.UpdateTemplateLinks(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить ссылки на шаблоны</summary>
            <param name="applyTemplate">Применить шаблоны</param>
            <param name="recursive">Выполнить для всех подузлов</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.PropertiesChangedFlag">
            <summary>Свойства узла были изменены. Используется для обновления сделанных 
            по шаблону узлов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetPropertiesChangedFlag(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству PropertiesChangedFlag без автоматических обновлений</summary>
            <param name="value">Значение свойства</param>
            <param name="applyTemplate">Применить по шаблону</param>
            <param name="recursive">Выполнить для всех подузлов</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.TreeStructureChangedFlag">
            <summary>Структура дерева была изменена. Используется для обновления 
            структуры сделанных по шаблону узлов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignTreeStructureChangedFlag(System.Boolean,System.Boolean)">
            <summary>Установить значение свойства TreeStructureChangedFlag без автоматических обновлений</summary>
            <param name="value">Значение</param>
            <param name="recursive">Выполнить для всех подузлов</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.SuspendedApplyThisTemplateFlag">
            <summary>Применение шаблона заблокировано</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetSuspendApplyThisTemplateCount(System.Int32)">
            <summary>Установить значение поля suspendApplyThisTemplateCount</summary>
            <param name="count">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SuspendApplyThisTemplate">
            <summary>Заблокировать применение шаблона</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ResumeApplyThisTemplate(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Разблокировать применение шаблона</summary>
            <param name="apply">Применить шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.TemplateRoot">
            <summary>Корень дерева в котором должен находиться шаблон этого узла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IsTemplate">
            <summary>Узел является шаблоном</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.PathIsCompletelyClonedByTemplate">
            <summary>Вся цепочка по иерархии была сделана по шаблону с родителями 
            (см. ClonedByTemplateWithParent)</summary>
            <returns>Вся цепочка по иерархии была сделана по шаблону</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ShouldReserveIdForTemplateClone(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Нужно зарезервировать идентификатор для последующего клонирования по шаблону</summary>
            <param name="idServeceOwner">Владелец сервиса уникальных идентификаторов</param>
            <returns>Нужно зарезервировать идентификатор</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.CloneByTemplateWithParent">
            <summary>При создании копии родителя на основе шаблона, 
            этот элемент тоже должен копироваться</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignCloneByTemplateWithParent(System.Boolean)">
            <summary>Назначить значение свойству CloneByTemplateWithParent, 
            без выполнения автоматических действий</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.ClonedByTemplateWithParent">
            <summary>Узел был клонирован по шаблону вместе с родителем (см. CloneByTemplateWithParent)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignClonedByTemplateWithParent(System.Boolean)">
            <summary>Назначить значение свойства ClonedByTemplateWithParent</summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetTemplateClones">
            <summary>Найти узлы использующие этот узел как шаблон</summary>
            <returns>Список найденных узлов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ApplyTreeTemplates(System.Boolean,System.Boolean)">
            <summary>Применить к элементам дерева их шаблоны</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ApplyTemplateProperties(System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ApplyTemplateTreeStructure(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу структуру его шаблона</summary>
            <param name="updateTemplateLinks">Обновлять ссылки на шаблоны</param>
            <param name="returnNewNodes">Вернуть новые узлы появившиеся в результате применения шаблона</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Новые элементы дерева</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ApplyTemplateTreeStructure(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить структуру шаблона к узлам сделанным по шаблону</summary>
            <param name="template">Шаблон</param>
            <param name="updateTemplateLinks">Обновить ссылки на шаблон</param>
            <param name="returnNewNodes">Вернуть созданные в результате применения узлы</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Созданные в результате применения узлы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ApplyThisTemplateChanges(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить только изменения в дереве шаблона</summary>
            <param name="recursive">Вызывать для дочерних элементов</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.Template">
            <summary>Шаблон этого узла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.TemplateId">
            <summary>Идентификатор шаблона. null, если шаблон не назначен</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.ReferenceToTemplate">
            <summary>Ссылка на шаблон</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignTemplate(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить новое значение Template</summary>
            <param name="value">Новое значение Template</param>
            <param name="applyTemplate">Применить шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignReferenceToTemplate(System.String,System.Boolean)">
            <summary>Назначить новую ссылку на шаблон</summary>
            <param name="templateId">Идентификатор ссылки</param>
            <param name="updateLink">Обновить ссылку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignReferenceToTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Назначить новую ссылку на шаблон</summary>
            <param name="template">Шаблон</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FindTemplate(System.String)">
            <summary>Найти шаблон этого узла по идентификатору templateId</summary>
            <returns>Шаблон узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CloneFromTemplate(System.Boolean,System.Boolean)">
            <summary>Создать копию элемента используя этот узел как шаблон</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyDataNodes">Копировать узлы-данные в таблицах</param>
            <returns>Копия узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CloneFromTemplate">
            <summary>Создать копию элемента используя этот узел как шаблон</summary>
            <returns>Копия узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.HasTemplate">
            <summary>Имеют ли элементы шаблон</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AfterCloneFromTemplate">
            <summary>Действия производимые после копирования из шаблона</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.DisconnectTemplateRecursive">
            <summary>Рекурсивно отвязать узел от шаблона, сохранив структуру и данные</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ResetInheritance">
            <summary>Сбросить наследование параметров от родителей</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IdService">
            <summary>Сервис идентификаторов. Используется для генерации уникальных ид., 
            проверки уникальности</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignIdService(Intermech.Interfaces.Document.IUniqueIdService,System.Boolean)">
            <summary>Ограниченная версия привязки к сервису Id. 
            Используется для восстановления связей. При конфликтах ид генерирует исключение.</summary>
            <param name="value">Сервис Id</param>
            <param name="recursive">Назначить всем дочерним элементам</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.Id">
            <summary>Идентификатор элемента. Уникальность обеспечивается IdService</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.IsEmptyString(System.String)">
            <summary>Вспомогательный метод. Возвращает true, если строка Null или ""</summary>
            <param name="str">Строка</param>
            <returns>Возвращает true, если строка Null или ""</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.Name">
            <summary>Имя узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetName">
            <summary>Получить имя элемента</summary>
            <returns>Имя элемента</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetName(System.String,System.Boolean,System.Boolean)">
            <summary>Назначить свойству Name новое значение</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignName(System.String)">
            <summary>Установить значение Name</summary>
            <param name="value">Новое значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.IsIdServiceOwner">
            <summary>Узел является владельцем сервиса уникальных идентификаторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ReplaceDS(System.String)">
            <summary>Заменить десятичный разделитель</summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.TypeNameFromXmlAttr_RegEx">
            <summary>Кэш для Regex</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.BaseTypeNameFromXmlAttr_RegEx">
            <summary>Кэш для Regex</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetTypeNameFromXmlAttributes(System.Collections.Generic.List{Intermech.Interfaces.Document.StringKeyValue})">
            <summary>Получить имя типа из XML атрибутов</summary>
            <param name="xmlAttributes">XML атрибуты</param>
            <returns>Имя типа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddUnknownXmlElement(System.String,System.String)">
            <summary>Добавить неизвестный элемент</summary>
            <param name="key">Имя атрибута</param>
            <param name="value">Значение атрибута</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.TypeNameForXml">
            <summary>Имя типа сохраняемое в XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddUnknownXmlAttribute(System.String,System.String)">
            <summary>Добавить неизвестный атрибут</summary>
            <param name="key">Имя атрибута</param>
            <param name="value">Значение атрибута</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.UnknownXmlAttributes">
            <summary>XML атрибуты, не распознанные при загрузке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNode.UnknownXmlElements">
            <summary>XML элементы, не распознанные при загрузке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.ParseAttr_RegEx">
            <summary>Кэш для Regex</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.WriteXmlElementReference(System.String,System.Object,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator,System.Boolean@)">
            <summary>Сохранить ссылку на другой объект как элемент XML</summary>
            <param name="name">Имя элемента XML</param>
            <param name="element">Объект, ссылка на который сохраняется</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
            <param name="firstTime">Первый ли раз идентификатор на объект</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetPluginVirtualAttributes(Intermech.Interfaces.Document.AdditionalAttributeCollection)">
            <summary>Получить виртуальные атрибуты плагинов</summary>
            <param name="attrCollection">Коллекция в которую добавляются атрибуты</param>
            <returns>Коллекция имён добавленных атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.WriteAdditionalAttributesToXml(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить дополнительные атрибуты в XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RestoreToOriginalType(System.Collections.IDictionary)">
            <summary>Для внутреннего пользования! 
            Восстановить поля в оригинальном типе. Для объектов которые были загружены на сервере в базовые типы, 
            а затем восстанавливаются в оригинальных типах на клиенте</summary>
            <param name="links">Ссылки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RestoreFieldsFromUnknownXml">
            <summary>Восстановить поля из UnknownXmlAttributes и UnknownXmlElements</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ReadNodesFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить дочерние узлы</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ReadNodeFromXmlPostProcess(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Запускается после загрузки всего дерева из XML если версия до 17</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ReadAdditionalAttributesFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить дополнительные атрибуты</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить узел из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ReadFromXmlOldFormats_Before(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить узел из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.ReadFromXmlOldFormats_After(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить узел из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AddObjectReference(System.Object,System.Collections.IDictionary,System.String,System.String)">
            <summary>Добавить ссылку на объект, который нужно восстановить после загрузки</summary>
            <param name="obj">Объект, владеющий ссылкой</param>
            <param name="objectReferences">Список ссылок этого объекта, в который добавляется ссылка</param>
            <param name="fieldName">Имя поля объекта, которое ссылается на другой объект</param>
            <param name="refId">Идентификатор другого объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RestoreObjectReferences(System.Collections.IDictionary,System.Collections.IDictionary,System.Boolean,System.Boolean)">
            <summary>Восстановить ссылки на объекты в свойствах узлов</summary>
            <param name="objectsId">Список идентификаторов объектов</param>
            <param name="objectReferences">Список ссылок на объекты</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.BindPropertyToAdditionalAttribute(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Boolean)">
            <summary>
            Привязка свойства к системе доп. атрибутов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RemoveProperty(System.Collections.IDictionary,System.String)">
            <summary>Удалить свойство из списка</summary>
            <param name="properties">Список свойств</param>
            <param name="propertyName">Имя свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FilterDictionary(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>Отфильтровать словарь по словарю допустимых ключей. 
            Если допустимые ключи не заданы, то очистить словарь</summary>
            <param name="dict">Фильтруемый словарь</param>
            <param name="include">Допустимые ключи</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetPropertyAttributes">
            <summary>Получить словарь атрибутов свойств, которые нужно перекрыть</summary>
            <returns>Атрибуты свойств</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetProperties(System.Attribute[])">
            <summary>Получить дескрипторы для свойств</summary>
            <param name="attributes">Атрибуты свойств</param>
            <returns>Коллекция дескрипторов свойств</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.Clone">
            <summary>Создать копию узла</summary>
            <returns>Копия узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.InternalClone(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Внутренний метод копирования</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать дочерние узлы</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копия по шаблону</param>
            <param name="links">Ссылки (указатели) на данные</param>
            <returns>Копия узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.Clone(System.Boolean,System.Boolean)">
            <summary>Создать копию узла</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать дочерние узлы</param>
            <returns>Копия узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок. 
            В этом методе в словарь вставляются /links.Add(src, clone);/ связки оригинал-копия. 
            В методе RestoreLinks - восстанавливаются ссылки на копируемые объекты</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.AssignProperties(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Только для внутреннего использования. Синхронизировать объекты</summary>
            <param name="src">Источник</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.RestoreLinks(System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Восстановить сохраненные ссылки</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CallOnDeserializationRecursive">
            <summary>Рекурсивно вызвать OnDeserialization</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.OnDeserialization(System.Object)">
            <summary>Метод вызываемый при десериализации. 
            Реализация IDeserializationCallback</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetAttribute(System.Reflection.MemberInfo,System.Type)">
            <summary>Вспомогательный метод. Получить атрибут заданного класса у MemberInfo</summary>
            <param name="mi">Информация члена</param>
            <param name="type">Тип атрибута</param>
            <returns>Экземпляр атрибута или null, если атрибут не найден</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.IsExternalLinkField(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Поле является внешней ссылкой</summary>
            <param name="mi">Информация о поле</param>
            <returns>Возвращает true, если поле имеет атрибут ExternalLinkAttribute 
            с соответствующим значением свойства IsExternal</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.IsChildLinkField(System.Reflection.MemberInfo)">
            <summary>Поле является ссылкой на дочерние узлы</summary>
            <param name="mi">Информация о поле</param>
            <returns>Возвращает true, если поле имеет атрибут ChildLinkAttribute 
            с соответствующим значением свойства IsChildLink</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.FullFieldName(System.Reflection.FieldInfo)">
            <summary>Полное имя поля, включая имя класса, в котором оно декларировано</summary>
            <param name="field">Информация о поле</param>
            <returns>Полное имя поля</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.SetFieldValue(System.String,System.Object)">
            <summary>Установить значение поля</summary>
            <param name="fieldName">Имя поля</param>
            <param name="value">Значение поля</param>
            <returns>true, если поле найдено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable).
            В каждом классе должна быть заглушка обращающаяся к базовому конструктору.
            Например: 		
            protected Page(SerializationInfo info, StreamingContext context): base(info, context) {}</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Получить данные объекта, которые нужно сериализовать.
            Реализация интерфейса ISerializable</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNode.CanPasteFromClipboard(Intermech.Interfaces.Document.NodeClipboardInfo)">
            <summary>Проверить можно ли вставить объект из буфера в этот узел</summary>
            <param name="nodeClipboardInfo">Информация об узле в буфере</param>
            <returns>Возвращает true, если объект из буфера можно ли вставить в этот узел</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.OverridePropertyAttributes">
            <summary>Словарь атрибутов свойств, которые нужно перекрыть</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.typeNameDictionary">
            <summary>Словарь имен типов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.typeAliasDictionary">
            <summary>Словарь псевдонимов для типов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.typeConstructorDictionary">
            <summary>Словарь конструкторов типов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_Name">
            <summary>Имя атрибута Name</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_Text">
            <summary>Имя атрибута Text</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_DocPageNumber">
            <summary>Имя атрибута PageNumber</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_ComplectPageNumber">
            <summary>Имя атрибута PageNumber</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_PageNumberMore1">
            <summary>Имя атрибута PageNumberMore. Выдаёт номер страницы, только если документ имеет больше одной страницы. Иначе возвращает пустую строку</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_PageNumberMore2">
            <summary>Имя атрибута HierarchicalPageNumber</summary>
            /// <summary>Имя атрибута PageNumberMore. Выдаёт номер страницы, только если документ имеет значение атрибута Листов больше 1. Иначе возвращает пустую строку</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_HierarchicalPageNumber">
            <summary>Имя атрибута HierarchicalPageNumber</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_DocPageCount">
            <summary>Имя атрибута DocPageCount</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_LastDocPageNumber">
            <summary>Имя атрибута LastDocPageNumber. Используется вместо реального количества страниц, когда номер первой страницы не 1</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_LastDocPageLess2DisplayEmpty">
            <summary>Имя атрибута LastDocPageLess2DisplayEmpty. Используется для отображения пустой ячейки вместо кол-ва страниц 1</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_ComplectPageCount">
            <summary>Имя атрибута ComplectPageCount</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_Designation">
            <summary>Имя атрибута Designation</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_CheckSum">
            <summary>Имя атрибута  контрольная сумма</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_ComplexDesignation">
            <summary>
            Имя атрибута составное обозначение
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_DocumentHasCheckSum">
            <summary>
            В документе есть атрибуты требующие вычисления контрольной суммы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_DocName">
            <summary>Имя атрибута DocName</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_FileName">
            <summary>Имя атрибута FileName</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_NBreakTxt">
            <summary>Имя специального атрибута NBreakTxt</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_GroupHeader">
            <summary>Текст заголовка группы, по которому группируются записи</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_GroupHeaderCellText">
            <summary>Текущее значение текста для вывода в записи, которая может быть сгруппирована</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_GroupHeaderCellOriginalText">
            <summary>Значение текста для вывода в несгруппированной записи</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_GroupHeaderCellTextForGroup">
            <summary>Значение текста для вывода в сгруппированной записи</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_NextPageText">
            <summary>Значение текста для вывода на следующей странице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_NextPageIdentLeft">
            <summary>Значение текста для вывода на следующей странице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_BlankID">
            <summary>
            Атрибут для хранения идентификатора элемента из файла BLN.
            Сохраняется при конвертации.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_BlankName">
            <summary>
            Атрибут для хранения имени элемента из файла BLN.
            Сохраняется при конвертации.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_BlankPageCanBeFirst">
            <summary>
            Атрибут для хранения флага CanBeFirst страницы из файла BLN.
            Сохраняется при конвертации.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.AttributeName_BlankType">
            <summary>
            Атрибут для хранения типа элемента из файла BLN.
            Сохраняется при конвертации.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.propertyBindings">
            <summary> Словарь "эталонных" значений - один для всех узлов документа.
            Реальные значения атрибутов хранятся в нестатической коллекции additionalAttributes
            и читаются/пишутся/клонируются/сериализуются тоже оттуда (не из propertyBindings).
             </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.name">
            <summary>Имя узла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.id">
            <summary>Идентификатор узла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.additionalAttributes">
            <summary>Коллекция атрибутов узла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.referenceToTemplate">
            <summary>Ссылка на шаблон узла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.isVirtualNode">
            <summary>Виртуальный узел</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.cloneByTemplateWithParent">
            <summary>Клонировать узел по шаблону вместе с родителем</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.clonedByTemplateWithParent">
            <summary>Узел был клонирован по шаблону вместе с родителем</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.nodes">
            <summary>Коллекция дочерних узлов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.flags">
            <summary>Флаги для внутреннего пользования, вместо нескольких булевских полей</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.Flag_PropertiesChanged">
            <summary>Свойства были изменены</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.Flag_TreeStructureChanged">
            <summary>Структура дерева была изменена</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.Flag_ElementHasFormulas">
            <summary>В текстовом элементе есть формулы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.changingCount">
            <summary>Количество начатых изменений</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.idService">
            <summary>Сервис уникальных идентификаторов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.parent">
            <summary>Родительский узел</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.changingStructureCount">
            <summary>Количество начатых изменений структуры</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.connectionList">
            <summary>Коллекция ссылок на этот узел</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.suspendApplyThisTemplateCount">
            <summary>Счетчик блокировок применения шаблона</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.suspendUpdateLayoutCount">
            <summary>Счетчик блокировок обновления представления данных</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.attributeValueChanging_EventHandler">
            <summary>Обработчик события AttributeValueChanging</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.attributeValueChanged_EventHandler">
            <summary>Обработчик события AttributeValueChanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.attributeValueRemoving_EventHandler">
            <summary>Обработчик события AttributeRemoving</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.attributeValueRemoved_EventHandler">
            <summary>Обработчик события AttributeRemoved</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.getPluginVirtualAttributeNames">
            <summary>Обработчик события GetVirtualAttributeNames для плагинов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNode.getPluginVirtualAttributeValue">
            <summary>Обработчик события GetVirtualAttributeNames для плагинов</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReadFieldFromXmlDelegate">
            <summary>Делегат загрузки поля из XML </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.FindCondition">
            <summary>Условие поиска</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.BeforeAddChildNode_EventHandler">
            <summary>Обработчик события BeforeAddChildNode</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ChildNodeAdded_EventHandler">
            <summary>Обработчик события ChildNodeAdded</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.BeforeRemoveChildNode_EventHandler">
            <summary>Обработчик события BeforeRemoveChildNode</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ChildNodeRemoved_EventHandler">
            <summary>Обработчик события ChildNodeRemoved</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.NodeRemoved_EventHandler">
            <summary>Обработчик события NodeRemoved</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ParentChanged_EventHandler">
            <summary>Обработчик события ParentChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.NameChanged_EventHandler">
            <summary>Обработчик события NameChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.Changed_EventHandler">
            <summary>Обработчик события Changed</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ChildNodesPositionExchanged_EventHandler">
            <summary>Обработчик события ChildNodesPositionExchanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ChildNodePositionChanged_EventHandler">
            <summary>Обработчик события ChildNodePositionChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.StructureChanging_EventHandler">
            <summary>Обработчик события StructureChanging</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.EmptyConstructorDelegate">
            <summary>Делегат для пустого конструктора</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.CallDocNodeEditorDelegate">
            <summary>Делегат для вызова редактора</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.CanCallDocNodeEditorDelegate">
            <summary>Делегат для проверки возможности вызова редактора</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.GetPluginVirtualAttributeNames_EventHandler">
            <summary>Делегат для вызова внутри метода GetVirtualAttributeNames</summary>
            <param name="attributeNames">Список в который добавляются имена атрибутов</param>
            <param name="forSaveOnly">Добавлять в список только те атрибуты, которые должны сохраниться в XML или копироваться при копировании через буфер</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.GetPluginVirtualAttributeValue_EventHandler">
            <summary>Делегат для вызова внутри метода GetVirtualAttributeValue</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="notNull">Вернуть пустую строку вместо значения null</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.BeforeAddChildNode_EventArgs">
            <summary>Аргументы события BeforeAddChildNode</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BeforeAddChildNode_EventArgs.Child">
            <summary>Добавляемый узел</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BeforeAddChildNode_EventArgs.Cancel">
            <summary>Отменить добавление</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BeforeAddChildNode_EventArgs.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="child">Добавляемый узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.BeforeRemoveChildNode_EventArgs">
            <summary>Аргументы события BeforeRemoveChildNode</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BeforeRemoveChildNode_EventArgs.Child">
            <summary>Удаляемый узел</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BeforeRemoveChildNode_EventArgs.RemoveByShift">
            <summary>Удаляется для перемещения</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BeforeRemoveChildNode_EventArgs.Cancel">
            <summary>Отменить удаление</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BeforeRemoveChildNode_EventArgs.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="child">Удаляемый узел</param>
            <param name="removeByShift">Удаляется для перемещения</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.Removed_EventArgs">
            <summary>Аргументы события Removed</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.Removed_EventArgs.RemovedByShift">
            <summary>Удален для перемещения</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.Removed_EventArgs.Node">
            <summary>Удаленный узел</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.Removed_EventArgs.ParentNode">
            <summary>Родительский узел из которого удалили</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Removed_EventArgs.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="node">Удаленный узел</param>
            <param name="parentNode">Родительский узел из которого удалили</param>
            <param name="removedByShift">Удален для перемещения</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ChildNode_EventArgs">
            <summary>Аргументы события ChildNode</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNode_EventArgs.Parent">
            <summary>Родительский элемент (при удалении, узел из которого был удалён дочерний узел)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNode_EventArgs.Child">
            <summary>Дочерний узел</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNode_EventArgs.Index">
            <summary>Индекс дочернего узла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNode_EventArgs.ByShift">
            <summary>Перемещение узла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNode_EventArgs.UpdateUI">
            <summary>Обновить элементы управления</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNode_EventArgs.UpdateLayout">
            <summary>Обновить разбивку</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ChildNode_EventArgs.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="parent">Родительский элемент (нужен при удалении)</param>
            <param name="child">Дочерний узел</param>
            <param name="index">Индекс дочернего узла</param>
            <param name="byShift">Перемещение узла</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ParentChanged_EventArgs">
            <summary>Аргументы события ParentChanged</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParentChanged_EventArgs.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.NameChanged_EventArgs">
            <summary>Аргументы события NameChanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.NameChanged_EventArgs.NewName">
            <summary>Новое имя</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.NameChanged_EventArgs.#ctor(System.String)">
            <summary>Конструктор</summary>
            <param name="newName">Новое имя</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.Changed_EventArgs">
            <summary>Аргументы события Changed</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.Changed_EventArgs.SaveModificationDate">
            <summary>Произошли изменения не влияющие на дату модификации документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Changed_EventArgs.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Changed_EventArgs.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="saveModificationDate">Изменения не влияющие на дату модификации документа</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ChildNodesPositionExchanged_EventArgs">
            <summary>Аргументы события ChildNodesPositionExchanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNodesPositionExchanged_EventArgs.Index1">
            <summary>Индекс первого узла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNodesPositionExchanged_EventArgs.Index2">
            <summary>Индекс второго узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ChildNodesPositionExchanged_EventArgs.#ctor(System.Int32,System.Int32)">
            <summary>Конструктор</summary>
            <param name="index1">Индекс первого узла</param>
            <param name="index2">Индекс второго узла</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ChildNodePositionChanged_EventArgs">
            <summary>Аргументы события ChildNodePositionChanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNodePositionChanged_EventArgs.OldIndex">
            <summary>Старый индекс дочернего узла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildNodePositionChanged_EventArgs.NewIndex">
            <summary>Новый индекс дочернего узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ChildNodePositionChanged_EventArgs.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Int32,System.Int32,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="oldIndex">Индекс первого узла</param>
            <param name="newIndex">Индекс второго узла</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.StructureChanging_EventArgs">
            <summary>Аргументы события StructureChanging</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.StructureChanging_EventArgs.Node">
            <summary>Узел</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.StructureChanging_EventArgs.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentTreeNodeConverter">
            <summary>Конвертер типа DocumentTreeNode</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.TemplateLinkConverter">
            <summary>Конвертер типа для ссылки на шаблон</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TemplateLinkConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TemplateLinkConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TemplateLinkConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TemplateLinkConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.CustomExpandableObjectConverter">
            <summary>Настраиваемый конвертер типа, который возвращает свойства объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomExpandableObjectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.StringKeyValue">
            <summary>Класс для пары Ключ - Значение</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.OverrideFlags">
            <summary>Для внутреннего использования. Флаги переопределения свойств в элементах сделанных по шаблону</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.OverrideFlags3">
            <summary>Для внутреннего использования. Флаги переопределения свойств в элементах сделанных по шаблону</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.OverrideFlags2">
            <summary>Для внутреннего использования. Сохраняемые в XML Флаги переопределения наследуемых свойств.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.None">
            <summary>Нет флагов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.ColumnWidth">
            <summary>Ширина ячейки наследуется не от столбца, а зависит от Width в шаблоне</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.RowHeight">
            <summary>Высота ячейки наследуется не от параметра DefaultRowSize, а в зависимости от Height от шаблона</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.ParentDefaultRowSize">
            <summary>Высота строки defaultRowSize наследуется не от родительской таблицы, а в зависимости от RowSize от шаблона</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.ColumnLeftBorder">
            <summary>Левая граница столбца перекрыта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.ColumnRightBorder">
            <summary>Правая граница столбца перекрыта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.ParentGrid">
            <summary>Настройки столбцов сетки родительской таблицы перекрыты</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.NextPageTemplateId">
            <summary>NextPageTemplateId перекрыта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.LastPageTemplateId">
            <summary>LastPageTemplateId перекрыта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.SkipBeforeForPlugin">
            <summary>"Пропуск перед" устанавливается плагином</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.SkipAfterForPlugin">
            <summary>"Пропуск после" устанавливается плагином</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.Name">
            <summary>Поле Name не наследуется из шаблона</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.NonSkipBeforeAtStartPage">
            <summary>Не пропускать строки перед таблицей в начале страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.Reference">
            <summary>Ссылка не наследуется</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.AvsNonSkipBeforeAtStartPage">
            <summary>Флаг NonSkipBeforeAtStartPage был назначен в AVS</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.OverrideFlags2.ParentInnerHorizontalLine">
            <summary>Перекрыто наследование внутренних горизонтальных линий от родителя</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PropertyAttributeWrapper">
            <summary>Класс оболочка для атрибутов которые навешиваются динамически на свойства класса. 
            Помещаются в словарь возвращаемый GetPropertyAttributes().</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PropertyAttributeWrapper.AttributesForTypes">
            <summary>Контейнеры атрибутов для типов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PropertyAttributeWrapper.Item(System.Int32)">
            <summary>Индексатор для AttributesForTypes</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PropertyAttributeWrapper.PropertyName">
            <summary>Имя свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PropertyAttributeWrapper.#ctor(System.String,System.Type,System.Attribute)">
            <summary>Конструктор</summary>
            <param name="propertyName">Имя свойства</param>
            <param name="propertyOwnerType">Тип владельца свойства</param>
            <param name="attribute">Атрибут</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PropertyAttributeWrapper.#ctor(System.String,Intermech.Interfaces.Document.PropertyAttributeForType[])">
            <summary>Конструктор</summary>
            <param name="propertyName">Имя свойства</param>
            <param name="attributesForTypes">Массив атрибутов</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.PropertyAttributeForType">
            <summary>Контейнер для перекрытия атрибута у свойства</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PropertyAttributeForType.PropertyOwnerType">
            <summary>Тип владельца свойства</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PropertyAttributeForType.Attribute">
            <summary>Атрибут</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PropertyAttributeForType.#ctor(System.Type,System.Attribute)">
            <summary>Конструктор</summary>
            <param name="propertyOwnerType">Тип владельца свойства</param>
            <param name="attribute">Атрибут</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.SetVirtualAttributeResult">
            <summary>Результат выполнения метода SetVirtualAttribute</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SetVirtualAttributeResult.Found">
            <summary>Виртуальный атрибут с заданным именем найден</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SetVirtualAttributeResult.Cancel">
            <summary>Установка значения атрибута невозможна</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.SetVirtualAttributeResult.#ctor(System.Boolean,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="found">Виртуальный атрибут с заданным именем найден</param>
            <param name="cancel">Установка значения атрибута невозможна</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.GetVirtualAttributeResult">
            <summary>Результат выполнения метода GetVirtualAttribute</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.GetVirtualAttributeResult.Found">
            <summary>Виртуальный атрибут с заданным именем найден</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.GetVirtualAttributeResult.Value">
            <summary>Значение атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.GetVirtualAttributeResult.#ctor(System.Boolean,System.String)">
            <summary>Конструктор</summary>
            <param name="found">Виртуальный атрибут с заданным именем найден</param>
            <param name="value">Значение атрибута</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ChildLinkAttribute">
            <summary>Атрибут означает что поле является ссылкой на дочерний объект относительно владельца поля</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ChildLinkAttribute.isChildLink">
            <summary>Ссылка на дочерний объект</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ChildLinkAttribute.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="isChildLink">Ссылка на дочерний объект</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ChildLinkAttribute.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ChildLinkAttribute.IsChildLink">
            <summary>Ссылка на дочерний объект</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.SerializeAsLinkAttribute">
            <summary>Атрибут Сериализовать поле как ссылку</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SerializeAsLinkAttribute.serializeAsLink">
            <summary>Сериализовать поле как ссылку</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.SerializeAsLinkAttribute.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="serializeAsLink">Сериализовать поле как ссылку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.SerializeAsLinkAttribute.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.SerializeAsLinkAttribute.SerializeAsLink">
            <summary>Сериализовать поле как ссылку</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.FindFieldHelper">
            <summary>Вспомогательный класс для поиска поля в иерархии класса</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FindFieldHelper.FindField(System.Type,System.String)">
            <summary>Найти поле в иерархии класса</summary>
            <param name="type">Тип класса</param>
            <param name="fieldName">Имя поля</param>
            <returns>Информация о поле. Если поле не найдено, то возвращает null</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FindFieldHelper.FindAttributes(System.Type,System.Type,System.String)">
            <summary>
            Поиск атрибутов в иерархии типа
            </summary>
            <param name="type"></param>
            <param name="attrType"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FindFieldHelper.FindMethod(System.Type,System.String,System.Object[])">
            <summary>
            Поиск метода, пока работает неадекватно
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FindFieldHelper.FindSerializableFields(System.Type)">
            <summary>Найти все сериализуемые поля в иерархии класса</summary>
            <param name="type">Тип</param>
            <returns>Сериализуемые поля</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ExceptionMessages">
            <summary>Сообщения исключений</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ExceptionMessages.InvalideTemplateType">
            <summary>Неправильный тип шаблона</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ContextFlags">
            <summary>Флаги контекста сериализации</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ContextFlags.None">
            <summary>По умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ContextFlags.WithoutChilds">
            <summary>Сериализовать дочерние узлы</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AdditionalContext">
            <summary>Дополнительные параметры контекста сериализации</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalContext.#ctor(Intermech.Interfaces.Document.ContextFlags,Intermech.Interfaces.Document.DocumentTreeNode[],System.Object)">
            <summary>Конструктор</summary>
            <param name="flags">Флаги контекста</param>
            <param name="rootNodes">Стартовые узлы для сериализации</param>
            <param name="context">Дополнительные данные контекста</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AdditionalContext.#ctor(Intermech.Interfaces.Document.ContextFlags,Intermech.Interfaces.Document.DocumentTreeNode[])">
            <summary>Конструктор</summary>
            <param name="flags">Флаги контекста</param>
            <param name="rootNodes">Корень сериализуемого дерева</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalContext.Flags">
            <summary>Флаги контекста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalContext.RootNodes">
            <summary>Корень сериализуемого дерева</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.AdditionalContext.Context">
            <summary>Дополнительные данные контекста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocNodeComparer.TryCompareByPages(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Сравнить положение страниц владеющих элементами. Вернёт результат сравнения или null, если нет страниц</summary>
            <param name="x">Элемент документа x</param>
            <param name="y">Элемент документа y</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocNodeComparer.ComparePages(Intermech.Interfaces.Document.PageData,Intermech.Interfaces.Document.PageData)">
            <summary>Сравнить положение страниц</summary>
            <param name="x">Страница документа x</param>
            <param name="y">Страница документа y</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentTreeNodeCollection">
            <summary>Коллекция узлов дерева документа. Только для внутреннего использования для хранения дочерних узлов. 
            Должна принадлежать узлу дерева документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Int32)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="capacity">Первоначальный размер коллекции</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Owner">
            <summary>Владелец коллекции</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNodeCollection.IsFixedSize">
            <summary>Размер зафиксирован</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNodeCollection.IsReadOnly">
            <summary>Только чтение</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Count">
            <summary>Количество элементов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNodeCollection.IsSynchronized">
            <summary>Синхронизирован</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Clone">
            <summary>Клонировать коллекцию вместе с узлами</summary>
            <returns>Копия коллекции узлов</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Item(System.Int32)">
            <summary>Типизированный индексатор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.AddInternal(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Внутренний метод добавления узла в коллекцию</summary>
            <param name="value">Узел</param>
            <returns>Индекс узла в коллекции</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Add(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Добавить подузел</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection._Add(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Добавить подузел</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Exchange(System.Int32,System.Int32)">
            <summary>Поменять узлы местами</summary>
            <param name="i1">Индекс первого узла</param>
            <param name="i2">Индекс второго узла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.InsertInternal(System.Int32,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Внутренний метод вставки узла</summary>
            <param name="index">Индекс с которым нужно вставить узел</param>
            <param name="value">Узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Insert(System.Int32,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Вставить узел в определенную позицию</summary>
            <param name="index">Индекс с которым должен быть вставлен узел</param>
            <param name="value">Узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection._Insert(System.Int32,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Вставить узел в определенную позицию</summary>
            <param name="index">Индекс с которым должен быть вставлен узел</param>
            <param name="value">Узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Remove(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Удалить узел из коллекции</summary>
            <param name="value">Удаляемый узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection._Remove(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Удалить узел из коллекции</summary>
            <param name="value">Удаляемый узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.RemoveAtInternal(System.Int32)">
            <summary>Внутренний метод удаления узла</summary>
            <param name="index">Индекс удаляемого узла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.RemoveAt(System.Int32)">
            <summary>Удалить узел с заданным индексом</summary>
            <param name="index">Индекс удаляемого узла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Clear">
            <summary>Очистить коллекцию. Выполняет полную процедуру удаление узлов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.Contains(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Определяет находится ли объект в коллекции</summary>
            <param name="value">Искомый объект</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.IndexOf(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Индекс узла в коллекции</summary>
            <param name="value">Узел</param>
            <returns>Индекс узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.FindIndex(System.Predicate{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>
            Найти первый элемент согласно условию и вернуть его индекс в коллекции
            </summary>
            <param name="match">Делегат задающий условие поиска</param>
            <returns>Индекс найденного элемента, или -1, если элемент не найден</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.FindIndex(System.Int32,System.Predicate{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>
            Найти первый элемент согласно условию и вернуть его индекс в коллекции
            </summary>
            <param name="startIndex">Индекс элемента с которого нужно начинать поиск</param>
            <param name="match">Делегат задающий условие поиска</param>
            <returns>Индекс найденного элемента, или -1, если элемент не найден</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.FindIndex(System.Int32,System.Int32,System.Predicate{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>
            Найти первый элемент согласно условию и вернуть его индекс в коллекции
            </summary>
            <param name="startIndex">Индекс элемента с которого нужно начинать поиск</param>
            <param name="count">Количество элементов от старта, среди которых нужно искать</param>
            <param name="match">Делегат задающий условие поиска</param>
            <returns>Индекс найденного элемента, или -1, если элемент не найден</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.System#ICloneable#Clone">
            <summary>Реализация интерфейса ICloneable</summary>
            <returns>Полную копию коллекции</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNodeCollection.arrayList">
            <summary>Внутренний список узлов коллекции</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentTreeNodeCollection.owner">
            <summary>Владелец коллекции</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.ContentEquals(System.Collections.Generic.IList{Intermech.Interfaces.Document.DocumentTreeNode},System.Collections.Generic.IList{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Сравнить содержимое списков</summary>
            <param name="list1">Первый список</param>
            <param name="list2">Второй список</param>
            <returns>true, если содержимое списков идентично</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentTreeNodeCollection.CompareLevel(System.Collections.Generic.IList{Intermech.Interfaces.Document.DocumentTreeNode},System.Collections.Generic.IList{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary> Сравнение одного уровня дерева элементов </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.AutoSizeDirection">
            <summary>Направление авторазмера</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AutoSizeDirection.None">
            <summary>Нет</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AutoSizeDirection.Height">
            <summary>Высота</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AutoSizeDirection.Width">
            <summary>Ширина</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.CellFlags">
            <summary>Флаги для внутреннего пользования (вместо булевских полей)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellFlags.NeedSecondLayoutPass">
            <summary>Таблица требует второго прохода разбивки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellFlags.TryNotBreak_Failed0">
            <summary>Результат попытки оставить ячейку целой в родной (первой) таблице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellFlags.TryNotBreak_Failed1">
            <summary>Попытка оставить ячейку целой в следующей (второй) таблице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellFlags.SelectedDataCellTemplate">
            <summary>Шаблон ячейки данных в таблице выбран для показа. 
            Используется чтобы показывать только выбранные шаблоны строк, так как все могут не поместиться</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellFlags.NeedUpdateFormulas">
            <summary>При отрисовке содержимого ячейки нужно обновить формулы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellFlags.TableAllocateOnlyHeaders">
            <summary>В таблице помещаются только заголовки</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageNumExtensionStyle">
            <summary>Режимы вида спецификации</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageNumExtensionStyle.None">
            <summary>Без расширения</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageNumExtensionStyle.DigitsAfterDot">
            <summary>Цифры после точки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageNumExtensionStyle.Letter">
            <summary>Буква после номера</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageNumExtensionStyle.Unknown">
            <summary>Произвольное</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TextOrientation">
            <summary>Ориентация текста</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextOrientation.Normal">
            <summary>Обычный текст без поворотов, слева-направо (0 градусов)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextOrientation.DownTop">
            <summary>Вертикальный текст, снизу вверх (90 градусов)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextOrientation.UpsideDown">
            <summary>Перевернутый горизонтальный текст (180 градусов)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextOrientation.TopDown">
            <summary>Вертикальный текст, сверху вниз (270 градусов)</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ExternalLinkAttribute">
            <summary>Атрибут означает что ссылка внешняя относительно владельца поля</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ExternalLinkAttribute.isExternal">
            <summary>Внешняя ссылка</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ExternalLinkAttribute.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="isExternal">Внешняя ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ExternalLinkAttribute.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ExternalLinkAttribute.IsExternal">
            <summary>Внешняя ссылка</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.FlowCollection">
            <summary>Коллекция потоков</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.FlowCollection.IsReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.FlowCollection.Item(System.Int32)">
            <summary>индексатор коллекции</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.RemoveAt(System.Int32)">
            <summary>Удалить по индексу</summary>
            <param name="index"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.Insert(System.Int32,Intermech.Interfaces.Document.IFlowElement)">
            <summary>Вставить</summary>
            <param name="index">Индекс</param>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.Remove(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Удалить</summary>
            <param name="value">Элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.Contains(Intermech.Interfaces.Document.IFlowElement)">
            <summary>содержится в коллекции</summary>
            <param name="value">Элемент</param>
            <returns>true, если содержится в коллекции</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.Clear">
            <summary>Очистить</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.IndexOf(Intermech.Interfaces.Document.IFlowElement)">
            <summary>индекс элемента</summary>
            <param name="value">Элемента</param>
            <returns>Индекс элемента. Если элемент не найден, то -1</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.Add(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Добавить</summary>
            <param name="value">Элемент</param>
            <returns>Индекс элемента</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.FlowCollection.IsFixedSize">
            <summary>Коллекция фиксированного размера</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.FlowCollection.IsSynchronized">
            <summary>Является ли доступ к интерфейсу ICollection синхронизированным (потокобезопасным)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.FlowCollection.Count">
            <summary>количество элементов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.CopyTo(System.Array,System.Int32)">
            <summary>Скопировать элементы в массив</summary>
            <param name="array">Массив приемник</param>
            <param name="index">Индекс с которого начинать копирование</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.FlowCollection.SyncRoot">
            <summary>Объект, который можно использовать для синхронизации доступа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.GetEnumerator">
            <summary>Получить Enumerator</summary>
            <returns>Enumerator</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать одно поле из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле прочитано</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowCollection.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить узел из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.Formula.FormatDivider">
            <summary>
            Разделитель между значением поля и его форматом
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.Formula.Id">
            <summary>
            Идентификатор формулы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.Formula.Parms">
            <summary>
            Список строковых значений параметров формулы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.Formula.Formats">
            <summary>
            Список форматов шрифта для каждого параметра формулы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.Formula.Page">
            <summary>
            Страница, содержащая графические примитивы формулы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Formula.UpdatePage(System.Collections.Generic.Dictionary{System.String,Intermech.Interfaces.Document.FormSearch})">
            <summary>
            Надо ли обновлять шаблон страницы?
            </summary>
            <param name="templates"></param>
            <returns>true, если шаблон страницы не изменился</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.Formula.AccumulateEditFields(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>
            Собрать все текстовые поля формулы (TextField) в Fields
            </summary>
            <param name="p">Формула</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Formula.GetEditFields">
            <summary>
            Обновить шаблоны параметров формулы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Formula.SetFormulaParms">
            <summary>
            Заполнить текстовые значения параметров формулы и обновить ее
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Formula.SaveOriginalFormat(System.String,Intermech.Interfaces.Document.CharFormat)">
            <summary>
            Сохранить в словаре оригинальный формат поля формулы
            </summary>
            <param name="id">Идентификатор поля</param>
            <param name="charFormat">Формат символов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Formula.CalcCoords">
            <summary>
            Вычислить обрамляющую рамку (topLeft и bottomRight) для формулы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.Formula.MoveNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Single,System.Single)">
            <summary>
            Передвинуть элемент на DiffX по горизонтали и DiffY по вертикали
            </summary>
            <param name="dtn">Передвигаемый элемент</param>
            <param name="DiffX">Смещение по горизонтали</param>
            <param name="DiffY">Смещение по вертикали</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Formula.PerformHorzAligns(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>
            Выполнить выравнивание всех элементов формулы по горизонтали
            </summary>
            <param name="root">Формула</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.Formula.HorzAlign(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RectangleElement,System.Boolean,System.Collections.Generic.Dictionary{System.String,Intermech.Drawing.Common.UniRectangleF})">
            <summary>Выполнить выравнивание одного поля по горизонтали</summary>
            <param name="root">Вся формула</param>
            <param name="el">Выравниваемое поле</param>
            <param name="Left">Задано ли выравнивание влево?</param>
            <param name="newBoundsDict">Границы остальных элементов формулы</param>
            <returns>true, если были какие-то изменения</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.TemplateHolderBase">
            <summary>
            Хранилище шаблонов. Реализовано как Singleton.
            Этот класс - абстрактный, реальный от него унаследован (см. TemplateHolder)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TemplateHolderBase.Groups">
            <summary>List of loaded templates from all docs of the specified type</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TemplateHolderBase.Templates">
            <summary>Keys are names, values are FormSearch pairs for uniqueness checks and fast search</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TemplateHolderBase.LoadTemplates(Intermech.Interfaces.IUserSession)">
            <summary>Загрузить все формулы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TemplateHolderBase.CheckLoadedLibs(Intermech.Interfaces.IUserSession,System.Boolean)">
            <summary>Проверить и обновить библиотеку если нужно</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.FormSearch">
            <summary>
            Объект для поиска примитивов, соответствующих полям формулы.
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FormSearch.Name">
            <summary>
            Имя поля
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FormSearch.node">
            <summary>
            Шаблон поля
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FormSearch.owner">
            <summary>
            Владелец шаблона (null, если шаблон в том же документе)
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.FormList">
            <summary>
            Не просто список формул, а объект составной формулы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.FormList.Item(System.Int32)">
            <summary>Буферный экземпляр ImRtfEditor для печати</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FormList.IsEmptyPages">
            <summary>Нет формул для которой найдена страница</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FormList.PerformCoords">
            <summary>Обновить координаты</summary>
            <returns>Возвращает true, если в списке повторяются формулы и нужно каждый раз пересчитывать размеры</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.FormList.Offset">
            <summary>
            Смещение формулы вверх относительно базовой линии символов в шрифте
            При нулевом значении выравнивание согласно свойству AlignInText
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.FormList.AlignInText">
            <summary>
            Выравнивание формулы внутри строки текста
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.FontOptions">
            <summary>
            Флаги шрифта
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontOptionsHelper.ToChar(Intermech.Interfaces.Document.FontOptions)">
            <summary>
            Преобразовать FontOptions в символ-код
            </summary>
            <param name="fo">Набор флагов шрифта</param>
            <returns>Код флагов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontOptionsHelper.ToOptions(System.Char)">
            <summary>
            Преобразовать из символ-кода в FontOptions
            </summary>
            <param name="code">Код флагов</param>
            <returns>Набор флагов шрифта</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontOptionsHelper.IsEmpty(Intermech.Interfaces.Document.FontOptions)">
            <summary>
            Пуст ли набор опций?
            </summary>
            <param name="fo"></param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.PointFConverter">
            <summary>Конвертер типа PointF</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PointFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PointFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PointFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PointFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PointFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PointFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Возвращает коллекцию свойств для типа массива, заданного параметром, используя 
            заданную контекстную информацию и атрибуты</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="value">Объект Object, задающий тип массива, для которого нужно получить свойства</param>
            <param name="attributes">Массив типа Attribute, используемый как фильтр</param>
            <returns>PropertyDescriptorCollection со свойствами, доступными для этого типа данных, или пустая ссылка, если свойства не доступны</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PointFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Поддерживает ли класс получение свойств GetProperties()</summary>
            <param name="context">Контекст дескриптора</param>
            <returns>true, если класс получение свойств GetProperties()</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.SizeFConverter">
            <summary>Конвертер типа SizeF</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Возвращает коллекцию свойств для типа массива, заданного параметром, используя 
            заданную контекстную информацию и атрибуты</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="value">Объект Object, задающий тип массива, для которого нужно получить свойства</param>
            <param name="attributes">Массив типа Attribute, используемый как фильтр</param>
            <returns>PropertyDescriptorCollection со свойствами, доступными для этого типа данных, или пустая ссылка, если свойства не доступны</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Поддерживает ли класс получение свойств GetProperties()</summary>
            <param name="context">Контекст дескриптора</param>
            <returns>true, если класс получение свойств GetProperties()</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.SMConverter">
            <summary>Конвертер типа Float для полей с размерностью в сантиметрах.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.SMConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.SMConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.SMConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.MMConverter">
            <summary>Конвертер типа Float для полей с размерностью в миллиметрах.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.MMConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.MMConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.MMConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.LineSpacingConverter">
            <summary>Конвертер типа Float для полей с размерностью в миллиметрах.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.LineSpacingConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.LineSpacingConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.LineSpacingConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.PTConverter">
            <summary>Конвертер типа Float для полей с размерностью в пунктах.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PTConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PTConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PTConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.FloatConverter">
            <summary>Конвертер типа Float</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FloatConverter.CorrectDecimalSeparator">
            <summary>Исправлять десятичный разделитель ',' и '.'</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FloatConverter.CorrectDecimal(System.String)">
            <summary>Исправить десятичный разделитель ',' или '.' на системный</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FloatConverter.CorrectDecimal(System.String,System.Globalization.CultureInfo)">
            <summary>Исправить десятичный разделитель ',' или '.' на системный</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FloatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FloatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Преобразует данный объект в тип этого конвертера, 
            используя заданную контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo, который нужно использовать в качестве текущей культурной среды</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FloatConverter.ConvertFromString(System.String,System.Globalization.CultureInfo)">
            <summary>Преобразовать строку в Float</summary>
            <param name="value">Строка</param>
            <param name="culture">Культура</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.FontSizeConverter">
            <summary>Конвертер типа Float для размера шрифта в пунктах</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontSizeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Получает значение, показывающее, поддерживает ли этот объект стандартный 
            набор значений, которые можно выбрать из списка, используя заданную 
            контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <returns>true, если, чтобы найти стандартный набор значений, поддерживаемых данным объектом, следует 
            вызвать метод GetStandardValues, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontSizeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает коллекцию стандартных значений для того типа данных, 
            которым предназначен этот конвертер типа, если предоставлена контекстная 
            информация о формате</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате, которая может быть использована для извлечения дополнительных сведений о среде,
             из которой вызывается этот конвертер. Этот параметр или свойства этого параметра 
             могут иметь значение пустая ссылка</param>
            <returns>TypeConverter.StandardValuesCollection, содержащий стандартный 
            набор допустимых значений, или пустая ссылка, если этот тип данных не поддерживает 
            стандартный набор значений</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.FontSizeMmConverter">
            <summary>Конвертер типа Float для размера шрифта в миллиметрах</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontSizeMmConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Получает значение, показывающее, поддерживает ли этот объект стандартный 
            набор значений, которые можно выбрать из списка, используя заданную 
            контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <returns>true, если, чтобы найти стандартный набор значений, поддерживаемых данным объектом, следует 
            вызвать метод GetStandardValues, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontSizeMmConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает коллекцию стандартных значений для того типа данных, 
            которым предназначен этот конвертер типа, если предоставлена контекстная 
            информация о формате</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате, которая может быть использована для извлечения дополнительных сведений о среде,
             из которой вызывается этот конвертер. Этот параметр или свойства этого параметра 
             могут иметь значение пустая ссылка</param>
            <returns>TypeConverter.StandardValuesCollection, содержащий стандартный 
            набор допустимых значений, или пустая ссылка, если этот тип данных не поддерживает 
            стандартный набор значений</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.CrossPlatformLimitation">
            <summary>
            Ограничения кроссплатформенности в документе
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CrossPlatformLimitation.DocNode">
            <summary>
            Узел документа содержащий данные, которые не могут быть отображены в кроссплатформенной версии
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CrossPlatformLimitation.Limitation">
            <summary>
            Тип ограничений, которые привязаны к Windows и не могут на данный момент отображаться в кроссплатформенной версии
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.WindowsOnlyDataType">
            <summary>
            Типы данных в документе, которые поддерживаются только под Windows
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageNumberingHelper">
            <summary> Класс для работы с номерами страниц в конструкторских документах </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumberingHelper.GetNumberingStyle(System.String)">
            <summary>Определить стиль нумерации страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumberingHelper.GetAdditionalPageNumbers(System.String,System.Byte,Intermech.Interfaces.Document.PageNumExtensionStyle)">
            <summary>
            Возвращает пул номеров для дополнительных страниц
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumberingHelper.IsValidExtension(System.String)">
            <summary>
            Проверяет, является ли строка допустимым расширением для номера доп. листа
            </summary>
            <param name="extension">строка расширения</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumberingHelper.IsNumericString(System.String)">
            <summary>
            Проверяет состоит ли строка из десятичных символов
            </summary>
            <param name="text">Строка символов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumberingHelper.GetPageNumbersForPrinting(Intermech.Interfaces.Document.ImDocumentData,System.String)">
            <summary>
            Конвертирует интервал страниц с учетом дополнительных в интервал обычных номеров страниц.
            </summary>
            <param name="document">Объект документа</param>
            <param name="hierarchicalPageNumsRange">интервал страниц</param>
            <returns>новый интервал страниц</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageNumBuilder">
            <summary> Класс для работы с номером страницы (разбор, генерация). </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageNumBuilder.MainPart">
            <summary>
            Основная часть номера
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageNumBuilder.Extension">
            <summary>
            Расширение номера
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumBuilder.Parse(System.String)">
            <summary>
            Создает экземпляр билдера
            </summary>
            <param name="pageNumText">строка номера страницы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumBuilder.IncrementMainNumber">
            <summary>
            Увеличить значение основной части номера страницы 
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumBuilder.IncrementExtension">
            <summary>
            Увеличить значение расширения номера доп. страницы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumBuilder.ResetExtension">
            <summary>
            Установить начальное значение расширения
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageNumBuilder.ToString">
            <summary>
            Переопределение базового метода перевода в строку
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableDataExtension.IsContinuationTable(Intermech.Interfaces.Document.TableData)">
            <summary>
            Определяет, является ли данная таблица таблицей продолжения потока на текущей странице
            </summary>
            <param name="table">текущая таблица</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableDataExtension.HasContinuation(Intermech.Interfaces.Document.TableData)">
            <summary>
            Определяет, есть ли у данной таблицы таблица продолжения на этой странице
            </summary>
            <param name="table">текущая таблица</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.IDocumentElement">
            <summary>Элемент документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IDocumentElement.OwnerDocument">
            <summary>Документ, которому принадлежит элемент</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IDocumentElement.DocumentTemplateOwner">
            <summary>Документ владеющий шаблоном документа, 
            которому принадлежит элемент. 
            Если элемент не принадлежит шаблону, то null</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.IDocumentNotifyService">
            <summary>
            Сервис уведомлений действий с документом
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.IDocumentNotifyService.BeforePrintDocument">
            <summary>
            Событие перед печатью документа
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.IDocumentNotifyService.AfterPrintDocument">
            <summary>
            Событие после печати документа
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IDocumentNotifyService.FireBeforePrintDocument(System.Object,Intermech.Interfaces.Document.BeforePrintDocumentEventArgs)">
            <summary>
            Вызвать событие перед печатью документа
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IDocumentNotifyService.FireAfterPrintDocument(System.Object,Intermech.Interfaces.Document.AfterPrintDocumentEventArgs)">
            <summary>
            Вызвать событие после печати документа
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Interfaces.Document.BeforePrintDocumentEventHandler">
            <summary>Делегат для обработки событий перед печатью</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.BeforePrintDocumentEventArgs">
            <summary>Аргументы для обработчиков событий перед и после сохранения файлов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BeforePrintDocumentEventArgs.Document">
            <summary>Документ</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BeforePrintDocumentEventArgs.#ctor(Intermech.Interfaces.Document.ImDocumentData)">
            <summary>Конструктор</summary>
            <param name="document">Документ</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.AfterPrintDocumentEventHandler">
            <summary>Делегат для обработки событий после печати</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AfterPrintDocumentEventArgs">
            <summary>Аргументы для обработчиков событий перед и после сохранения файлов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AfterPrintDocumentEventArgs.Document">
            <summary>Документ</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AfterPrintDocumentEventArgs.#ctor(Intermech.Interfaces.Document.ImDocumentData)">
            <summary>Конструктор</summary>
            <param name="documentID">Идентификатор версии объекта БД</param>
            <param name="fileName">Имя файла. Доступно только после сохранения</param>
            <param name="document">Документ</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.IExternalEditor">
            <summary>
            Интерфейс внешнего редактора для элементов
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IExternalEditor.CallEditor(Intermech.Interfaces.Document.DocumentTreeNode[])">
            <summary>
            Вызов редактора
            </summary>
            <param name="nodes">контекст вызова</param>
            <returns>результат вызова, если false прпордолжается вызов других редакторов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IExternalEditor.CanCallEditor(Intermech.Interfaces.Document.DocumentTreeNode[])">
            <summary>
            Разрешен ли вызов редактора
            </summary>
            <param name="nodes">контекст вызова</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.IFlowElement">
            <summary>Интерфейс элемента цепочки для представления (распределения) 
            потока данных на странице</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IFlowElement.ParentFlow">
            <summary>Родительский элемент цепочки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IFlowElement.NextFlowElement">
            <summary>Следующий элемент цепочки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IFlowElement.PrevFlowElement">
            <summary>Предыдущий элемент цепочки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IFlowElement.AssignParentFlow(Intermech.Interfaces.Document.IParentFlow)">
            <summary>Присвоить значение ParentFlow без вызова 
            ParentFlow.AddChildFlowElement или ParentFlow.RemoveChildFlowElement</summary>
            <param name="value">Новое значение ParentFlow</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IFlowElement.GetFirstFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить первый элемент цепочки для заданного потока данных</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Первый элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IFlowElement.GetNextFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить следующий элемент цепочки для заданного потока данных</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Следующий элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IFlowElement.GetLastFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить последний элемент цепочки для заданного потока данных</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Последний элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IFlowElement.GetPrevFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить предыдущий элемент цепочки для заданного потока данных</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Предыдущий элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IFlowElement.FlowIsEmpty(Intermech.Interfaces.Document.FlowID)">
            <summary>Цепочка не содержит данных заданного потока</summary>
            <param name="flow">Идентификатор потока данных</param>
            <returns>Возвращает true, если цепочка не содержит данных потока</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IFlowElement.AllFlowsIsEmpty">
            <summary>Цепочка не содержит данных ни одного потока</summary>
            <returns>Возвращает true, если цепочка не содержит данных ни одного потока</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.FlowID">
            <summary>Класс для идентификации потоков данных</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.FlowID.Name">
            <summary>Имя потока</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.FlowID.TemplateFlowID">
            <summary>Шаблон потока</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowID.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowID.#ctor(System.String)">
            <summary>Конструктор</summary>
            <param name="name">Имя потока</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowID.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowID.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowID.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать одно поле из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле прочитано</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FlowID.Clone">
            <summary>Клонировать экземпляр</summary>
            <returns>Копия</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImageContainerConverter">
            <summary>Конвертер типа BorderLine</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImageContainerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImageContainerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImageContainerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImageContainerConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImDocumentData">
            <summary>Данные документа. Базовый класс документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.TypeNameForConstructorDictionary">
            <summary>Имя типа для словаря конструкторов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.OpenMode">
            <summary>
            Режим открытия документа
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.#cctor">
            <summary>
            Статический конструктор
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Конструктор. Может автоматически создавать интерфейс пользователя</summary>
            <param name="autoCreateUI">Создать интерфейс пользователя</param>
            <param name="withTemplate">Создавать пустой шаблон</param>
            <param name="isFormulaLib">Это библиотека формул</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean)">
            <summary>Конструктор для документа входящего в структуру более высокого уровня</summary>
            <param name="parent">Родительский узел</param>
            <param name="autoCreateUI">Создавать интерфейс пользователя</param>
            <param name="withTemplate">Создавать пустой шаблон</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="withTemplate">Создать документ с шаблоном. 
            Если false, то шаблон документа не создается и можно назначить его позже.</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CreateTemplate(System.Type,System.Boolean)">
            <summary>Создать пустой шаблон для документа. Работает и на сервере и на клиенте</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CreateTemplate(System.Boolean)">
            <summary>Создать пустой шаблон для документа. Работает и на сервере и на клиенте</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CreateFirstPage">
            <summary>Создать первую страницу документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CreateDocument(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Фабричный конструктор. Создаёт новый документ. Класс зависит от контекста: Сервер это или клиент</summary>
            <param name="template">Шаблон документа</param>
            <param name="applyTemplate">Применить шаблон</param>
            <param name="needFirstPage">Создавать первую страницу, даже если в шаблоне не определена страница, 
            которая должна автоматически создаваться</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CreateDocumentFromTemplate(Intermech.Interfaces.Document.ImDocumentData,System.Boolean,System.Boolean)">
            <summary>Конструктор. Создаёт документ с шаблоном</summary>
            <param name="template">Шаблон документа</param>
            <param name="applyTemplate">Применить шаблон</param>
            <param name="needFirstPage">Создавать первую страницу, даже если в шаблоне не определена страница, 
            которая должна автоматически создаваться</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.#ctor(Intermech.Interfaces.Document.ImDocumentData,System.Boolean,System.Boolean)">
            <summary>Конструктор. Создаёт документ с шаблоном</summary>
            <param name="template">Шаблон документа</param>
            <param name="applyTemplate">Применить шаблон</param>
            <param name="needFirstPage">Создавать первую страницу, даже если в шаблоне не определена страница, 
            которая должна автоматически создаваться</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре констрикторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ImDocumentFileExtensions">
            <summary>
            Документы интермех и шаблоны
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.OldBlankExtensions">
            <summary>
            Бланки интермех формата BLANKS2/Search
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.OldImDocumentExtensions">
            <summary>
            Форматы старых документов интермех Search. 
            Временно отключены, так как конвертация не отлажена и содержит ошибки (например файлы rev не удалось прочитать) 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.OldAvsExtensions">
            <summary>
            Форматы старых документов интермех Search. 
            Временно отключены, так как конвертация не отлажена и содержит ошибки (например файлы rev не удалось прочитать) 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ImDocumentExternalFileExtensions">
            <summary>
            Внешние документы встраиваемые в ImDocument
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ImDocumentExternalFileExtensionsVisualizer">
            <summary>
            Внешние документы встроенные в ImDocument и поддерживаемые на закладке просмотр
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetFileExtensionWithoutDot(System.String)">
            <summary>Получить расширение из имени файла без точки</summary>
            <param name="fileName">Имя файла</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.IsOldAVSExtension(System.String)">
            <summary>Заданное расширение использовалось в AVS старого формата</summary>
            <param name="fileExtension">Расширение файла</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.IsImDocumentExtension(System.String)">
            <summary>Заданное расширение используется для документов интермех [ImDocument]</summary>
            <param name="fileExtension">Расширение файла</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.IsOldImDocumentExtension(System.String)">
            <summary>Заданное расширение используется для документов интермех [ImDocument]</summary>
            <param name="fileExtension">Расширение файла</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.IsOldBlankExtension(System.String)">
            <summary>Заданное расширение используется для документов интермех [ImDocument]</summary>
            <param name="fileExtension">Расширение файла</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FindFlowIDFromTemplate(Intermech.Interfaces.Document.FlowID)">
            <summary>Найти поток сделанный по шаблону</summary>
            <param name="templateFlowID">Шаблон потока</param>
            <returns>Поток сделанный по шаблону</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FindFlowIDByName(Intermech.Interfaces.Document.FlowID)">
            <summary>Найти одноимённый поток в списке потоков документа, если есть именно этот поток, то возвращает его</summary>
            <param name="flowID">Идентификатор потока</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FindFirstFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Найти первый элемент потока в документе</summary>
            <param name="flowID">Идентификатор потока</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.AddDocumentFlow(Intermech.Interfaces.Document.FlowID,System.Boolean)">
            <summary>Добавить поток данных документа</summary>
            <param name="flow">Поток</param>
            <param name="applyTemplate">Применять по шаблону</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.InsertNewPageInDocumentFlow(System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>Вставить новый лист созданный по шаблону в документ, и связать его с потоком данных</summary>
            <param name="pageTemplateId">Шаблон нового листа</param>
            <param name="index">Индекс в документе</param>
            <param name="updateLayout">Обновить разбивку документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.InsertPageInDocumentFlow(Intermech.Interfaces.Document.PageData,System.Int32,System.Boolean)">
            <summary>Вставить новый лист в документ, и связать его с потоком данных</summary>
            <param name="newPage">Шаблон нового листа</param>
            <param name="index">Индекс в документе</param>
            <param name="updateLayout">Обновить разбивку документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetNewNameForFlowID(System.String)">
            <summary>Получить уникальный текстовый идентификатор для потока</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateContainerImages">
            <summary>
            Обновить все изображения в контейнерах
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CheckUniqueFlowName(System.String)">
            <summary>Проверить уникальность имени потока</summary>
            <param name="name">Имя</param>
            <returns>Возвращает true, если имя не использовалось в списке потоков документа</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DocumentFlows">
            <summary>Список потоков между страницами. Первый поток является потоком по умолчанию</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.PageUnlocked">
            <summary>Событие разблокирована страница</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnPageUnlocked(Intermech.Interfaces.Document.PageUnlockedArgs)">
            <summary>Генерирует событие PageUnlocked</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.PageLoaded">
            <summary>Событие разблокирована страница</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.BackgroundThreadsFinished">
            <summary>Событие при завершении фоновых процессов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnBackgroundThreadsFinished(Intermech.Interfaces.Document.BackgroundThreadsFinishedArgs)">
            <summary>Генерирует событие BackgroundThreadsFinished</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.IsDistributing">
            <summary>Запущен процесс разбивки документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateLayout(System.Boolean)">
            <summary>Обновить представление данных</summary>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateLayout(System.Boolean,System.Boolean)">
            <summary>Обновить представление данных</summary>
            <param name="force">Обновлять даже если SuspendedUpdateLayoutFlag</param>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnBeforeDistributeInThread(Intermech.Interfaces.Document.DistributeThreadArgs)">
            <summary>
            Метод вызывается перед началом разбивки в потоке
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnAfterDistributeInThread(Intermech.Interfaces.Document.DistributeThreadArgs)">
            <summary>
            Метод вызывается после окончания разбивки в потоке
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.DistributeDocument(System.Object)">
            <summary>Метод разбивки документа. Используется и как метод для фонового потока и как синхронный вызов</summary>
            <param name="args">Аргументы разбивки. Должны быть типа DistributeThreadArgs</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateLayout(System.Int32,System.Boolean,System.Boolean)">
            <summary>Обновить представление данных</summary>
            <param name="fromPage">Начиная со страницы</param>
            <param name="force">Обновлять даже если SuspendedUpdateLayoutFlag</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateLayout(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить представление данных</summary>
            <param name="fromPage">Начиная со страницы</param>
            <param name="force">Обновлять даже если SuspendedUpdateLayoutFlag</param>
            <param name="lockUndo">Блокировать сохранение undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="distributeInThread">Разбивать в потоке</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ResumeUpdateLayout(System.Boolean,System.Boolean)">
            <summary>Возобновить автоматическое обновление представлений данных</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ResumeUpdateLayout(System.Int32,System.Boolean,System.Boolean)">
            <summary>Возобновить автоматическое обновление разбивки страниц</summary>
            <param name="fromPage">Обновлять начиная со страницы</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetSuspendRefreshUICount(System.Int32)">
            <summary>Установить значение счетчика SuspendRefreshUI для узла и подузлов</summary>
            <param name="count">Значение счетчика</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetSuspendUpdateUIGeometryCount(System.Int32)">
            <summary>Установить значение счетчика SuspendUpdateUIGeometry для узла и подузлов</summary>
            <param name="count">Значение счетчика</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateNodeLinks(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить ссылки на узлы</summary>
            <param name="recursive">Для всех дочерних элементов</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.Designation">
            <summary>Обозначение</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.LoadedFromXMLDesignation">
            <summary>Только для внутреннего использования. 
            Обозначение документа, которое хранилось в XML до замены обозначением из документа в БД.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.FileSize">
            <summary>Размер файла документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.FileModifyDate">
            <summary>Дата модификации файла документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.FileName">
            <summary>Наименование файла документа используется на сервере</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DocumentName">
            <summary>Наименование документа из шапки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DocumentComplectObjectGuid">
            <summary>Guid версии комплекта в котором находится документ</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DBObjectID">
            <summary>Идентификатор версии объекта в котором хранится документ</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DBObjectInfo">
            <summary>Идентификатор версии объекта в котором хранится документ</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DBObjectGuid">
            <summary>Глобальный идентификатор версии объекта в котором хранится документ</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DBObjectType">
            <summary>Идентификатор типа объекта в котором хранится документ</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DBObjectCaption">
            <summary>Заголовок объекта в котором хранится документ</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultNonSkipAtStartPage">
            <summary>Значение NonSkipAtStartPage для строк по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.AssignDefaultNonSkipAtStartPage(System.Boolean)">
            <summary>Задать новое значение свойству DefaultNonSkipAtStartPage без вызова обработчиков</summary>
            <param name="value">Значение</param>
            <param name="setOverrideFlag">Установить флаг перекрытия шаблона</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetDefaultNonSkipAtStartPage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству DefaultNonSkipAtStartPage</summary>
            <param name="value">Значение</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FindAndLinkTextWithSomeBlankID">
            <summary>
            Найти на страницах из старого бланка ячейки с одинаковым атрибутом BLN.ID и связать их, для переноса данных с первого листа на следующие
            Поддержка старого механизма в бланках
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.AttributePagesComplectCount">
            <summary>Кол-во страниц в комплекте</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.checkSum">
            <summary>
            Контрольная сумма
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetRootDocumentsComplect">
            <summary>Получить корневой комплект документов</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ContainsVirtualAttribute(System.String)">
            <summary>Содержит ли объект виртуальный атрибут с указанным именем</summary>
            <param name="attributeName">Имя виртуального атрибута</param>
            <returns>Возвращает true, если объект содержит виртуальный атрибут 
            с указанным именем</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetVirtualAttributeValue(System.String,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить значение виртуального атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="notNull">Вернуть пустую строку вместо значения null</param>
            <param name="callChain">Цепочка вызовов для защиты от циклических связей. Если null, то работает без проверок</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetVirtualAttributeValue(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Установить значение виртуального атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="callChain">Цепочка вызовов, для защиты от зацикливания</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetVirtualAttributeNames(System.Collections.Specialized.StringCollection,System.Boolean)">
            <summary>Получить список всех имен атрибутов</summary>
            <param name="forSaveOnly">Добавлять в список только те атрибуты, которые должны сохраниться в XML или копироваться при копировании через буфер</param>
            <returns>Список всех имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ShowException(System.Exception,System.String)">
            <summary>
            Отображение информации о возникшей исключительной ситуации (Exception)
            </summary>
            <param name="ex"></param>
            <param name="errorFormCaption"></param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ShowExceptionDialog">
            <summary>Отобразить информацию о возникшей исключительной ситуации (Exception)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetSnapPoints(Intermech.Drawing.Common.UniPointF,System.Single,System.Collections.Generic.List{Intermech.Interfaces.Document.SnapPoint},Intermech.Interfaces.Document.VisualNode)">
            <summary>Получить список узлов привязки</summary>
            <param name="originalPoint">Оригинальная точка</param>
            <param name="snapSize">Размер области привязки</param>
            <param name="snapPointList">Список полученных точек</param>
            <param name="excludeNode">Узел который должен исключаться из рассмотрения</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetAviableDataShowElementTypes">
            <summary>Получить допустимые типы представлений данных для ячейки</summary>
            <returns>Массив допустимых типов представлений данных для ячейки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultForeColor">
            <summary>Цвет переднего плана по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultBackColor">
            <summary>Цвет фона по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultCharFormat">
            <summary>Шрифт по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultParagraphFormat">
            <summary>Формат по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultMarginsInTextBox">
            <summary>Размер полей в текстовом редакторе</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultMarginsInLabel">
            <summary>Размер полей в текстовом редакторе</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultMarginsInContainer">
            <summary>Размер полей в текстовом редакторе</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultMarginsInTextBoxInFormulaLib">
            <summary>Размер правого и левого полей по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultMarginsInLabelInFormulaLib">
            <summary>Размер правого и левого полей по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultMarginsInContainerInFormulaLib">
            <summary>Размер правого и левого полей по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.RefreshUI">
            <summary>Обновить изображение на экране</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.AllowFormatingForReadOnlyText">
            <summary>Разрешать форматирование для ReadOnly ячеек</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ForceSaveValuesFromRefToDBAttr">
            <summary>
            Флаг для принудительного сохранения значений атрибутов полученных из БД
            Используется при выгрузке файла на диск со всеми значениями
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.SaveValueFromRefToDBAttr">
            <summary>Сохранять в файле документа значения атрибутов из базы данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.Draw(Intermech.Interfaces.Document.DrawContext)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.AbortBackgroundThreads">
            <summary>Прервать все фоновые потоки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.IsFormulaLib">
            <summary>Это специальный документ - библиотека формул</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.AssignIsFormulaLib(System.Boolean)">
            <summary>Только для внутреннего пользования. Назначить новое значение IsFormulaLib</summary>
            <param name="value">Новое значение IsFormulaLib</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DefaultDrawParentCellFrames">
            <summary>Рисовать границы подтаблицы поверх границ внутренних ячеек.
            Необходимо для возможности отключать границы части внутренних ячеек</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.FixedRowSizeTrancateFraction">
            <summary>Погрешность округления кратной высоты текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.CalcPrecision0">
            <summary>Погрешность накапливающаяся после нескольких вычислений. 
            Костыль для сохранения поведения страрых документов в местах где не было учёта погрешности</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.MultiCalcPrecision">
            <summary>Погрешность накапливающаяся после нескольких вычислений</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetMultiCalcPrecision(System.Single,System.Boolean)">
            <summary>Для внутреннего использования. Установить MultiCalcPrecision</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.BeforeDrawPage">
            <summary>
            Событие перед отрисовкой страницы
            </summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.AfterDrawPage">
            <summary>
            Событие после отрисовки страницы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.SuspendedUpdateUIGeometryFlag">
            <summary>Обновление геометрии интерфейса пользователя заблокировано</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetPrevPage(Intermech.Interfaces.Document.DocumentTreeNode,System.Int32,System.Boolean)">
            <summary>Получить страницу идущую перед текущей в документе</summary>
            <param name="currPageParent">Владелец текущей страницы</param>
            <param name="currPageIndex">Индекс текущей страницы в коллекции владельца</param>
            <param name="onlyOwnerDocument">Только в пределах того документа, который владеет страницей</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetNextPage(Intermech.Interfaces.Document.DocumentTreeNode,System.Int32,System.Boolean)">
            <summary>Получить страницу идущую после текущей в документе</summary>
            <param name="currPageParent">Владелец текущей страницы</param>
            <param name="currPageIndex">Индекс текущей страницы в коллекции владельца. 
            Если -1, то будет искать первую страницу</param>
            <param name="onlyOwnerDocument">Только в пределах того документа, который владеет страницей</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetFirstPage(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Получить первую страницу у заданного владельца</summary>
            <param name="pageParent">Владелец страницы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetLastPage(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Получить последнюю страницу у заданного владельца</summary>
            <param name="pageParent">Владелец страницы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.HasLockedNodes(System.Collections.Generic.IList{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Проверить есть ли в списке узлов узлы заблокированные фоновым потоком</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetDocTreeRoot">
            <summary>Корень дерева документа в котором находится этот узел. 
            <remarks>Документ который владеет этим узлом. Если узел не принадлежит документу, то null</remarks>
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.IsIdServiceOwner">
            <summary>Узел является владельцем сервиса уникальных идентификаторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CanAddChildElement(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Проверить можно ли добавить заданный элемент в этот элемент</summary>
            <param name="child">Вставляемый элемент</param>
            <returns>Возвращает true, если заданный элемент можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CanAddChildElement(System.Type)">
            <summary>Проверить можно ли добавить элемент заданного типа в этот элемент</summary>
            <param name="type">Тип вставляемого элемента</param>
            <returns>Возвращает true, если элемент заданного типа можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnChanged(Intermech.Interfaces.Document.Changed_EventArgs)">
            <summary>Генерирует событие Changed</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.LockModified">
            <summary>
            Блокировать изменение флага Modified
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.Modified">
            <summary>Документ изменен после сохранения или открытия</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.SavedDateTime">
            <summary>Время сохранения файла в базу</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.Clear(System.Boolean,System.Boolean)">
            <summary>Очистить узел</summary>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetDefautCaption">
            <summary>Получить подпись элемента по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetRootComplect">
            <summary>Получить комплект верхнего уровня в котором находится документ</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdatePageNumbers(Intermech.Interfaces.Document.PageData,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить номера страниц</summary>
            <param name="startPage">Страница с которой нужно начать обновление номеров. Если null, то с начала</param>
            <param name="startComplectPageIndex">Первый номер страницы для нумерации в комплекте документов</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Возвращает первый номер страницы следующего документа для нумерации в комплекте документов</returns>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.AfterUpdatePageNumbers">
            <summary>Событие После вызова обновления номеров страниц</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnAfterUpdatePageNumbers(Intermech.Interfaces.Document.AfterUpdatePageNumbers_EventArgs)">
            <summary>Вызывает событие AfterUpdatePageNumbers</summary>
            <param name="e">Аргументы события</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.StartPageNumber">
            <summary>Номер первой страницы документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetStartPageNumber(System.Int32,System.Boolean,System.Boolean)">
            <summary>Назначить новое значение свойству StartPageNumber</summary>
            <param name="value">Новое значение</param>
            <param name="updatePageNumbers">Пересчитать номера страниц</param>
            <param name="updateUI">Обновить вид документа</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.StartComplectPageNumber">
            <summary>Номер первой страницы документа в комплекте документов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.AssignStartComplectPageNumber(System.Int32)">
            <summary>Назначить новое значение StartComplectPageNumber</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.IsPartOfComplectPageNumbering">
            <summary>Документ участвует в сквозной нумерации страниц комплекта документов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetIsPartOfComplectPageNumbering(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить новое значение свойству StartPageNumber</summary>
            <param name="value">Новое значение</param>
            <param name="updatePageNumbers">Пересчитать номера страниц</param>
            <param name="updateUI">Обновить вид документа</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.IsPartOfComplectPageCount">
            <summary>Документ участвует в расчёте общего количества страниц комплекта документов. 
            Не путать с IsPartOfComplectPageNumbering</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetIsPartOfComplectPageCount(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить новое значение свойству StartPageNumber</summary>
            <param name="value">Новое значение</param>
            <param name="updatePageNumbers">Пересчитать номера страниц</param>
            <param name="updateUI">Обновить вид документа</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DynamicGroupHeaderIsEnabled">
            <summary>Группировать записи под общим заголовком.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetDynamicGroupHeaderIsEnabled(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить новое значение свойству DynamicGroupHeaderIsEnabled</summary>
            <param name="value">Новое значение</param>
            <param name="updatePageNumbers">Пересчитать номера страниц</param>
            <param name="updateUI">Обновить вид документа</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.PageCount">
            <summary>Количество страниц в документе</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.PostProcessAddChildNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Метод вызывается после добавления дочернего элемента, но до вызова события ChildNodeAdded</summary>
            <param name="child">Дочерний элемент</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnChildNodeRemoved(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Генерирует событие ChildNodeRemoved</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.ModifiedChanged">
            <summary>Событие Изменено свойство Modified</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnModifiedChanged(Intermech.Interfaces.Document.ModifiedChanged_EventArgs)">
            <summary>Вызывает событие ModifiedChanged</summary>
            <param name="e">Аргументы события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.DistributePageFinished">
            <summary>Событие Закончена разбивка страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnDistributePageFinished(Intermech.Interfaces.Document.DistributePageFinishedArgs)">
            <summary>Генерирует событие DistributePageFinished</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateIDPageLinks(System.String,System.String)">
            <summary>Обновить ссылки на страницу через её идентификатор</summary>
            <param name="oldPageId">Старое значение идентификатора</param>
            <param name="newPageId">Новое значение идентификатора</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.FitToPage">
            <summary>Положение страницы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.NotifyService">
            <summary>
            Сервис уведомления о событиях
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.ShiftPage">
            <summary>Положение страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetSummaryShiftForPage(System.String)">
            <summary>Получить суммарное смещение страниц. Смещение заданное в шаблоне + смещение заданное настройками для принтера</summary>
            <param name="printerName">Имя принтера</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.PrintDocument">
            <summary>Объект посылающий данные на печать</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.BeginPrint(System.Object,Intermech.Drawing.Common.Events.UniPrintEventArgs)">
            <summary>Обработчик события "Начало печати документа"</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.NeedPrintPage(Intermech.Drawing.Common.IUniPrintDocument,Intermech.Interfaces.Document.PageData)">
            <summary>Печатать ли страницу согласно настройкам печати</summary>
            <param name="page">Страница</param>
            <returns>true, если печатать страницу</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.PrintPage(Intermech.Drawing.Common.IUniPrintDocument,Intermech.Drawing.Common.Events.UniPrintPageEventArgs,Intermech.Interfaces.Document.PageData)">
            <summary>Печать страницы</summary>
            <param name="printDoc">PrintDocument который печатается</param>
            <param name="e">параметр события PrintDocument.PrintPage</param>
            <returns>была ли отпечатана хоть 1 страница</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.printDocument_PrintPage(System.Object,Intermech.Drawing.Common.Events.UniPrintPageEventArgs)">
            <summary>Обработчик события "Печать страницы"</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.EndPrint(System.Object,Intermech.Drawing.Common.Events.UniPrintEventArgs)">
            <summary>Обработчик события "Конец печати"</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.printDocument_QueryPageSettings(System.Object,Intermech.Drawing.Common.Events.UniQueryPageSettingsEventArgs)">
            <summary>Обработчик события перед печатью каждой страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.InitPrintDocument">
            <summary>Инициализировать объект для печати документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DocumentTemplate">
            <summary>Шаблон на основе которого создается это документ</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetFirstPageTemplate">
            <summary>Получить первый шаблон страницы</summary>
            <returns>Первый шаблон страницы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FindFirstPageTemplateForNewDocument">
            <summary>Найти шаблон страницы, которая будет первой в новом документе</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FindFirstMainTableTemplate">
            <summary>
            Найти в шаблоне таблицу данных, которая должна быть первой на созданных в новом документе страницах
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FindFirstMainTable">
            <summary>
            Найти в документе первую таблицу данных
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CanUseNodeAsTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Можно ли использовать заданный узел как шаблон</summary>
            <param name="node">Узел</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TemplateRoot">
            <summary>Корень дерева в котором должен находиться шаблон этого узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FindTemplate(System.String)">
            <summary>Найти шаблон этого узла по идентификатору templateId</summary>
            <param name="templateId">Идентификатор шаблона</param>
            <returns>Шаблон узла</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.IsTemplate">
            <summary>Является ли страница шаблоном</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetIsTemplate(System.Boolean)">
            <summary>Установить флаг IsTemplate</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DocumentDataTemplate">
            <summary>Шаблон на основе которого создается это документ</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.Template">
            <summary>Шаблон этого узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.AssignDocumentTemplate(Intermech.Interfaces.Document.ImDocumentData,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить шаблон документу</summary>
            <param name="value">Шаблон</param>
            <param name="applyTemplate">Применить шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.AssignDocumentTemplate(Intermech.Interfaces.Document.ImDocumentData,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить шаблон документу</summary>
            <param name="value">Шаблон</param>
            <param name="applyTemplate">Применить шаблон</param>
            <param name="calledFromCatch">Вызов из обработчика исключения, чтобы вернуть старое значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.BeforeDistributePage">
            <summary>Происходит перед разбитием страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnBeforeDistributePage(Intermech.Interfaces.Document.PageDistribute_EventArgs)">
            <summary>Генерирует событие BeforeDistributePage</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.TextValidating">
            <summary>Событие Текст изменен в текстовых полях</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnTextValidating(System.Object,Intermech.Interfaces.Document.TextValidating_EventArgs)">
            <summary>Вызывает событие Текст изменен в текстовых полях</summary>
            <param name="sender">Поле вызвавшее событие</param>
            <param name="e">Данные события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.TextChanged">
            <summary>Событие Текст изменен в текстовых полях</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnTextChanged(System.Object,Intermech.Interfaces.Document.TextChanged_EventArgs)">
            <summary>Вызывает событие Текст изменен в текстовых полях</summary>
            <param name="sender">Поле вызвавшее событие</param>
            <param name="e">Данные события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.AfterDistributePage">
            <summary>Происходит после разбития страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnAfterDistributePage(Intermech.Interfaces.Document.PageDistribute_EventArgs)">
            <summary>Генерирует событие AfterDistributePage</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.TemplateChanged">
            <summary>Происходит когда заменён шаблон</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnTemplateChanged(Intermech.Interfaces.Document.TemplateChanged_EventArgs)">
            <summary>Генерирует событие TemplateChanged</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.TemplateChanging">
            <summary>Происходит перед заменой шаблона</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnTemplateChanging(Intermech.Interfaces.Document.TemplateChanging_EventArgs)">
            <summary>Генерирует событие TemplateChanging</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateTemplateLinks(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить ссылки на шаблоны. Восстановить по идентификатору шаблона ссылку на сам шаблон</summary>
            <param name="applyTemplate">Применить шаблон</param>
            <param name="recursive">Рекурсивно для подэлементов</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TemplateOwner">
            <summary>Владелец этого шаблона. Если это не шаблон, то null</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ClonePageFromTemplate(System.String,System.Boolean)">
            <summary>Создать страницу по шаблону, не вставляя ее в документ</summary>
            <param name="pageTemplateId">Идентификатор шаблона страницы</param>
            <param name="isNextPage">Создаётся следующая страница для продолжения разбивки</param>
            <returns>Страницу по шаблону</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.NewPage">
            <summary>Создать и добавить новую страницу</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.NewPage(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать и добавить новую страницу</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CreateNextPageTemplate(Intermech.Interfaces.Document.PageData)">
            <summary>Создать шаблон для следующей страницы. Применимо только к шаблонам документа.</summary>
            <param name="basePage">Шаблон предыдущей страницы</param>
            <returns>Шаблон следующей страницы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CloneFromTemplate(System.Boolean,System.Boolean)">
            <summary>Создать копию элемента используя этот узел как шаблон</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyDataNodes">Копировать узлы-данные в таблицах</param>
            <returns>Копия узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CreateDocumentElementFromTemplate(System.String)">
            <summary>Создать новый элемент документа по заданному шаблону</summary>
            <param name="templateID">Идентификатор элемента шаблона документа</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnDeserialization(System.Object)">
            <summary>Метод вызываемый при десериализации. 
            Реализация IDeserializationCallback</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ReplaceForbiddenSymbols(System.String)">
            <summary>
            Заменить запрещенные символы для имен файлов
            </summary>
            <param name="fileName">Имя файла</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GenerateUniqueFileName(System.String)">
            <summary>Сгенерировать уникальное имя файла. Используется при сохранении во временный файл</summary>
            <param name="fullName">Начальное имя файла (с путем)</param>
            <returns>Уникальное имя файла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GenerateUniqueFileName(System.String,System.String,System.String)">
            <summary>Сгенерировать уникальное имя файла. Используется при сохранении во временный файл</summary>
            <param name="dir">Путь</param>
            <param name="baseName">Базовое имя</param>
            <param name="extension">Расширение</param>
            <returns>Уникальное имя файла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SaveToXml(System.String,System.Boolean)">
            <summary>Сохранить документ в файл в формате XML.
            Если файл с этим именем уже существует, он будет переписан!</summary>
            <param name="fileName">Имя файла</param>
            <param name="packFile">Сжимать файл</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SaveToXml(System.String,System.Boolean,System.Boolean)">
            <summary>Сохранить документ в файл в формате XML.
            Если файл с этим именем уже существует, он будет переписан!</summary>
            <param name="fileName">Имя файла</param>
            <param name="packFile">Сжимать файл</param>
            <param name="saveActiveReferenceToDBAttr">Принудительно сохранение всех полученных значений в ссылках на атрибуты БД</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.BeforeSaveDocument">
            <summary>
            Метод вызывается перед сохранением документа
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SaveToXml(System.IO.Stream)">
            <summary>Сохранить документ в поток в формате XML</summary>
            <param name="stream">Поток</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.ImDocumentData.BeforeSave">
            <summary>Событие перед сохранением документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.OnBeforeSave(System.EventArgs)">
            <summary>Генерирует событие BeforeSave</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ReadFromXmlOldFormats_After(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить узел из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadDocOrComplectFromXmlInThread(System.Object)">
            <summary>Метод загрузки документа или комплекта из XML для фонового потока</summary>
            <param name="args">Аргументы загрузки из XML. Должны быть типа XmlReadArgs</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromXmlInThread(System.Object)">
            <summary>Метод загрузки из XML для фонового потока</summary>
            <param name="args">Аргументы загрузки из XML. Должны быть типа XmlReadArgs</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadDocOrComplectFromXml(System.IO.Stream,System.Boolean,System.Boolean,System.Boolean,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить документ XML из потока. Основной метод.</summary>
            <param name="stream">Поток содержащий документ</param>
            <param name="updateDoc">Обновить ссылки и разбивку в документе после загрузки</param>
            <param name="notCloseStream">Не закрывать поток после загрузки</param>
            <param name="loadInThread">Загружать в фоновом процессе</param>
            <param name="readArgs">Аргументы загрузки. 
            Необходимы при загрузке с внешним фоновым процессом</param>
            <returns>Документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.PreparePartlyLoadedDoc(Intermech.Interfaces.Document.XmlReadArgs,System.Boolean)">
            <summary>Служебный метод, только для внутреннего пользования. 
            Готовит документ к показу, пока он догружается в фоновом потоке</summary>
            <param name="readArgs">Параметры загрузки документа</param>
            <param name="updateDoc">Обновлять документ</param>
            <returns>Возвращает ссылку на загружаемый документ или комплект</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromXml(System.IO.Stream)">
            <summary>Загрузить данные документа из потока.
            После загрузки поток закрывается в xmlReader.Close()!</summary>
            <param name="stream">Поток данных документа</param>
            <returns>Документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromXml(System.IO.Stream,Intermech.Interfaces.Document.XmlReadArgs,System.Boolean)">
            <summary>Загрузить данные документа из потока.
            После загрузки поток закрывается в xmlReader.Close()!</summary>
            <param name="stream">Поток данных документа</param>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromXml(System.String,System.Boolean,System.Boolean)">
            <summary>Загрузить документ из файла XML</summary>
            <param name="fileName">Имя файла</param>
            <param name="updateDoc">Обновить ссылки и разбивку в документе после загрузки</param>
            <param name="loadInThread">Загружать в фоновом процессе</param>
            <returns>Документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromStream(System.IO.Stream,System.String,Intermech.Interfaces.Document.DocumentFileType@,System.Boolean,System.Boolean,System.Boolean,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить документ из потока. Основной метод
            Анализирует заголовок и может грузить файлы разных версий.</summary>
            <param name="stream">Поток с документом или комплектом документов</param>
            <param name="filePath">Путь к файлу, если загружается из файла. Необходимо для документов старого формата</param>
            <param name="docType">Возвращает тип документа</param>
            <param name="updateDoc">Обновлять документ после загрузки (ссылки, разбивку на страницы)</param>
            <param name="loadInThread">Загружать в фоновом потоке</param>
            <param name="failIfUnknownFormat">Генерировать исключение, если формат файла не определён</param>
            <param name="readArgs">Аргументы загрузки. 
            Необходимы при загрузке с внешним фоновым процессом</param>
            <returns>Загруженный документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromStream(System.IO.Stream,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Загрузить документ из файла. 
            Анализирует заголовок и может грузить файлы разных версий.</summary>
            <param name="stream">Поток с документом или комплектом документов</param>
            <param name="updateDoc">Обновлять документ после загрузки (ссылки, разбивку на страницы)</param>
            <param name="loadInThread">Загружать в фоновом потоке</param>
            <param name="failIfUnknownFormat">Генерировать исключение, если формат файла не определён</param>
            <returns>Загруженный документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromOldBlank(System.String,Intermech.Interfaces.Document.ImportBlanks.BlankLoader@)">
            <summary>Создать документ на основе бланка UEdit</summary>
            <param name="fileName">Имя файла бланка</param>
            <param name="blank">Загрузчик бланка</param>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
            <returns>Документ на основе бланка</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromOldBlank(System.IO.Stream,System.String,Intermech.Interfaces.Document.ImportBlanks.BlankLoader@,System.String)">
            <summary>Создать документ на основе бланка UEdit</summary>
            <param name="stream">Поток данных</param>
            <param name="defaultPathForStdLib">Путь по умолчанию к библиотеке стандартных элементов</param>
            <param name="blank">Загрузчик бланка</param>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
            <returns>Документ на основе бланка</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromPrimitiveLib(System.IO.Stream,Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader@,System.String)">
            <summary>Загрузить библиотеку примитивов старого формата "LIB"</summary>
            <param name="fileName">Имя файла</param>
            <param name="defaultPathForBlank">Путь по умолчанию для поиска бланка</param>
            <param name="ueDoc">Загрузчик документа</param>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
            <returns>Документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromUEditDocument(System.String,Intermech.Interfaces.Document.ImportBlanks.UEditDocument@)">
            <summary>Создать документ на основе документа UEdit</summary>
            <param name="fileName">Имя файла документа UEdit</param>
            <param name="ueDoc">Загрузчик документа</param>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
            <returns>Документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromUEditDocument(System.IO.Stream,System.String,System.String,Intermech.Interfaces.Document.ImportBlanks.UEditDocument@,System.String)">
            <summary>Создать документ на основе документа UEdit</summary>
            <param name="fileName">Имя файла документа UEdit</param>
            <param name="defaultPathForBlank">Путь по умолчанию для поиска бланка</param>
            <param name="ueDoc">Загрузчик документа</param>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
            <returns>Документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.LoadFromFile(System.String,Intermech.Interfaces.Document.DocumentFileType@,System.Boolean)">
            <summary>Загрузить документ из файла. Анализирует
            Анализирует заголовок и может грузить файлы разных версий.</summary>
            <param name="fileName">Имя файла</param>
            <param name="docType">Возвращает тип документа</param>
            <param name="loadInThread">Загружать в фоновом потоке</param>
            <returns>Загруженный документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetFileFormat(System.IO.Stream,System.String)">
            <summary>Получить формат документа исходя из расширения или сигнатур в бинарном потоке</summary>
            <param name="stream"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetBinaryFileFormat(System.IO.Stream)">
            <summary>Получить формат документа исходя из сигнатур в бинарном потоке</summary>
            <param name="stream">Поток</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.GetDocumentFileTypeFromExtension(System.String)">
            <summary>Получить тип документа по расширению имени файла</summary>
            <param name="fileName">Имя файла</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить узел из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.IsLoading">
            <summary>Идёт загрузка документа из файла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.BackThreadIsActive">
            <summary>Есть активные фоновые потоки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.LoadThreadIsActive">
            <summary>Есть активный фоновый поток загрузки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DistributeThreadIsActive">
            <summary>Есть активный фоновый поток разбивки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.Reference">
            <summary>Ссылка на источник данных</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.FormulaList">
            <summary>Формулы использованные в документе</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.formulaIndex">
            <summary>Словарь формул</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.MaterialKeyWords">
            <summary>Список ключевых слов для отображения материалов в виде дроби</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.ComplexDesignationSuffixs">
            <summary>Список ключевых слов для отображения материалов в виде дроби</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.Revision">
            <summary>
            Версия документа, наматывается при сохранении
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.SetMaterialKeyWords(System.Collections.Generic.List{System.String})">
            <summary>Установить новое значение MaterialKeyWords</summary>
            <param name="value">Новое значение MaterialKeyWords</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.CreateFormulaList">
            <summary>Создать список формул. Только для внутреннего пользования</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.FindFormulas(System.String)">
            <summary>Создать сервисный объект со списком формул</summary>
            <param name="formulaText">Текст формулы</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateFormulaIndex">
            <summary>Обновить словарь формул</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImDocumentData.UpdateFormulaIndex(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Обновить словарь формул</summary>
            <param name="node">Ветка с формулами, которую нужно сканировать</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ternPaintBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore для рисования</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ternFontMetricsBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore для подбора размера шрифта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernPaintBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernFontMetricsBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ternDistributeSpecSymbolsBufferB">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernDistributeSpecSymbolsBufferB">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ternSpecSymvolsBufferB">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernSpecSymbolsBufferB">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ternDistributeSpecSymbolsBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernDistributeSpecSymbolsBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ternSpecSymvolsBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernSpecSymbolsBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ternPrintBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore для печати</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernPrintBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore для печати</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernDistributeBuffer">
            <summary>Буферный экземпляр ImRtfEditorCore для разбивки текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernDistributeBufferInFormula">
            <summary>Буферный экземпляр ImRtfEditorCore для разбивки текста в формулах</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.TernDistributeBufferForPrint">
            <summary>Буферный экземпляр ImRtfEditorCore для рисования текста в метафайл в формулах и при выводе на печать</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.savedPageCount">
            <summary>Вспомогательное поле для хранения в xml количества страниц 
            и отображения его во время фоновой загрузки документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.DefaultMarginSize">
            <summary>Размер правого и левого полей по умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.defaultBorderLine">
            <summary>Стиль линии по умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.defaultPageBorderLine">
            <summary>Стиль линии по умолчанию для границ страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.isDistributing">
            <summary>Запущен процесс разбивки документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.IsFileLoading">
            <summary>Идёт загрузка документа из файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.IsDocumentLoading">
            <summary>Идёт загрузка данных или генерация документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.FileAttributeIndex">
            <summary>Индекс файлового атрибута в котором хранится документ. 
            <remark>Только для DB. 
            При конвертации файлов старого формата не заполняется. 
            Используется при сохранении документа в тот же атрибут, из которого он был загружен.</remark>
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.FileAttributeID">
            <summary>Идентификатор файлового атрибута в котором хранится документ. 
            <remark>Только для DB. 
            При конвертации файлов старого формата не заполняется. 
            Используется при сохранении документа в тот же атрибут, из которого он был загружен.</remark>
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.FileBlobId">
            <summary>Идентификатор блобы в котором хранится документ</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.LoadFromStreamThread">
            <summary>Фоновый процесс загрузки документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.DistributeThread">
            <summary>Фоновый процесс разбивки документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.dBAttributeProcessorDictionary">
            <summary>Кэш объектов AttributeProcessor</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.signes">
            <summary>
            Кэш в котором хранятся подписи документа
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.objAttrCache">
            <summary>Кэш значений атрибутов объектов системы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.relAttrCache">
            <summary>Кэш значений атрибутов связей системы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.objectsInfoGuid">
            <summary>
            Кэш информации об объектах для ссылок по гуиду версии
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.objectsInfoId">
            <summary>
            Кэш информации об объектах для ссылок по идентификатору версии
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.DBAttributeProcessorDictionary">
            <summary>Кэш в котором хранятся подписи документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.Signes">
            <summary>Кэш в котором хранятся подписи документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.ObjAttrCache">
            <summary>Кэш значений атрибутов объектов системы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.RelAttrCache">
            <summary>Кэш значений атрибутов связей системы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.ObjectsInfoGuid">
            <summary>Кэш информации об объектах для ссылок по гуиду версии</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.ObjectsInfoId">
            <summary>Кэш информации об объектах для ссылок по идентификатору версии</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImDocumentData.UpdateReferencesMode">
            <summary>
            Способ обновления ссылок
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.ShowDebugInfo">
            <summary>Показывать в интерфейсе отладочную информацию и команды</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImDocumentData.LoadedFileProductVersion">
            <summary>Версия приложения сохранившего документ. Только начиная с документов версии 40</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ShowExceptionDialogDelegate">
            <summary>Отобразить информацию о возникшей исключительной ситуации (Exception)</summary>
            <param name="e">Возникшее исключение</param>
            <returns>Тип нажатой в окне кнопки</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageEnumerator">
            <summary>Класс для перемещения по страницам в документах с проходом по сложной структуре комплектов и разделов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageEnumerator.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец страниц в пределах которой нужно проматывать страницы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageEnumerator.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.PageData)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец страниц в пределах которой нужно проматывать страницы</param>
            <param name="startPage">Страница на которую установится энумератор после первого MoveNext</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageEnumerator.Current">
            <summary>Текущая страница</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageEnumerator.SetCurrent(Intermech.Interfaces.Document.PageData)">
            <summary>Изменить текущее положение энумератора</summary>
            <param name="value">Новое текущее положение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageEnumerator.Dispose">
            <summary>Освободить все ресурсы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageEnumerator.System#Collections#IEnumerator#Current">
            <summary>Текущий элемент</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageEnumerator.MoveNext">
            <summary>Перейти к следующему элементу</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageEnumerator.Reset">
            <summary>Сбросить энумератор в начальное состояние, т.е. до первой позиции</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.StartPageEnumerator">
            <summary>Класс для промотки страниц в документах. Проходит только по стартовым страницам в цепочках разбивки. 
            Например общие и переменные данные, блоки исполнений в СП</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.StartPageEnumerator.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец страниц в пределах которой нужно проматывать страницы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.StartPageEnumerator.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.PageData)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец страниц в пределах которой нужно проматывать страницы</param>
            <param name="startPage">Страница на которую установится энумератор после первого MoveNext</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.StartPageEnumerator.InsertAtNextPosition(Intermech.Interfaces.Document.PageData)">
            <summary>Вставить в следующую позицию и сделать её текущей. 
            <remarks>Вставляет на том же уровне. Если сделать сначала MoveNext, то позиция может оказаться на другом уровне иерархии.</remarks>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.StartPageEnumerator.InsertAtCurrentPosition(Intermech.Interfaces.Document.PageData)">
            <summary>Вставить в следующую позицию и сделать её текущей. 
            <remarks>Вставляет на том же уровне. Если сделать сначала MoveNext, то позиция может оказаться на другом уровне иерархии.</remarks>
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TemplateChanged_EventArgs">
            <summary>Аргументы события TemplateChanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TemplateChanged_EventArgs.OldTemplate">
            <summary>Старый шаблон</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TemplateChanged_EventArgs.NewTemplate">
            <summary>Новый шаблон</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TemplateChanged_EventArgs.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageDistribute_EventHandler">
            <summary>Обработчик события PageDistribute</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageDistribute_EventArgs">
            <summary>Аргументы события PageDistribute</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageDistribute_EventArgs.Page">
            <summary>Страница</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageDistribute_EventArgs.#ctor(Intermech.Interfaces.Document.PageData)">
            <summary>Конструктор</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TemplateChanged_EventHandler">
            <summary>Обработчик события TemplateChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TemplateChanging_EventArgs">
            <summary>Аргументы события TemplateChanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TemplateChanging_EventArgs.OldTemplate">
            <summary>Старый шаблон</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TemplateChanging_EventArgs.NewTemplate">
            <summary>Новый шаблон</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TemplateChanging_EventArgs.Cancel">
            <summary>Отменить замену шаблона</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TemplateChanging_EventArgs.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TemplateChanging_EventHandler">
            <summary>Обработчик события TemplateChanging</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DistributePageFinishedArgs">
            <summary>Аргументы события PageUnlocked</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DistributePageFinished_EventHandler">
            <summary>Делегат обработчика события PageUnlocked</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageUnlockedArgs">
            <summary>Аргументы события PageUnlocked</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageUnlockedArgs.IsDistributed">
            <summary>Страница разбита</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageUnlocked_EventHandler">
            <summary>Делегат обработчика события PageUnlocked</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentBackgroundThreadType">
            <summary>Тип фонового потока документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentBackgroundThreadType.None">
            <summary>Нет потоков</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentBackgroundThreadType.LoadThread">
            <summary>Поток фоновой загрузки документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentBackgroundThreadType.DistributeThread">
            <summary>Поток разбивки документа по страницам</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.BackgroundThreadsFinishedArgs">
            <summary>Аргументы события PageUnlocked</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BackgroundThreadsFinishedArgs.#ctor(Intermech.Interfaces.Document.DocumentBackgroundThreadType)">
            <summary>Конструктор</summary>
            <param name="threadType">Тип фонового потока</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.BackgroundThreadsFinished_EventHandler">
            <summary>Делегат обработчика события BackgroundThreadsFinished</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DistributeThreadArgs">
            <summary>Вспомогательный класс. Аргументы распределения в потоке</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ModifiedChanged_EventHandler">
            <summary>Делегат обработчика события ModifiedChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ModifiedChanged_EventArgs">
            <summary>Данные события ModifiedChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AfterUpdatePageNumbers_EventHandler">
            <summary>Обработчик события Changed</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AfterUpdatePageNumbers_EventArgs">
            <summary>Вспомогательный класс. Аргументы обновления номеров страниц</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DrawPageMode">
            <summary>
            Режим отображения страницы
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.OpenDocumentMode">
            <summary>
            Режим открытия документа
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DrawPageEventHandler">
            <summary>
            Делегат для обработки событий BeforeDrawPage и AfterDrawPage
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Intermech.Interfaces.Document.DrawPageEventArgs">
            <summary>Аргументы для обработчиков событий перед и после отображения страниц</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DrawPageEventArgs.#ctor(Intermech.Interfaces.Document.PageData,Intermech.Interfaces.Document.OpenDocumentMode,Intermech.Interfaces.Document.DrawPageMode,System.Boolean,Intermech.Interfaces.Document.DrawContext)">
            <summary>Конструктор</summary>
            <param name="page">Страница</param>
            <param name="mode">Цель открытия документа</param>
            <param name="drawMode">Цель отображения страницы</param>
            <param name="firstDraw">Страница отображается в первый раз. Необходимо для однократной обработки перед первым отображением</param>
            <param name="context">Контекст рисования страницы</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentViewMode">
            <summary>
            Параметры просмотра документа
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentViewMode.ShowDocumentReferences">
            <summary>
            Записывать параметры в атрибуты документа (включает (отключает) передачу значений атрибутов при просмотре 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentViewMode.ShowSigns">
            <summary>
            Записывать подписи в атрибуты документа (включает(отключает) передачу подписей в документ при просмотре)
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentViewMode.ShowOnlySignName">
            <summary>
            Оставить место в штампе для ручной подписи (оставляет пустыми подписи и даты. передается только фамилия подписавшего).
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentViewMode.ShowCRC">
            <summary>
            Запись контрольной суммы в файл
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentViewMode.Normal">
            <summary>
            Обычный режим отображения, всё показывать
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.UpdateReferencesMode">
            <summary>
            Способ обновления ссылок
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UpdateReferencesMode.None">
            <summary>
            Ничего не задано
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UpdateReferencesMode.Attributes">
            <summary>
            Ссылки на атрибуты
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UpdateReferencesMode.Signes">
            <summary>
            Ссылки на подписи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UpdateReferencesMode.Checksum">
            <summary>
            Ссылки на контрольную сумму
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UpdateReferencesMode.All">
            <summary>
            Все
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UpdateReferencesMode.NotChecksum">
            <summary>
            Все кроме контрольной суммы
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AfterLoadDocumentDataEventHandler">
            <summary>Делегат для обработки события после загрузки файла документа</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AfterLoadDocumentDataEventHandlerArgs">
            <summary>Аргументы для обработчиков события после загрузки файла документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AfterLoadDocumentDataEventHandlerArgs.Document">
            <summary>Документ</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AfterLoadDocumentDataEventHandlerArgs.#ctor(Intermech.Interfaces.Document.ImDocumentData)">
            <summary>Конструктор</summary>
            <param name="documentID">Идентификатор версии объекта БД</param>
            <param name="DocumentGuid">Глобальный идентификатор версии объекта</param>
            <param name="DocumentTypeID">Идентификатор типа объекта</param>
            <param name="document">Документ</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentFileType">
            <summary>Тип файла документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentFileType.Unknown">
            <summary>Неизвестный тип файла документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentFileType.OldBlank">
            <summary>Бланк старого формата для программы Blanks2</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentFileType.OldAVS">
            <summary>Документ AVS старого формата</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentFileType.OldUEditDocument">
            <summary>Документ старого формата для программы UEdit</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentFileType.OldPrimitiveLib">
            <summary>Библиотека примитивов старого формата</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentFileType.ImDocument">
            <summary>Документ Интермех</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentFileType.ImDocument_IsPacked">
            <summary>Документ Интермех сохранённый со сжатием</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentFileType.ImDocumentsComplect">
            <summary>Комплект документов Интермех</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentFileType.ImDocumentsComplect_IsPacked">
            <summary>Комплект документов Интермех сохранённый со сжатием</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImDocumentException">
            <summary>
            Исключение для редактора документов Интермех
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.IParentFlow">
            <summary>Интерфейс родительского элемента цепочки 
            распределения данных потока (IFlowElement). 
            Служит для группировки цепочек потоков и организации их в иерархию.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IParentFlow.AddChildFlowElement(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Добавить дочерний элемент цепочки</summary>
            <param name="child">Дочерний элемент цепочки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IParentFlow.RemoveChildFlowElement(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Удалить дочерний элемент цепочки</summary>
            <param name="child">Дочерний элемент цепочки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.LockUndo">
            <summary>
            Заблокировать Undo
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.UnlockUndo">
            <summary>
            Разблокировать Undo
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IUndoManager.IsLocked">
            <summary>
            Проверка на блокировку, проверяется блокировка в менеджере и документе
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IUndoManager.Actions">
            <summary>
            Список действий
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.BeginCreateMultyUndo(System.String)">
            <summary>
            Начать создание сложного Undo
            </summary>
            <param name="caption">заголовок , если равен "" используется заголовок первого undo в списке</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.BeginCreateMultyUndo(System.String,System.Collections.Generic.List{Intermech.Interfaces.Document.IUndoAction})">
            <summary>
            Начать создание сложного Undo
            </summary>
            <param name="caption">заголовок , если равен "" используется заголовок первого undo в списке</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.CreateUndo(Intermech.Interfaces.Document.IUndoAction,System.Boolean)">
            <summary>
            Создать пользоватеоьское действие
            </summary>
            <param name="action"></param>
            <param name="ignoreLock"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.CreateUndo(Intermech.Interfaces.Document.DocumentTreeNode,System.String)">
            <summary>
            Создать действие изменения свойства или поля
            </summary>
            <param name="node"></param>
            <param name="propertyName"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.CreateUndo(System.Object,System.String,System.Object,System.Object)">
            <summary>
            Создать действие изменения свойства или поля
            </summary>
            <param name="node"></param>
            <param name="propertyName"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.CreateUndo(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode,System.Int32)">
            <summary>
            Создать действие удаления
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
            <param name="removeIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.CreateUndo(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>
            Отмена вставки элемента
            </summary>
            <param name="parent"></param>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoManager.CreateUndo(Intermech.Interfaces.Document.DocumentTreeNode,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Создать действие смены позиции
            </summary>
            <param name="parent"></param>
            <param name="oldPos"></param>
            <param name="newPos"></param>
            <param name="exchanged">true - поменять элементы в позициях местами, false переместить с одной позиции на другую</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoAction.CreateRedoAction">
            <summary>
            Создание Redo действия
            </summary>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.IUndoAction.Caption">
            <summary>
            Заголовок для списка действий
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUndoAction.IdChanged(System.String,System.String)">
            <summary>
            Изменение Id любого объекта, требуется для изменения Id если он хранится в действии
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="T:Intermech.Interfaces.Document.IUniqueIdService">
            <summary>Сервис для обеспечения уникальности идентификаторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUniqueIdService.GenerateUniqueId">
            <summary>Сгенерировать уникальный идентификатор (сам факт генерации не резервирует ид)</summary>
            <returns>Уникальный идентификатор</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUniqueIdService.GenerateUniqueId(System.Object)">
            <summary>Сгенерировать уникальный идентификатор (сам факт генерации не резервирует ид)</summary>
            <param name="prototypeID">Заготовка идентификатора</param>
            <returns>Уникальный идентификатор</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUniqueIdService.ContainsId(System.Object)">
            <summary>Используется ли заданный идентификатор</summary>
            <param name="id">Идентификатор</param>
            <returns>Идентификатор уже используется</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUniqueIdService.AddId(System.Object,System.Object)">
            <summary>Добавить (зарезервировать) объект с идентификатором</summary>
            <param name="id">Идентификатор</param>
            <param name="value">Объект, которому принадлежит идентификатор</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUniqueIdService.RemoveId(System.Object)">
            <summary>Удалить (освободить) идентификатор</summary>
            <param name="id">Идентификатор</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUniqueIdService.Clear">
            <summary>
            Очистить словарь идентификаторов
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IUniqueIdService.Item(System.Object)">
            <summary>Возвращает объект по идентификатору</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.IWriteReadXml">
            <summary>Интерфейс классов, которые можно сохранить в XML и извлечь из XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IWriteReadXml.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IWriteReadXml.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить из XML</summary>
            <remarks>
            Рекомендуемая реализация метода
            public virtual void ReadFromXml(XmlReadArgs readArgs)
            {
            	// Код который необходимо выполнить до загрузки объекта
            	
            	// Загрузка данных
            	WriteReadXmlHelper.ReadFromXml(this, readArgs);
            	
            	// Код который необходимо выполнить после загрузки объекта
            }
            </remarks>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IWriteReadXml.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать одно поле из XML. Вызывается при стандартной реализации ReadFromXml</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле прочитано</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.IUnknownXmlElement">
            <summary>Интерфейс для классов поддерживающих загрузку неизвестных типов из XML</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IUnknownXmlElement.UnknownXmlAttributes">
            <summary>XML атрибуты, не распознанные при загрузке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IUnknownXmlElement.UnknownXmlElements">
            <summary>XML элементы, не распознанные при загрузке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUnknownXmlElement.AddUnknownXmlAttribute(System.String,System.String)">
            <summary>Добавить неизвестный атрибут</summary>
            <param name="key">Имя атрибута</param>
            <param name="value">Значение атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IUnknownXmlElement.AddUnknownXmlElement(System.String,System.String)">
            <summary>Добавить неизвестный атрибут</summary>
            <param name="key">Имя атрибута</param>
            <param name="value">Значение атрибута</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.XmlReadArgs">
            <summary>Аргументы чтения из XML</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.Reader">
            <summary>Средство чтения, обеспечивающее доступ к данным XML</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.ObjectsId">
            <summary>Список идентификаторов загруженных объектов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.ObjectReferences">
            <summary>Список ссылок на загруженные объекты</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.RootArgs">
            <summary>Аргументы чтения для корня дерева</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.LockedObjectByLoadThread">
            <summary>Объект используемый для блокировки потока и ожидания загрузки первой страницы документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.Version">
            <summary>Версия загружаемого файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.FileName">
            <summary>Имя загружаемого файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.FileSize">
            <summary>Размер загружаемого файла (реальный размер без упаковки)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.FileModifyDate">
            <summary>Дата модификации файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.DataOnly">
            <summary>Специальный режим загрузки документа. Грузятся только данные
            (все что объявлено в Intermech.Interfaces.Document)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.SkipRead">
            <summary>Пропустить один вызов Read, в цикле чтения XML</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.TemplateRoot">
            <summary>Корень дерева шаблона документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.IsInternalTemplate">
            <summary>На данный момент загружается внутренний шаблон документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.IsInternalFormulaLib">
            <summary>На данный момент загружается внутренний список формул</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.IsTemplate">
            <summary>Загружаемый документ является шаблоном</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.IsFormulaLib">
            <summary>Загружаемый документ является библиотекой формул</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.IsDocData">
            <summary>Этот документ был сгенерирован только с данными (ImDocumentData)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.ReadInThread">
            <summary>Загружать документ в фоновом режиме</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.ThreadIsExternal">
            <summary>Документ загружается во внешнем фоновом потоке</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.LoadFromStreamThread">
            <summary>Фоновый процесс загрузки документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.XmlReadArgs.AfterLoadDocumentDataSuspended">
            <summary>Заблокировать генерацию события AfterLoadDocumentData. Используется чтобы дублировалась генерация события</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.RootDocNode">
            <summary>Корневой узел загружаемого дерева документов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.RootDocNodeIsLocked">
            <summary>Документ заблокирован фоновым потоком</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.RootNodeIsComplect">
            <summary>Корень загружаемого дерева является комплектом документов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.GridCellIndex">
            <summary>Индекс ячейки в гриде</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.IUserSession">
            <summary> Пользовательская сессия </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.NotCloseStream">
            <summary>Не закрывать поток после загрузки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.XmlReadArgs.UpdatePageDBLinks">
            <summary>
            Только для внутреннего использования. Делегат обновления ссылок на атрибуты в БД после загрузки страницы.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.XmlReadArgs.#ctor(System.Xml.XmlReader)">
            <summary>Конструктор</summary>
            <param name="reader">Средство чтения, обеспечивающее доступ к данным XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.XmlReadArgs.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.XmlReadArgs.#ctor(System.Xml.XmlReader,System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>Конструктор</summary>
            <param name="reader">Средство чтения, обеспечивающее доступ к данным XML</param>
            <param name="objectsId">Список идентификаторов загруженных объектов</param>
            <param name="objectReferences">Список ссылок на загруженные объекты</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.LabelData.TypeNameForConstructorDictionary">
            <summary>Имя типа для словаря конструкторов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LabelData.ElementTypeName">
            <summary>Имя типа элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.LabelData.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Границы элемента</param>
            <param name="visible">Видимый элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать метод инициализации полей InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.LabelData.ElementType">
            <summary>
            Тип вывода элемента: текст или штрихкод
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.LabelData.FormattedText">
            <summary>Текст отформатированный согласно TextFormat</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.DrawCell(Intermech.Interfaces.Document.DrawContext,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="colIndex">Индекс столбца</param>
            <param name="gridRows">Строки сетки</param>
            <param name="rowIndex">Индекс строки</param>
            <param name="findGridParams">Искать столбец и строк если не заданы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.LabelData.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.LabelElementType">
            <summary>Выравнивание элементов страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LabelElementType.Text">
            <summary>Текст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LabelElementType.BarCode_CODE128">
            <summary>Штрих-код CODE128</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LabelElementType.BarCode_EAN13">
            <summary>Штрих-код EAN13</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.LogManager">
            <summary>Класс для сохранения данных в лог</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LogManager.CreateLog">
            <summary>Поле только для внутреннего использования</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.LogManager.AddLine(System.Exception,System.Boolean)">
            <summary>Добавить строку в лог</summary>
            <param name="text">Текст</param>
            <param name="force">Сохранять не зависимо от настройки сохранения в лог, для исключительных случаев</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.LogManager.AddLine(System.String,System.Boolean)">
            <summary>Добавить строку в лог</summary>
            <param name="text">Текст</param>
            <param name="force">Сохранять не зависимо от настройки сохранения в лог, для исключительных случаев</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.LogManager.CloseFile">
            <summary>
            Принудительно закрыть файл лога, чтобы можно было прочитать лог не закрывая приложение
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentNodesClipboardData">
            <summary>Узлы и данные для передачи через буфер</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentNodesClipboardData.ClipboardFormat">
            <summary>Имя формата в буфере</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DocumentNodesClipboardData.#ctor(Intermech.Interfaces.Document.DocumentTreeNode[])">
            <summary>Конструктор</summary>
            <param name="nodes">Узлы, которые копируются в буфер</param>
            <param name="from">Откуда скопировано</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentNodesClipboardData.Nodes">
            <summary>Узлы которые копируются в буфер</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentNodesClipboardData.ParentHashCodes">
            <summary>Хэш коды родителей узлов</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.NodeClipboardInfo">
            <summary>Информация об узле хранящемся в буфере</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.NodeClipboardInfo.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="node">Узел</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.NodeClipboardInfo.NodeType">
            <summary>Тип узла</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader">
            <summary>Загрузчик-конвертер примитивов из бланка (шаблона)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.LoadFile(System.String)">
            <summary>Загрузить файл</summary>
            <param name="fileName">Имя файла</param>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.Load(System.IO.Stream,System.String)">
            <summary>Загрузить из потока</summary>
            <param name="stream">Поток данных</param>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.LoadFromStream(System.IO.BinaryReader,System.String)">
            <summary>Загрузить из потока</summary>
            <param name="reader">Загрузчик BinaryReader</param>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.Load(System.String)">
            <summary>Загрузить</summary>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.ReadSign(System.IO.BinaryReader)">
            <summary>Прочитать сигнатуру</summary>
            <param name="reader">Загрузчик</param>
            <returns>Сигнатуру</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.ReadPrimitive(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Загрузить примитив</summary>
            <param name="owner">Группа владелец примитива</param>
            <returns>Примитив</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.ReadRect">
            <summary>Загрузить прямоугольный примитив</summary>
            <returns>Примитив</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.ReadString">
            <summary>Прочитать строку</summary>
            <returns>Строку</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.ReadString(System.IO.BinaryReader)">
            <summary>Прочитать строку</summary>
            <param name="reader">BinaryReader</param>
            <returns>Строку</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.ReadStringLong">
            <summary>Прочитать длинную строку</summary>
            <returns>Строку</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.ReadStringLong(System.IO.BinaryReader)">
            <summary>Зачитать длинную строку</summary>
            <param name="reader">BinaryReader</param>
            <returns>Строку</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.LoadIntList(System.Collections.Generic.List{System.Int32},System.IO.BinaryReader)">
            <summary>Загрузить список целых чисел</summary>
            <param name="sl">Контейнер для целых чисел</param>
            <param name="reader">BinaryReader</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.LoadStringList(System.Collections.Specialized.StringCollection,System.IO.BinaryReader,System.Int32)">
            <summary>Загрузить список строк</summary>
            <param name="sl">Контейнер для строк</param>
            <param name="reader">BinaryReader</param>
            <param name="loadingVersion">Версия файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.ReadDelphiColor(System.IO.BinaryReader)">
            <summary>Прочитать цвет в формате Delphi</summary>
            <param name="reader">BinaryReader</param>
            <returns>Цвет</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.Reader">
            <summary>Загрузчик</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.PrimSign">
            <summary>Сигнатура примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.MagicSign">
            <summary></summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.WorkSign">
            <summary>Сигнатура "Рабочей области"</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.WorkSignStrings">
            <summary>workspace with strings</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.Version">
            <summary>Последняя версия формата файла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.ForREV">
            <summary>Версия файла для извещений</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.LoadingVersion">
            <summary>Версия загружаемого файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.LoadingFile">
            <summary>Имя загружаемого файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader.RegArray">
            <summary>Массив загружаемых примитивов</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.BlankLoader">
            <summary>Загрузчик бланка</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.Report">
            <summary>Вывести отчет о загруженных примитивах</summary>
            <returns>Строка с отчетом</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.Load(System.String)">
            <summary>Загрузить</summary>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.CreatePrimitiveFromUserPrimitive(Intermech.Interfaces.Document.ImportBlanks.UserPrimitive)">
            <summary>Создать примитив на базе пользовательского заменив его на примитив из библиотеки</summary>
            <param name="userPrimitive">Пользовательский примитив</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.ReplaceUserPrimitives">
            <summary>Заменить пользовательский примитив</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.FindStrictUserPrimitive(Intermech.Interfaces.Document.ImportBlanks.UserPrimitive)">
            <summary>Найти пользовательский примитив</summary>
            <param name="prim">Пользовательский примитив</param>
            <returns>Реальный примитив</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.GeneateDocument">
            <summary>Сгенерировать документ</summary>
            <returns>Документ</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.FindAndLoad(System.String,System.String)">
            <summary>Найти и загрузить файл бланка</summary>
            <param name="fileName">Имя файла</param>
            <param name="defaultPath">Путь по умолчанию для поиска бланка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.PrimWithId(System.String)">
            <summary>Получить примитив по идентификатору</summary>
            <param name="primId">Идентификатор</param>
            <returns>Примитив</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.PrimLib">
            <summary>Библиотека примитивов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.PrimitiveList">
            <summary>Список примитивов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.WorkSpace">
            <summary>Рабочая область</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.LinkToLib">
            <summary>Библиотечные примитивы отдельно от бланка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.MagicStr">
            <summary>Сигнатура бланка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankLoader.BlankSign">
            <summary>Сигнатура бланка</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase">
            <summary>Базовый класс примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.name">
            <summary>Имя примитива</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.Name">
            <summary>Имя примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.additionalAttributes">
            <summary>Дополнительные атрибуты</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.SetAdditionalAttribute(System.String,System.String)">
            <summary>Установить дополнительный атрибут</summary>
            <param name="name">Имя</param>
            <param name="value">Значение</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.Org">
            <summary>Положение примитива</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.OrgMm">
            <summary>Положение примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.id">
            <summary>Идентификатор</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.Id">
            <summary>Идентификатор</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.horAlign">
            <summary>Горизонтальное выравнивание примитива</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.HorAlign">
            <summary>Горизонтальное выравнивание примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.vertAlign">
            <summary>Вертикальное выравнивание примитива</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.VertAlign">
            <summary>Вертикальное выравнивание примитива</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.ClassName">
            <summary>Имя класса</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.Owner">
            <summary>Владелец</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.DocumentNode">
            <summary>Узел документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.DocumentDataNode">
            <summary>Узел данных документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.ConvertBytesToWord(System.Byte,System.Byte)">
            <summary>Преобразовать два байта в word</summary>
            <param name="low">Нижний байт</param>
            <param name="hi">Верхний байт</param>
            <returns>Слово</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.MakeIdStr(System.Byte[])">
            <summary>Создать строку идентификатора из массива байт</summary>
            <param name="id">Идентификатор в форме массива байт</param>
            <returns>Идентификатор в форме строки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.Report">
            <summary>Дать отчет о примитиве</summary>
            <returns>Отчет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.BlankUnitToMm(System.Int32)">
            <summary>Внутренние единицы измерения в миллиметры</summary>
            <param name="unit">Внутренние единицы измерения</param>
            <returns>миллиметры</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.BlankUnitToMm(Intermech.Drawing.Common.UniPoint)">
            <summary>Точку во внутренних единицах измерения в миллиметры</summary>
            <param name="point">Точку</param>
            <returns>миллиметры</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.BlankUnitToMm(Intermech.Drawing.Common.UniSize)">
            <summary>перевести размер в мм</summary>
            <param name="size">Размер</param>
            <returns>мм</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.BlankUnitToMm(Intermech.Drawing.Common.UniRectangle)">
            <summary>Прямоугольник в мм</summary>
            <param name="rec">Прямоугольник</param>
            <returns>мм</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.Clone">
            <summary>Клонировать примитив</summary>
            <returns>Клон примитива</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase.FindById(System.String)">
            <summary>Найти примитив по идентификатору</summary>
            <param name="primId">Идентификатор примитива</param>
            <returns>Примитив</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive">
            <summary>Прямоугольный примитив</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.Size">
            <summary>размер</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.SizeMm">
            <summary>размер в мм</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.BoundsMm">
            <summary>Границы в мм</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.relativeWid">
            <summary>Относительная ширина</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.RelativeWid">
            <summary>Относительная ширина. if RelativeWid, then Org.x contains left spacing, Size.x - right </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.relativeHei">
            <summary>Относительная высота</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.RelativeHei">
            <summary>Относительная высота. if RelativeHei, then Org.y contains top spacing, Size.y - bottom </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.autoFill">
            <summary>automatically resize</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.AutoFill">
            <summary>automatically resize</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.autoMove">
            <summary>fill or just move to free space?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.AutoMove">
            <summary>fill or just move to free space?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.AutoFillTextBox">
            <summary>Автозаполнение в свойствах текстовых полей, если они принадлежат области</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.isTransparent">
            <summary>Должен ли примитив стирать все, что за ним.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.IsTransparent">
            <summary>Должен ли примитив стирать все, что за ним.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.isCrossed">
            <summary>Нужно ли перечеркивать содержимое примитива</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.IsCrossed">
            <summary>Нужно ли перечеркивать содержимое примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.theMain">
            <summary>Если true, то оставлять охватывающий примитив на одном</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.TheMain">
            <summary>Если true, то оставлять охватывающий примитив на одном листе, 
            а этот переносить на следующий нельзя!</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.needFrame">
            <summary>Нужна рамка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.NeedFrame">
            <summary>Нужна рамка</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.Report">
            <summary>Вывести отчет о загруженных примитивах</summary>
            <returns>Строка с отчетом</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.ConvertToElementHorizontalAlign(Intermech.Interfaces.Document.ImportBlanks.HorAlignment)">
            <summary>Преобразовать HorAlignment в ElementHorizontalAlign</summary>
            <param name="horAlign">Значение для преобразования</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.ConvertToElementVerticalAlign(Intermech.Interfaces.Document.ImportBlanks.VertAlignment)">
            <summary>Преобразовать VertAlignment в ElementVerticalAlign</summary>
            <param name="vertAlign">Значение для преобразования</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.ConvertToAutoSizeDirection(Intermech.Interfaces.Document.ImportBlanks.GenAlignment)">
            <summary>Преобразовать GenAlignment в AutoSizeDirection</summary>
            <param name="align">Значение</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.IsCellInArea">
            <summary>Ячейка находится в варианте или рабочей области</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.RectPrimitive.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive">
            <summary>текст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.text">
            <summary>Текст</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.Text">
            <summary>Текст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.editorType">
            <summary>Тип редактора</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.EditorType">
            <summary>Тип редактора</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.hTextAlign">
            <summary>Горизонтальное выравнивание текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.HTextAlign">
            <summary>Горизонтальное выравнивание текста</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.vTextAlign">
            <summary>Вертикальное выравнивание текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.VTextAlign">
            <summary>Вертикальное выравнивание текста</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.orient">
            <summary>ориентация текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.Orient">
            <summary>ориентация текста</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.lineHeight">
            <summary>Высота текста for multi-line fields</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.LineHeight">
            <summary>Высота текста for multi-line fields</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.stringDelimiters">
            <summary>Линии между строками</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.StringDelimiters">
            <summary>Линии между строками</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.fontName">
            <summary>Имя шрифта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.FontName">
            <summary>Имя шрифта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.fontHeight">
            <summary>Высота шрифта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.FontHeight">
            <summary>Высота шрифта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.fontWidth">
            <summary>Ширина шрифта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.FontWidth">
            <summary>Ширина шрифта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.charSet">
            <summary>Кодовая страница</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.CharSet">
            <summary>Кодовая страница</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.flags">
            <summary>Флаги шрифта </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.Flags">
            <summary>Флаги шрифта </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.evenOffset">
            <summary>Смещение для чётных страниц ?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.EvenOffset">
            <summary>Смещение для чётных страниц ?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.addOffset">
            <summary>Смещение для нечётных страниц ?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.AddOffset">
            <summary>Смещение для нечётных страниц ?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.frameStyle">
            <summary>Стиль рамки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.FrameStyle">
            <summary>Стиль рамки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextPrimitive.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.AutoText">
            <summary>Программно заполняемый текст </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.AutoText.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.AutoText.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.TextField">
            <summary>Текстовое поле</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextField.expandTo">
            <summary>If the field can expand, set direction</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextField.ExpandTo">
            <summary>If the field can expand, set direction</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextField.textMask">
            <summary>Маска текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextField.TextMask">
            <summary>Маска текста</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextField.fieldType">
            <summary>Тип поля</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextField.FieldType">
            <summary>Тип поля</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextField.uniqueID">
            <summary>If this flag is set, the fields with the same ID always contain the same text</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextField.UniqueID">
            <summary>If this flag is set, the fields with the same ID always contain the same text</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextField.editEvents">
            <summary>Нужно ли посылать программе-клиенту сообщения:
            а) Когда пользователь начинает редактирование поля
            б) После завершения редактирования поля
            в) После ввода каждого символа (Validate).</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextField.EditEvents">
            <summary>Нужно ли посылать программе-клиенту сообщения:
            а) Когда пользователь начинает редактирование поля
            б) После завершения редактирования поля
            в) После ввода каждого символа (Validate).</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextField.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextField.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextField.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.PolyLinePrimitive">
            <summary>Полилиния</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PolyLinePrimitive.points">
            <summary>Точки полилинии</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PolyLinePrimitive.Points">
            <summary>Точки полилинии</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PolyLinePrimitive.flags">
            <summary>Флаги шрифта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PolyLinePrimitive.Flags">
            <summary>Флаги шрифта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PolyLinePrimitive.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PolyLinePrimitive.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PolyLinePrimitive.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PolyLinePrimitive.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive">
            <summary>Изображение</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.pictStream">
            <summary>Поток с изображением</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.PictStream">
            <summary>Поток с изображением</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.userResize">
            <summary>Пользователь может изменять размер изображения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.UserResize">
            <summary>Пользователь может изменять размер изображения</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.isConstant">
            <summary>?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.IsConstant">
            <summary>?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.fileName">
            <summary>Имя файла с картинкой</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.FileName">
            <summary>Имя файла с картинкой</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PictPrimitive.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.OlePrimitive">
            <summary>OLE примитив</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.OlePrimitive.userResize">
            <summary>Пользователь может изменять размер изображения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.OlePrimitive.UserResize">
            <summary>Пользователь может изменять размер изображения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.OlePrimitive.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.OlePrimitive.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.OlePrimitive.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.OlePrimitive.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.UserPrimitive">
            <summary>Пользовательский примитив</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UserPrimitive.userPrimName">
            <summary>Имя пользовательского примитива</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UserPrimitive.UserPrimName">
            <summary>Имя пользовательского примитива</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UserPrimitive.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UserPrimitive.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UserPrimitive.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UserPrimitive.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive">
            <summary>Группа примитивов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.childList">
            <summary>Дочерние примитивы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.ChildList">
            <summary>Дочерние примитивы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.current">
            <summary>for searching functions</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.Current">
            <summary>for searching functions</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.searchType">
            <summary>Тип искомых примитивов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.SearchType">
            <summary>Тип искомых примитивов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.searchRect">
            <summary>Границы поиска</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.SearchRect">
            <summary>Границы поиска</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.placeOnPageTop">
            <summary>Если примитив входит в рабочую область, он всегда должен начинаться с нового листа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.PlaceOnPageTop">
            <summary>Если примитив входит в рабочую область, он всегда должен начинаться с нового листа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.tryNotBreak">
            <summary>По возможности располагать весь примитив на одной странице</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.TryNotBreak">
            <summary>По возможности располагать весь примитив на одной странице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.autoShrink">
            <summary>Если дочерние элементы уменьшились, нужно ли уменьшать и группу?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.AutoShrink">
            <summary>Если дочерние элементы уменьшились, нужно ли уменьшать и группу?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.moveWhole">
            <summary>Если можно, не делить.
            Childs of this group are included into 'header',
            which is always placed when moving part of the
            owner to the next list</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.MoveWhole">
            <summary>Если можно, не делить.
            Childs of this group are included into 'header',
            which is always placed when moving part of the
            owner to the next list</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.canSplitChilds">
            <summary>Childs of the group may reside on several lists</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.CanSplitChilds">
            <summary>Childs of the group may reside on several lists</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.RestoreOwnersRecurcive">
            <summary>Восстановить ссылки на родительские элементы у дочерних элементов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.Report">
            <summary>Вывести отчет о загруженных примитивах</summary>
            <returns>Строка с отчетом</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.ReplaceUserPrimitives(Intermech.Interfaces.Document.ImportBlanks.BlankLoader)">
            <summary>Заменить пользовательские примитивы</summary>
            <param name="loader">Загрузчик</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive.FindById(System.String)">
            <summary>Найти примитив по идентификатору</summary>
            <param name="primId">Идентификатор примитива</param>
            <returns>Примитив</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive">
            <summary>Таблица</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.colWidths">
            <summary>Ширины столбцов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.ColWidths">
            <summary>Ширины столбцов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.rowHeights">
            <summary>высоты строк</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.RowHeights">
            <summary>высоты строк</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.flags">
            <summary>Флаги шрифта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.Flags">
            <summary>Флаги шрифта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.allowInsert">
            <summary>what primitives user can insert</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.AllowInsert">
            <summary>what primitives user can insert</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.SetFirstLastCellFrame(Intermech.Interfaces.Document.TableData)">
            <summary>Установить рамку для первой и последней ячеек</summary>
            <param name="cell">Ячейка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TablePrimitive.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.Area">
            <summary>Вариант</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.Area.strBefore">
            <summary>Строк перед</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.Area.StrBefore">
            <summary>Строк перед</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.Area.strAfter">
            <summary>Строк после</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.Area.StrAfter">
            <summary>Строк после</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.Area.canOverlap">
            <summary>Могут ли примитивы перекрываться</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.Area.CanOverlap">
            <summary>Могут ли примитивы перекрываться</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.Area.useColWidths">
            <summary>?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.Area.UseColWidths">
            <summary>?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.Area.variants">
            <summary>Список вариантов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.Area.Variants">
            <summary>Список вариантов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.Area.colWidths">
            <summary>Ширины колонок</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.Area.ColWidths">
            <summary>Ширины колонок</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.RestoreOwnersRecurcive">
            <summary>Восстановить ссылки на родительские элементы у дочерних элементов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.CreateAsPage(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.GetPage(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Найти страницу для элемента</summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.ReplaceUserPrimitives(Intermech.Interfaces.Document.ImportBlanks.BlankLoader)">
            <summary>Заменить пользовательские примитивы</summary>
            <param name="loader">Загрузчик</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.OverDrawStyle(Intermech.Interfaces.Document.BorderStyles,Intermech.Interfaces.Document.BorderStyles)">
            <summary>?</summary>
            <param name="style1">?</param>
            <param name="style2">?</param>
            <returns>?</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.CreateCell(Intermech.Interfaces.Document.ImportBlanks.RectPrimitive,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать ячейку таблицы</summary>
            <param name="rectPrimitive">Примитив</param>
            <returns>Ячейку таблицы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.CreateEmptyCell(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Создать пустую ячейку</summary>
            <param name="cellBounds">Границы ячейки</param>
            <returns>Пустая ячейка</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.SetHorizontalLines(Intermech.Interfaces.Document.TableData)">
            <summary>Установить стиль горизонтальных линий ячейки</summary>
            <param name="cell">Ячейка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.Area.FindById(System.String)">
            <summary>Найти примитив по идентификатору</summary>
            <param name="primId">Идентификатор примитива</param>
            <returns>Примитив</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.ContainerPrimitive">
            <summary>Контейнер для другого примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.ContainerPrimitive.allowInsert">
            <summary>what primitives user can insert</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.ContainerPrimitive.AllowInsert">
            <summary>what primitives user can insert</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.ContainerPrimitive.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.ContainerPrimitive.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.ContainerPrimitive.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.ContainerPrimitive.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.BlankList">
            <summary>Страница бланка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.canBeFirst">
            <summary>Может быть первой</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.CanBeFirst">
            <summary>Может быть первой</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.hasWorkspace">
            <summary>Содержит Рабочую область</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.HasWorkspace">
            <summary>Содержит Рабочую область</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.workspaceRect">
            <summary>Границы рабочей области</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.WorkspaceRect">
            <summary>Границы рабочей области</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.needShrinkToList">
            <summary>?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.NeedShrinkToList">
            <summary>?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.indLeft">
            <summary>?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.IndLeft">
            <summary>?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.indRight">
            <summary>?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.IndRight">
            <summary>?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.indTop">
            <summary>?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.IndTop">
            <summary>?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.indBottom">
            <summary>?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.IndBottom">
            <summary>?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.evenOffs">
            <summary>?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.EvenOffs">
            <summary>?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.wsParts">
            <summary>number of workspace columns, if workspace exists</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.WSParts">
            <summary>number of workspace columns, if workspace exists</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankList.fillColsFirst">
            <summary>if true, fill variants by columns, else by rows</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankList.FillColsFirst">
            <summary>if true, fill variants by columns, else by rows</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankList.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankList.Load(Intermech.Interfaces.Document.ImportBlanks.PrimitiveLoader)">
            <summary>Загрузить</summary>
            <param name="loader">Загрузчик примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankList.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankList.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.BlankHeader">
            <summary>Заголовок файла бланка</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankHeader.#ctor(System.Int32)">
            <summary>Конструктор</summary>
            <param name="signatureLenght">Длина сигнатуры</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankHeader.Signature">
            <summary>Сигнатура</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankHeader.SignatureStr">
            <summary>Сигнатура</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankHeader.HeaderLen">
            <summary>Длина заголовка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankHeader.VersionNum">
            <summary>Версия формата файла</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType">
            <summary>Тип примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptUnknown">
            <summary>Неизвестный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptAutoText">
            <summary>автотекст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptTextField">
            <summary>Текстовое поле</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptPolyLine">
            <summary>полилиния</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptTable">
            <summary>Таблица</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptPicture">
            <summary>Рисунок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptContainer">
            <summary>Контейнер примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptArea">
            <summary>Рабочая область</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptBlankList">
            <summary>Страница бланка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptOLEContainer">
            <summary>OLE контейнер</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimitiveType.ptUserPrimitive">
            <summary>Пользовательский примитив</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.TypeSet">
            <summary>Набор допустимых примитивов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptUnknown">
            <summary>Неизвестный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptAutoText">
            <summary>автотекст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptTextField">
            <summary>Текстовое поле</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptPolyLine">
            <summary>Полилиния</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptTable">
            <summary>Таблица</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptPicture">
            <summary>Рисунок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptContainer">
            <summary>Контейнер примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptArea">
            <summary>Рабочая область</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptBlankList">
            <summary>Страница бланка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptOLEContainer">
            <summary>OLE контейнер</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TypeSet.ptUserPrimitive">
            <summary>Пользовательский примитив</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.HorAlignment">
            <summary>Горизонтальное выравнивание</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.HorAlignment.haNone">
            <summary>По умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.HorAlignment.haLeft">
            <summary>Влево</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.HorAlignment.haCenter">
            <summary>По центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.HorAlignment.haRight">
            <summary>Вправо</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.VertAlignment">
            <summary>Вертикальное выравнивание</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.VertAlignment.vaNone">
            <summary>По умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.VertAlignment.vaTop">
            <summary>Вверх</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.VertAlignment.vaCenter">
            <summary>По центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.VertAlignment.vaBottom">
            <summary>Вниз</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.GenAlignment">
            <summary>Общее выравнивание</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GenAlignment.gaNone">
            <summary>По умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GenAlignment.gaLeft">
            <summary>Влево</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GenAlignment.gaTop">
            <summary>Вверх</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GenAlignment.gaHCenter">
            <summary>Горизонтально по центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GenAlignment.gaVCenter">
            <summary>Вертикально по центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GenAlignment.gaRight">
            <summary>Вправо</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GenAlignment.gaBottom">
            <summary>Вниз</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.FontFlags">
            <summary>General flags</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FontFlags.fNone">
            <summary>None</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FontFlags.fBold">
            <summary>used in text fields for font, in polylines and tables</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FontFlags.fSerif">
            <summary>used in tables</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FontFlags.fItalic">
            <summary>font flags for text fields</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FontFlags.fUnderline">
            <summary>font flags for text fields</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FontFlags.fSuperscript">
            <summary>font flags for text fields</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FontFlags.fEllipse">
            <summary>used in tables to draw ellipses instead</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FontFlags.fSearch">
            <summary>Search</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.EditorType">
            <summary>Types of Text Editors</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.EditorType.etSingleLine">
            <summary>Однострочный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.EditorType.etMultiLine">
            <summary>Многострочный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.EditorType.etRichEdit">
            <summary>С форматирование</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.FldType">
            <summary>Types of Text Fields - for default validation</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FldType.ftyAnyText">
            <summary>Любой текст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FldType.ftyInteger">
            <summary>Целое число</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FldType.ftyFloat">
            <summary>Вещественное число</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FldType.ftyIdent">
            <summary>Идентификатор</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FldType.ftyDate">
            <summary>Дата</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FldType.ftyToggle">
            <summary>Переключатель</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.TextOrient">
            <summary>Text Orientation (Escapement)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextOrient.toNormal">
            <summary>Нормальный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextOrient.toVert90">
            <summary>Вертикальный на 90</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextOrient.toReversed">
            <summary>зарезервировано</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextOrient.toVert270">
            <summary>Вертикальный на 270</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.FrameStyle">
            <summary>Frame styles</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FrameStyle.fsFull">
            <summary>линии на всех границам</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FrameStyle.fsColumns">
            <summary>Линии только на вертикальных границах</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.FrameStyle.fsSerifs">
            <summary>Штрихи сверху на вертикальных границах</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.EditEvent">
            <summary>Editing events</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.EditEvent.eeBeginEdit">
            <summary>начало редактирования</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.EditEvent.eeEndEdit">
            <summary>конец редактирования</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.EditEvent.eeValidate">
            <summary>проверка ввода</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.LeftCoorForPrimiteveComparer">
            <summary>Вспомогательный класс для сортировки по левой границе</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.LeftCoorForPrimiteveComparer.Compare(Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase,Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase)">
            <summary>Сравнить объекты X и Y</summary>
            <param name="x">Объект для сравнения</param>
            <param name="y">Объект для сравнения</param>
            <returns>Значение меньше нуля - X меньше Y. 0 - X равен Y. Больше 0 - X больше Y</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader">
            <summary>Загрузчик примитивов из библиотеки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader.#ctor(System.String)">
            <summary>Конструктор</summary>
            <param name="libFileName">Имя файла библиотеки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader.FindAndLoad(System.String)">
            <summary>Найти и загрузить библиотеку</summary>
            <param name="startPath">Начальный путь для поиска</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader.Load(System.String)">
            <summary>Загрузить</summary>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader.GetByName(System.String)">
            <summary>Получить примитив по имени</summary>
            <param name="name">Имя примитива</param>
            <returns>Примитив</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader.GeneateDocument">
            <summary>Сгенерировать документ</summary>
            <returns>Документ</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader.MagicStr">
            <summary>Сигнатура бланка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PrimLibraryLoader.Storage">
            <summary>Примитивы библиотеки</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.LibHeader">
            <summary>Заголовок файла библиотеки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.LibHeader.#ctor(System.Int32)">
            <summary>Конструктор</summary>
            <param name="signatureLenght">Длина сигнатуры</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.LibHeader.Signature">
            <summary>Массив символов сигнатуры</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.LibHeader.SignatureStr">
            <summary>Сигнатура</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.LibHeader.HeaderLen">
            <summary>длина заголовка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.LibHeader.VersionNum">
            <summary>Версия формата файла</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.UEditDocument">
            <summary>Загрузчик-конвертер для документов UEdit</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Группа владелец</param>
            <param name="origin">Шаблон</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.Reader">
            <summary>BinaryReader</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.DocSign">
            <summary>Сигнатура документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.CloneSign">
            <summary>Сигнатура элемента документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.File_Sign">
            <summary>Сигнатура файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.MagicSign">
            <summary>Магическая сигнатура</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.SuperMagicSign">
            <summary>Следующая магическая сигнатура</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.version">
            <summary>Версия текущего формата файла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.Version">
            <summary>Версия текущего формата файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.LoadingFile">
            <summary>Имя загружаемого файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.loadingVersion">
            <summary>Версия формата загружаемого файла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.LoadingVersion">
            <summary>Версия формата загружаемого файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.jumpPoints">
            <summary>Флаг означает, что это документ Каталога и он может содержать точки перехода (гиперссылки)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.blankInDoc">
            <summary>Бланк в файле документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.BlankInDoc">
            <summary>Бланк в файле документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.blankName">
            <summary>Имя бланка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.BlankName">
            <summary>Имя бланка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.blank">
            <summary>Загрузчик бланка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.PageArea">
            <summary>Рабочая область документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.docId">
            <summary>Идентификатор документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.DocId">
            <summary>Идентификатор документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.listNumPlus">
            <summary>add to the first list num</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.ListNumPlus">
            <summary>add to the first list num</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.docName">
            <summary>Имя документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.DocName">
            <summary>Имя документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.docComment">
            <summary>Комментарий документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.DocComment">
            <summary>Комментарий документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.primLib">
            <summary>Загрузчик библиотеки примитивов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.PrimLib">
            <summary>Загрузчик библиотеки примитивов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.LoadFromFile(System.String)">
            <summary>Загрузить из файла</summary>
            <param name="fileName">Имя файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.Load(System.IO.Stream,System.String,System.String,System.Boolean)">
            <summary>Загрузить из файла</summary>
            <param name="fileName">Имя файла</param>
            <param name="defaultPathForBlank">Путь по умолчанию для поиска бланка</param>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
            <param name="forREV">Файл формата REV, для извещений</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.LoadDoc(System.String)">
            <summary>Загрузить документ</summary>
            <param name="preReadedHeaderSignature">Сигнатура которая была зачитана ранее для распознавания формата файла</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.ReadString">
            <summary>Прочитать строку</summary>
            <returns>Прочитанную строку</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.CreateChildren(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Дочерние копии по шаблону</summary>
            <param name="clone">Группа</param>
            <param name="orig">Шаблон</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.CreateChild(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Создать дочерний элемент по шаблону</summary>
            <param name="parent">Родительский элемент</param>
            <param name="prim">Примитив</param>
            <returns>Дочерний элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.CheckChildren(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.GroupPrimitive)">
            <summary>Проверить дочерние элементы</summary>
            <param name="cl">Группа клон</param>
            <param name="orig">Группа примитивов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.CheckChild(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>?</summary>
            <param name="parent">?</param>
            <param name="prim">?</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.NeedClone(Intermech.Interfaces.Document.ImportBlanks.PrimitiveBase)">
            <summary>?</summary>
            <param name="p">?</param>
            <returns>?</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.FindStrictUserPrimitive(Intermech.Interfaces.Document.ImportBlanks.UserPrimitive)">
            <summary>Найти примитив в библиотеке</summary>
            <param name="prim">Имя примитива</param>
            <returns>Примитив</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.AddUserPrimitive(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.UserPrimitive)">
            <summary>?</summary>
            <param name="cl">?</param>
            <param name="prim">?</param>
            <returns>?</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.StandardRef(Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>?</summary>
            <param name="p">?</param>
            <returns>?</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.GetCloneRef(Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>?</summary>
            <param name="p">?</param>
            <returns>?</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.GetCloneBaseRef(Intermech.Interfaces.Document.ImportBlanks.CloneClassId)">
            <summary>?</summary>
            <param name="classId">?</param>
            <returns>?</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.LoadClone(Intermech.Interfaces.Document.ImportBlanks.GroupClone)">
            <summary>Загрузить клон</summary>
            <param name="cloneOwner">Владелец клона</param>
            <returns>Клон</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.UEditDocument.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.CloneBase">
            <summary>Базовый тип для клонов (элементов документа сделанных по примитиву (шаблону))</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneBase.owner">
            <summary>владелец</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneBase.origin">
            <summary>примитив</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneBase.ownerDoc">
            <summary>Документ</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneBase.coords">
            <summary>local coords, relative to owner</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.CloneBase.BoundsMm">
            <summary>Границы в мм</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneBase.relCoords">
            <summary>needed to save relative coords</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.CloneBase.RelCoordsMm">
            <summary>в мм</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneBase.DocumentNode">
            <summary>Узел документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneBase.aligned">
            <summary>flag = true, if the element is already aligned
            don't realign all the time!</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.CloneBase.Aligned">
            <summary>flag = true, if the element is already aligned
            don't realign all the time!</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.CloneBase.Id">
            <summary>Идентификатор</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.CloneBase.Name">
            <summary>Имя</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.CloneBase.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="origin">Примитив</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.CloneBase.Load(Intermech.Interfaces.Document.ImportBlanks.UEditDocument)">
            <summary>Загрузить</summary>
            <param name="ueDoc">Документ</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.CloneBase.FindDocNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Найти узел документа соответсвующий этому клону</summary>
            <param name="docOwner">Родительский узел</param>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.CloneBase.FindDocNode">
            <summary>Найти узел документа соответсвующий этому клону</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.CloneBase.CreateNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать новый узел документа</summary>
            <returns>Узел документа</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.CloneBase.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.AreaClone">
            <summary>Клон рабочей области</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.AreaClone.strBefore">
            <summary>Строк перед</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.AreaClone.StrBefore">
            <summary>Строк перед</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.AreaClone.strAfter">
            <summary>Строк после</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.AreaClone.StrAfter">
            <summary>Строк после</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.AreaClone.onPageTop">
            <summary>всегда с начала страницы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.AreaClone.OnPageTop">
            <summary>всегда с начала страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.AreaClone.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="origin">Примитив</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.AreaClone.Load(Intermech.Interfaces.Document.ImportBlanks.UEditDocument)">
            <summary>Загрузить</summary>
            <param name="ueDoc">Документ</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.AreaClone.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.BlankListClone">
            <summary>Клон страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.listNum">
            <summary>номер страницы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.ListNum">
            <summary>номер страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.globalOrg">
            <summary>Положение в глобальных координатах</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.GlobalOrgMm">
            <summary>Положение в глобальных координатах в мм</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.wsInnerOrg">
            <summary>Положение в локальных координатах</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.WSInnerOrgMm">
            <summary>Положение в локальных координатах в мм</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.addedByUser">
            <summary>Добавлен пользователем</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.AddedByUser">
            <summary>Добавлен пользователем</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="origin">Примитив</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.Load(Intermech.Interfaces.Document.ImportBlanks.UEditDocument)">
            <summary>Загрузить</summary>
            <param name="ueDoc">Документ</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.BlankListClone.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.ContainerClone">
            <summary>Клон контейнера</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.ContainerClone.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="origin">Примитив</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.GroupClone">
            <summary>Клон группы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.GroupClone.ChildList">
            <summary>Список дочерних клонов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupClone.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="origin">Примитив</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupClone.Load(Intermech.Interfaces.Document.ImportBlanks.UEditDocument)">
            <summary>Загрузить</summary>
            <param name="ueDoc">Документ</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.GroupClone.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.OLEClone">
            <summary>Клон OLE контейнера</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.OLEClone.objectStream">
            <summary>Поток содержащий OLE объект</summary>				  
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.OLEClone.ObjectStream">
            <summary>Поток содержащий OLE объект</summary>				  
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.OLEClone.metafileBuffer">
            <summary>Метафайл - буфер изображения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.OLEClone.MetafileBuffer">
            <summary>Метафайл - буфер изображения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.OLEClone.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="origin">Примитив</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.OLEClone.Load(Intermech.Interfaces.Document.ImportBlanks.UEditDocument)">
            <summary>Загрузить</summary>
            <param name="ueDoc">Документ</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.OLEClone.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.PictClone">
            <summary>Клон рисунка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictClone.objectStream">
            <summary>Поток с рисунком</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictClone.ObjectStream">
            <summary>Поток с рисунком</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictClone.rlfStream">
            <summary>?</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictClone.RLFStream">
            <summary>?</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictClone.metafileBuffer">
            <summary>Метафайл - буфер изображения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictClone.MetafileBuffer">
            <summary>Метафайл - буфер изображения</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictClone.fileName">
            <summary>Имя файла с рисунком</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictClone.FileName">
            <summary>Имя файла с рисунком</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictClone.eskizLayer">
            <summary>Отображаемый слой</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictClone.EskizLayer">
            <summary>Отображаемый слой</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictClone.builtInPicture">
            <summary>Рисунок хранится в документе</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictClone.BuiltInPicture">
            <summary>Рисунок хранится в документе</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictClone.drawAllWithoutLayers">
            <summary>Рисовать все без слоев</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictClone.DrawAllWithoutLayers">
            <summary>Рисовать все без слоев</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.PictClone.layers">
            <summary>слои</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.PictClone.Layers">
            <summary>слои</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PictClone.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="origin">Примитив</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PictClone.Load(Intermech.Interfaces.Document.ImportBlanks.UEditDocument)">
            <summary>Загрузить</summary>
            <param name="ueDoc">Документ</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.PictClone.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.TableClone">
            <summary>Клон таблицы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TableClone.colWidths">
            <summary>Ширины столбцов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TableClone.ColWidths">
            <summary>Ширины столбцов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TableClone.rowHeights">
            <summary>высоты строк</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TableClone.RowHeights">
            <summary>высоты строк</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TableClone.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="origin">Примитив</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TableClone.Load(Intermech.Interfaces.Document.ImportBlanks.UEditDocument)">
            <summary>Загрузить</summary>
            <param name="ueDoc">Документ</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.TextClone">
            <summary>Клон текстового примитива</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.text">
            <summary>коллекция строк</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextClone.Text">
            <summary>текст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.FontName">
            <summary>
            Имя шрифта
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.fontHeight">
            <summary>Высота шрифта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextClone.FontHeight">
            <summary>Высота шрифта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.fontWidth">
            <summary>Ширина шрифта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextClone.FontWidth">
            <summary>Ширина шрифта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.charSet">
            <summary>Кодовая страница</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextClone.CharSet">
            <summary>Кодовая страница</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.flags">
            <summary>Флаги шрифта </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextClone.Flags">
            <summary>Флаги шрифта </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.textColor">
            <summary>цвет текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextClone.TextColor">
            <summary>цвет текста</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.NoColor">
            <summary>Цвет означающий, что цвет не назначен</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.rtfStream">
            <summary>storage for RTF info</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextClone.RtfStream">
            <summary>storage for RTF info</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.TextClone.metafileBuffer">
            <summary>Метафайл - буфер изображения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.TextClone.MetafileBuffer">
            <summary>Метафайл - буфер изображения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextClone.#ctor(Intermech.Interfaces.Document.ImportBlanks.GroupClone,Intermech.Interfaces.Document.ImportBlanks.RectPrimitive)">
            <summary>Конструктор</summary>
            <param name="owner">Владелец</param>
            <param name="origin">Примитив</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextClone.Load(Intermech.Interfaces.Document.ImportBlanks.UEditDocument)">
            <summary>Загрузить</summary>
            <param name="ueDoc">Документ</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.TextClone.InitNewDocumentNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Инициализировать узел документа данными примитива</summary>
            <param name="node">Узел</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.DocHeader">
            <summary>Заголовок файла документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ImportBlanks.DocHeader.#ctor(System.Int32)">
            <summary>Конструктор</summary>
            <param name="signatureLenght">Длина сигнатуры</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.DocHeader.Signature">
            <summary>Символы сигнатруры</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ImportBlanks.DocHeader.SignatureStr">
            <summary>Сигнатрура</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.DocHeader.HeaderLen">
            <summary>длина заголовка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.DocHeader.VersionNum">
            <summary>Версия загружаемого файла</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.DocHeader.TechData">
            <summary>?</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ImportBlanks.CloneClassId">
            <summary>Идентификатор типа клона</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.UNKNOWN_CLONE">
            <summary>Неизвестный тип</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.BASE_CLONE">
            <summary>Базовый тип клона</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.GROUP_CLONE">
            <summary>Группа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.TEXT_CLONE">
            <summary>текст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.PICT_CLONE">
            <summary>Рисунок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.TABLE_CLONE">
            <summary>Таблица</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.CONT_CLONE">
            <summary>контейнер</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.AREA_CLONE">
            <summary>Рабочая область</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.BLIST_CLONE">
            <summary>страница</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.OLE_CLONE">
            <summary>OLE контейнер</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ImportBlanks.CloneClassId.DOCUMENT">
            <summary>Документ</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageData">
            <summary>Объект страницы документа. Функции: Управление элементами страницы; Управление
            атрибутами; Рендеринг.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageData.TypeNameForConstructorDictionary">
            <summary>Имя типа для словаря конструкторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.InitFields">
            <summary>Инициализировать поля объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать метод инициализации полей InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.AutoSizeWidth">
            <summary>Авторазмер по ширине</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.AutoSizeHeight">
            <summary>Авторазмер по высоте</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.FromNewPage">
            <summary>Авторазмер</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetDefautCaption">
            <summary>Получить подпись элемента по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.PaintBuffer">
            <summary>Буфер изображения на экране</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.Draw(Intermech.Interfaces.Document.DrawContext)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.ApplyContextCharFormat">
            <summary>Применять шрифто текстового поля в которое вставлена формула. Применимо только для формул</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.Location">
            <summary>Положение страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.AssignLocation(Intermech.Drawing.Common.UniPointF)">
            <summary>Назначить новое значение без обновления интерфейса</summary>
            <param name="value">Новое значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.Size">
            <summary>Размеры страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SetSize(Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean)">
            <summary>Назначить новое значение Size</summary>
            <param name="value">Новое значение</param>
            <param name="updateUI">Обновлять UI</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.Landscape">
            <summary>Альбомная ориентация страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SetPagePrintSettings(Intermech.Drawing.Common.IUniPageSettings@)">
            <summary>Параметры страницы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.PrintBounds">
            <summary>Рисовать границы страницы при выводе на печать</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.UpdateInvalidatedRegion">
            <summary>Обновить некорректную область</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FindPageElementAtPoint(Intermech.Drawing.Common.UniPointF,System.Int32@,System.Boolean)">
            <summary>Найти элементы страницы находящиеся под данной точкой</summary>
            <param name="point">Точка</param>
            <param name="layer">Слой</param>
            <param name="firstOnly">Искать только первый попавшийся элемент</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.UserCoorSystem">
            <summary>Текущая система координат</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageData.ternPaintBuffer">
            <summary>Буферный экземпляр ImRtfEditor для разбивки текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.TernPaintBuffer">
            <summary>Буферный экземпляр ImRtfEditor для разбивки текста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.CreatePageMetafile(System.String)">
            <summary>Создать метафайл с изображением страницы</summary>
            <param name="fileName">Имя метафайла</param>
            <returns>Метафайл</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetSnapPoints(Intermech.Drawing.Common.UniPointF,System.Single,System.Collections.Generic.List{Intermech.Interfaces.Document.SnapPoint},Intermech.Interfaces.Document.VisualNode)">
            <summary>Получить список узлов привязки</summary>
            <param name="originalPoint">Оригинальная точка</param>
            <param name="snapSize">Размер области привязки</param>
            <param name="snapPointList">Список полученных точек</param>
            <param name="excludeNode">Узел который должен исключаться из рассмотрения</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsTemplate">
            <summary>Узел является шаблоном</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.TemplateRoot">
            <summary>Корень дерева в котором должен находиться шаблон этого узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.CheckIdAndFindPageTemplate(System.String)">
            <summary>Получить шаблон страницы по ID с проверкой пустой строки</summary>
            <param name="templateId">Идентификатор шаблона страницы. Если не задан, то метод вернёт null</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FindTemplate(System.String)">
            <summary>Найти шаблон этого узла по идентификатору templateId</summary>
            <param name="templateId">Идентификатор шаблона</param>
            <returns>Шаблон узла</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.NextPageTemplateId">
            <summary>Идентификатор шаблона для следующей страницы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.LastPageTemplateId">
            <summary>Идентификатор шаблона для последней (финальной) страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.CheckPageTemplateIdAndThrowExceptionIfFail(System.String)">
            <summary>Проверить существование шаблона страницы и выбросить исключение если его нет</summary>
            <param name="pageTemplateId">Идентификатор шаблона страницы</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.NextPageTemplate">
            <summary>Шаблон для следующей страницы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.LastPageTemplate">
            <summary>Шаблон для последней страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FindPrevPageTemplate">
            <summary>Найти шаблоны предыдущих страниц, т.е. страницы, для которой эта страница в настройках задана как следующая</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FlowIsEmpty(Intermech.Interfaces.Document.FlowID)">
            <summary>Заданный поток пуст</summary>
            <param name="flow">Поток данных</param>
            <returns>Заданный поток пуст</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.AllFlowsIsEmpty">
            <summary>Все потоки на странице пусты</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.DeletePageIfEmpty">
            <summary>Удалить страницу, если все она пуста (все ее потоки пусты)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.CanUseNodeAsTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Можно ли использовать заданный узел как шаблон</summary>
            <param name="node">Узел</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsFirstPage">
            <summary>Первая страница</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsFinalPage">
            <summary>Заключительная страница последовательности. Первая страница не считается последней</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsLastPage">
            <summary>Последняя страница</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FindLastPage">
            <summary>Найти последнюю страницу в цепочке разбивки NextPage</summary>
            <returns>Возвращает последнюю страницу</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FindFirstPage">
            <summary>Найти первую страницу в цепочке разбивки PrevPage</summary>
            <returns>Первую страницу</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SetNeedUpdateLayoutFlag(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить флаг NeedUpdateLayoutFlag</summary>
            <param name="value">Значение флага</param>
            <param name="setInPrevCell">Установить флаг и для предыдущих ячеек</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.UpdateLayout(System.Boolean)">
            <summary>Обновить представление данных</summary>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.Distribute(Intermech.Interfaces.Document.DistributeContext,System.Boolean)">
            <summary>Вызывает разбивку по страницам</summary>
            <param name="context">Контекст разбивки</param>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsDistributing">
            <summary>Запущен процесс разбивки документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsLocked">
            <summary>Страница заблокирована потоком разбивки или загрузки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsLockedForLayout">
            <summary>Страница заблокирована потоком разбивки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.WaitForLayout(System.Int32,System.Int32)">
            <summary>Ждать пока страница не разблокируется от разбивки</summary>
            <param name="millisecondsTimeout">Максимальное время ожидания</param>
            <param name="oneSleep">Время между проверкой состояния</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsLockedForLoad">
            <summary>Страница заблокирована потоком разбивки или загрузки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.WaitForLoad(System.Int32,System.Int32)">
            <summary>Ждать пока страница не разблокируется от чтения</summary>
            <param name="millisecondsTimeout">Максимальное время ожидания</param>
            <param name="oneSleep">Время между проверкой состояния</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsWaitForDistributed">
            <summary>Страница ждет разбивки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsFormulaLib">
            <summary>Элемент принадлежит формуле</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.AssignIsFormulaLib(System.Boolean)">
            <summary>Только для внутреннего пользования. Назначить новое значение IsFormulaLib</summary>
            <param name="value">Новое значение IsFormulaLib</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.UpdateIDPageLinksInDocuments(System.String)">
            <summary>Обновить ссылки на страницу через её идентификатор</summary>
            <param name="oldPageId">Старое значение идентификатора</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ContainsVirtualAttribute(System.String)">
            <summary>Содержит ли объект виртуальный атрибут с указанным именем</summary>
            <param name="attributeName">Имя виртуального атрибута</param>
            <returns>Возвращает true, если объект содержит виртуальный атрибут 
            с указанным именем</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetVirtualAttributeValue(System.String,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить значение виртуального атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="notNull">Вернуть пустую строку вместо значения null</param>
            <param name="callChain">Цепочка вызовов для защиты от циклических связей. Если null, то работает без проверок</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SetVirtualAttributeValue(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Установить значение виртуального атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="callChain">Цепочка вызовов, для защиты от зацикливания</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetVirtualAttributeNames(System.Collections.Specialized.StringCollection,System.Boolean)">
            <summary>Получить список всех имен атрибутов</summary>
            <param name="forSaveOnly">Добавлять в список только те атрибуты, которые должны сохраниться в XML или копироваться при копировании через буфер</param>
            <returns>Список всех имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.InsertNextFlowChaineElement(Intermech.Interfaces.Document.IParentFlow)">
            <summary>Вставить следующий элемент потока в цепочку</summary>
            <param name="newNextFlow">Новый следующий элемент потока</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.Flows">
            <summary>Коллекция потоков. Только для внутреннего использования!</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.AddFlow(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Добавить поток</summary>
            <param name="flow">Поток</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.RemoveFlow(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Удалить поток с этой страницы</summary>
            <param name="flow">Поток</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.AssignParentFlow(Intermech.Interfaces.Document.IParentFlow)">
            <summary>Назначить родительский поток</summary>
            <param name="value">Родительский поток</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.ParentFlow">
            <summary>Родительский поток</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.NextPage">
            <summary>Следующая страница цепочки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.PrevPage">
            <summary>Предыдущая страница цепочки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.NextFlowElement">
            <summary>Следующий элемент потока</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.PrevFlowElement">
            <summary>Предыдущий элемент потока</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.AddChildFlowElement(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Добавить дочерний элемент потока</summary>
            <param name="child">Дочерний элемент потока</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.RemoveChildFlowElement(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Удалить дочерний элемент потока</summary>
            <param name="child">Дочерний элемент потока</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetNextFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить следующий элемент цепочки для заданного потока данных</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Следующий элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetFirstFlowElement(Intermech.Interfaces.Document.FlowID)">
            <summary>Получить первый элемент цепочки для заданного потока данных.
            Ищет внутри и по цепочкам дочерних узлов</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Первый элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetStartFlowTables">
            <summary>
            Вернуть перечисление таблиц, которые являются стартовыми для потоков данных на этой странице
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetFirstFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Ищет первый элемент конечного потока по всем промежуточным потокам. 
            Т.е. если в первом элементе подпотока нет конечного потока, то он ищет в следующим.
            Поиск не переходит на следующие элементы этого уровня.</summary>
            <param name="flow">Идентификатор конечного потока</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Возвращает указатель на первый элемент потока, или null если поток не найден.</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FindLastChainElement(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Найти последний элемент цепочки</summary>
            <param name="flowElement">Любой элемент цепочки</param>
            <returns>Последний элемент цепочки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetLastFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить последний элемент цепочки представления потока</summary>
            <param name="flow">Поток</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Последний элемент цепочки представления потока</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetPrevFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить предыдущий элемент цепочки для заданного потока данных</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Предыдущий элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.DistributeFlowData(Intermech.Interfaces.Document.FlowID)">
            <summary>Распределить поток</summary>
            <param name="flow">Поток</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ClonePageFromTemplate(System.String,System.Boolean)">
            <summary>Создать страницу по шаблону, не вставляя ее в документ</summary>
            <param name="pageTemplateId">Идентификатор шаблона страницы</param>
            <param name="isNextPage">Создаётся следующая страница для продолжения разбивки</param>
            <returns>Страницу по шаблону</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FindTableForFlow(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Найти таблицу на странице заданного потока</summary>
            <param name="flow">Поток данных, распределяемый по страницам</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FindTableForFlow(Intermech.Interfaces.Document.TableData)">
            <summary>Найти таблицу на странице для того же потока что в заданной таблице</summary>
            <param name="flowTable">Таблица содержащая поток данных, распределяемая по страницам</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.FindFirstMainTable">
            <summary>Найти первую таблицу с разбивкой данных по страницам</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetAllDataTables(Intermech.Interfaces.Document.TableData,System.Boolean)">
            <summary>Получить все подтаблицы с данными для текущей страницы</summary>
            <returns>список таблиц-ячеек данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.AddNewDataPage(System.Boolean,System.String)">
            <summary>Создать новую страницу для разбивки данных и добавить ее в документ</summary>
            <param name="lockUpdateLayout">Блокировать обновление представлений данных</param>
            <returns>Следующая страница</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.AssignParent(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить значение свойству Parent</summary>
            <param name="value">Новое значение Parent</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.PageData.DocumentChanged">
            <summary>Событие Добавлен дочерний узел</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.GetDocTreeRoot">
            <summary>Корень дерева документа в котором находится этот узел. 
            <remarks>Документ который владеет этим узлом. Если узел не принадлежит документу, то null</remarks>
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.OwnerDocument">
            <summary>Документ владелец страницы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.DocumentTemplateOwner">
            <summary>Документ, который использует данный документ как шаблон (=OwnerDocument.TemplateOwner)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.CanAddChildElement(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Проверить можно ли добавить заданный элемент в этот элемент</summary>
            <param name="child">Вставляемый элемент</param>
            <returns>Возвращает true, если заданный элемент можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.CanAddChildElement(System.Type)">
            <summary>Проверить можно ли добавить элемент заданного типа в этот элемент</summary>
            <param name="type">Тип вставляемого элемента</param>
            <returns>Возвращает true, если элемент заданного типа можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.OnChanged(Intermech.Interfaces.Document.Changed_EventArgs)">
            <summary>Генерирует событие Changed</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.PostProcessAddChildNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Метод вызывается после добавления дочернего элемента, но до вызова события ChildNodeAdded</summary>
            <param name="child">Дочерний элемент</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.PageNumber">
            <summary>номер страницы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.HierarchicalPageNumber">
            <summary>Иерархический номер страницы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsAdditionalPage">
            <summary>
            Является ли страница дополнительной
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsLastAdditionalPageInChain">
            <summary>
            Является ли страница последним доп.листом в цепочке или последним перед обычным
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsFirstAdditionalPageInChain">
            <summary>
            Является ли страница первым доп.листом, в начале цепочки или перед обычным листом в цепочке данных
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsNextToAdditionalPage">
            <summary>
            Является ли страница обычной, следующей за доп.листом в цепочке данных
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsTitlePage">
            <summary>
            Является ли страница титульным листом </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.IsNotesPage">
            <summary>
            Является ли страница листом примечаний </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SetPageNumber(System.Int32,System.Boolean,System.Boolean)">
            <summary>Установить значение PageNumber</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.GlobalPageNumber">
            <summary>
            Глобальный номер страницы в пределах комплекта
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.ComplectPageNumber">
            <summary>номер страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SetComplectPageNumber(System.Int32,System.Boolean,System.Boolean)">
            <summary>Установить значение ComplectPageNumber</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.UpdateHierarhicalPageNumber(Intermech.Interfaces.Document.PageData,System.Boolean,System.Boolean)">
            <summary>Пересчитать и установить значение HierarchicalPageNumber</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.OnRemoved(Intermech.Interfaces.Document.Removed_EventArgs)">
            <summary>Генерирует событие Removed</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.OnChildNodeRemoved(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Генерирует событие ChildNodeRemoved</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.RemovePageFromDataFlow(System.Boolean)">
            <summary>Удалить страницу из потока данных, не разрывая поток</summary>
            <param name="updateUI">Обновлять интерфейс и разбивку документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.RemovePageWithDataFlow(System.Boolean,System.Boolean)">
            <summary>Удалить страницу вместе со всей цепочкой потока данных</summary>
            <param name="uniteDataTables">Собрать все потоки данных</param>
            <param name="update">Обновлять интерфейс и разбивку документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.RemovePageAndMoveDataFlowToNext">
            <summary>Удалить страницу из потока данных, не разрывая поток</summary>
            <param name="updateUI">Обновлять интерфейс и разбивку документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.MoveFlowDataToPrevPage">
            <summary>Переместить поточные данные на предыдущую страницу и исключить эту страницу из потока данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.MoveFlowDataToNextPage">
            <summary>Переместить поточные данные на следующую страницу и исключить эту страницу из потока данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.CanMoveAllFlowDataToNextPage">
            <summary>Переместить поточные данные на следующую страницу и исключить эту страницу из потока данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.UserCommand_Delete(System.Boolean)">
            <summary>Команда пользователя "Удалить". В общем случае не совпадает с Remove()</summary>
            <param name="update">Обновлять внешний вид и разбивку по страницам</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ConvertInternalToUser(Intermech.Drawing.Common.UniPointF)">
            <summary>Конвертировать координаты в формат пользователя</summary>
            <param name="point">Точка во внутреннем формате</param>
            <returns>Точка в пользовательском формате</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ConvertInternalToUser(Intermech.Drawing.Common.UniSizeF)">
            <summary>Конвертировать размер в формат пользователя</summary>
            <param name="size">Размер во внутреннем формате</param>
            <returns>Размер в пользовательском формате</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ConvertInternalToUser(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Конвертировать прямоугольник в пользовательский формат</summary>
            <param name="rectangle">Прямоугольник во внутреннем формате</param>
            <returns>Прямоугольник в пользовательском формате</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ConvertUserToInternal(Intermech.Drawing.Common.UniPointF)">
            <summary>Преобразовать точку из пользовательского формата</summary>
            <param name="point">Точка в пользовательском формате</param>
            <returns>Точка во внутреннем формате</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ConvertUserToInternal(Intermech.Drawing.Common.UniSizeF)">
            <summary>Преобразовать размер из пользовательского формата</summary>
            <param name="size">Размер в пользовательском формате</param>
            <returns>Размер во внутреннем формате</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ConvertUserToInternal(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Преобразовать прямоугольник из пользовательского формата</summary>
            <param name="rectangle">Прямоугольник в пользовательском формате</param>
            <returns>Прямоугольник во внутреннем формате</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.RestoreLinks(System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Восстановить сохраненные ссылки</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.OnDeserialization(System.Object)">
            <summary>Метод вызываемый при десериализации. 
            Реализация IDeserializationCallback</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.UpdateDataIdCacheLinks">
            <summary>Обновить идентификаторы в ссылках на данные по установленным связям с данными</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.RestoreFlowIds">
            <summary>Восстановить идентификаторы потоков</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageData.flows">
            <summary>Коллекция потоков страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageData.isDistributing">
            <summary>Запущен процесс разбивки документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SuspendUpdateGeometryRefreshUI">
            <summary>Заблокировать обновление геометрии интерфейса и изображения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ResumeUpdateRefreshUI(System.Boolean,System.Boolean)">
            <summary>Разблокировать и провести обновление геометрии интерфейса и изображения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.SuspendedUpdateUIGeometryFlag">
            <summary>Обновление геометрии интерфейса пользователя заблокировано</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SuspendUpdateUIGeometry">
            <summary>Заблокировать обновление геометрии интерфейса пользователя
            <remarks>Блокировка увеличивает значение счетчика. Разблокировка соответственно уменьшает значение счетчика. При нулевом значении счетчика обновление разрешено.</remarks>>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ResumeUpdateUIGeometry(System.Boolean,System.Boolean)">
            <summary>Разблокировать обновление геометрии интерфейса пользователя</summary>
            <param name="update">Обновить геометрию</param>
            <param name="refresh">Обновить изображение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SetSuspendRefreshUICount(System.Int32)">
            <summary>Установить значение счетчика SuspendRefreshUI для узла и подузлов</summary>
            <param name="count">Значение счетчика</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SetSuspendUpdateUIGeometryCount(System.Int32)">
            <summary>Установить значение счетчика SuspendUpdateUIGeometry для узла и подузлов</summary>
            <param name="count">Значение счетчика</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.SuspendRefreshUI">
            <summary>Заблокировать обновление изображения
            <remarks>Блокировка увеличивает значение счетчика. Разблокировка соответственно уменьшает значение счетчика. При нулевом значении счетчика обновление разрешено.</remarks>>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageData.ResumeRefreshUI(System.Boolean)">
            <summary>Разблокировать обновление изображения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageData.SuspendedRefreshUIFlag">
            <summary>Обновление изображения интерфейса пользователя заблокировано</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentChanged_EventHandler">
            <summary>Обработчик события DocumentChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DocumentChanged_EventArgs">
            <summary>Аргументы события DocumentChanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentChanged_EventArgs.OldDocument">
            <summary>Старый документ</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DocumentChanged_EventArgs.NewDocument">
            <summary>Новый документ</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageCoorSystem">
            <summary>Система координат страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageCoorSystem.BottomLeft">
            <summary>Нижний левый угол</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageCoorSystem.TopLeft">
            <summary>Верхний левый угол</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageCoorSystem.TopRight">
            <summary>Верхний правый угол</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageCoorSystem.BottomRight">
            <summary>Нижний правый угол</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageCoorSystem.Custom">
            <summary>Пользовательская</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PageElementNode">
            <summary>Элемент страницы. 
            Базовый класс для элементов страницы.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать метод инициализации полей InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.#cctor">
            <summary>Статический конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.RestoreFlowId">
            <summary>Восстановить идентификаторы потоков</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.OwnerDocument">
            <summary>Документ владеющий этим узлом</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.DocumentTemplateOwner">
            <summary>Документ, который использует данный документ как шаблон (=OwnerDocument.TemplateOwner)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.GetDocTreeRoot">
            <summary>Корень дерева документа в котором находится этот узел. 
            <remarks>Документ который владеет этим узлом. Если узел не принадлежит документу, то null</remarks>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.GetTreeRoot">
            <summary>Получить корень дерева в котором находится этот узел
            <remarks>Корнем считается первый узел без родителя вверх по иерархии</remarks>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.CanAddChildElement(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Проверить можно ли добавить заданный элемент в этот элемент</summary>
            <param name="child">Вставляемый элемент</param>
            <returns>Возвращает true, если заданный элемент можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.CanAddChildElement(System.Type)">
            <summary>Проверить можно ли добавить элемент заданного типа в этот элемент</summary>
            <param name="type">Тип вставляемого элемента</param>
            <returns>Возвращает true, если элемент заданного типа можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.OnChanged(Intermech.Interfaces.Document.Changed_EventArgs)">
            <summary>Генерирует событие Changed</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.AssignParent(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить значение свойству Parent</summary>
            <param name="value">Новое значение Parent</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.Page">
            <summary>Страница, которая владеет элементом</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.AssignPage(Intermech.Interfaces.Document.PageData,System.Boolean,System.Boolean)">
            <summary>Присвоить значение свойству Page</summary>
            <param name="value">Новое значение Page</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.UpdateDataIdCacheLinks">
            <summary>Обновить идентификаторы в ссылках на данные по установленным связям с данными</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.ReadOnlyStructure">
            <summary>Запрет на изменение пользователем структуры узла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.IsFormulaLib">
            <summary>Элемент принадлежит библиотеке формул</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageElementNode.DefaultForeColor">
            <summary>Цвет переднего плана по умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageElementNode.DefaultBackColor">
            <summary>Цвет фона по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.ShowSelected">
            <summary>Показывать на экране, что узел выбран</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.CreateDefaultGraphics">
            <summary>Создать объект Graphics для контрола страницы</summary>
            <returns>Graphics</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.Transparent">
            <summary>Прозрачный фон</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.AssignTransparent(System.Boolean,System.Boolean)">
            <summary>Присвоить новое значение свойству Transparent</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageElementNode.DefaultLineWidth">
            <summary>Толщина линии по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.SetGeometryChangingBlockedRecursive(System.Boolean)">
            <summary>Рекурсивно установить значение GeometryChangingBlocked</summary>
            <param name="value">Значение GeometryChangingBlocked</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.RefreshUI(Intermech.Drawing.Common.UniRectangle)">
            <summary>Обновить изображение на экране</summary>
            <param name="clipRegion">Область в которой нужно обновить изображение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.GeometryChangingBlocked_ForUser">
            <summary>Заблокировать изменение геометрии через интерфейс пользователя.
            Свойство для PropertyGrid</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.GeometryChangingBlocked">
            <summary>Заблокировать изменение геометрии через интерфейс пользователя. Не работает для шаблона</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.ReadOnly">
            <summary>Пользователь не может редактировать данные элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.SetReadOnly(System.Boolean,System.Boolean)">
            <summary>Установить новое значение свойства ReadOnly</summary>
            <param name="value">Новое значение</param>
            <param name="UpdateUI">Обновить интерфейс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.AssignReadOnly(System.Boolean)">
            <summary>Присвоить новое значение свойства ReadOnly</summary>
            <param name="value">Новое значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.ReadOnlyNow">
            <summary>Текущее состояние только для чтения. Может меняться</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.IsInPlaceEditor">
            <summary>Редактор на месте</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.CanActivateInPlaceEditor">
            <summary>Можно активировать редактирование по месту</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.ActivateInPlaceEditor">
            <summary>Активизировать редактор на месте</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.DeactivateInPlaceEditor">
            <summary>Деактивировать редактор на месте</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.InPlaceEditorActive">
            <summary>Редактор для редактирования по месту активен</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.ShowOnPageOnly">
            <summary>
            Показывать на странице
            <remarks>
            Управление отображением и скрытием элемента на первой, следующей и последней страницах документа. Работает в контексте логической цепочки страниц связанных с переносом данных
            </remarks>
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.IsTemplate">
            <summary>Узел является шаблоном</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.TemplateRoot">
            <summary>Корень дерева в котором должен находиться шаблон этого узла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.TemplateGeometryOverrided">
            <summary>Геометрия перекрыта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.AssignTemplateGeometryOverrided(System.Boolean)">
            <summary>Назначить значение свойству TemplateGeometryOverrided</summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.CanUseNodeAsTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Можно ли использовать заданный узел как шаблон</summary>
            <param name="node">Узел</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.FindTemplate(System.String)">
            <summary>Найти шаблон этого узла по идентификатору templateId</summary>
            <param name="templateId">Идентификатор шаблона</param>
            <returns>Шаблон узла</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.PageElementNode.NeedSaveGeometryChangingBlocked">
            <summary>Нужно ли сохранять свойство GeometryChangingBlocked</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageElementNode.ReadFieldsDict">
            <summary>Словарь методов для чтения полей из XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PageElementNode.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.PageElementNode.page">
            <summary>Страница владелец</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ShowOnPageOnlyConverter">
            <summary>Конвертер типа ShowOnPageOnlyPropertyWrapper</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ShowOnPageOnlyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ShowOnPageOnlyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ShowOnPageOnlyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ParagraphFormat">
            <summary> Настройки стиля параграфа </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.#ctor(System.Boolean)">
            <summary>
            Конструктор
            </summary>
            <param name="isAllfieldsNull">всем полям присвоен null </param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.#ctor(Intermech.Interfaces.Document.PlaneTextFormat)">
            <summary>Конструктор</summary>
            <param name="planeTextFormat">Устаревший PlaneTextFormat</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.HorzAlignment">
            <summary> Выравнивание текста по горизонтали </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.VertAlignment">
            <summary> Выравнивание текста по вертикали</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.TextLevel">
            <summary> Уровень текста </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.IdentLeft">
            <summary> Отступ слева (в сантиметрах) </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.IdentRight">
            <summary> Отступ справа (в сантиметрах) </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.IdentFirstLine">
            <summary> Отступ первой строки (в сантиметрах) </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.IntervalBefore">
            <summary> Интервал перед абзацем (в поинтах) </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.IntervalAfter">
            <summary> Интервал после абзаца (в поинтах) </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.LineSpacingMethod">
            <summary> Способ задания междустрочного пространства </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.SpaceBetweenLines">
            <summary> Если _lineSpacingMethod == 
            LineSpacingMethod.InPercents, то здесь храниться междустрочное расстояние в процентах от нормального растояния, 
            Exact - в поинтах 
            ExactMM - в мм
            Ratio - множитель
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.DisableFloatLines">
            <summary> Запрет висячих строк </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.KeepTogether">
            <summary> Не разрывать абзац </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.KeepWithNext">
            <summary> Не отрывать абзац от следующего </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.FromNewPage">
            <summary> Начать с новой страницы </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ParagraphFormat.DisableWordWrap">
            <summary> Отключить автоматический перенос строк </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.GetFields(Intermech.Interfaces.Document.ParagraphFormat)">
            <summary> Если поля текущего параграфа не совпадают с полями входного то установить их в null </summary>
            <returns> Есть или нет совпадающие поля </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.Clone">
            <summary> Создание копии </summary>
            <returns> Копия объекта </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.CopyParamsFrom(Intermech.Interfaces.Document.ParagraphFormat)">
            <summary> Копирование параметров из некоторого другого объекта </summary>
            <param name="paragraphFormat"> Пакет настроек форматирования абзаца </param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.HorzAlignToStringAlign(Intermech.Interfaces.Document.HorzAlignment)">
            <summary>Преобразовать HorzAlignment в StringAlignment</summary>
            <param name="align">Значение типа HorzAlignment</param>
            <returns>Значение типа StringAlignment</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.VertAlignToStringAlign(Intermech.Interfaces.Document.VertAlignment)">
            <summary>Преобразовать VertAlignment в StringAlignment</summary>
            <param name="align">Значение типа VertAlignment</param>
            <returns>Значение типа StringAlignment</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.GetStringFormat">
            <summary>Преобразовать в StringFormat</summary>
            <returns>StringFormat</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.System#ICloneable#Clone">
            <summary> Создание копии </summary>
            <returns> Копия объекта </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormat.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать одно поле из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле прочитано</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ParagraphFormatConverter">
            <summary>Конвертер типа ParagraphFormat</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormatConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ParagraphFormatConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.DefaultParagraphFormatConverter">
            <summary>Конвертер типа ParagraphFormat</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DefaultParagraphFormatConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DefaultParagraphFormatConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.LineSpacingMethod">
            <summary> Способ задания междустрочного пространства </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineSpacingMethod.InPercents">
            <summary>В процентах от нормального междустрочного интервала</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineSpacingMethod.Ratio">
            <summary>Множитель</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineSpacingMethod.Ratio_1">
            <summary>Одинарный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineSpacingMethod.Ratio_1_5">
            <summary>Полуторный</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineSpacingMethod.Ratio_2">
            <summary>Двойной</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineSpacingMethod.AtLeast">
            <summary>Минимум</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineSpacingMethod.AtLeastMM">
            <summary>Минимум</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineSpacingMethod.Exact">
            <summary>Точно, точек</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineSpacingMethod.ExactMM">
            <summary>Точно, мм</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.HorzAlignment">
            <summary>Горизонтальное выравнивание</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.HorzAlignment.Left">
            <summary>Слева</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.HorzAlignment.Center">
            <summary>По центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.HorzAlignment.Right">
            <summary>Справа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.HorzAlignment.Justify">
            <summary>По ширине</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.VertAlignment">
            <summary>Вертикальное выравнивание</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.VertAlignment.Top">
            <summary>Сверху</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.VertAlignment.Center">
            <summary>По центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.VertAlignment.Bottom">
            <summary>Снизу</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PictAlignmentInText">
            <summary>Вертикальное выравнивание</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PictAlignmentInText.Bottom">
            <summary>Снизу</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PictAlignmentInText.Center">
            <summary>По центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PictAlignmentInText.Top">
            <summary>Сверху</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PictAlignmentInText.CustomBaseLine">
            <summary>По базовой линии текста</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PolylineData">
            <summary>Полилиния</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.GetSnapLinePoint(Intermech.Drawing.Common.UniPointF,Intermech.Drawing.Common.UniPointF,Intermech.Drawing.Common.UniPointF,System.Single)">
            <summary>Получить точку на прямой ближайшую к заданной точке</summary>
            <param name="point">Точка</param>
            <param name="linePoint1">Точка прямой 1</param>
            <param name="linePoint2">Точка прямой 2</param>
            <param name="snapSize">Размер области привязки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.GetSnapPoints(Intermech.Drawing.Common.UniPointF,System.Single,System.Collections.Generic.List{Intermech.Interfaces.Document.SnapPoint},Intermech.Interfaces.Document.VisualNode)">
            <summary>Получить список узлов привязки</summary>
            <param name="originalPoint">Оригинальная точка</param>
            <param name="snapSize">Размер области привязки</param>
            <param name="snapPointList">Список полученных точек</param>
            <param name="excludeNode">Узел который должен исключаться из рассмотрения</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.PolylineData.ElementTypeName">
            <summary>Имя типа элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylineData.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylineData.PathPoints">
            <summary>Массив точек полилинии</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylineData.PathTypes">
            <summary>Массив типов элементов полилинии</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylineData.PathData">
            <summary>Данные пути: точки и типы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylineData.Path">
            <summary>Объект для отображения полилинии</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.SetPath(Intermech.Drawing.Common.IUniGraphicsPath,System.Boolean,System.Boolean)">
            <summary>Установить новое значение свойству Path</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="setOverrideFlag">Установить флаг переопределения (отключение наследования)</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylineData.LineStyle">
            <summary>Стиль линии</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylineData.LineStyleVisual">
            <summary>Стиль линии</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylineData.LineWidth">
            <summary>Толщина линии в миллиметрах. 0 означает толщину по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylineData.ForeColor">
            <summary>Цвет линии</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.AddLine(Intermech.Drawing.Common.UniPointF)">
            <summary>Добавить линию, первая точка новой линии - последняя точка полилинии. 
            Если в полилинии не было точек, то метод ничего не делает</summary>
            <param name="p1">Последняя точка линии</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.AddLine(Intermech.Drawing.Common.UniPointF,Intermech.Drawing.Common.UniPointF)">
            <summary>Добавить линию</summary>
            <param name="p0">Первая точка линии</param>
            <param name="p1">Вторая точка линии</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.Draw(Intermech.Interfaces.Document.DrawContext)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.GetBounds">
            <summary>Получить границы полилинии</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.FindMinSize(Intermech.Drawing.Common.UniSizeF,System.Boolean)">
            <summary>Определить занимаемый размер для AutoSize родителя</summary>
            <param name="currSize">Текущий размер (начальное значение 0)</param>
            <param name="childOnly">Не учитывать родительский элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.FindPageElementAtPoint(Intermech.Drawing.Common.UniPointF,System.Int32@,System.Boolean)">
            <summary>Найти элемент страницы под данной точкой</summary>
            <param name="point">Точка</param>
            <param name="layer">Слой</param>
            <param name="firstOnly">Найти первый попавшийся элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.FindPageElementsInRectangle(Intermech.Drawing.Common.UniRectangleF,System.Collections.Generic.List{Intermech.Interfaces.Document.VisualNode},System.Boolean,System.Boolean)">
            <summary>Получить элементы страницы в заданном прямоугольнике</summary>
            <param name="rect">Прямоугольник</param>
            <param name="elements">Возвращает элементы</param>
            <param name="containsOnly">Выбирать только те элементы, которые полностью попадают в прямоугольник</param>
            <param name="childOnly">Не учитывать родительский элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.CanUseNodeAsTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Можно ли использовать заданный узел как шаблон</summary>
            <param name="node">Узел</param>
            <returns></returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.PolylineData.TypeNameForConstructorDictionary">
            <summary>Имя типа для словаря конструкторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="parent">Родительский узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать метод инициализации полей InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.CanAddChildElement(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Проверить можно ли добавить заданный элемент в этот элемент</summary>
            <param name="child">Вставляемый элемент</param>
            <returns>Возвращает true, если заданный элемент можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylineData.CanAddChildElement(System.Type)">
            <summary>Проверить можно ли добавить элемент заданного типа в этот элемент</summary>
            <param name="type">Тип вставляемого элемента</param>
            <returns>Возвращает true, если элемент заданного типа можно добавить в этот элемент</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineDashStyle.SolidLine">
            <summary>Сплошная</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineDashStyle.Dash">
            <summary>Штриховая</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineDashStyle.Dot">
            <summary>Пунктирная</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineDashStyle.DashDot">
            <summary>Штрих-пунктирная</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.LineDashStyle.DashDotDot">
            <summary>Штрих-точка-точка</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PolylinePointArrayConverter">
            <summary>Конвертер для массива точек полилинии</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Поддерживает ли класс получение свойств GetProperties()</summary>
            <param name="context">Контекст дескриптора</param>
            <returns>true, если класс получение свойств GetProperties()</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Возвращает коллекцию свойств для типа массива, заданного параметром, используя 
            заданную контекстную информацию и атрибуты</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="value">Объект Object, задающий тип массива, для которого нужно получить свойства</param>
            <param name="attributes">Массив типа Attribute, используемый как фильтр</param>
            <returns>PropertyDescriptorCollection со свойствами, доступными для этого типа данных, или пустая ссылка, если свойства не доступны</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.PolylinePointDescriptor">
            <summary>Описатель атрибута из AdditionalAttributeCollection для преставления его в PropertyGrid</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.PolylinePointDescriptor.polyline">
            <summary>Имя атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointDescriptor.#ctor(Intermech.Interfaces.Document.PolylineData,System.Int32)">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointDescriptor.GetValue(System.Object)">
            <summary>Получить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Значение свойства</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointDescriptor.SetValue(System.Object,System.Object)">
            <summary>Установить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <param name="value">Значение свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointDescriptor.CanResetValue(System.Object)">
            <summary>Можно ли сбросить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Можно ли сбросить значение свойства</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylinePointDescriptor.ComponentType">
            <summary>Тип владельца свойства</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylinePointDescriptor.PropertyType">
            <summary>Тип свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointDescriptor.ResetValue(System.Object)">
            <summary>Сбросить значение свойства</summary>
            <param name="component">Владелец свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PolylinePointDescriptor.ShouldSerializeValue(System.Object)">
            <summary>Нужно ли сохранить данное значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Нужно ли сохранить данное значение свойства</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylinePointDescriptor.IsReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PolylinePointDescriptor.Category">
            <summary>Категория свойства</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.RectangleBorder">
            <summary>Стиль линий прямоугольника. 
            Используется в прямоугольных элементах документа. Поддерживает для каждой стороны свой стиль линии.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleBorder.IsEmpty">
            <summary>Нет назначенных свойств</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleBorder.Top">
            <summary>Стиль линии верхней границы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleBorder.Bottom">
            <summary>Стиль линии нижней границы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleBorder.Left">
            <summary>Стиль линии левой границы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleBorder.Right">
            <summary>Стиль линии правой границы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleBorder.InnerHorizontal">
            <summary>Стиль внутренней горизонтальной линии</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleBorder.System#ICloneable#Clone">
            <summary>Реализация интерфейса ICloneable</summary>
            <returns>Копия экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleBorder.Clone">
            <summary>Создать полную копию экземпляра класса</summary>
            <returns>Копия экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleBorder.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleBorder.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать одно поле из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле прочитано</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleBorder.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.CustomBorder">
            <summary>Класс определяет стиль линии для каждой границы прямоугольника</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomBorder.Top">
            <summary>Стиль линии верхней границы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomBorder.Bottom">
            <summary>Стиль линии нижней границы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomBorder.Left">
            <summary>Стиль линии левой границы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomBorder.Right">
            <summary>Стиль линии правой границы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CustomBorder.InnerHorizontal">
            <summary>Стиль внутренней горизонтальной линии</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.SetLines(Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить стили линий границ</summary>
            <param name="top">Стиль линии верхней границы</param>
            <param name="innerHorizontal">Стиль линии внутренней горизонтальной границы</param>
            <param name="bottom">Стиль линии нижней границы</param>
            <param name="left">Стиль линии левой границы</param>
            <param name="right">Стиль линии правой границы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.SetTopLine(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить стиль линии верхней границы</summary>
            <param name="line">Стиль линии</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.SetInnerHorizontalLine(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить стиль линии внутренней горизонтальной границы</summary>
            <param name="line">Стиль линии</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.SetBottomLine(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить стиль линии нижней границы</summary>
            <param name="line">Стиль линии</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.SetLeftLine(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить стиль линии левой границы</summary>
            <param name="line">Стиль линии</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.SetRightLine(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить стиль линии правой границы</summary>
            <param name="line">Стиль линии</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.Equals(System.Object)">
            <summary>Проверяет равенство объектов</summary>
            <param name="obj">Объект с которым сравнивать</param>
            <returns>true, если объекты эквивалентны</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.GetHashCode">
            <summary>Получить хэш код объекта</summary>
            <returns>Хэш код объекта</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.#ctor(Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine)">
            <summary>Конструктор</summary>
            <param name="top">Стиль линии верхней границы</param>
            <param name="innerHorizontal">Стиль линии внутренней горизонтальной границы</param>
            <param name="bottom">Стиль линии нижней границы</param>
            <param name="left">Стиль линии левой границы</param>
            <param name="right">Стиль линии правой границы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.Clone">
            <summary>Клонировать</summary>
            <returns>Возвращает полную копию экземпляра класса</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.CustomBorder.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать одно поле из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле прочитано</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.RectangleBorderConverter">
            <summary>Конвертер для класса RectangleBorder</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleBorderConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleBorderConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.RectangleElement">
            <summary>Прямоугольный элемент</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.DefaultSize">
            <summary>Размер по умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.MinimalSize">
            <summary>Минимальный размер</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.EmptyFloatValue">
            <summary>Значение типа float соответствующее неустановленному значению (вместо null)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.EmptyIntValue">
            <summary>Значение типа int соответствующее неустановленному значению (вместо null)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.EmptyUniPointF">
            <summary>Значение типа PointF соответствующее неустановленному значению (вместо null)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.EmptyUniSizeF">
            <summary>Значение типа SizeF соответствующее неустановленному значению (вместо null)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.EmptyUniRectangleF">
            <summary>Значение типа UniRectangleF соответствующее неустановленному значению (вместо null)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.DefaultBorderWidth">
            <summary>Размер полей по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.DefaultBorderLine">
            <summary>Стиль линии по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.InitFields">
            <summary>Инициализировать поля объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Границы элемента</param>
            <param name="visible">Видимый элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать метод InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.#cctor">
            <summary>Статический конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.ResetTextBoxPaintCache">
            <summary>Сбросить кэш изображения в TextBoxElement</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.ShowSelected">
            <summary>Показывать на экране, что узел выбран</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsVisibleNow">
            <summary>Видимый в данный момент.
            В некоторых условиях элемент может не отображаться в текущий момент. 
            Например, не выбранные варианты строк данных в шаблоне таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.CanSwitchVisibleThisDataCellInTemplate">
            <summary>Для этой ячейки можно переключать видимость в шаблоне таблицы. 
            Возможно в принципе, но может  быть отключено настройками см. SwitchVisibleThisDataCellInTemplateIsEnabled</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.SwitchVisibleThisDataCellInTemplateIsEnabled">
            <summary>Для этой ячейки можно переключать видимость в шаблоне таблицы. Зависит от настроек</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindSwitchableDataCellInHierarchy">
            <summary>Найти в иерархии элемент, который может переключать свою видимость в шаблоне</summary>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsSelectedDataCellTemplate">
            <summary>Ячейка выбрана для показа в шаблоне таблицы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignIsSelectedDataCellTemplate(System.Boolean)">
            <summary>Установить значение IsSelectedDataCellTemplate</summary>
            <param name="value">Новое значение</param>
            <param name="updateUI">Обновить внешний вид</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetIsSelectedDataCellTemplate(System.Boolean,System.Boolean)">
            <summary>Установить значение IsSelectedDataCellTemplate</summary>
            <param name="value">Новое значение</param>
            <param name="updateUI">Обновить внешний вид</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetSnapPoints(Intermech.Drawing.Common.UniPointF,System.Single,System.Collections.Generic.List{Intermech.Interfaces.Document.SnapPoint},Intermech.Interfaces.Document.VisualNode)">
            <summary>Получить список узлов привязки</summary>
            <param name="originalPoint">Оригинальная точка</param>
            <param name="snapSize">Размер области привязки</param>
            <param name="snapPointList">Список полученных точек</param>
            <param name="excludeNode">Узел который должен исключаться из рассмотрения</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetSingleCells">
            <summary>Получить все одиночные ячейки виртуальной ячейки</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetSingleCells(Intermech.Interfaces.Document.RectangleElement,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode}@)">
            <summary>Получить все одиночные ячейки виртуальной ячейки</summary>
            <param name="cell"></param>
            <param name="cur_var"></param>
            <param name="hasleft"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetRealCells">
            <summary>Получить все реальные ячейки виртуальной ячейки</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetRealCells(Intermech.Interfaces.Document.RectangleElement,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode}@)">
            <summary>Получить все реальные ячейки виртуальной ячейки</summary>
            <param name="cell"></param>
            <param name="cur_var"></param>
            <param name="hasleft"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetGridRowParams">
            <summary>Получить параметры строки для этой ячейки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetGridColumnParams">
            <summary>Получить параметры столбца для этой ячейки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.WidthOverrided">
            <summary>Ширина ячейки перекрыта (ни от кого не наследуется)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.HeightOverrided">
            <summary>Высота ячейки перекрыта (ни от кого не наследуется)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetName">
            <summary>Получить имя элемента</summary>
            <returns>Имя элемента</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.Name">
            <summary>Имя узла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.HasTemplate">
            <summary>Имеет ли элементы шаблон</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetFrameStyleRecursive(Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine,Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Установить стиль рамки для элемента и всех подячеек</summary>
            <param name="top">Стиль верней линии рамки</param>
            <param name="left">Стиль левой линии рамки</param>
            <param name="bottom">Стиль нижней линии рамки</param>
            <param name="right">Стиль правой линии рамки</param>
            <param name="copy">Делать копии стилей</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.InvisibleLineColor">
            <summary>Цвет невидимых линий</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.InvisibleLinePen">
            <summary>Pen для невидимых линий</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.LeftForUser">
            <summary>Положение в формате выбранном пользователем</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.RightForUser">
            <summary>Положение в формате выбранном пользователем</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.TopForUser">
            <summary>Положение в формате выбранном пользователем</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.BottomForUser">
            <summary>Положение в формате выбранном пользователем</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.WidthForUser">
            <summary>Размер в формате выбранном пользователем</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.HeightForUser">
            <summary>Размер в формате выбранном пользователем</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetHeightForUser(System.Single,System.Boolean,System.Boolean)">
            <summary>Установить новое значение свойства HeightForUser</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.LocationForUser">
            <summary>Положение в формате выбранном пользователем</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.ProperLocation">
            <summary> Собственно положение ячейки (положение без учета пропусков строк и столбцов)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.Location">
            <summary>Положение, в миллиметрах</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.SizeForUser">
            <summary>Размер в формате выбранном пользователем</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.ProperSize">
            <summary>Собственный размер ячейки 
            (размер без учета пропусков строк и столбцов)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.Size">
            <summary>Размеры, в миллиметрах</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetCellBounds(Intermech.Interfaces.Document.RectangleElement,System.Boolean,System.Boolean)">
            <summary>Получить все границы ячейки</summary>
            <param name="template">Шаблон</param>
            <param name="getTemplatePWidth">Обновить значение ширины из шаблона, если наследуется</param>
            <param name="getTemplatePHeight">Обновить значение высоты из шаблона, если наследуется</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.Bounds">
            <summary>Границы, в миллиметрах</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignBounds(Intermech.Drawing.Common.UniPointF,Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить границы</summary>
            <param name="location">Положение</param>
            <param name="size">Размеры</param>
            <param name="saveUndo">Сохранять действие для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetCellSizes(Intermech.Drawing.Common.UniRectangleF,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить размеры дочерних ячеек</summary>
            <param name="newBounds">Новые границы ячейки (внешние, с учётом пропусков)</param>
            <param name="lockNeedUpdateLayoutFlag">Блокировать изменение флага NeedUpdateLayoutFlag</param>
            <param name="saveUndo">Сохранять действие для Undo</param>
            <param name="setMinHeight">Установить MinHeight</param>
            <param name="setRelativeSize">Установить соответствующий относительный размер</param>
            <param name="checkLastCell">Проверять размер последней ячейки</param>
            <returns>Новые границы ячейки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.RecalcRelativeSize">
            <summary>Пересчитать относительные размеры по текущим размерам ячейки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignBounds(Intermech.Drawing.Common.UniRectangleF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить границы</summary>
            <param name="value">Границы</param>
            <param name="saveUndo">Сохранять действие для Undo</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignBoundsOnly(Intermech.Drawing.Common.UniRectangleF,Intermech.Drawing.Common.UniRectangleF)">
            <summary>Только назначить новое значение границ полям</summary>
            <param name="realBounds">Текущие границы (кэш)</param>
            <param name="value">Новые границы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcProperLocation(Intermech.Drawing.Common.UniPointF)">
            <summary>Вычислить собственное положение ячейки (без пропущенных строк и столбцов)</summary>
            <param name="location">Положение  всей ячейки (с пропущенными строками и столбцами)</param>
            <returns>Собственное положение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcProperSize(Intermech.Drawing.Common.UniSizeF)">
            <summary>Вычислить собственный размер ячейки (без пропущенных строк и столбцов)</summary>
            <param name="size">Полный размер</param>
            <returns>Собственный размер</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcProperBounds(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Вычислить собственный границы ячейки (без пропущенных строк и столбцов)</summary>
            <param name="bounds">Полные границы</param>
            <returns>Собственные границы ячейки (без пропущенных строк и столбцов)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcLocationFromProper(Intermech.Drawing.Common.UniPointF)">
            <summary>Вычислить положение с пропусками на основе собственного положения</summary>
            <param name="properLocation">Собственное положение</param>
            <returns>Вычисленное положение с пропусками</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcSizeFromProper(Intermech.Drawing.Common.UniSizeF)">
            <summary>Вычислить размер с пропусками на основе собственного размера</summary>
            <param name="properSize">Собственный размер</param>
            <returns>Вычисленный размер с пропусками</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcSizeFromProper(Intermech.Drawing.Common.UniSizeF,System.Boolean)">
            <summary>Вычислить размер с пропусками на основе собственного размера</summary>
            <param name="properSize">Собственный размер</param>
            <param name="ignoreAfterSkipSize">Не учитывать пропущенные строки после записи</param>
            <returns>Вычисленный размер с пропусками</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcBoundsFromProper(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Вычислить границы с пропусками на основе собственного размера</summary>
            <param name="newProperBounds">Собственные границы</param>
            <returns>Вычисленный размер с пропусками</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignProperBounds(Intermech.Drawing.Common.UniPointF,Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить собственные границы (без пропусков)</summary>
            <param name="location">Собственное положение (без пропусков)</param>
            <param name="size">Собственный размер (без пропусков)</param>
            <param name="saveUndo">Сохранять действие для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignProperBounds(Intermech.Drawing.Common.UniRectangleF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить собственные границы (без пропусков)</summary>
            <param name="value">Собственные границы (без пропусков)</param>
            <param name="saveUndo">Сохранять действие для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.HorzAlign">
            <summary>Выравнивание элемента страницы по горизонтали</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignHorzAlign(Intermech.Interfaces.Document.ElementHorizontalAlign,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству HorzAlign</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять внешний вид</param>
            <param name="updateLayout">Обновлять расположение элементов</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.VertAlign">
            <summary>Выравнивание элемента страницы по горизонтали</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignVertAlign(Intermech.Interfaces.Document.ElementVerticalAlign,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству VertAlign</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять внешний вид</param>
            <param name="updateLayout">Обновлять расположение элементов</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.RelativeWidth">
            <summary>Ширина относительно родительского элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignRelativeWidth(System.Single,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству RelativeWidth</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять внешний вид</param>
            <param name="updateLayout">Обновлять расположение элементов</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.RelativeHeight">
            <summary>Ширина относительно родительского элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignRelativeHeight(System.Single,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству RelativeWidth</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять внешний вид</param>
            <param name="updateLayout">Обновлять расположение элементов</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.AutoSizeWidth">
            <summary>Автоматически подбирать размер</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.FontAutoSize">
            <summary>Вписывать текст в размеры полей</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignAutoSize(Intermech.Interfaces.Document.AutoSizeDirection,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству AutoSize</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Перекрывать наследование параметра по шаблону</param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Intermech.Interfaces.Document.RectangleElement.RealProperBounds" -->
        <member name="P:Intermech.Interfaces.Document.RectangleElement.ProperBounds">
            <summary>Собственные (внутренние) границы ячейки для размещения содержимого.
            <Remarks>Если у ячейки есть пропуски строк снизу и сверху, то это внутренние границы ячейки без пропусков, 
            а внешние границы с учётом пропусков находятся в свойстве Bounds.
            Если ячейка находится внутри таблицы с флагом IsFixedStructureArea, 
            то в свойстве хранятся локальные координаты в пространстве ячейки владельца, 
            а реальные координаты находятся в свойстве Bounds</Remarks></summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcRealProperBounds(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Рассчитать ProperBounds используя относительные координаты и координаты родительского элемента</summary>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsFixedSizeRows">
            <summary>Кратная высота строки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetIsFixedSizeRows(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.CellContext)">
            <summary>Получить значение IsFixedSizeRows</summary>
            <param name="template">Шаблон</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.DefaultRowSizeUI">
            <summary>Высота строки для отрисовки сетки, новых строк и кратной высоты строки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.DefaultRowSize">
            <summary>Высота строки для отрисовки сетки, новых строк и кратной высоты строки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetDefaultRowSize">
            <summary>Получить значение DefaultRowSize, учитывая наследование</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetDefaultRowSize(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.CellContext)">
            <summary>Получить значение DefaultRowSize, учитывая наследование</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetDefaultRowSize(System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить новое значение DefaultRowSize</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.SkipSizeBefore">
            <summary>Размер всех пропусков перед</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.SkipSizeAfter">
            <summary>Размер всех пропусков после</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.UpdateBoundsSkipAfter">
            <summary>Обновить размеры с учётом пропусков строк после ячейки для этой ячейки и всех наследников в конце таблиц</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.SkipCellsBefore">
            <summary>Количество пропусков перед (может быть нецелым)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetSkipCellsBefore(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение SkipCellsBefore</summary>
            <param name="value">Значение</param>
            <param name="forPlugin">Выставлять флаг SkipBeforeForPlugin</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.NonSkipBeforeAtStartPage">
            <summary>Игнорировать пропуск перед строкой вначале страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignNonSkipBeforeAtStartPage(System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству NonSkipBeforeAtStartPage без вызова обработчиков</summary>
            <param name="value">Значение</param>
            <param name="setOverrideFlag">Установить флаг перекрытия шаблона</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetNonSkipBeforeAtStartPage(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству NonSkipBeforeAtStartPage</summary>
            <param name="value">Значение</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignSkipCellsBefore(System.Single)">
            <summary>Только для внутреннего использования. Назначить значение SkipCellsBefore без запуска обработчиков</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.SkipCellsAfter">
            <summary>Количество пропусков после (может быть нецелым)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IgnoreSkipOuterCells">
            <summary>Игнорировать пропуск строк на крайних ячейках</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.IgnoreSkipBefore">
            <summary>Игнорировать пропуск строк перед таблицей</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.IgnoreSkipAfter">
            <summary>Игнорировать пропуск строк после таблицы</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetIgnoreSkipOuterCells(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение SkipCellsAfter</summary>
            <param name="value">Значение</param>
            <param name="forPlugin">Выставлять флаг SkipBeforeForPlugin</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetSkipCellsAfter(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение SkipCellsAfter</summary>
            <param name="value">Значение</param>
            <param name="forPlugin">Выставлять флаг SkipBeforeForPlugin</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignSkipCellsAfter(System.Single)">
            <summary>Только для внутреннего использования. Назначить значение SkipCellsAfter без запуска обработчиков</summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.UpdateAfterChangeProperties(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Стандартная процедура обновлений после изменения свойства</summary>
            <param name="refreshUI">Обновлять изображение в интерфейсе пользователя</param>
            <param name="updateUIGeometry">Обновлять геометрию в интерфейсе пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="needUpdateLayout">Выставить флаг NeedUpdateLayout в true</param>
            <param name="updateTemplate">Обновлять элементы сделанные по этому шаблону</param>
            <param name="raiseOnChanged">Вызвать OnChanged</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.DrawEllipse">
            <summary>Рисовать эллипс вписанный в границы элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignDrawEllipse(System.Boolean,System.Boolean)">
            <summary>Назначить значение DrawEllipse</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить изображение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.BoundsForUser">
            <summary>Границы в формате выбранном пользователем</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcClientBounds(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Получить границы внутреннего элемента таблицы</summary>
            <param name="bounds">Ячейки</param>
            <returns>Границы внутреннего элемента</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcClientSize(Intermech.Drawing.Common.UniSizeF)">
            <summary>Получить границы внутреннего элемента таблицы</summary>
            <param name="size">Ячейки</param>
            <returns>Границы внутреннего элемента</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcBoundsFromClientBounds(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Рассчитать границы ячейки для заданных границ текста или изображения</summary>
            <param name="clientBounds">Границы текста или изображения</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcSizeFromClientSize(Intermech.Drawing.Common.UniSizeF)">
            <summary>Получить границы внутреннего элемента таблицы</summary>
            <param name="size">Ячейки</param>
            <returns>Границы внутреннего элемента</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.ClientBounds">
            <summary>Границы внутреннего элемента таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.ClientBoundsWithoutBorderLine">
            <summary>Границы внутреннего элемента таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.BordersHeigth">
            <summary>Суммарная высота полей сверху и снизу</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.BordersWidth">
            <summary>Суммарная ширина полей слева и справа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.MinHeight">
            <summary>Минимальная базовая высота ячейки (без учёта содержимого)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.ContentHeight">
            <summary>Высота содержимого ячейки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignMinHeight(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству MinHeight</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Установить флаг, сбрасывающий наследование</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.MaxHeight">
            <summary>Максимальная высота ячейки. Если 0, то высота не ограничена сверху</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignMaxHeight(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству MaxHeight</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Установить флаг, сбрасывающий наследование</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.MinWidth">
            <summary>Минимальная ширина ячейки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignMinWidth(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству MinWidth</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Установить флаг, сбрасывающий наследование</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CheckBordersStatus(Intermech.Interfaces.Document.BordersStatus,Intermech.Interfaces.Document.BordersPosition,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean)">
            <summary>Проверить статус внешних и внутренних границ таблицы</summary>
            <param name="bordersStatus">Статус границ</param>
            <param name="bordersPosition">Положение ячейки относительно границ выделения</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="colIndex">Индекс столбца</param>
            <param name="gridRows">Строки сетки</param>
            <param name="rowIndex">Индекс строки</param>
            <param name="findGridParams">Получить параметры если не заданы</param>
            <returns>true, если все границы проверены и не требуется проверка в остальных ячейках</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.BorderWidth">
            <summary>Размер полей в миллиметрах</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetBorderWidth(System.Single,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству BorderWidth</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetBorders(Intermech.Interfaces.Document.RowColParams,System.Boolean,Intermech.Interfaces.Document.BorderLine)">
            <summary>Получить стили линий границы</summary>
            <returns>Стили линий границы</returns>
            <param name="gridCol">Параметры столбцов</param>
            <param name="findGridParams">Использовать параметры столбцов</param>
            <param name="parentInnerHorizontalLine">Внутренняя горизонтальная линия родительской таблицы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetTopBorderLine(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Получить стиль линии верхней границы</summary>
            <param name="template">Шаблон</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetInnerHorizontalLine(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.BorderLine)">
            <summary>Получить стиль линии внутренней горизонтальной границы</summary>
            <param name="template">Шаблон</param>
            <param name="parentInnerHorizontalLine">Внутренняя горизонтальная линия родительской таблицы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetBottomBorderLine(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Получить стиль линии нижней границы</summary>
            <param name="template">Шаблон</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetLeftBorderLine(Intermech.Interfaces.Document.RectangleElement,System.Boolean,Intermech.Interfaces.Document.RowColParams@)">
            <summary>Получить стиль линии левой границы</summary>
            <param name="template">Шаблон</param>
            <param name="useGridParams">Использовать сетку столбцов таблицы</param>
            <param name="gridColumns">Столбцы таблицы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetRightBorderLine(Intermech.Interfaces.Document.RectangleElement,System.Boolean,Intermech.Interfaces.Document.RowColParams@)">
            <summary>Получить стиль линии правой границы</summary>
            <param name="template">Шаблон</param>
            <param name="useGridParams">Использовать сетку столбцов таблицы</param>
            <param name="gridColumns">Столбцы таблицы</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.Borders">
            <summary>Линии границ прямоугольника</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.TopBorderLine">
            <summary>Только для PropertyGrid! Линия верхней границы прямоугольника.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignTopBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Назначить значение TopBorderLine</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.BottomBorderLine">
            <summary>Линия верхней границы прямоугольника</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignBottomBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Назначить значение BottomBorderLine</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.InnerBorderLine">
            <summary>Внутренняя линия прямоугольника</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignInnerHorizontalBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Назначить значение InnerBorderLine</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.LeftBorderLine">
            <summary>Линия верхней границы прямоугольника</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignLeftBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Назначить значение LeftBorderLine</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.RightBorderLine">
            <summary>Линия верхней границы прямоугольника</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignRightBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Назначить значение RightBorderLine</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetTopBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean,System.Boolean)">
            <summary>Установить стиль линии верхней границы. 
            При этом настройки по умолчанию больше не будут действовать.</summary>
            <param name="borderLine">Стиль линии</param>
            <param name="setAdjoiningLine">Установить стиль смежной линии в смежной ячейке</param>
            <param name="setChilds">Установить стиль дочерних ячеек</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetAdjoiningTopCellBorder(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Установить нижнюю границу смежной ячейки сверху</summary>
            <param name="borderLine">Стиль линии границы</param>
            <param name="setChilds">Установить стиль дочерних ячеек</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetBottomBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean,System.Boolean)">
            <summary>Установить стиль линии нижней границы. 
            При этом настройки по умолчанию больше не будут действовать.</summary>
            <param name="borderLine">Стиль линии</param>
            <param name="setAdjoiningLine">Установить стиль смежной линии в смежной ячейке</param>
            <param name="setChilds">Установить стиль дочерних ячеек</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetAdjoiningBottomCellBorder(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Установить верхнюю границу смежной ячейки снизу</summary>
            <param name="borderLine">Стиль линии границы</param>
            <param name="setChilds">Установить стиль дочерних ячеек</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetLeftBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Установить стиль линии левой границы. 
            При этом настройки по умолчанию больше не будут действовать.</summary>
            <param name="borderLine">Стиль линии</param>
            <param name="setAdjoiningLine">Установить стиль смежной линии в смежной ячейке</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetAdjoiningLeftCellBorder(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить правую границу смежной ячейки слева</summary>
            <param name="borderLine">Стиль линии границы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetRightBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Установить стиль линии правой границы. 
            При этом настройки по умолчанию больше не будут действовать.</summary>
            <param name="borderLine">Стиль линии</param>
            <param name="setAdjoiningLine">Установить стиль смежной линии в смежной ячейке</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetAdjoiningRightCellBorder(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить левую границу смежной ячейки справа</summary>
            <param name="borderLine">Стиль линии границы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetOneTypeBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Назначить один стиль всем линиям границы</summary>
            <param name="value">Стиль линий границы</param>
            <param name="setAdjoiningLines">Установить стиль смежной линии в смежной ячейке</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindResizableRightSide(System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement},System.Single)">
            <summary>Найти ячейки правая сторона которых имеет заданную координату X</summary>
            <param name="cells">Список найденных ячеек</param>
            <param name="x">Координата X</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindResizableLeftSide(System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement},System.Single)">
            <summary>Найти ячейки правая сторона которых имеет заданную координату X</summary>
            <param name="cells">Список найденных ячеек</param>
            <param name="x">Координата X</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindResizableBottomSide(System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement},System.Single)">
            <summary>Найти ячейки нижняя сторона которых имеет заданную координату Y</summary>
            <param name="cells">Список найденных ячеек</param>
            <param name="y">Координата Y</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindParentWithBottomSide(System.Single)">
            <summary>Найти верхнюю родительскую ячейку, нижняя сторона которой имеет заданную координату Y</summary>
            <param name="y">Координата Y</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetForeColor">
            <summary>Получить цвет переднего плана</summary>
            <returns>Цвет переднего плана</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.ForeColor">
            <summary>Цвет переднего плана</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignForeColor(Intermech.Drawing.Common.UniColor,System.Boolean)">
            <summary>Назначить значение ForeColor</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить изображение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetBackColor">
            <summary>Получить цвет фона</summary>
            <returns>Цвет фона</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.BackColor">
            <summary>Цвет фона</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignBackColor(Intermech.Drawing.Common.UniColor,System.Boolean)">
            <summary>Назначить значение BackColor</summary>
            <param name="value"></param>
            <param name="updateUI"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.DrawBorderLine(Intermech.Interfaces.Document.DrawContext,Intermech.Interfaces.Document.BorderLine,System.Boolean,System.Boolean,System.Boolean,Intermech.Drawing.Common.UniPointF,System.Single)">
            <summary>Нарисовать линию границы согласно заданному стилю</summary>
            <param name="g">Объект Graphics выполняющий отрисовку</param>
            <param name="borderLine">Стиль линии</param>
            <param name="negative">Негатив (инвертированные цвета)</param>
            <param name="vertical">true - вертикальная линия, false - горизонтальная</param>
            <param name="invisibleOnly">Рисовать только, если невидимая линия</param>
            <param name="p">Начало линии</param>
            <param name="length">Длина линии</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.DrawBackground(Intermech.Interfaces.Document.DrawContext,Intermech.Drawing.Common.UniRectangleF)">
            <summary>Нарисовать фон элемента</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="properBounds">Границы элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.DrawGrid(Intermech.Interfaces.Document.DrawContext,Intermech.Drawing.Common.UniRectangleF,System.Single,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams})">
            <summary>Рисует внутренние линии сетки</summary>
            <param name="context">Контекст рисования</param>
            <param name="gridBounds">Координаты сетки</param>
            <param name="rowSize">Размер строки сетки</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="gridRows">Строки сетки [устарело]</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.DrawFrame(Intermech.Interfaces.Document.DrawContext,Intermech.Drawing.Common.UniRectangleF,Intermech.Interfaces.Document.RowColParams,Intermech.Interfaces.Document.RowColParams,System.Boolean)">
            <summary>Нарисовать границы элемента</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="properBounds">Границы элемента</param>
            <param name="gridCol">Столбец сетки</param>
            <param name="gridRow">Строка сетки</param>
            <param name="findGridParams">Искать строку и столбец сетки если null</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetPixelBounds(Intermech.Interfaces.Document.DrawContext)">
            <summary>Получить границы в пикселях</summary>
            <param name="context">Контекст отрисовки элемента</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.Draw(Intermech.Interfaces.Document.DrawContext)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.DrawCell(Intermech.Interfaces.Document.DrawContext,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="colIndex">Индекс столбца</param>
            <param name="gridRows">Строки сетки</param>
            <param name="rowIndex">Индекс строки</param>
            <param name="findGridParams">Искать столбец и строк если не заданы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.DrawEllipseBounds(Intermech.Interfaces.Document.DrawContext,Intermech.Drawing.Common.UniRectangleF,Intermech.Interfaces.Document.RowColParams,Intermech.Interfaces.Document.RowColParams,System.Boolean)">
            <summary>Нарисовать границы элемента</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="properBounds">Границы элемента</param>
            <param name="gridCol">Столбец сетки</param>
            <param name="gridRow">Строка сетки</param>
            <param name="findGridParams">Искать строку и столбец сетки если null</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.DrawSkipedSpace(Intermech.Interfaces.Document.DrawContext,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean)">
            <summary>Нарисовать пропущенное пространство (строки/столбцы)</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="colIndex">Индекс столбца</param>
            <param name="gridRows">Строки сетки</param>
            <param name="rowIndex">Индекс строки</param>
            <param name="findGridParams">Искать столбец и строк если не заданы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindPageElementAtPoint(Intermech.Drawing.Common.UniPointF,System.Int32@,System.Boolean)">
            <summary>Найти элемент страницы под данной точкой</summary>
            <param name="point">Точка</param>
            <param name="layer">Слой</param>
            <param name="firstOnly">Найти первый попавшийся элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindPageElementsInRectangle(Intermech.Drawing.Common.UniRectangleF,System.Collections.Generic.List{Intermech.Interfaces.Document.VisualNode},System.Boolean,System.Boolean)">
            <summary>Получить элементы страницы в заданном прямоугольнике</summary>
            <param name="rect">Прямоугольник</param>
            <param name="elements">Возвращает элементы</param>
            <param name="containsOnly">Выбирать только те элементы, которые полностью попадают в прямоугольник</param>
            <param name="childOnly">Не учитывать родительский элемент</param>        
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindMinSize(Intermech.Drawing.Common.UniSizeF,System.Boolean)">
            <summary>Определить занимаемый размер для AutoSize родителя</summary>
            <param name="currSize">Текущий размер (начальное значение 0)</param>
            <param name="childOnly">Не учитывать родительский элемент</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.FixedRowSizeTrancateFraction">
            <summary>Погрешность округления кратной высоты текста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CanUseNodeAsTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Можно ли использовать заданный узел как шаблон</summary>
            <param name="node">Узел</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.ResetInheritance">
            <summary>Сбросить наследование параметров от родителей</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.OverrideTemplateIdForUI">
            <summary>
            Свойство только для UI
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.PrevCell">
            <summary>Предыдущая ячейка</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetPrevCell(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Назначить новое значение свойству PrevCell</summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.InsertNextCell(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Вставить следующий элемент потока в цепочку Prev/Next</summary>
            <param name="newNext">Новый следующий элемент цепочки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.InsertPrevCell(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Вставить предыдущий элемент потока в цепочку Prev/Next</summary>
            <param name="newPrev">Новый предыдущий элемент цепочки</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.NextCell">
            <summary>Ячейка продолжение</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetNextCell(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Назначить новое значение свойству NextCell</summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.ChangeNextCell(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Заменить NextCell не теряя данных в потоке и сохраняя следующие за ним цепочки</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsFirstInFlow">
            <summary>Ячейка является первой в потоке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsLastInFlow">
            <summary>Ячейка является последней в потоке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsFirstDataInParentDataFlow">
            <summary>Ячейка является первой в потоке данных родительской таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsFirstCellInParentDataFlow">
            <summary>Ячейка является первой в потоке данных родительской таблицы, включая заголовки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsLastCellInParentDataFlow">
            <summary>Ячейка является последней в потоке данных родительской таблицы, включая заголовки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindPrevDataCell">
            <summary>Найти предыдущий элемент данных
            Возвращает первую ячейку из предыдущей цепочки (распределённой по страницам через NextCell)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindNextDataCell">
            <summary>Найти следующий элемент данных 
            Возвращает первую ячейку из следующей цепочки (распределённой по страницам через NextCell)</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindFirstCell">
            <summary>Найти первую ячейку в цепочке разбитых ячеек</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindLastCell">
            <summary>Найти последнюю ячейку в цепочке разбитых ячеек</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.NeedUpdateMinHeight">
            <summary>Для внутреннего использования. Необходимо обновить минимальный размер</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.NeedUpdateMinWidth">
            <summary>Для внутреннего использования. Необходимо обновить минимальный размер</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.NeedSecondLayoutPass">
            <summary>Необходим второй проход разбивки по таблице.
            Второй проход используется для параллельных таблиц элементы которых должны перемещаться по страницам синхронно.
            Как в экспортной СП</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.TryNotBreak_Failed0">
            <summary>Результат попытки оставить ячейку целой в родной (первой) таблице</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.TryNotBreak_Failed1">
            <summary>Попытка оставить ячейку целой в следующей (второй) таблице</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.FromNewPage">
            <summary>С новой страницы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetFromNewPage(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству FromNewPage</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.TryNotBreak">
            <summary>Не разбивать по страницам</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetTryNotBreak(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству TryNotBreak</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.KeepWithNext">
            <summary>Не разбивать по страницам</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetKeepWithNext(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству KeepWithNext</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.RoundForFixedSizeRow(System.Single,System.Single,System.Single,System.Single,Intermech.Interfaces.Document.CellContext)">
            <summary>Подогнать высоту строки под кратный размер сетки</summary>
            <param name="rowSize">Высота строки</param>
            <param name="lineSize">Размер строки сетки</param>
            <returns>Размер кратный размеру строки сетки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsDistributing">
            <summary>Таблица распределяется в текущий момент</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.DistributeCell(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Распределить данные по ячейке представления</summary>
            <param name="context">Контекст разбивки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetTableFreeSpace">
            <summary>Получить свободное пространство для распределения данных в таблице</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetMinimalSizeForDistribute(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Только для внутреннего использования. Получить минимальный неделимый размер для разбивки</summary>
            <note>Используется для определения свободного пространства в только что созданной для переноса таблице</note>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetNeedUpdateLayoutFlag(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить флаг NeedUpdateLayoutFlag</summary>
            <param name="value">Значение флага</param>
            <param name="setInPrevCell">Установить флаг и для предыдущих ячеек</param>
            <param name="updateUI">Обновить интерфейс пользователя, после обновления разбивки</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.UpdateLayout(System.Boolean)">
            <summary>Обновить разбивку по страницам. 
            Вызывает UpdateLayout для вышестоящих узлов или Distribute для себя.
            Вызов UpdateLayout для дочерних узлов недопустим!</summary>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.SuspendedUpdateLayoutFlag">
            <summary>Обновление представлений данных временно заблокировано</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.SuspendedRefreshUIFlag">
            <summary>Обновление изображения интерфейса пользователя заблокировано</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.SuspendedUpdateUIGeometryFlag">
            <summary>Обновление геометрии интерфейса пользователя заблокировано</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.TableCellType">
            <summary>Тип ячейки таблицы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.IsLastHeader">
            <summary>Последний заголовок</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetTableCellType(Intermech.Interfaces.Document.CellType,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству TableCellType</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsHeaderCell">
            <summary>Ячейка является шапкой</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsCellInHeaderTable">
            <summary>Ячейка находится в шапке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.DesiredPageNumber">
            <summary>Привязка к странице</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetDesiredPageNumber(System.Int32,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству DesiredPageNumber</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.ConvertToHeader(System.Boolean)">
            <summary>Преобразовать в ячейку-шапку рекурсивно. Удаляет ячейки данных</summary>
            <param name="removeData">Удалить данные</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.UniteTable">
            <summary>Объединить распределенную таблицу в одну. Метод обратный DistributeTable</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.OneStepUniteTable(System.Boolean)">
            <summary>Убрать следующую ячейку. Для внутреннего пользования</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AllFlowsIsEmpty">
            <summary>Поток пустой</summary>
            <param name="allowEmptyCell">Допустимы пустые ячейки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.IsEmptyData(System.Boolean,System.Boolean)">
            <summary>Элемент не содержит данных
            <remarks>
            Если emptyCellIsData - true, то ячейка считается пустой только когда является продолжением и ничего не содержит 
            (а значит её можно удалить), а одиночная пустая ячейка считается содержимым для таблицы
            Если emptyCellIsData - false, то она считается пустой когда не содержит данных либо внутренние ячейки пусты
            </remarks>
            </summary>
            <param name="emptyCellIsData">Допустимы пустые ячейки</param>
            <param name="checkNextTable">Проверять следующую ячейку</param>
            <returns></returns>        
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CanSplitData">
            <summary>Можно ли распределять данные по страницам</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GenerateIdForNextCell">
            <summary>Сгенерировать идентификатор для следующей ячейки</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetCellFlags(Intermech.Interfaces.Document.CellFlags,System.Boolean)">
            <summary>Установить битовые флаги ячеек таблиц</summary>
            <param name="flags">Флаги, которые нужно установить</param>
            <param name="flags">Значение битовых флагов, которое нужно установить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetCellFlags(Intermech.Interfaces.Document.CellFlags)">
            <summary>Установить битовые флаги ячеек таблиц</summary>
            <param name="flags">Флаги, которые нужно установить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.ResetCellFlags(Intermech.Interfaces.Document.CellFlags)">
            <summary>Сбросить битовые флаги ячеек таблиц</summary>
            <param name="flags">Флаги, которые нужно сбросить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.HasCellFlags(Intermech.Interfaces.Document.CellFlags)">
            <summary>Проверить битовые флаги ячеек таблиц</summary>
            <param name="flags">Флаги, которые нужно проверить</param>
            <returns>Возвращает true, если все заданные флаги установлены</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.GroupHeaderText">
            <summary>Текст заголовка группы, по которому группируются записи</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.HasGroupHeaderText">
            <summary>Запись имеет заголовок для динамической группировки и может группироваться </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.GroupCellText">
            <summary>Текущее значение текста для вывода в записи, которая может быть сгруппирована</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.GroupCellOriginalText">
            <summary>Значение текста для вывода в несгруппированной записи</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.GroupCellTextForGroup">
            <summary>Значение текста для вывода в сгруппированной записи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.WriteGeometryToXml(System.Xml.XmlWriter)">
            <summary>Записать данные о геометрии в XML</summary>
            <param name="xw">XmlWriter</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.ReadFieldsDict">
            <summary>Словарь методов чтения полей из XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.IsBadFixedRowSize_OldSpecFormB">
            <summary>Вспомогательный метод для идентификации таблицы с ошибкой в размере строки сетки</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.IsBadFixedRowSize_OldSpecFormV">
            <summary>Вспомогательный метод для идентификации таблицы с ошибкой в размере строки сетки</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.IsBadFixedRowSize_OldSpec_AutoIndustry_Single">
            <summary>Вспомогательный метод для идентификации таблицы с ошибкой в размере строки сетки</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.IsBadFixedRowSize_OldSpec_AutoIndustry_Mirror">
            <summary>Вспомогательный метод для идентификации таблицы с ошибкой в размере строки сетки</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.IsBadFixedRowSize_OldSpec_AutoIndustry_FormB">
            <summary>Вспомогательный метод для идентификации таблицы с ошибкой в размере строки сетки</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.ReadFromXmlOldFormats_Before(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить узел из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.RestoreLinks(System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Восстановить сохраненные ссылки</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.OnDeserialization(System.Object)">
            <summary>Метод вызываемый при десериализации. 
            Реализация IDeserializationCallback</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsDataNode">
            <summary>Узел являющийся переносимыми данными в таблице.
            Только для внутреннего использования!</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsCellInDataFlowTable">
            <summary>
            Ячейка принадлежит таблице, которая разбивается по страницам.
            Если является такой таблицей, также вернёт true.
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.AssignParent(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить значение свойству Parent</summary>
            <param name="value">Новое значение Parent</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Действие в контексте загрузки документа</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.Owner">
            <summary>Владелец виртуального узла. Для реального узла смысла не имеет.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetOwner(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Установить значение свойства Owner</summary>
            <param name="owner">Новое значение свойства Owner</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsTableCell">
            <summary>Это ячейка таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsLastInParentCell">
            <summary>Ячейка является последней в строке/столбце</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsFirstInParentCell">
            <summary>Ячейка является первой в строке/столбце</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsFirstCellOnPage">
            <summary>Ячейка находится в начале таблицы на странице</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsSingleCell">
            <summary>Эта ячейка является единичной ячейкой без вложенных ячеек</summary>
            <returns>true, если ячейка является единичной</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.OwnerSubTable">
            <summary>Получить ближайшую таблицу- столбец в иерархии, владеющую элементом</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.OwnerRow">
            <summary>Получить ближайшую строку в иерархии, владеющую одиночным элементом</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.TableOwner">
            <summary>Таблица владеющая элементом</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetTableOwner(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Получить реальную таблицу владельца (таблицу столбец или верхнюю таблицу)</summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.TopLevelTable">
            <summary>Корневая таблица, т.е. таблица владеющая этим элементом 
            и не принадлежащая другим таблицам</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.ParentCell">
            <summary>Родительская ячейка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.NextNode">
            <summary>Получить следующую ячейку</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.PrevNode">
            <summary>Получить предыдущую ячейку</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.OnOnePageWith">
            <summary>Располагать элемент на одной странице с заданным в параллельной таблице. 
            Пока только для внутреннего пользования в экспортной СП</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetOnOnePageWith(Intermech.Interfaces.Document.RectangleElement,System.Boolean,System.Boolean)">
            <summary>Назначить новое значение свойству OnOnePageWith</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.HeaderShowType">
            <summary>Вариант отображения заголовка, если элемент является заголовком</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SetHeaderShowType(Intermech.Interfaces.Document.HeaderShowType,System.Boolean,System.Boolean)">
            <summary>Установить новое значение HeaderShowType</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetRowIndex(Intermech.Interfaces.Document.TableData@)">
            <summary>Получить индекс (для Nodes) строки в которой находится ячейка</summary>
            <param name="rowParent">Элемент владеющий этой строкой</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindTableForAddColumn(System.Boolean)">
            <summary>Найти таблицу владеющую сеткой, которая должна производить добавление столбца</summary>
            <param name="autoCreateGrid">Создать грид, если он не существует</param>
            <returns>Таблицу владеющую сеткой</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindParentRow(System.Boolean)">
            <summary>Найти строку владеющую этой ячейкой</summary>
            <param name="checkThisCell">Проверять саму ячейку</param>
            <returns>Строку</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FindParentColumn(System.Boolean)">
            <summary>Найти столбец владеющий этой ячейкой</summary>
            <param name="checkThisCell">Проверять саму ячейку</param>
            <returns>Столбец</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FloatsAreEqual(System.Single,System.Single)">
            <summary> Сравнивает два float значения с некоторой точностью (==) </summary>
            <param name="float1"></param>
            <param name="float2"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FloatAreMoreOrEqual(System.Single,System.Single)">
            <summary> Сравнивает два float значения с некоторой точностью (Б=) </summary>
            <param name="float1"></param>
            <param name="float2"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.FloatAreLessOrEqual(System.Single,System.Single)">
            <summary> Сравнивает два float значения с некоторой точностью (Б=) </summary>
            <param name="float1"></param>
            <param name="float2"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetLeftCells(System.Boolean)">
            <summary> Получить коллекцию ячеек таблицы, граничащих с данной слева </summary>
            <param name="includeOverSizedCells"> 
            Включить в коллекцию ячейки верхняя граница которой находиться выше верхней границы данной ячейки или 
            нижняя граница которой находиться ниже нижней границы данной 
            </param>
            <returns> Коллекция ячеек таблицы, граничащих с данной слева </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetTopCells(System.Boolean)">
            <summary> Получить коллекцию ячеек таблицы, граничащих с данной сверху </summary>
            <param name="includeOverSizedCells"> 
            Включить в коллекцию ячейки левая граница которой находиться левее левой границы данной ячейки или 
            правая граница которой находиться правее правой границы данной 
            </param>
            <returns> Коллекция ячеек таблицы, граничащих с данной сверху </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetRightCells(System.Boolean)">
            <summary> Получить коллекцию ячеек таблицы, граничащих с данной справа </summary>
            <param name="includeOverSizedCells"> 
            Включить в коллекцию ячейки верхняя граница которой находиться выше верхней границы данной ячейки или 
            нижняя граница которой находиться ниже нижней границы данной 
            </param>
            <returns> Коллекция ячеек таблицы, граничащих с данной справа </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetBottomCells(System.Boolean)">
            <summary> Получить коллекцию ячеек таблицы, граничащих с данной снизу </summary>
            <param name="includeOverSizedCells"> 
            Включить в коллекцию ячейки левая граница которой находиться левее левой границы данной ячейки или 
            правая граница которой находиться правее правой границы данной 
            </param>
            <returns> Коллекция ячеек таблицы, граничащих с данной снизу </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.OnBranchRemoved(Intermech.Interfaces.Document.Removed_EventArgs)">
            <summary>Метод вызывается при удалении ветки, в которой находится этот узел</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetGridColumnIndex">
            <summary>Получить индекс столбца в сетке для этой ячейки</summary>
            <returns>Индекс столбца</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetGridColumnIndex(System.Int32,System.Int32)">
            <summary>Получить индекс столбца сетки для данной ячейки</summary>
            <param name="prevCellNodeIndex">Индекс предыдущей известной ячейки в nodes</param>
            <param name="prevCellGridIndex">Индекс предыдущей известной ячейки в сетке</param>
            <returns>Индекс столбца в сетке</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.GetGridRowIndex">
            <summary>Получить индекс строки в сетке для этой ячейки</summary>
            <returns>Индекс строки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.GridColIndex">
            <summary>Только для отладки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.GridRowIndex">
            <summary>Только для отладки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.GridPos">
            <summary>Позиция в сетке. Если возвращает null, то нужно использовать defaultGridPos</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RectangleElement.IsDefaultGridPos">
            <summary>Положение в сетке по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CreateEmptySingleCell(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Создать пустую ячейку таблицы</summary>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Границы элемента</param>
            <param name="visible">Видимый элемент</param>
            <returns>Ячейка таблицы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CreateEmptyTable(System.Boolean,Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Создать пустую таблицу</summary>
            <param name="isColumn">Столбец</param>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Размеры элемента</param>
            <param name="visible">Видимый</param>
            <returns>Таблица</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SplitCell(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Разбить ячейку</summary>
            <param name="rows">Количество строк</param>
            <param name="cols">Количество столбцов</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.SplitCell(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Разбить ячейку</summary>
            <param name="rows">Количество строк</param>
            <param name="cols">Количество столбцов</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.CalcGridColumnWidth(System.Int32,System.Single)">
            <summary>Для внутреннего пользования. Рассчитать ширину столбца сетки для ячейки (с учётом объединения ячеек)</summary>
            <param name="firstColIndex">Первый столбец соответствующий ячейке</param>
            <param name="newCellWidth">Общая ширина ячейки под которую подгоняется ширина столбца</param>
            <returns></returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.nextCell">
            <summary>Ячейка продолжение</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.prevCell">
            <summary>Предыдущая ячейка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.onOnePageWith">
            <summary>Располагать элемент на одной странице с данным</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.defaultGridPos">
            <summary>Положение в сетке по умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.gridPos">
            <summary>Позиция в сетке</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.skipCellsBefore">
            <summary>Количество пропусков перед (может быть нецелым)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.skipCellsAfter">
            <summary>Количество пропусков после (может быть нецелым)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.properBounds">
            <summary>Собственное положение ячейки 
            (положение без учета пропусков строк и столбцов)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.setProperBounds(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Для внутреннего пользования. Только установка значения properBounds, чтобы можно было отловить через breakpoint</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.bounds">
            <summary>Границы, в миллиметрах</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RectangleElement.setBounds(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Для внутреннего пользования. Только установка значения bounds, чтобы можно было отловить через breakpoint</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.maxHeight">
            <summary>Максимальная высота ячейки. Если 0, то высота неограниченна сверху</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.cellMargins">
            <summary>Временное(?) поле. Отступы для ячеек импортированных из бланка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.borders">
            <summary>Линии границ прямоугольника</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.foreColor">
            <summary>Цвет переднего плана</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.backColor">
            <summary>Цвет фона</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.tableCellType">
            <summary>Тип ячейки таблицы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.headerShowType">
            <summary>Вариант отображения заголовка, если элемент является заголовком</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.borderWidth">
            <summary>Размер полей в миллиметрах</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.cellFlags">
            <summary>Флаги для внутреннего пользования (вместо булевских полей)</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RectangleElement.MaterialList">
            <summary>Номера строк, для которых не нужно рисовать линию сетки, потому что она пересекает текст или формулу</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ElementHorizontalAlign">
            <summary>Выравнивание элементов страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ElementHorizontalAlign.None">
            <summary>Нет</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ElementHorizontalAlign.Left">
            <summary>Влево</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ElementHorizontalAlign.Center">
            <summary>По центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ElementHorizontalAlign.Right">
            <summary>Вправо</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ElementVerticalAlign">
            <summary>Выравнивание элементов страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ElementVerticalAlign.None">
            <summary>Нет</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ElementVerticalAlign.Top">
            <summary>Вверх</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ElementVerticalAlign.Center">
            <summary>По центру</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ElementVerticalAlign.Bottom">
            <summary>Вниз</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.MarginsF">
            <summary>Поля документа или ячейки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.MarginsF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.MarginsF.Clone">
            <summary>Создать копию объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.MarginsF.System#ICloneable#Clone">
            <summary>Создать копию объекта</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.MarginsConverter">
            <summary>Конвертер для класса RectangleBorder</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>Создает экземпляр типа, с которым связан этот TypeConverter, 
            используя заданную контекстную информацию и переданный набор значений свойств 
            для этого объекта</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную 
            информацию о формате</param>
            <param name="propertyValues">IDictionary новых значений свойства</param>
            <returns>Object, представляющий данный IDictionary или пустая ссылка,
            если объект не может быть создан</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, требуется ли при изменении значения 
            этого объекта вызывать CreateInstance, чтобы создать новое значение, используя 
            заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате</param>
            <returns>true, если при изменении значения этого объекта требуется вызывать CreateInstance, 
            чтобы создать новое значение, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.MarginsConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Возвращает коллекцию свойств для типа массива, заданного параметром, используя 
            заданную контекстную информацию и атрибуты</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="value">Объект Object, задающий тип массива, для которого нужно получить свойства</param>
            <param name="attributes">Массив типа Attribute, используемый как фильтр</param>
            <returns>PropertyDescriptorCollection со свойствами, доступными для этого типа данных, или пустая ссылка, если свойства не доступны</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.DistributeContext_OLD">
            <summary>Вспомогательный класс для передачи контекста разбивки и наследуемых параметров</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeContext_OLD.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniSizeF,Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец контекста</param>
            <param name="newSize">Новый размер</param>
            <param name="maxSize">Максимальный размер</param>
            <param name="canDistributeTopTable">Может ли разбиваться таблица верхнего уровня</param>
            <param name="force">Разбивать игнорируя флаг NeedUpdateLayoutFlag</param>
            <param name="firstPass">Первый проход разбивки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeContext_OLD.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniSizeF,Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean,Intermech.Interfaces.Document.DistributeContext)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец контекста</param>
            <param name="newSize">Новый размер</param>
            <param name="maxSize">Максимальный размер</param>
            <param name="isFirstCell">Является ли текущая ячейка первой ячейкой</param>
            <param name="isFirstDataCell">Является ли текущая ячейка первой ячейкой данных</param>
            <param name="parentContext">Контекст разбивки родительского элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeContext_OLD.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец контекста</param>
            <param name="force">Разбивать игнорируя флаг NeedUpdateLayoutFlag</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeContext_OLD.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.ParentContext">
            <summary>Родительский контекст разбивки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.Force">
            <summary>Разбивать игнорируя флаг NeedUpdateLayoutFlag</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.NewSize">
            <summary>Новый размер элемента</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.MaxSize">
            <summary>Максимальный размер элемента</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.vertDistributed">
            <summary>Результат разбивки по вертикали</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.InsufficientPageSize">
            <summary>Размера страницы недостаточно для разбивки элемента</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.colParams">
            <summary>Параметры столбцов сетки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.rowParams">
            <summary>Параметры строк сетки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.cellCollParams">
            <summary>Параметры столбца</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.cellRowParams">
            <summary>Параметры строки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.TryNotBreak">
            <summary>Пытаться не разбивать элемент</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.TryNotBreak_Failed">
            <summary>Попытка не разбивать элемент в этом и внутренних элементах неудачна</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.FirstOnPage">
            <summary>Элемент должен быть первым на странице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.FirstDataOnPage">
            <summary>Элемент должен быть первым из данных на странице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.KeepWithNext_IsFirstDataOnPage">
            <summary>Перед этой таблицей идёт блок KeepWithNext и он начинается с начала страницы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.CanDistributeTopTable">
            <summary>Может ли разбиваться таблица верхнего уровня</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.SkipSizeAfter">
            <summary>Размер пропуска строк текущий момент. Нужен для слежением за изменениями пропусков при переносах</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.FirstPass">
            <summary>Первый проход разбивки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeContext_OLD.OwnerNode">
            <summary>Узел владелец контекста</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.CellBounds">
            <summary>Границы ячейки. Используется для возвращения в результате одного запроса.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellBounds.OutBounds">
            <summary>Внешние границы с пропусками</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellBounds.ProperBounds">
            <summary>Собственные границы ячейки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CellBounds.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CellBounds.#ctor(Intermech.Drawing.Common.UniRectangleF,Intermech.Drawing.Common.UniRectangleF)">
            <summary>Конструктор</summary>
            <param name="outBounds">Внешние границы с пропусками</param>
            <param name="properBounds">Собственные границы ячейки</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.TableGridPosition">
            <summary>Положение в сетке таблицы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableGridPosition.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableGridPosition.#ctor(System.Int32)">
            <summary>Конструктор</summary>
            <param name="spanCount">Количество последующих ячеек которые покрываются этой ячейкой</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableGridPosition.GetGridColumnIndex(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Получить индекс столбца сетки для заданной ячейки</summary>
            <param name="gridCell">Ячейка</param>
            <returns>Индекс столбца в сетке</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableGridPosition.GetGridColumnIndex(Intermech.Interfaces.Document.RectangleElement,System.Int32,System.Int32)">
            <summary>Получить индекс столбца сетки для заданной ячейки</summary>
            <param name="gridCell">Ячейка</param>
            <param name="prevCellNodeIndex">Индекс предыдущей известной ячейки в nodes</param>
            <param name="prevCellGridIndex">Индекс предыдущей известной ячейки в сетке</param>
            <returns>Индекс столбца в сетке</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableGridPosition.GetGridColumnIndex(Intermech.Interfaces.Document.RectangleElement,System.Int32)">
            <summary>Получить индекс столбца сетки для заданной ячейки</summary>
            <param name="gridCell">Ячейка</param>
            <param name="prevCellGridIndex">Индекс в сетке предыдущей ячейки</param>
            <returns>Индекс столбца в сетке</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableGridPosition.GetGridRowIndex(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Получить индекс строки сетки для заданной ячейки</summary>
            <param name="gridCell">Ячейка</param>
            <returns>Индекс строки в сетке</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableGridPosition.SetCellSpan(System.Int32)">
            <summary>Установить значение SpanCount</summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableGridPosition.AddCellSpan(System.Int32)">
            <summary>Установить значение SpanCount</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableGridPosition.SpanCount">
            <summary>Количество последующих ячеек которые покрываются этой ячейкой</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableGridPosition.StartMerge">
            <summary>Ячейка является объединением ячеек</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableGridPosition.MergeWithCell">
            <summary>Ячейка, с которой объединена эта ячейка</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableGridPosition.Clone">
            <summary>Создать копию объекта</summary>
            <returns>Копия объекта</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.GridIdPosition">
            <summary>Положение стандартной строки в сетке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridIdPosition.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridIdPosition.#ctor(System.Int32)">
            <summary>Конструктор</summary>
            <param name="gridID">Индекс в сетке</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridIdPosition.GetGridColumnIndex(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Получить индекс столбца сетки для заданной ячейки</summary>
            <param name="gridCell">Ячейка</param>
            <returns>Индекс столбца в сетке</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridIdPosition.GetGridRowIndex(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Получить индекс строки сетки для заданной ячейки</summary>
            <param name="gridCell">Ячейка</param>
            <returns>Индекс строки в сетке</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.GridIdPosition.GridID">
            <summary>Индекс в сетке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridIdPosition.Clone">
            <summary>Создать копию объекта</summary>
            <returns>Копия объекта</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.GridIdPosition.stdGridPosition">
            <summary>Временный флаг для совместимости</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.GridIdPosition.gridID">
            <summary>Индекс в сетке</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.BordersStatus">
            <summary>Статус границ ячейки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.Left">
            <summary>Левая</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.FirstLeft">
            <summary>Левая граница еще не проверялась</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.Right">
            <summary>Правая</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.FirstRight">
            <summary>Правая граница еще не проверялась</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.Top">
            <summary>Верхняя</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.FirstTop">
            <summary>Верхняя граница еще не проверялась</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.Bottom">
            <summary>Нижняя</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.FirstBottom">
            <summary>Нижняя граница еще не проверялась</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.InnerHorizontal">
            <summary>Внутренние горизонтальные</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.FirstHorizontal">
            <summary>Внутренние горизонтальные границы еще не проверялись</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.InnerVertical">
            <summary>Внутренние вертикальные</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersStatus.FirstVertical">
            <summary>Внутренние вертикальные границы еще не проверялись</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BordersStatus.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BordersStatus.#ctor(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>Конструктор</summary>
            <param name="left">Левая</param>
            <param name="right">Правая</param>
            <param name="top">Верхняя</param>
            <param name="bottom">Нижняя</param>
            <param name="innerHorizontal">Внутренние горизонтальные</param>
            <param name="innerVertical">Внутренние вертикальные</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.BordersPosition">
            <summary>Положение границ ячейки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersPosition.Left">
            <summary>Внешняя левая</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersPosition.Right">
            <summary>Внешняя правая</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersPosition.Top">
            <summary>Внешняя верхняя</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BordersPosition.Bottom">
            <summary>Внешняя нижняя</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BordersPosition.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BordersPosition.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="left">Внешняя левая</param>
            <param name="right">Внешняя правая</param>
            <param name="top">Внешняя верхняя</param>
            <param name="bottom">Внешняя нижняя</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceBase">
            <summary>Ссылка на абстрактный объект из узла документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ReferenceBase.ReferenceClassList">
            <summary>Список классов Ссылок, нужен для выбора пользователем типа ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.OwnerDocument">
            <summary>Документ владелец ссылающегося узла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.OwnerPage">
            <summary>Документ владелец ссылающегося узла</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.OwnerNode">
            <summary>Узел владелец ссылки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.PrintReference">
            <summary>Ссылка используется только при печати документа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.IsDependOnPrint">
            <summary>Ссылка используется только при печати документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.AssignOwnerNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Назначить узел владелец</summary>
            <param name="value">Новый узел владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.DisconnectLink">
            <summary>Разорвать связь</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.UpdateLink(System.Boolean,System.Boolean)">
            <summary>Обновить связь</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.UpdateLink(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить связь</summary>
            <param name="forceUpdate">Обновлять даже для пассивных ссылок</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.IsDependOnDocument">
            <summary>Ссылка зависит от документа. Т.е. при смене документа ее нужно обновлять.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.IsDependOnPage">
            <summary>Ссылка зависит от страницы. Т.е. при смене страницы ее нужно обновлять.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.IsDependOnParent">
            <summary>Ссылка зависит от родительского узла. Т.е. при смене родителя ее нужно обновлять.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.IsEmpty">
            <summary>Пустая ссылка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.IsConnected">
            <summary>Связь подключена. Есть ссылки на объекты</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.CanInplaceEdit">
            <summary>Можно редактировать по месту. Для ссылок на атрибуты</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.CanCallEditor">
            <summary>Возможен вызов дополнительного редактора для элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.CallEditor">
            <summary>Вызвать редактор</summary>
            <returns>Результат вызова</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.NeedSaveTextValueToFile">
            <summary>Необходимо сохранять в файл текстовое значение полученное по ссылке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.NeedSaveTextValueToCache">
            <summary>Необходимо сохранять в кэш текстовое значение полученное по ссылке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.Clone">
            <summary>Клонировать ссылку</summary>
            <returns>Копию ссылки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.CopyData(Intermech.Interfaces.Document.ReferenceBase,System.Boolean)">
            <summary>Копировать данные</summary>
            <param name="src">Источник данных</param>
            <param name="saveText">Сохранять данные</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.System#ICloneable#Clone">
            <summary>Клонировать ссылку</summary>
            <returns>Копию ссылки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.TypeNameForXml">
            <summary>Имя типа ссылки для хранения в XML</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.BaseTypeNameForXml">
            <summary>Имя базового типа ссылки для хранения в XML. 
            Этот тип используется если TypeNameForXml не найден</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить ссылку из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.LoadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Создать и загрузить ссылку из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.UnknownXmlAttributes">
            <summary>XML атрибуты, не распознанные при загрузке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceBase.UnknownXmlElements">
            <summary>XML элементы, не распознанные при загрузке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.AddUnknownXmlAttribute(System.String,System.String)">
            <summary>Добавить неизвестный атрибут</summary>
            <param name="key">Имя атрибута</param>
            <param name="value">Значение атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.AddUnknownXmlElement(System.String,System.String)">
            <summary>Добавить неизвестный атрибут</summary>
            <param name="key">Имя атрибута</param>
            <param name="value">Значение атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBase.CanShowReference">
            <summary>
            Можно ли показывать содержимое связи
            </summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.UnknownReferenceToObject">
            <summary>Вспомогательный класс для загрузки неизвестных типов ссылок на объект</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.GetReferenceSubTypes(Intermech.Interfaces.Document.DocumentTreeNode,System.Type)">
            <summary>Получить подтипы ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Массив имен подтипов ссылки. Имена должны быть уникальными в пределах одного типа ссылки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.SetReferenceSubType(Intermech.Interfaces.Document.DocumentTreeNode,System.String,System.Type)">
            <summary>Установить заданный подтип ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="subType">Имя подтипа ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.GetReferenceSubTypeIndex(System.Type)">
            <summary>Получить индекс текущего подтипа ссылки</summary>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Индекс текущего подтипа ссылки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToObject.ObjectCaption">
            <summary>Имя объекта с которым связана ссылка. Если объект не найден, то null</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToObject.CanCallSelectObjectDialog">
            <summary>Можно ли вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.CallSelectObjectDialog">
            <summary>Вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToObject.CanCallSelectLinkAttributeDialog">
            <summary>Можно вызвать диалог выбора ссылочного атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.CallSelectLinkAttributeDialog">
            <summary>Вызвать диалог выбора ссылочного атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToObject.UseLinkAttribute">
            <summary>Используется ссылочный атрибут</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToObject.LinkAttributeName">
            <summary>Имя ссылочного атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.GetLinkAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToObject.UnknownXmlAttributes">
            <summary>XML атрибуты, не распознанные при загрузке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToObject.UnknownXmlElements">
            <summary>XML элементы, не распознанные при загрузке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToObject.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.UnknownReferenceToTextSource">
            <summary>Вспомогательный класс для загрузки неизвестных типов ссылок на источник текста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToTextSource.Text">
            <summary>Текст</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.GetAcyclicText(System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить текст с защитой от циклических ссылок</summary>
            <param name="callChain">Цепочка вызовов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.SetText(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение Text</summary>
            <param name="value">Значение</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.AssignText(System.String)">
            <summary>Присвоить значение переменной Text без вызова обработчиков. Для внутреннего пользования!</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToTextSource.ReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.UnknownReferenceToTextSource.TextChanged">
            <summary>Событие Текст изменен</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.OnTextChanged(Intermech.Interfaces.Document.TextChanged_EventArgs)">
            <summary>Вызывает событие Текст изменен</summary>
            <param name="e">Данные события</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToTextSource.IsReferenceToAttribute">
            <summary>Ссылка на атрибут объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToTextSource.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToTextSource.CanCallSelectAttributeDialog">
            <summary>Можно вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.CallSelectAttributeDialog">
            <summary>Вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.GetAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.GetLinkAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.UpdateAttributeInfo">
            <summary>Обновить информацию об атрибуте. Имеет смысл для ссылок на атрибуты объектов БД.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.GetReferenceSubTypes(Intermech.Interfaces.Document.DocumentTreeNode,System.Type)">
            <summary>Получить подтипы ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Массив имен подтипов ссылки. Имена должны быть уникальными в пределах одного типа ссылки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.SetReferenceSubType(Intermech.Interfaces.Document.DocumentTreeNode,System.String,System.Type)">
            <summary>Установить заданный подтип ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="subType">Имя подтипа ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.GetReferenceSubTypeIndex(System.Type)">
            <summary>Получить индекс текущего подтипа ссылки</summary>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Индекс текущего подтипа ссылки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToTextSource.ObjectCaption">
            <summary>Имя объекта с которым связана ссылка. Если объект не найден, то null</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.UnknownReferenceToTextSource.CanCallSelectObjectDialog">
            <summary>Можно ли вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.CallSelectObjectDialog">
            <summary>Вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UnknownReferenceToTextSource.CopyData(Intermech.Interfaces.Document.ReferenceBase,System.Boolean)">
            <summary>Копировать данные</summary>
            <param name="saveText">Сохранять данные</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReadOnlyForDlgAttribute">
            <summary>Атрибут ReadOnly специально для диалогов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReadOnlyForDlgAttribute.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReadOnlyForDlgAttribute.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="readOnly">Только для чтения</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ReadOnlyForDlgAttribute.IsReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ITextSourceWithCallChain">
            <summary>Источник текстовых данных, который может ссылаться на другие ссылки с возможностью циклов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ITextSourceWithCallChain.SetText(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Назначить значение Text</summary>
            <param name="value">Значение</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="callChain">Цепочка вызовов, для защиты от зацикливания</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ITextSourceWithCallChain.GetAcyclicText(System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить текст с защитой от циклических ссылок</summary>
            <param name="callChain">Цепочка вызовов, для защиты от зацикливания</param>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ITextSource">
            <summary>Источник текстовых данных</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ITextSource.Text">
            <summary>Текст</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ITextSource.SetText(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение Text</summary>
            <param name="value">Значение</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ITextSource.AssignText(System.String)">
            <summary>Присвоить значение переменной Text без вызова обработчиков. Для внутреннего пользования!</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ITextSource.ReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ITextSource.TextChanged">
            <summary>Событие изменения текста</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.IEditableReferenceToObject">
            <summary>Ссылка на объект, которую можно редактировать специальным диалогом</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IEditableReferenceToObject.GetReferenceSubTypes(Intermech.Interfaces.Document.DocumentTreeNode,System.Type)">
            <summary>Получить подтипы ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Массив имен подтипов ссылки. Имена должны быть уникальными в пределах одного типа ссылки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IEditableReferenceToObject.SetReferenceSubType(Intermech.Interfaces.Document.DocumentTreeNode,System.String,System.Type)">
            <summary>Установить заданный подтип ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="subType">Имя подтипа ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.IEditableReferenceToObject.GetReferenceSubTypeIndex(System.Type)">
            <summary>Получить индекс текущего подтипа ссылки</summary>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Индекс текущего подтипа ссылки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.IEditableReferenceToObject.ObjectCaption">
            <summary>Заголовок объекта с которым связана ссылка. Если объект не найден, то null</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IEditableReferenceToObject.CanCallSelectObjectDialog">
            <summary>Можно вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IEditableReferenceToObject.CallSelectObjectDialog">
            <summary>Вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IEditableReferenceToObject.CanCallSelectLinkAttributeDialog">
            <summary>Можно вызвать диалог выбора ссылочного атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IEditableReferenceToObject.CallSelectLinkAttributeDialog">
            <summary>Вызвать диалог выбора ссылочного атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IEditableReferenceToObject.UseLinkAttribute">
            <summary>Используется ссылочный атрибут</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IEditableReferenceToObject.LinkAttributeName">
            <summary>Имя ссылочного атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IEditableReferenceToObject.GetLinkAttributeNameList">
            <summary>Получить список имен ссылочных атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.IEditableReferenceToTextSource">
            <summary>Ссылка на объекта источник текста, которую можно редактировать специальным диалогом</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IEditableReferenceToTextSource.IsReferenceToAttribute">
            <summary>Ссылка на атрибут объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IEditableReferenceToTextSource.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.IEditableReferenceToTextSource.CanCallSelectAttributeDialog">
            <summary>Можно вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IEditableReferenceToTextSource.CallSelectAttributeDialog">
            <summary>Вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.IEditableReferenceToTextSource.GetAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.IEditableReferenceToTextSource.UpdateAttributeInfo">
            <summary>Обновить информацию об атрибуте. Имеет смысл для ссылок на атрибуты объектов БД.</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.INodeWithReference">
            <summary>Узел содержит ссылку</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.INodeWithReference.Reference">
            <summary>Ссылка</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceBaseConverter">
            <summary>Конвертер типа ReferenceBase</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBaseConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBaseConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBaseConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать 
            объект данного типа в тип этого конвертера, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="sourceType">Type, представляющий тип, из которого требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceBaseConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Получить дескрипторы свойств</summary>
            <param name="context">Контекст</param>
            <param name="value">Объект</param>
            <param name="attributes">Атрибуты свойств</param>
            <returns>Коллекция дескрипторов свойств объекта</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase">
            <summary>Ссылка на атрибут объекта в БД</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.EmptyConstructorActiveLink">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RefToDBObjectType,Intermech.Interfaces.Document.DBObjectInfoBase,System.Guid,System.Int32,System.String)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="refType">Тип ссылки</param>
            <param name="dbObjectInfo">Идентификатор объекта</param>
            <param name="attrGuid">Глобальный идентификатор атрибута</param>
            <param name="attrID">Идентификатор атрибута</param>
            <param name="attrName">Имя атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RefToDBObjectType,Intermech.Interfaces.Document.DBObjectInfoBase,System.Guid,System.Int32,System.String,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="refType">Тип ссылки</param>
            <param name="dbObjectInfo">Идентификатор объекта</param>
            <param name="attrGuid">Глобальный идентификатор атрибута</param>
            <param name="attrID">Идентификатор атрибута</param>
            <param name="attrName">Имя атрибута</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.CreateReferenceToDBObject(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RefToDBObjectType,Intermech.Interfaces.Document.DBObjectInfoBase,System.Guid,System.Int32,System.String,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Владелец ссылки</param>
            <param name="refType">Тип ссылки на объект БД</param>
            <param name="dbObjectInfo">Идентификаторы и информация об объекте</param>
            <param name="attrGuid">Глобальный идентификатор атрибута</param>
            <param name="attrID">Идентификатор атрибута</param>
            <param name="attrName">Имя атрибута</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.AssignAttributeInfo(System.Guid,System.Int32,System.String)">
            <summary>Назначить информацию об атрибуте</summary>
            <param name="attrGuid">Глобальный идентификатор атрибута</param>
            <param name="attrID">Идентификатор атрибута</param>
            <param name="attrName">Наименование атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.CopyData(Intermech.Interfaces.Document.ReferenceBase,System.Boolean)">
            <summary>Копировать данные</summary>
            <param name="src">Источник данных</param>
            <param name="saveText">Сохранять данные</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.DisconnectLink">
            <summary>Разорвать связь</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.ReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.IsRelationAttribute">
            <summary>Атрибут связи</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.CanInplaceEdit">
            <summary>Можно редактировать по месту. Для ссылок на атрибуты</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.CanCallEditor">
            <summary>Возможен вызов дополнительного редактора для элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.AttributeID">
            <summary>Идентификатор атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.GetOrUpdateAttributeID">
            <summary>Получить идентификатор атрибута, при необходимости обновить идентификатор если есть GUID</summary>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.AttributeGuid">
            <summary>Глобальный идентификатор атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.IsConnectedAttributeRef">
            <summary>Идентификатор атрибута получен</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.IsConnected">
            <summary>Связь подключена. Есть ссылки на объекты</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.IsEmptyAttributeRef">
            <summary>Пустая ссылка на атрибут. Нет идентификаторов атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.IsEmpty">
            <summary>Пустая ссылка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.NeedSaveTextValueToFile">
            <summary>Необходимо сохранять в файл текстовое значение полученное по ссылке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.NeedSaveTextValueToCache">
            <summary>Необходимо сохранять в кэш текстовое значение полученное по ссылке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.LinkAttributeObjectID">
            <summary>
            Идентификатор объекта, на который ссылается атрибут AttributeID (в AttributeValue тексовый заголовок)
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.IsReferenceToAttribute">
            <summary>Ссылка на атрибут объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.CanCallSelectAttributeDialog">
            <summary>Можно вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.GetAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.GetLinkAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.CallSelectAttributeDialog">
            <summary>Вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.UpdateAttributeInfo">
            <summary>Обновить информацию об атрибуте. Имеет смысл для ссылок на атрибуты объектов БД.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.SetReferenceSubType(Intermech.Interfaces.Document.DocumentTreeNode,System.String,System.Type)">
            <summary>Установить заданный подтип ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="subType">Имя подтипа ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.GetReferenceSubTypeIndex(System.Type)">
            <summary>Получить индекс текущего подтипа ссылки</summary>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Индекс текущего подтипа ссылки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.GetReferenceSubTypes(Intermech.Interfaces.Document.DocumentTreeNode,System.Type)">
            <summary>Получить подтипы ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Массив имен подтипов ссылки. Имена должны быть уникальными в пределах одного типа ссылки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.Text">
            <summary>Текст</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.GetAcyclicText(System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить текст с защитой от циклических ссылок</summary>
            <param name="callChain">Цепочка вызовов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.SetText(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение Text</summary>
            <param name="value">Значение</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.SetText(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение Text</summary>
            <param name="value">Значение</param>
            <param name="saveToDB">Заносить значение атрибута в саму БД</param>
            <param name="fireTextChanged">Вызывать обработчики события TextChanged</param>
            <param name="updateOwner">Генерировать событие в элементе владельце</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.AssignText(System.String)">
            <summary>Присвоить значение переменной Text без вызова обработчиков. Для внутреннего пользования!</summary>
            <param name="value">Значение</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.TextChanged">
            <summary>Событие Текст изменен</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.OnTextChanged(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Генерирует событие TextChanged</summary>
            <param name="oldText">Старое значение</param>
            <param name="newText">Новое значение</param>
            <param name="updateOwner">Генерировать событие в элементе владельце</param>
            <param name="saveModificationDate">Изменения не влияющие на дату модификации документа</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.OnTextChanged(System.Boolean,Intermech.Interfaces.Document.TextChanged_EventArgs)">
            <summary>Вызывает событие TextChanged</summary>
            <param name="updateOwner">Генерировать событие в элементе владельце</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить ссылку из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.BaseTypeNameForXml">
            <summary>Имя базового типа ссылки для хранения в XML. 
            Этот тип используется если TypeNameForXml не найден</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.TypeNameForXml">
            <summary>Имя типа сохраняемое в XML</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ReferenceToDBObjectAttributeBase.XmlTypeName">
            <summary>Имя типа сохраняемое в XML</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceToDBObjectBase">
            <summary>Ссылка на объект базы данных из документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.EmptyConstructorActiveLink">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RefToDBObjectType,Intermech.Interfaces.Document.DBObjectInfoBase)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="refType">Тип ссылки на объект БД</param>
            <param name="dbObjectInfo">Идентификаторы и информация об объекте</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RefToDBObjectType,Intermech.Interfaces.Document.DBObjectInfoBase,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="refType">Тип ссылки на объект БД</param>
            <param name="dbObjectInfo">Идентификаторы и информация об объекте</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Guid,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="dbObjectGuid">Глобальный идентификатор объекта</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.#ctor(System.Guid,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="dbObjectGuid">Глобальный идентификатор объекта</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.CreateReferenceToDBObject(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RefToDBObjectType,Intermech.Interfaces.Document.DBObjectInfoBase,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Владелец ссылки</param>
            <param name="refType">Тип ссылки на объект БД</param>
            <param name="dbObjectInfo">Идентификаторы и информация об объекте</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.IsReferenceFromDocumentAttribute">
            <summary>
            Значение получается у объекта документа по ссылке
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.IsUpdateDBObjectInfoBatch">
            <summary>Обновлять ссылки на объекты пакетно</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.IsReferenceToRelation">
            <summary>Ссылка на связь БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.IsConnected">
            <summary>Связь подключена. Есть ссылки на объекты</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.IsConnectedObjectRef">
            <summary>Идентификатор объекта получен</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.IsEmpty">
            <summary>Пустая ссылка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.IsEmptyObjectRef">
            <summary>Пустая ссылка на объект</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.PassiveLink">
            <summary>Ссылка пассивная. Если true, то не обновляет данные по ссылке при загрузке и не передаёт в базу при изменении</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.UpdateLink(System.Object,System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.Dictionary{System.Guid,Intermech.Interfaces.Document.AttributeValueCache}},System.Collections.Generic.Dictionary{System.Guid,System.Collections.Generic.Dictionary{System.Guid,Intermech.Interfaces.Document.AttributeValueCache}},System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить связь</summary>
            <param name="userSession">Пользовательская сессия</param>
            <param name="objAttrCache">Кэш атрибутов объектов</param>
            <param name="relAttrCache">Кэш атрибутов связей</param>
            <param name="forceUpdate">Обновлять даже для пассивных ссылок</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.UpdateLink(System.Object,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить связь</summary>
            <param name="userSession">Пользовательская сессия</param>
            <param name="forceUpdate">Обновлять даже для пассивных ссылок</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DisconnectLink">
            <summary>Разорвать связь</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.CopyData(Intermech.Interfaces.Document.ReferenceBase,System.Boolean)">
            <summary>Копировать данные</summary>
            <param name="src">Источник данных</param>
            <param name="saveText">Сохранять данные</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.ReferenceType">
            <summary>Тип ссылки на объект БД</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.AssignReferenceType(Intermech.Interfaces.Document.RefToDBObjectType)">
            <summary>Назначить тип ссылки</summary>
            <param name="value">Новый тип ссылки</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.IsDependOnDocument">
            <summary>Ссылка зависит от документа. Т.е. при смене документа ее нужно обновлять.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.IsDependOnParent">
            <summary>Ссылка зависит от родительского узла. Т.е. при смене родителя ее нужно обновлять.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить ссылку из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.BaseTypeNameForXml">
            <summary>Имя базового типа ссылки для хранения в XML. 
            Этот тип используется если TypeNameForXml не найден</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.TypeNameForXml">
            <summary>Имя типа сохраняемое в XML</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ReferenceToDBObjectBase.XmlTypeName">
            <summary>Имя типа сохраняемое в XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.SetReferenceSubType(Intermech.Interfaces.Document.DocumentTreeNode,System.String,System.Type)">
            <summary>Установить заданный подтип ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="subType">Имя подтипа ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.GetReferenceSubTypeIndex(System.Type)">
            <summary>Получить индекс текущего подтипа ссылки</summary>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Индекс текущего подтипа ссылки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.GetReferenceSubTypes(Intermech.Interfaces.Document.DocumentTreeNode,System.Type)">
            <summary>Получить подтипы ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Массив имен подтипов ссылки. Имена должны быть уникальными в пределах одного типа ссылки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.ObjectCaption">
            <summary>Имя объекта с которым связана ссылка. Если объект не найден, то null</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.CallSelectObjectDialog">
            <summary>Вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.CanCallSelectObjectDialog">
            <summary>Можно ли вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.CanCallSelectLinkAttributeDialog">
            <summary>Можно вызвать диалог выбора ссылочного атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.CallSelectLinkAttributeDialog">
            <summary>Вызвать диалог выбора ссылочного атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.UseLinkAttribute">
            <summary>Используется ссылочный атрибут</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.LinkAttributeName">
            <summary>Имя ссылочного атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.LinkAttributeGuid">
            <summary>Guid ссылочного атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.LinkAttributeID">
            <summary>ID ссылочного атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.GetLinkAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.AssignDBObjectInfo(Intermech.Interfaces.Document.DBObjectInfoBase,System.Boolean)">
            <summary>Назначить новое значение DBObjectInfo</summary>
            <param name="value">Значение</param>
            <param name="setOverrideFlag">Устанавливать флаг перекрытия шаблона</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.GetParentDBObjectInfo(Intermech.Interfaces.IUserSession)">
            <summary>Получить данные об объектах родителя</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToDBObjectBase.GetParentDBObjectInfo(Intermech.Interfaces.IUserSession,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Получить данные об объектах родителя</summary>
            <param name="owner">Узел владелец</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBObjectInfo">
            <summary>Данные объекта БД. Идентификаторы, гуиды, типы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBObjectGuid">
            <summary>Глобальный идентификатор версии объекта БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBObjectID">
            <summary>Идентификатор версии объекта БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBObjectType">
            <summary>Тип объекта БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBObjectCaption">
            <summary>Заголовок объекта БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBRelationGuid">
            <summary>Глобальный идентификатор связи БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBRelationID">
            <summary>Идентификатор связи БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBRelationType">
            <summary>Тип связи БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBProjectGuid">
            <summary>Глобальный идентификатор версии объекта проекта БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToDBObjectBase.DBProjectID">
            <summary>Идентификатор версии объекта проекта БД</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DBObjectInfoBase">
            <summary>Базовый класс. Информация об идентификаторе объекта и/или связи БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfoBase.ObjectGuid">
            <summary>Глобальный идентификатор версии объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.AssignObjectGuid(System.Guid)">
            <summary>Только для внутреннего использования. Назначить свойство ObjectGuid</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfoBase.ObjectID">
            <summary>Идентификатор версии объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.AssignObjectID(System.Int64)">
            <summary>Только для внутреннего использования. Назначить свойство ObjectID</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfoBase.ObjectType">
            <summary>Тип объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.AssignObjectType(System.Int32)">
            <summary>Только для внутреннего использования. Назначить свойство ObjectType</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfoBase.ObjectCaption">
            <summary>Заголовок объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.AssignObjectCaption(System.String)">
            <summary>Только для внутреннего использования. Назначить свойство ObjectCaption</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfoBase.RelationGuid">
            <summary>Глобальный идентификатор связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.AssignRelationGuid(System.Guid)">
            <summary>Только для внутреннего использования. Назначить свойство RelationGuid</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfoBase.RelationID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.AssignRelationID(System.Int64)">
            <summary>Только для внутреннего использования. Назначить свойство RelationID</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfoBase.RelationType">
            <summary>Тип связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.AssignRelationType(System.Int32)">
            <summary>Только для внутреннего использования. Назначить свойство RelationType</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfoBase.ProjID">
            <summary>Идентификатор родительского объекта для связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.AssignProjID(System.Int64)">
            <summary>Только для внутреннего использования. Назначить свойство ProjID</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfoBase.ProjGuid">
            <summary>Guid родительского объекта для связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.AssignProjGuid(System.Guid)">
            <summary>Только для внутреннего использования. Назначить свойство ProjGuid</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.SetDBObjectInfo(System.Guid,System.Int64,System.Int32,System.String)">
            <summary>Назначить информацию об объекте БД</summary>
            <param name="objectGuid">Глобальный идентификатор версии объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="objectCaption">Заголовок объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.SetDBRelationInfo(System.Guid,System.Int64,System.Int32,System.Guid,System.Int64,System.Guid,System.Int64,System.Int32,System.String)">
            <summary>Назначить информацию об объекте БД</summary>
            <param name="relationGuid">Глобальный идентификатор связи</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="relationType">Тип связи</param>
            <param name="projGuid">Глобальный идентификатор версии объекта проекта</param>
            <param name="projID">Идентификатор версии объекта проекта</param>
            <param name="objectGuid">Глобальный идентификатор версии объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="objectCaption">Заголовок объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить ссылку из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.Clone">
            <summary>Клонировать экземпляр объекта</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfoBase.System#ICloneable#Clone">
            <summary>Клонировать экземпляр объекта</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DBObjectInfo">
            <summary>Информация об идентификаторе объекта БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfo.ObjectGuid">
            <summary>Глобальный идентификатор объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.AssignObjectGuid(System.Guid)">
            <summary>Только для внутреннего использования. Назначить свойство ObjectGuid</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfo.ObjectID">
            <summary>Идентификатор объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.AssignObjectID(System.Int64)">
            <summary>Только для внутреннего использования. Назначить свойство ObjectID</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfo.ObjectType">
            <summary>Тип объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.AssignObjectType(System.Int32)">
            <summary>Только для внутреннего использования. Назначить свойство ObjectType</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBObjectInfo.ObjectCaption">
            <summary>Заголовок объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.AssignObjectCaption(System.String)">
            <summary>Только для внутреннего использования. Назначить свойство ObjectCaption</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.#ctor(System.Guid,System.Int64,System.Int32,System.String)">
            <summary>Конструктор</summary>
            <param name="objectGuid">Глобальный идентификатор версии объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="objectCaption">Заголовок объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.SetDBRelationInfo(System.Guid,System.Int64,System.Int32,System.Guid,System.Int64,System.Guid,System.Int64,System.Int32,System.String)">
            <summary>Назначить информацию о связи и объекте БД</summary>
            <param name="relationGuid">Глобальный идентификатор связи</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="relationType">Тип связи</param>
            <param name="projGuid">Глобальный идентификатор версии объекта проекта</param>
            <param name="projID">Идентификатор версии объекта проекта</param>
            <param name="objectGuid">Глобальный идентификатор версии объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="objectCaption">Заголовок объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.SetDBObjectInfo(System.Guid,System.Int64,System.Int32,System.String)">
            <summary>Назначить информацию об объекте БД</summary>
            <param name="objectGuid">Глобальный идентификатор версии объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="objectCaption">Заголовок объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBObjectInfo.Clone">
            <summary>Клонировать экземпляр объекта</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DBRelationInfo">
            <summary>Информация о связи и объекте БД</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBRelationInfo.RelationGuid">
            <summary>Глобальный идентификатор связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.AssignRelationGuid(System.Guid)">
            <summary>Только для внутреннего использования. Назначить свойство RelationGuid</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBRelationInfo.RelationID">
            <summary>Идентификатор связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.AssignRelationID(System.Int64)">
            <summary>Только для внутреннего использования. Назначить свойство RelationID</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBRelationInfo.RelationType">
            <summary>Тип связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.SetRelationType(System.Int32)">
            <summary>Только для внутреннего пользования. Установить новое значение типа. Обязательно проследить за остальными полями!</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.AssignRelationType(System.Int32)">
            <summary>Только для внутреннего использования. Назначить свойство RelationType</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBRelationInfo.ProjID">
            <summary>Идентификатор родительского объекта для связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.AssignProjID(System.Int64)">
            <summary>Только для внутреннего использования. Назначить свойство ProjID</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DBRelationInfo.ProjGuid">
            <summary>Guid родительского объекта для связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.AssignProjGuid(System.Guid)">
            <summary>Только для внутреннего использования. Назначить свойство ProjGuid</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.#ctor(System.Guid,System.Guid)">
            <summary>Конструктор</summary>
            <param name="relationGuid">Guid связи</param>
            <param name="objectVersionGuid">Guid версии объекта.
            Заполняется, когда нужно хранить для какой версии объекта по связи были сохранены данные в документе</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.#ctor(System.Guid,System.Int64,System.Guid,System.Int64)">
            <summary>Конструктор</summary>
            <param name="relationGuid">Глобальный идентификатор связи</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="projGuid">Глобальный идентификатор версии объекта проекта</param>
            <param name="projID">Идентификатор версии объекта проекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.#ctor(System.Guid,System.Int64,System.Int32,System.Guid,System.Int64,System.Guid,System.Int64,System.Int32,System.String)">
            <summary>Конструктор</summary>
            <param name="relationGuid">Глобальный идентификатор связи</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="relationType">Тип связи</param>
            <param name="projGuid">Глобальный идентификатор версии объекта проекта</param>
            <param name="projID">Идентификатор версии объекта проекта</param>
            <param name="objectGuid">Глобальный идентификатор версии объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="objectCaption">Заголовок объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.SetDBRelationInfo(System.Guid,System.Int64,System.Int32,System.Guid,System.Int64,System.Guid,System.Int64,System.Int32,System.String)">
            <summary>Назначить информацию о связи и объекте БД</summary>
            <param name="relationGuid">Глобальный идентификатор связи</param>
            <param name="relationID">Идентификатор связи</param>
            <param name="relationType">Тип связи</param>
            <param name="projGuid">Глобальный идентификатор версии объекта проекта</param>
            <param name="projID">Идентификатор версии объекта проекта</param>
            <param name="objectGuid">Глобальный идентификатор версии объекта</param>
            <param name="objectID">Идентификатор версии объекта</param>
            <param name="objectType">Тип объекта</param>
            <param name="objectCaption">Заголовок объекта</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DBRelationInfo.Clone">
            <summary>Клонировать экземпляр объекта</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.RefToDBObjectType">
            <summary>Тип ссылки на объект БД</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtSelectedObject">
            <summary>Выбранный объект. Объект БД, заданный явно</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtUseParentObjectLink">
            <summary>Получать ссылку на объект у родителя. Ид объекта БД извлекается из ссылки у родительского узла.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtUseParentDocumentObjectLink">
            <summary>Получать ссылку на объект у документа. Ид объекта БД извлекается из ссылки у документа.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtSelectedRelation">
            <summary>Выбранная связь. Связь БД, заданная явно.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtUseParentRelationLink">
            <summary>Получать ссылку на связь у родителя. Ид связи БД извлекается из ссылки у родительского узла.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtUseParentDocumentRelationLink">
            <summary>Получать ссылку на связь у документа. Ид связи БД извлекается из ссылки у документа.</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtUseLinkFromDocumentObjectAttribute">
            <summary>Получать ссылку на объект через атрибут объекта документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtUseSignFromDocument">
            <summary>Получать ссылку на ЭЦП объекта документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtUseSignFromObject">
            <summary>Получать ссылку на ЭЦП объекта системы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RefToDBObjectType.rtUseLinkFromDocumentObjectSign">
            <summary>Получать ссылку на подпись через атрибут объекта документа</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AttributeValueCache">
            <summary>Вспомогательный класс для хранения кэша значений атрибутов и ссылок на них</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeValueCache.value">
            <summary>Значение атрибута</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.AttributeValueCache.ReferenceOwnerList">
            <summary>Список узлов документа ссылающихся на этот атрибут</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeValueCache.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeValueCache.#ctor(System.Object,Intermech.Interfaces.Document.INodeWithReference)">
            <summary>Конструктор</summary>
            <param name="value">Значение атрибута</param>
            <param name="refOwner">Владелец ссылки на атрибут</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.AttributeValueCache.#ctor(Intermech.Interfaces.Document.INodeWithReference,System.Nullable{System.Int64})">
            <summary>Конструктор</summary>
            <param name="value">Значение атрибута</param>
            <param name="refOwner">Владелец ссылки на атрибут</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.Layers">
            <summary>Слои, которые нужно отображать, если null, то отображаются все слои.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.ImageCache">
            <summary>Кэш изображения полученного по ссылке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.FileName">
            <summary>Имя файлового атрибута, если null, то используется первый файл</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.FileAttrID">
            <summary>Идентификатор атрибута хранящего файл</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.FileAttrGuid">
            <summary>Guid атрибута хранящего файл, если Guid.Empty, то используется атрибут "Файл"</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.AssignAttributeInfo(System.Guid,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>Назначить данные атрибута</summary>
            <param name="attrGuid">Guid атрибута хранящего файл, если Guid.Empty, то используется атрибут "Файл"</param>
            <param name="attributeName">Имя файла в атрибуте, если null, то используется первый файл</param>
            <param name="fileName">Имя файла в атрибуте, если null, то используется первый файл</param>
            <param name="layers">Слои, которые нужно отображать, если null, то отображаются все слои</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.UpdateAttributeInfo">
            <summary>Обновить информацию об атрибуте.
            Получить FileAttrID по заданному FileAttrGuid, или наоборот.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.GetAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.IsConnectedAttributeRef">
            <summary>Идентификатор атрибута получен</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.IsConnected">
            <summary>Связь подключена. Есть ссылки на объекты</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.EmptyConstructorActiveLink">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RefToDBObjectType,Intermech.Interfaces.Document.DBObjectInfoBase,System.Guid,System.String,System.String,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="refType">Тип ссылки на объект БД</param>
            <param name="dbObjectInfo">Идентификаторы и информация об объекте</param>
            <param name="fileAttrGuid">Guid атрибута хранящего файл, если Guid.Empty, то используется имя атрибута</param>
            <param name="attributeName">Имя атрибута, если null</param>
            <param name="fileName">Имя файла в атрибуте, если null, то используется первый файл</param>
            <param name="layers">Слои, которые нужно отображать, если null, то отображаются все слои</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Guid,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="dbObjectGuid">Guid версии объекта БД</param>
            <param name="layers">Слои, которые нужно отображать, если null, то отображаются все слои</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.#ctor(System.Guid,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>Конструктор</summary>
            <param name="dbObjectGuid">Guid версии объекта БД</param>
            <param name="layers">Слои, которые нужно отображать, если null, то отображаются все слои</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.#ctor(System.Guid,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="dbObjectGuid">Guid версии объекта БД</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.CallSelectAttributeDialog">
            <summary>Вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.CopyData(Intermech.Interfaces.Document.ReferenceBase,System.Boolean)">
            <summary>Копировать данные</summary>
            <param name="src">Источник данных</param>
            <param name="saveText">Сохранять данные</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.SaveImageToStream(Intermech.Drawing.Common.IUniImage,System.IO.Stream)">
            <summary>Сохранить Image в Stream</summary>
            <param name="image">Изображение</param>
            <param name="stream">Поток</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.BaseTypeNameForXml">
            <summary>Имя базового типа ссылки для хранения в XML. 
            Этот тип используется если TypeNameForXml не найден</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToGraphicsBase.TypeNameForXml">
            <summary>Имя типа сохраняемое в XML</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ReferenceToGraphicsBase.XmlTypeName">
            <summary>Имя типа сохраняемое в XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToGraphicsBase.GetGraphicsStream">
            <summary>Получить бинарный поток изображения</summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceToNode">
            <summary>Ссылка на узел документа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNode.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNode.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNode.IsConnected">
            <summary>Связь подключена. Есть ссылки на объекты</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNode.NodeLink">
            <summary>Узел с которым связана ссылка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNode.NodeLinkBase">
            <summary>База для ссылки на узел (для внутреннего использования)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNode.DisconnectLink">
            <summary>Разорвать связь</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNode.AssignNodeLink(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Назначить значение свойству NodeLink</summary>
            <param name="value">Значение</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase">
            <summary>Базовый класс ссылка на узел и его атрибут</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.TypeNameForConstructorDictionary">
            <summary>Имя типа для словаря конструкторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.String,System.String)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="nodeId">Идентификатор узла на который ссылается</param>
            <param name="attributeName">Имя атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.BaseReferenceNodeType,System.String,System.String)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Владелец ссылки</param>
            <param name="referenceBaseType">Тип базового узла ссылки</param>
            <param name="nodeId">Идентификатор узла на который ссылается</param>
            <param name="attributeName">Имя атрибута на который ссылается</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.CreateReferenceToNodeAttribute(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.BaseReferenceNodeType,System.String,System.String)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Владелец ссылки</param>
            <param name="referenceBaseType">Тип базового узла ссылки</param>
            <param name="nodeId">Идентификатор узла на который ссылается</param>
            <param name="attributeName">Имя атрибута на который ссылается</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.AssignAttributeName(System.String)">
            <summary>Назначить значение свойству AttributeName</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.IsEmpty">
            <summary>Пустая ссылка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.ReferenceBaseType">
            <summary>Тип элемент, атрибут которого отображает элемент</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.IsDependOnDocument">
            <summary>Ссылка зависит от документа. Т.е. при смене документа ее нужно обновлять.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.IsDependOnPage">
            <summary>Ссылка зависит от страницы. Т.е. при смене страницы ее нужно обновлять.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.IsDependOnParent">
            <summary>Ссылка зависит от родительского узла. Т.е. при смене родителя ее нужно обновлять.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.NodeLinkBase">
            <summary>База для ссылки на узел (для внутреннего использования)</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.CanInplaceEdit">
            <summary>Можно редактировать по месту. Для ссылок на атрибуты</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.GetAttributeValue">
            <summary>Получить значение атрибута</summary>
            <returns>Значение атрибута</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.GetAttributeStringValue(System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить строковое значение атрибута</summary>
            <param name="callChain">Цепочка вызовов для защиты от циклических связей. Если null, то работает без проверок</param>
            <returns>Строковое значение атрибута</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.OnAttributeValueChanged">
            <summary>Обработка события изменения значения атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.SetAttributeValue(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить значение атрибута</summary>
            <param name="value">Значение атрибута</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.SetAttributeValue(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Установить значение атрибута</summary>
            <param name="value">Значение атрибута</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="callChain">Цепочка вызовов, для защиты от зацикливания</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.FindLinkedNode">
            <summary>Найти узел по ссылке</summary>
            <returns>Узел, на который ссылается</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.UpdateLink(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить связь</summary>
            <param name="forceUpdate">Обновлять даже для пассивных ссылок</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.CopyData(Intermech.Interfaces.Document.ReferenceBase,System.Boolean)">
            <summary>Копировать данные</summary>
            <param name="src">Источник данных</param>
            <param name="saveText">Сохранять данные</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.AssignOwnerNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Назначить узел владелец</summary>
            <param name="value">Новый узел владелец</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.BaseTypeNameForXml">
            <summary>Имя базового типа ссылки для хранения в XML. 
            Этот тип используется если TypeNameForXml не найден</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.TypeNameForXml">
            <summary>Имя типа ссылки для хранения в XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.GetReferenceSubTypes(Intermech.Interfaces.Document.DocumentTreeNode,System.Type)">
            <summary>Получить подтипы ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Массив имен подтипов ссылки. Имена должны быть уникальными в пределах одного типа ссылки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.SetReferenceSubType(Intermech.Interfaces.Document.DocumentTreeNode,System.String,System.Type)">
            <summary>Установить заданный подтип ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="subType">Имя подтипа ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.GetReferenceSubTypeIndex(System.Type)">
            <summary>Получить индекс текущего подтипа ссылки</summary>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Индекс текущего подтипа ссылки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.ObjectCaption">
            <summary>Имя объекта с которым связана ссылка. Если объект не найден, то null</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.CanCallSelectObjectDialog">
            <summary>Можно ли вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.CallSelectObjectDialog">
            <summary>Вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.IsReferenceToAttribute">
            <summary>Ссылка на атрибут объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.CanCallSelectAttributeDialog">
            <summary>Можно вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.CallSelectAttributeDialog">
            <summary>Вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.GetAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.GetLinkAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.UpdateAttributeInfo">
            <summary>Обновить информацию об атрибуте. Имеет смысл для ссылок на атрибуты объектов БД.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.CanCallSelectLinkAttributeDialog">
            <summary>Можно вызвать диалог выбора ссылочного атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.CallSelectLinkAttributeDialog">
            <summary>Вызвать диалог выбора ссылочного атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.UseLinkAttribute">
            <summary>Используется ссылочный атрибут</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.LinkAttributeName">
            <summary>Имя ссылочного атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.Text">
            <summary>Текст</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.GetAcyclicText(System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить текст с защитой от циклических ссылок</summary>
            <param name="callChain">Цепочка вызова</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.SetText(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение Text</summary>
            <param name="value">Значение</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.SetText(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Назначить значение Text</summary>
            <param name="value">Значение</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="callChain">Цепочка вызовов, для защиты от зацикливания</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.AssignText(System.String)">
            <summary>Присвоить значение переменной Text без вызова обработчиков. Для внутреннего пользования!</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.ReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.TextChanged">
            <summary>Событие Текст изменен</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.OnTextChanged(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Вызывает событие Текст изменен</summary>
            <param name="oldText">Старое значение</param>
            <param name="newText">Новое значение</param>
            <param name="saveModificationDate">Изменения не влияющие на дату модификации документа</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.OnTextChanged(Intermech.Interfaces.Document.TextChanged_EventArgs)">
            <summary>Вызывает событие Текст изменен</summary>
            <param name="e">Данные события</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.ReferenceToNodeAttributeBase.referenceBaseType">
            <summary>Тип базы ссылки</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.BaseReferenceNodeType">
            <summary>Тип ссылки на элемент</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BaseReferenceNodeType.ntThisNode">
            <summary>этот элемент</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BaseReferenceNodeType.ntParentNode">
            <summary>Родитель элемента</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BaseReferenceNodeType.ntParentPage">
            <summary>страница</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BaseReferenceNodeType.ntParentDocument">
            <summary>Документ</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BaseReferenceNodeType.ntSelectedNode">
            <summary>Выбранный элемент</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BaseReferenceNodeType.ntUseParentLink">
            <summary>Получать ссылку у родителя</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.BaseReferenceNodeType.ntUseParentDocumentLink">
            <summary>Получать ссылку у документа</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceToNodeId">
            <summary>Ссылка на узел через идентификатор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeId.IsEmpty">
            <summary>Пустая ссылка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeId.NodeId">
            <summary>Идентификатор узла на который ссылается ссылка</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.AssignNodeId(System.String)">
            <summary>Назначить значение свойству NodeId</summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.SetReference(System.String,System.Boolean)">
            <summary>Установить связь с узлом</summary>
            <param name="nodeId">Идентификатор узла</param>
            <param name="updateLink">Обновить ссылку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.SetReference(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Установить связь с узлом</summary>
            <param name="nodeLink">Узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.SetNodeIdFromLink">
            <summary>Установить значение NodeId согласно текущей связи</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.UpdateLink(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить связь</summary>
            <param name="forceUpdate">Обновлять даже для пассивных ссылок</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeId.CopyData(Intermech.Interfaces.Document.ReferenceBase,System.Boolean)">
            <summary>Копировать данные</summary>
            <param name="src">Источник данных</param>
            <param name="saveText">Сохранять данные</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceToSignBase">
            <summary>Ссылка на атрибут объекта БД системы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.EmptyConstructorActiveLink">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RefToDBObjectType,Intermech.Interfaces.Document.DBObjectInfoBase,System.String)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="refType">Тип ссылки</param>
            <param name="dbObjectInfo">Идентификатор объекта</param>
            <param name="attrGuid">Глобальный идентификатор атрибута</param>
            <param name="attrID">Идентификатор атрибута</param>
            <param name="attrName">Имя атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.RefToDBObjectType,Intermech.Interfaces.Document.DBObjectInfoBase,System.String,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
            <param name="refType">Тип ссылки</param>
            <param name="dbObjectInfo">Идентификатор объекта</param>
            <param name="attrGuid">Глобальный идентификатор атрибута</param>
            <param name="attrID">Идентификатор атрибута</param>
            <param name="attrName">Имя атрибута</param>
            <param name="passiveLink">Пассивная ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.AssignAttributeInfo(System.String)">
            <summary>Назначить информацию об атрибуте</summary>
            <param name="attrGuid">Глобальный идентификатор атрибута</param>
            <param name="attrID">Идентификатор атрибута</param>
            <param name="attrName">Наименование атрибута</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.CopyData(Intermech.Interfaces.Document.ReferenceBase,System.Boolean)">
            <summary>Копировать данные</summary>
            <param name="src">Источник данных</param>
            <param name="saveText">Сохранять данные</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.DisconnectLink">
            <summary>Разорвать связь</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.ReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.IsRelationAttribute">
            <summary>Атрибут связи</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.CanInplaceEdit">
            <summary>Можно редактировать по месту. Для ссылок на атрибуты</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.CanCallEditor">
            <summary>Возможен вызов дополнительного редактора для элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.IsConnected">
            <summary>Связь подключена. Есть ссылки на объекты</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.IsEmpty">
            <summary>Пустая ссылка</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.NeedSaveTextValueToFile">
            <summary>Необходимо сохранять в файл текстовое значение полученное по ссылке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.NeedSaveTextValueToCache">
            <summary>Необходимо сохранять в кэш текстовое значение полученное по ссылке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.IsReferenceToAttribute">
            <summary>Ссылка на атрибут объекта</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.IsReferenceToSign">
            <summary>Ссылка на ЭЦП</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.CanCallSelectAttributeDialog">
            <summary>Можно вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.GetAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.GetLinkAttributeNameList">
            <summary>Получить список имен атрибутов, которые можно выбрать в ComboBox</summary>
            <returns>Список имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.CallSelectAttributeDialog">
            <summary>Вызвать диалог выбора атрибута для ссылки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.AttributeName">
            <summary>Имя атрибута</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.SignField">
            <summary>Имя атрибута</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.UpdateAttributeInfo">
            <summary>Обновить информацию об атрибуте. Имеет смысл для ссылок на атрибуты объектов БД.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.SetReferenceSubType(Intermech.Interfaces.Document.DocumentTreeNode,System.String,System.Type)">
            <summary>Установить заданный подтип ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="subType">Имя подтипа ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.GetReferenceSubTypeIndex(System.Type)">
            <summary>Получить индекс текущего подтипа ссылки</summary>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Индекс текущего подтипа ссылки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.GetReferenceSubTypes(Intermech.Interfaces.Document.DocumentTreeNode,System.Type)">
            <summary>Получить подтипы ссылки</summary>
            <param name="owner">Владелец ссылки</param>
            <param name="refInterface">Интерфейс, которому должна удовлетворять ссылка</param>
            <returns>Массив имен подтипов ссылки. Имена должны быть уникальными в пределах одного типа ссылки</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.ObjectCaption">
            <summary>Имя объекта с которым связана ссылка. Если объект не найден, то null</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.CallSelectObjectDialog">
            <summary>Вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.CanCallSelectObjectDialog">
            <summary>Можно ли вызвать диалог выбора объекта для ссылки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.Text">
            <summary>Текст</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.GetAcyclicText(System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить текст с защитой от циклических ссылок</summary>
            <param name="callChain">Цепочка вызовов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.SetText(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение Text</summary>
            <param name="value">Значение</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.SetText(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение Text</summary>
            <param name="value">Значение</param>
            <param name="saveToDB">Заносить значение атрибута в саму БД</param>
            <param name="fireTextChanged">Вызывать обработчики события TextChanged</param>
            <param name="updateOwner">Генерировать событие в элементе владельце</param>
            <param name="updateUI">Обновить изображение</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.AssignText(System.String)">
            <summary>Присвоить значение переменной Text без вызова обработчиков. Для внутреннего пользования!</summary>
            <param name="value">Значение</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.ReferenceToSignBase.TextChanged">
            <summary>Событие Текст изменен</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.OnTextChanged(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Генерирует событие TextChanged</summary>
            <param name="oldText">Старое значение</param>
            <param name="newText">Новое значение</param>
            <param name="updateOwner">Генерировать событие в элементе владельце</param>
            <param name="saveModificationDate">Изменения не влияющие на дату модификации документа</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.OnTextChanged(System.Boolean,Intermech.Interfaces.Document.TextChanged_EventArgs)">
            <summary>Вызывает событие TextChanged</summary>
            <param name="updateOwner">Генерировать событие в элементе владельце</param>
            <param name="e">Аргументы события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить ссылку из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToSignBase.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.BaseTypeNameForXml">
            <summary>Имя базового типа ссылки для хранения в XML. 
            Этот тип используется если TypeNameForXml не найден</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToSignBase.TypeNameForXml">
            <summary>Имя типа сохраняемое в XML</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.ReferenceToSignBase.XmlTypeName">
            <summary>Имя типа сохраняемое в XML</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.SignTypeEnum">
            <summary>
            Поле вывода подписи
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SignTypeEnum.Surname">
            <summary>
             Фамилия подписавшего
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SignTypeEnum.SignValue">
            <summary>
            Значение подписи 
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SignTypeEnum.SignDate">
            <summary>
            Дата подписи
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceToNodeInTemplate">
            <summary>Ссылка на шаблон узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeInTemplate.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeInTemplate.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeInTemplate.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.String)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToNodeInTemplate.NodeLinkBase">
            <summary>База для ссылки на узел (для внутреннего использования)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeInTemplate.FindNodeByRef">
            <summary>Найти элемент по ссылке</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToNodeInTemplate.UpdateLink(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить связь</summary>
            <param name="forceUpdate">Обновлять даже для пассивных ссылок</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ReferenceToTemplate">
            <summary>Ссылка на шаблон узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToTemplate.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToTemplate.#ctor(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToTemplate.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,System.String)">
            <summary>Конструктор</summary>
            <param name="ownerNode">Узел владелец</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.ReferenceToTemplate.NodeLinkBase">
            <summary>База для ссылки на узел (для внутреннего использования)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.ReferenceToTemplate.UpdateLink(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить связь</summary>
            <param name="forceUpdate">Обновлять даже для пассивных ссылок</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.RestoredDocumentsComplectData">
            <summary>
            Восстановленный/сгенерированный комплект документов с признаком того, прошел ли процесс успешно
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RestoredDocumentsComplectData.DocumentsComplect">
            <summary>
            Комплект документов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RestoredDocumentsComplectData.IsRestoringSuccessful">
            <summary>
            Прошел ли успешно процесс генерации/восстановления
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.RowColParams">
            <summary>Параметры строки или столбца</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.#ctor">
            <summary>Пустой конструктор для создания через CreateInstance</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.#ctor(Intermech.Interfaces.Document.TableData,System.Boolean,System.Int32,System.String,System.Single)">
            <summary>Конструктор</summary>
            <param name="ownerTable">Таблица владелец столбца/строки</param>
            <param name="isColumn">Признак столбца/строки</param>
            <param name="id">Идентификатор строки/столбца</param>
            <param name="name">Имя строки/столбца</param>
            <param name="size">Размер (высота/ширина) строки/столбца</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.#ctor(Intermech.Interfaces.Document.TableData,System.Int32,System.String,System.Single)">
            <summary>Конструктор столбца</summary>
            <param name="ownerTable">Таблица владелец столбца</param>
            <param name="id">Идентификатор столбца</param>
            <param name="name">Имя столбца</param>
            <param name="size">Размер ширина столбца</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.IsColumn">
            <summary>Это параметры столбца</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.SetIsColumn(System.Boolean)">
            <summary>Назначить значение свойству IsColumn. Только для внутреннего использования.</summary>
            <param name="value">Значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.OwnerTable">
            <summary>Таблица владеющая столбцом</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.SetOwnerTable(Intermech.Interfaces.Document.TableData)">
            <summary>Установить новое значение OwnerTable</summary>
            <param name="value">Новое значение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.ColRowName">
            <summary>Имя строки/столбца</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.Size">
            <summary>Размер (высота/ширина) строки/столбца</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.AssignSize(System.Single,System.Boolean,System.Boolean)">
            <summary>Назначить значение Size</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить пользовательский интерфейс во владельце</param>
            <param name="updateLayout">Обновить разбивку во владельце</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.BorderLine1">
            <summary>Тип верхней/левой линии строки/столбца</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.AssignBorderLine1(Intermech.Interfaces.Document.BorderLine)">
            <summary>Только для внутреннего использования. 
            Назначить новое значение свойству, без автоматического назначения в ячейках</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.BorderLine2">
            <summary>Тип нижней/правой линии строки/столбца</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.AssignBorderLine2(Intermech.Interfaces.Document.BorderLine)">
            <summary>Только для внутреннего использования. 
            Назначить новое значение свойству, без автоматического назначения в ячейках</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.CorrectColumnBorderLine1">
            <summary>Только для столбцов. Исправить левую линию, 
            если она не соответствует правой линии предыдущего столбца</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.Index">
            <summary>Индекс в сетке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.CellType">
            <summary>Тип строки/столбца</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.ID">
            <summary>Идентификатор строки/столбца</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.TemplateID">
            <summary>Ссылка на шаблон</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.RowColParams.HasTemplate">
            <summary>Элемент имеет шаблон</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.GetTemplate(Intermech.Interfaces.Document.TableData,System.Boolean)">
            <summary>Получить шаблон элемента сетки</summary>
            <param name="owner">Владелец сетки</param>
            <param name="isColumn">Элемент - столбец</param>
            <returns>Шаблон элемента сетки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.IsEqual(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams})">
            <summary>
            Наборы столбцов имеют одинаковые элементы
            </summary>
            <param name="params0"></param>
            <param name="params1"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.GetSize(Intermech.Interfaces.Document.TableData,System.Boolean)">
            <summary>Получить размер элемента сетки с учетом наследования</summary>
            <param name="owner">Владелец сетки</param>
            <param name="isColumn">Элемент - столбец</param>
            <returns>Размер элемента сетки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.Clone">
            <summary>Клонировать экземпляр</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.System#ICloneable#Clone">
            <summary>Клонировать экземпляр</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать одно поле из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле прочитано</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColParams.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.RowColParams.EmptyIDValue">
            <summary>Значение соответствующее неустановленному идентификатору строки/столбца</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.RowColumnParamsConverter">
            <summary>Конвертер для типа RowColumnParams</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RowColumnParamsConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Получить дескрипторы свойств</summary>
            <param name="context">Контекст</param>
            <param name="value">Объект</param>
            <param name="attributes">Атрибуты свойств</param>
            <returns>Коллекция дескрипторов свойств объекта</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.RtfCoreWrapper.DefLang">
            <summary>Язык по умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RtfCoreWrapper.DefCharSet">
            <summary>CharSet для шрифта по умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RtfCoreWrapper.NameDivider">
            <summary>Разделитель имени в формуле</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RtfCoreWrapper.MaxPageWidthInch">
            <summary>
            Максимальная ширина текста в RTFEditor [дюймы]
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RtfCoreWrapper.MaxTextWidth">
            <summary>
            Максимальная ширина текста в RTFEditor [мм]
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.RtfCoreWrapper._additionalBottomForText">
            <summary>Размер дополнительного поля снизу для текста, чтобы не отсекалась последняя строка подходящая вплотную к границе</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.BeginPrint(Intermech.Document.RtfEditorCore.ImRtfEditorCore)">
            <summary>Начать печать</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.EndPrint(Intermech.Document.RtfEditorCore.ImRtfEditorCore)">
            <summary>Закончить печать</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.GetHasFormulas(Intermech.Interfaces.Document.TextData)">
            <summary>В элементе имеются формулы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CreateImRtfCore(Intermech.Drawing.Common.IUniDrawingObjectFactory,Intermech.Drawing.Common.UniSizeF,Intermech.Drawing.Common.UniPointF,System.Boolean)">
            <summary>Создать и инициализировать экземпляр редактора ImRtfEditorCore</summary>
            <param name="pageSizeMM">Размер страницы в мм</param>
            <param name="dpi">Разрешение для шрифтов</param>
            <param name="useWin">Границы в пикселях</param>
            <returns>Экземпляр редактора ImRtfEditorCore</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CreateTernPaintBuffer(Intermech.Drawing.Common.IUniGraphics)">
            <summary>Создать вспомогательный редактор для отрисовки текста</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CreateTernPrintBuffer(Intermech.Drawing.Common.IUniDrawingObjectFactory,System.Single,System.Single)">
            <summary>Создать вспомогательный редактор для печати текста</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CreateTernDistributeBuffer">
            <summary>Создать вспомогательный редактор для разбивки текста</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CreateTernBuffer(System.String)">
            <summary>Создать вспомогательный редактор для локальных нужд</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ConvertHorzAlignmentToTernConst(System.Nullable{Intermech.Interfaces.Document.HorzAlignment})">
            <summary>Конвертировать выравнивание по горизонтали в константы ImRtfEditorCore</summary>
            <param name="horzAlignment">Выравнивание по горизонтали</param>
            <returns>Константа ImRtfEditorCore</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ConvertVertAlignmentToTernConst(System.Nullable{Intermech.Interfaces.Document.VertAlignment},Intermech.Interfaces.Document.TextOrientation,System.Single)">
            <summary>Конвертировать выравнивание по вертикали в константы ImRtfEditorCore</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ConvertVertAlignmentToTernConst(System.Nullable{Intermech.Interfaces.Document.VertAlignment})">
            <param name="vertAlignment">Выравнивание по вертикали</param>
            <returns>Константа ImRtfEditorCore</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.TernFontStyle(Intermech.Drawing.Common.UniFontStyle)">
            <summary>Преобразовать стиль шрифта в константы ImRtfEditorCore</summary>
            <param name="style">Стиль шрифта</param>
            <returns>Константа ImRtfEditorCore соответствующая стилю шрифта</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.GetAdditionalTextHeight(System.Single)">
            <summary>Получить размер дополнительного поля снизу для текста, в зависимости от настройки фиксированной высоты строки.
            Необходим чтобы не отсекалась последняя строка подходящая вплотную к границе ячейки
            </summary>
            <param name="fixedRowSize">Фиксированный размер строки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetEditorBounds(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Drawing.Common.UniRectangle,Intermech.Drawing.Common.UniSizeF,System.Single,System.Nullable{Intermech.Interfaces.Document.VertAlignment},Intermech.Interfaces.Document.TextOrientation,System.Int32,System.Boolean,System.Boolean)">
            <summary>Установить границы редактора</summary>
            <param name="editor">Редактор</param>
            <param name="bounds">Границы в контрола</param>
            <param name="pageSize">Размер страницы</param>
            <param name="fixedRowSize">Фиксированный размер строки</param>
            <param name="orientation">Ориентация текста</param>
            <param name="zoom">Масштаб в процентах</param>
            <param name="repaint">Обновить изображение</param>
            <param name="repage">Вызвать разбивку текста в редакторе после настройки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetDefaultCharFormat(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.CharFormat,Intermech.Interfaces.Document.TextOrientation,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniColor,System.Boolean,System.Boolean,Intermech.Interfaces.Document.DrawContext)">
            <summary>Установить в редакторе формат символов по умолчанию</summary>
            <param name="editor">Редактор</param>
            <param name="charFormat">Формат символов</param>
            <param name="orientation">Ориентация текста</param>
            <param name="foreColor">Цвет переднего плана</param>
            <param name="backColor">Цвет фона</param>
            <param name="isRTF">Содержит RTF</param>
            <param name="forceApplyCharStyle">Принудительно применять все настройки к стилю</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.GetDefaultCharFormat(Intermech.Document.RtfEditorCore.ImRtfEditorCore)">
            <summary>Получить CharFormat из редактора для всего выделенного текста</summary>
            <param name="editor"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CheckCharFormat(Intermech.Interfaces.Document.TextData,Intermech.Document.RtfEditorCore.ImRtfEditorCore)">
            <summary>Обновляем CharFormat для элемента из редактора</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetTextOrientation(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,Intermech.Interfaces.Document.TextOrientation,System.Boolean)">
            <summary>Установить направление текста в редакторе</summary>
            <param name="editor">Редактор</param>
            <param name="orientation">Направление</param>
            <param name="keepText">Сохранять текст. Если false, то текст теряется</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetDefaultParagraphFormat(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.ParagraphFormat,Intermech.Interfaces.Document.TextOrientation,System.Single,System.Boolean)">
            <summary>Установить форматирование параграфа по умолчанию</summary>
            <param name="editor">Редактор</param>
            <param name="textFormat">Формат</param>
            <param name="orientation">Направление текста</param>
            <param name="fixedRowSize">Фиксированный размер строки, 0 если не фиксирован</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.OrientationToAngle(Intermech.Interfaces.Document.TextOrientation)">
            <summary>Преобразовать ориентацию в угол поворота</summary>
            <param name="orientation">Ориентация</param>
            <returns>Угол поворота</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.FormatEditorText(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.ParagraphFormat,Intermech.Interfaces.Document.TextOrientation,Intermech.Interfaces.Document.CharFormat,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniColor,System.Single,System.Boolean,System.Boolean,System.Boolean,Intermech.Interfaces.Document.DrawContext)">
            <summary>Форматировать текст в редакторе</summary>
            <param name="editor">Редактор</param>
            <param name="paragraphFormat">Формат параграфа</param>
            <param name="orientation">Ориентация текста</param>
            <param name="charFormat">Формат символов</param>
            <param name="backColor">Цвет фона текста</param>
            <param name="fixedRowSize">Фиксированный размер строки</param>
            <param name="isRTF">Содержит RTF</param>
            <param name="forceApplyCharStyle">Принудительно применять все настройки к стилю</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.GetTextFragment(System.String,System.Int32,System.Boolean)">
            <summary>Получить фрагмент текста</summary>
            <param name="text">Текст</param>
            <param name="firstTextPos">Первая позиция текста</param>
            <param name="calc_N_as_RN">Считать \r как два символа \r\n. Необходимо для синхронизации подсчёта с редактором</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetAllRowSize(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.Single,System.Boolean)">
            <summary>Установить фиксированную высоту для всех строк в редакторе</summary>
            <param name="editor">Редактор</param>
            <param name="rowSize">Высота строки</param>
            <param name="exactLineSpacingForFixedSizeRow">Подгонять размеры строк текста под заданный фиксированный размер строки сетки</param>
            <param name="repaint">Перерисовывать редактор</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.TextIsEqual_IgnoreRN(System.String,System.String)">
            <summary>Сравнить текст игнорируя различия в переносах строки \n и \r\n</summary>
            <param name="text1">Первый текст</param>
            <param name="text2">Второй текст</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.FindStrikeLines(Intermech.Document.RtfEditorCore.ImRtfEditorCore,System.Single)">
            <summary>
            Найти в сетке линий пересечения с текстом. 
            Когда размер текста больше размера сетки линий, линии перечёркивают текст
            </summary>
            <param name="editor"></param>
            <param name="fixedRowSize"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ConvertPosToLines(Intermech.Document.RtfEditorCore.ImRtfEditorCore,System.Collections.Generic.List{System.Int32})">
            <summary>Преобразовать абсолютную позицию текста в редакторе в номера строк</summary>
            <param name="editor">Редактор теста</param>
            <param name="posList">Позиции в тексте</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.FindTextBoxForTextPosition(Intermech.Interfaces.Document.TextBoxData,System.Int32)">
            <summary>Найти элемент в цепочке, соответствующий позиции текста</summary>
            <param name="currTB">Ячейка с которой начинать поиск</param>
            <param name="textPos">Позиция текста</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.IsWholeWord(System.String,System.String,System.Int32)">
            <summary>Является ли слово целым словом</summary>
            <param name="text">текст</param>
            <param name="word">слово</param>
            <param name="beginIndex">начальный индекс слова</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetSpases(System.String)">
            <summary>Заменить разрывные пробелы и дефис в тексте на неразрывные</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.IsWhiteSpace(System.Char)">
            <summary>Проверка является ли символ пробелом</summary>
            <param name="ch">Символ</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.IsNonBreakSpace(System.Char)">
            <summary>Проверка является ли символ неразрывным пробелом</summary>
            <param name="ch">Символ</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.IsLineBreak(System.Char)">
            <summary>Проверка является ли символ неразрывным пробелом</summary>
            <param name="ch">Символ</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.GetFormulaSize(Intermech.Drawing.Common.IUniImage,Intermech.Drawing.Common.UniSizeF)">
            <summary>Получить размер формулы</summary>
            <param name="im">Изображение</param>
            <param name="size">Размер</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ReplaceIndexOrMaterialFormula(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.Boolean,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Заменить текст формулы на ее графическое представление
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ReplaceIndexFormula(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Заменить текст формулы на ее графическое представление
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.PutMaterialFormulaAndSavePos(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Вставить изображение формулы в текст, заменив указанный фрагмент, и запомнить номер строки
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ReplaceMaterialFormula(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Заменить текст формулы "Материал" на графическое изображение
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SearchAndReplaceComplexDesignation(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.Int32@,System.Int32@)">
            <summary>
            Ищем составное обозначение, в нем части разделяются при помощи | 
            </summary>
            <param name="editor"></param>
            <param name="startLine"></param>
            <param name="startCol"></param>
            <param name="avsMaterialPos"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ReplaceSpecSymbolAndFormulas(Intermech.Interfaces.Document.TextData,Intermech.Document.RtfEditorCore.ImRtfEditorCore,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>Заменить разрывные пробелы и дефис в тексте на неразрывные и вставить формулы</summary>
            <param name="editor">Редактор, в котором заменять символы</param>
            <param name="replaceSpecChar">Заменять спецсимволы '~' на неразрывный пробел и '?' на разрыв строки</param>
            <param name="replaceFormulas">Заменять формулы в виде 'Имя:аргумент1;аргумент2;...' на символы из библиотеки формул</param>
            <param name="replaceAVSMaterial">Заменять материалы по списку ключевых слов или спецсимволам.
            После '/S' - числитель, после '/' - знаменатель
            После '^' - верхний индекс, после '/' - нижний</param>
            <param name="nonbreakingText">Неразрывный текст</param>
            <param name="avsMaterialPos">Позиции заменённых материалов</param>
            <returns>true, если были новые замены</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.MergePrint(Intermech.Interfaces.Document.TextData,Intermech.Interfaces.Document.DrawContext,Intermech.Drawing.Common.UniRectangleF)">
            <summary>Рисовать для вывода на печать</summary>
            <param name="context">Контекст отрисовки</param>
            <param name="bounds">Границы элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.MergePrint(Intermech.Interfaces.Document.TextData,Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.DrawContext,Intermech.Drawing.Common.UniRectangleF)">
            <summary>Рисовать для вывода на печать используя готовый буфер</summary>
            <param name="context">Контекст отрисовки</param>
            <param name="bounds">Границы элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CheckPaintBuffers(Intermech.Interfaces.Document.DrawContext)">
            <summary>Проверить буфер отрисовки текста и создать новый, если необходимо</summary>
            <param name="context">Контекст отрисовки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.PrintOnGraphics(Intermech.Interfaces.Document.TextData,Intermech.Interfaces.Document.DrawContext,System.Boolean)">
            <summary>Вывести текст на Graphics</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.PrintOnGraphics(Intermech.Interfaces.Document.TextData,Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.DrawContext,System.Boolean)">
            <summary>Вывести текст на Graphics</summary>
            <param name="editor">Редактор текста</param>
            <param name="context">Контекст прорисовки</param>
            <param name="ternBounds">Границы редактора текста в пикселях у учётом матричных преобразований</param>
            <param name="pixelSize">Размеры в пикселях</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.IsEmpty(Intermech.Interfaces.Document.TextData)">
            <summary>Редактор пуст</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CalcTextBounds(Intermech.Drawing.Common.UniRectangle,Intermech.Interfaces.Document.MarginsF,Intermech.Drawing.Common.UniPointF)">
            <summary>Вычислить размеры редактора ImRtfEditorCore в пикселях с учетом полей</summary>
            <param name="winBounds">Размеры области редактирования в пикселях</param>
            <returns>Размеры редактора ImRtfEditorCore в пикселях с учетом полей</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CalcPixelTextBounds(Intermech.Drawing.Common.UniRectangleF,Intermech.Interfaces.Document.DrawContext)">
            <summary>Вычислить размеры текстовой области в пикселях с учетом полей</summary>
            <param name="bounds">Размеры области редактирования без полей</param>
            <param name="context">Контекст</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CalcPixelTextBounds(Intermech.Drawing.Common.UniRectangleF,Intermech.Interfaces.Document.MarginsF,Intermech.Drawing.Common.UniPointF)">
            <summary>Вычислить размеры текстовой области в пикселях с учётом полей</summary>
            <param name="bounds">Размеры области редактирования в мм без учёта полей</param>
            <param name="margins">Поля в миллиметрах</param>
            <param name="dpi">Разрешение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CalcCellSizeForText(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.MarginsF,System.Boolean,System.Boolean,System.Int32@)">
            <summary>Рассчитать размер ячейки на основе размера текста</summary>
            <param name="editor">Редактор</param>
            <param name="margins">Поля, мм</param>
            <param name="cellCharCount">Количество текста в данной ячейке после которого нужно переносить в следующую. 
            Если -1, то переносить не надо.</param>
            <returns>Размер ячейки, мм</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.CalcCellSizeForTextSize(Intermech.Drawing.Common.UniSizeF,Intermech.Interfaces.Document.MarginsF,System.Boolean)">
            <summary>Вычислить размеры поля для области редактирования в мм с учетом полей</summary>
            <param name="ternSize">Размеры области редактирования в мм</param>
            <returns>Размеры редактора ImRtfEditorCore в мм с учетом полей</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.Distribute(Intermech.Interfaces.Document.TextData,Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.AutoSizeDirection,Intermech.Drawing.Common.UniSizeF,System.Int32@)">
            <summary>Распределить текст и получить его размеры</summary>
            <param name="direction">Направление изменения размера</param>
            <param name="maxSize">Максимальный размер</param>
            <param name="nextCellCharPos">Возвращается позиция текста для следующей ячейки</param>
            <returns>Возвращает размер текста</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.GetDistributeBuffer(Intermech.Interfaces.Document.TextData)">
            <summary>Получить вспомогательный контрол для разбивки</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.GetFontMetricsBuffer(Intermech.Interfaces.Document.TextData)">
            <summary>Получить вспомогательный контрол для подгонки размера шрифта</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.Distribute(Intermech.Interfaces.Document.TextData,Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.AutoSizeDirection,System.String,System.Boolean,System.Int32,Intermech.Drawing.Common.UniSizeF,System.Int32@)">
            <summary>Распределить текст и получить его размеры</summary>
            <param name="direction">Направление изменения размера</param>
            <param name="text">Текст</param>
            <param name="isRTF">Текст в формате RTF</param>
            <param name="firstTextPos">Первая позиция текста для этой ячейки</param>
            <param name="maxSize">Максимальный размер</param>
            <param name="nextCellCharPos">Возвращается позиция текста для следующей ячейки</param>
            <returns>Возвращает размер текста</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.Distribute(Intermech.Interfaces.Document.TextData,Intermech.Interfaces.Document.DistributeContext,Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.AutoSizeDirection,System.String,System.Boolean,System.Int32,Intermech.Drawing.Common.UniSizeF,System.Int32@)">
            <summary>Распределить текст и получить его размеры</summary>
            <param name="editor">Редактор в котором распределять текст</param>
            <param name="direction">Направление изменения размера</param>
            <param name="text">Текст</param>
            <param name="isRTF">Текст в формате RTF</param>
            <param name="firstTextPos">Первая позиция текста для этой ячейки</param>
            <param name="maxSize">Максимальный размер</param>
            <param name="nextCellCharPos">Возвращается позиция текста для следующей ячейки</param>
            <returns>Возвращает размер текста</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.Distribute(Intermech.Interfaces.Document.TextData,Intermech.Interfaces.Document.DistributeContext,Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.AutoSizeDirection,Intermech.Drawing.Common.UniSizeF,System.Int32@,System.Int32)">
            <summary>Распределить текст и получить его размеры</summary>
            <param name="editor">Редактор в котором распределять текст</param>
            <param name="direction">Направление изменения размера</param>
            <param name="maxSize">Максимальный размер</param>
            <param name="nextCellCharPos">Возвращается позиция текста для следующей ячейки</param>
            <returns>Возвращает размер текста</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.GetTextMaxSize(Intermech.Interfaces.Document.TextData)">
            <summary>Получить размеры текста</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetEditorText(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.String,System.Boolean,System.Int32,Intermech.Interfaces.Document.ParagraphFormat,Intermech.Interfaces.Document.TextOrientation,Intermech.Interfaces.Document.CharFormat,Intermech.Drawing.Common.UniColor,System.Single,System.Boolean,Intermech.Interfaces.Document.DrawContext)">
            <summary>Установить текст в редакторе</summary>
            <param name="editor">Редактор</param>
            <param name="text">Текст</param>
            <param name="isRTF">Текст задан в формате RTF</param>
            <param name="firstTxtPos">Начала текста отображаемого в редакторе. Для распределённого по страницам текста</param>
            <param name="paragraphFormat">Формат параграфа</param>
            <param name="orientation">Ориентация текста</param>
            <param name="charFormat">Формат символов</param>
            <param name="backColor">Цвет фона текста</param>
            <param name="fixedRowSize">Фиксированный размер строки</param>
            <param name="exactLineSpacingForFixedSizeRow">Точный размер фиксированной строки</param>
            <param name="materialList">Список позиций формул в тексте</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetupEditor(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,Intermech.Drawing.Common.UniRectangleF,Intermech.Drawing.Common.UniRectangle,System.Single,System.Single,System.Boolean,System.Boolean,Intermech.Interfaces.Document.DrawContext)">
            <summary>Настроить редактор</summary>
            <param name="editor">Редактор</param>
            <param name="textBounds">Границы текста</param>
            <param name="editorBounds">Границы редактора</param>
            <param name="scale">Масштаб</param>
            <param name="fixedRowSize">Фиксированный размер строки</param>
            <param name="exactLineSpacingForFixedSizeRow">Подгонять размеры строк текста под заданный фиксированный размер строки сетки</param>
            <param name="org0">Обнулять положение текста</param>
            <param name="materialList">Список позиций формул в тексте</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetupEditor(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.String,System.Boolean,System.Int32,System.Single,Intermech.Interfaces.Document.TextFormat)">
            <summary>Настроить редактор</summary>
            <param name="editor">Редактор</param>
            <param name="text">Текст</param>
            <param name="isRTF">Текст задан в формате RTF</param>
            <param name="firstTextPos">Первая позиция текста для этой ячейки</param>
            <param name="editorBounds">Границы редактора</param>
            <param name="scale">Масштаб</param>
            <param name="textFormat">Параметры форматирования текста</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetupEditor(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.String,System.Boolean,System.Int32,Intermech.Interfaces.Document.ParagraphFormat,Intermech.Interfaces.Document.TextOrientation,Intermech.Interfaces.Document.CharFormat,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniRectangleF,Intermech.Drawing.Common.UniRectangle,Intermech.Interfaces.Document.MarginsF,System.Single,System.Single,System.Boolean)">
            <summary>Настроить редактор</summary>
            <param name="editor">Редактор</param>
            <param name="text">Текст</param>
            <param name="isRTF">Текст задан в формате RTF</param>
            <param name="firstTextPos">Первая позиция текста для этой ячейки</param>
            <param name="paragraphFormat">Формат параграфа</param>
            <param name="orientation">Ориентация текста</param>
            <param name="charFormat">Формат символов</param>
            <param name="backColor">Цвет фона текста</param>
            <param name="textBounds">Границы текста</param>
            <param name="editorBounds">Границы редактора</param>
            <param name="margins">Поля в миллиметрах</param>
            <param name="scale">Масштаб</param>
            <param name="fixedRowSize">Фиксированный размер строки</param>
            <param name="exactLineSpacingForFixedSizeRow">Подгонять размеры строк текста под заданный фиксированный размер строки сетки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.SetupEditor(Intermech.Document.RtfEditorCore.ImRtfEditorCore,Intermech.Interfaces.Document.TextData,System.String,System.Boolean,System.Int32,Intermech.Interfaces.Document.ParagraphFormat,Intermech.Interfaces.Document.TextOrientation,Intermech.Interfaces.Document.CharFormat,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniRectangleF,Intermech.Drawing.Common.UniRectangle,Intermech.Interfaces.Document.MarginsF,System.Single,System.Single,System.Boolean,System.Boolean,Intermech.Interfaces.Document.DrawContext)">
            <summary>Настроить редактор</summary>
            <param name="editor">Редактор</param>
            <param name="text">Текст</param>
            <param name="isRTF">Текст задан в формате RTF</param>
            <param name="firstTextPos">Первая позиция текста для этой ячейки</param>
            <param name="paragraphFormat">Формат параграфа</param>
            <param name="orientation">Ориентация текста</param>
            <param name="charFormat">Формат символов</param>
            <param name="backColor">Цвет фона текста</param>
            <param name="textBounds">Границы текста</param>
            <param name="editorBounds">Границы редактора</param>
            <param name="margins">Поля в миллиметрах</param>
            <param name="scale">Масштаб</param>
            <param name="fixedRowSize">Фиксированный размер строки</param>
            <param name="exactLineSpacingForFixedSizeRow">Подгонять размеры строк текста под заданный фиксированный размер строки сетки</param>
            <param name="org0">Обнулять положение текста</param>
            <param name="materialList">Список позиций формул в тексте</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ClientBounds(Intermech.Interfaces.Document.TextData,System.Boolean,System.Single,Intermech.Interfaces.Document.TextOrientation)">
            <summary>ClientBounds - границы ячейки для текстового поля (без учёта Margins)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ClientBounds(Intermech.Interfaces.Document.TextData,System.Boolean,Intermech.Interfaces.Document.CellContext,Intermech.Interfaces.Document.TextOrientation)">
            <summary>ClientBounds - границы ячейки для текстового поля (без учёта Margins)</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ShiftLocationByAdditionaBottomForText(Intermech.Interfaces.Document.TextData,System.Boolean,Intermech.Interfaces.Document.CellContext,Intermech.Interfaces.Document.TextOrientation)">
             <summary>
            Компенсация сдвига возникающего из-за добавленного поля внизу текста
             </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.ShiftLocationByAdditionaBottomForText(Intermech.Interfaces.Document.TextData,System.Boolean,System.Nullable{System.Single},Intermech.Interfaces.Document.TextOrientation)">
             <summary>
            Компенсация сдвига возникающего из-за добавленного поля внизу текста
             </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RtfCoreWrapper.Draw(Intermech.Interfaces.Document.TextData,Intermech.Interfaces.Document.DrawContext,Intermech.Document.RtfEditorCore.ImRtfEditorCore)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.ScriptResult">
            <summary>
            Результат работы скрипта
            </summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TableData">
             <summary>Базовый класс таблицы</summary>
             <remarks>
            Таблица может содержать: 
            - наследник RectangleElement если это визуальная таблица
            - TextData, если это таблица данных.
             </remarks>
        </member>
        <member name="F:Intermech.Interfaces.Document.TableData.DefaultCellSize">
            <summary>Размер ячейки по умолчанию</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TableData.UnconstrainedSize">
            <summary>Неограниченный размер</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TableData.TypeNameForConstructorDictionary">
            <summary>Имя типа для словаря конструкторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CloneRowColParams(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams})">
            <summary>Копировать параметры строк/столбцов</summary>
            <param name="rowColParams">Оригинал параметров</param>
            <returns>Копия параметров</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CloneRowColParamsFromTemplate(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams})">
            <summary>Копировать параметры строк/столбцов из шаблона</summary>
            <param name="template">Шаблон сетки</param>
            <returns>Копия параметров</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetRowColParams(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32)">
            <summary>Получить параметры элемента сетки по заданному идентификатору</summary>
            <param name="gridParams">Сетка</param>
            <param name="id">Идентификатор элемента сетки</param>
            <returns>Параметры элемента сетки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetRowColIndex(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32)">
            <summary>Получить индекс элемента сетки с заданным идентификатором</summary>
            <param name="gridParams">Сетка</param>
            <param name="id">Идентификатор элемента</param>
            <returns>Индекс элемента в сетке</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.HeadersCount">
            <summary>Количество заголовков в таблице</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.GridColumnsParams">
            <summary>Параметры столбцов сетки таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.ShowSingleCellInTemplate">
            <summary>
            Показ одной/всех строк динамической таблицы в шаблоне
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetGridColumnsParams(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Boolean,System.Boolean)">
            <summary>Назначить новый набор столбцов</summary>
            <param name="value">Набор столбцов</param>
            <param name="setOverrideFlag">Установить флаг перекрытия наследования</param>
            <param name="saveUndo">Сохранять изменения в Undo</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetGridColumnsParams(Intermech.Interfaces.Document.TableData@,System.Boolean@,System.Boolean,System.Boolean)">
            <summary>Получить параметры столбцов сетки таблицы</summary>
            <param name="paramsOwner">Владелец параметров</param>
            <param name="fromTemplate">Владелец параметров наследует их у своего шаблона</param>
            <param name="autoCreate">Создать параметры по умолчанию, если их нет</param>
            <param name="update">Обновлять значение gridColumnsParams</param>
            <returns>Параметры столбцов сетки таблицы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetGridColumnsParams(System.Boolean)">
            <summary>Получить параметры столбцов сетки таблицы</summary>
            <param name="autoCreate">Создать параметры по умолчанию, если их нет</param>
            <param name="update">Обновлять значение gridColumnsParams</param>
            <returns>Параметры столбцов сетки таблицы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.IsColumnGridOwner">
            <summary>Таблица владеет сеткой</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetGridColumnWidth(System.Int32,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить ширину столбца в сетке</summary>
            <param name="colIndex">Индекс столбца в сетке</param>
            <param name="width">Ширина столбца</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetGridColumnWidth(System.Int32,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить ширину столбца в сетке</summary>
            <param name="colIndex">Индекс столбца в сетке</param>
            <param name="width">Ширина столбца</param>
            <param name="oldPos">Старое положение изменяемой границы</param>
            <param name="isRightPos">Изменение ширины при перетаскивании правой границы таблицы</param>
            <param name="setMinWidth">Назначать минимальную ширину ячеек</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.MoveGridColumn(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Переместить столбец на новую позицию</summary>
            <param name="gridColIndex">Положение колонки в сетке</param>
            <param name="newGridColIndex">Новое положение колонки</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.MoveGridColumnCells(System.Int32,System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Boolean,System.Boolean)">
            <summary>Переместить ячейки столбца в строках на новую позицию</summary>
            <param name="gridColIndex">Индекс колонки в сетке</param>
            <param name="newGridColIndex">Новый индекс колонки</param>
            <param name="gridColumns">Параметры колонок сетки</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RemoveGridColumn(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Удалить столбец из принадлежащей таблице сетки</summary>
            <param name="gridColIndex">Индекс столбца в сетке</param>
            <param name="resizeTopTable">Уменьшить ширину таблицы, если она верхняя</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RemoveGridColumnCells(System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Boolean,System.Boolean)">
            <summary>Удалить ячейки столбца</summary>
            <param name="gridColIndex">Индекс столбца в сетке</param>
            <param name="gridColumns">Сетка</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ExchangeGridColumns(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Поменять местами столбцы сетки</summary>
            <param name="gridColIndex1">Индекс первого столбца</param>
            <param name="gridColIndex2">Индекс второго столбца</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ExchangeGridColumnsCells(System.Int32,System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Boolean,System.Boolean)">
            <summary>Поменять местами ячейки столбцов сетки</summary>
            <param name="gridColIndex1">Индекс первого столбца</param>
            <param name="gridColIndex2">Индекс второго столбца</param>
            <param name="gridColumns">Сетка</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GenerateGridID(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32)">
            <summary>Сгенерировать идентификатор строки/столбца уникальный в пределах данной сетки</summary>
            <param name="gridParams">Параметры столбцов сетки</param>
            <param name="defaultID">Идентификатор по умолчанию. Если он уникален, то возвращает его</param>
            <returns>Идентификатор столбца</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertNewGridColumn(System.Int32,System.Boolean,System.Boolean)">
            <summary>Создать и вставить новый столбец в сетку таблицы и его ячейки в таблицу</summary>
            <param name="gridIndex">Индекс столбца в сетке</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertNewGridColumn(System.Int32,Intermech.Interfaces.Document.RowColParams,System.Boolean,System.Boolean)">
            <summary>Создать и вставить новый столбец в сетку таблицы и его ячейки в таблицу</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertNewGridColumn(System.Int32,Intermech.Interfaces.Document.RowColParams,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Создать и вставить новый столбец в сетку таблицы и его ячейки в таблицу</summary>
            <param name="gridIndex">Индекс столбца в сетке</param>
            <param name="colParams">Параметры столбца</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="expandTable">Расширять таблицу при добавлении столбца, иначе размер таблицы остаётся неизменным</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CreateGridColumnCells(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Создать ячейку для столбца</summary>
            <param name="gridColumns">Параметры столбцов сетки</param>
            <param name="gridIndex">Индекс столбца в сетке</param>
            <param name="nodeCellIndex">Индекс ячеек столбца в Nodes</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Возвращает новую ячейку</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertNewGridColumnCells(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean,System.Boolean)">
            <summary>Вставить ячейки нового столбца в сетке</summary>
            <param name="gridColumns">Набор колонок сетки</param>
            <param name="index">Индекс столбца в сетке</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetCellPositionForGridColumn(System.Int32,System.Boolean,Intermech.Interfaces.Document.RectangleElement[]@)">
            <summary>Получить позицию узла в Nodes где 
            должна располагаться ячейка заданного столбца в сетке</summary>
            <param name="gridColIndex">Индекс столбца в сетке</param>
            <param name="firstCellOnly">Вернуть только первую найденную ячейку столбца</param>
            <param name="cells">Возвращает ячейки столбца, null если не найдены</param>
            <returns>Позицию ячейки в Nodes для заданного столбца в сетке</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetGridColumnCells(System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Collections.Generic.IList{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить ссылки на ячейки заданного столбца</summary>
            <param name="gridColIndex">Индекс столбца в сетке</param>
            <param name="gridColumns">Сетка в которой находится столбец</param>
            <param name="columnCells">Возвращает ячейки заданного столбца. 
            Для нескольких ячеек одного столбца в строке создает VirtualColumnCells</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.GridRowsParams">
            <summary>Параметры строк сетки таблицы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetGridRowsParams(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams})">
            <summary>Назначить новый набор строк</summary>
            <param name="value">Набор строк</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetGridRowsParams(Intermech.Interfaces.Document.TableData@,System.Boolean@)">
            <summary>Получить параметры строк сетки таблицы</summary>
            <param name="paramsOwner">Владелец параметров</param>
            <param name="fromTemplate">Владелец параметров наследует их у своего шаблона</param>
            <returns>Параметры строк сетки таблицы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.IsRowGridOwner(Intermech.Interfaces.Document.TableData)">
            <summary>Таблица владеет сеткой</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.IsRowGridOwner">
            <summary>Таблица владеет сеткой</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertNewGridRow(System.Int32,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>Создать и вставить новую строку грида</summary>
            <param name="gridIndex">Индекс строки грида</param>
            <param name="createTableRow">Создать соответствующую строку в таблице</param>
            <param name="nodeIndex">Индекс строки в Nodes, если она будет создаваться</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CreateGridRowCells(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Создать ячейки для строки</summary>
            <param name="gridRows">Параметры строки сетки</param>
            <param name="gridIndex">Индекс строки в сетке</param>
            <param name="nodeCellIndex">Индекс ячеек строки в Nodes</param>
            <returns>Возвращает новые ячейки</returns>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertNewGridRowCells(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Вставить ячейки новой стоки в сетке</summary>
            <param name="gridRows">Набор сток сетки</param>
            <param name="gridIndex">Индекс строки в сетке</param>
            <param name="nodeIndex">Индекс строки в Nodes</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertNewGridRow(System.Int32,Intermech.Interfaces.Document.RowColParams,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
            <summary>Создать и вставить новую строку грида</summary>
            <param name="gridIndex">Индекс строки грида</param>
            <param name="rowParams">Параметры строки</param>
            <param name="createTableRow">Создать соответствующую строку в таблице</param>
            <param name="nodeIndex">Индекс строки в Nodes, если она будет создаваться</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetGridRowHeight(System.Int32,System.Single,System.Boolean,System.Boolean)">
            <summary>Установить высоту строки в сетке</summary>
            <param name="rowIndex">Индекс строки в сетке</param>
            <param name="height">Высота строки</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.MoveGridRow(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Переместить строку на новую позицию</summary>
            <param name="gridRowIndex">Положение строки в сетке</param>
            <param name="newGridRowIndex">Новое положение строки</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RemoveGridRow(System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Удалить строку из принадлежащей таблице сетки</summary>
            <param name="gridRowIndex">Индекс строки в сетке</param>
            <param name="removeCells">Удалять ячейки строк</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RemoveGridRowCells(System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Boolean,System.Boolean,System.Boolean)">
            <summary>Удалить ячейки строки или отвязать их от сетки</summary>
            <param name="gridRowIndex">Индекс строки в сетке</param>
            <param name="gridRows">Сетка</param>
            <param name="removeCells">Если true, то удалять ячейки, если false, то разрывать связь</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetGridRowCells(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode},System.Boolean)">
            <summary>Получить все ячейки соответствующий строке сетки</summary>
            <param name="gridRows">Сетка</param>
            <param name="gridRowIndex">Индекс строки в сетке</param>
            <param name="rows">Результат - коллекция ячеек строк</param>
            <param name="recursive">Проводить поиск во всех дочерних объектах</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InitCellsCharFormat(Intermech.Interfaces.Document.CharFormat)">
            <summary>Инициализировать CharFormat ячеек</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TableData.ElementTypeName">
            <summary>Имя типа элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetDefautCaption">
            <summary>Получить подпись элемента по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ContextPaste(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean)">
            <summary>Вставить узел с учетом контекста</summary>
            <remarks>Если в столбец вставляется столбец, то она вставляется в родительскую таблицу.
            Если в строку вставляется строка, то она вставляется в родительскую таблицу.
            В остальных случаях элемент node вставляется в этот элемент</remarks>
            <param name="node">Вставляемый элемент</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.Transparent">
            <summary>Прозрачный фон. Установка нового значения переносится на все дочерние элементы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DrawGrid(Intermech.Interfaces.Document.DrawContext,Intermech.Drawing.Common.UniRectangleF,System.Single,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams})">
            <summary>Рисует внутренние линии сетки</summary>
            <param name="context">Контекст рисования</param>
            <param name="gridBounds">Координаты сетки</param>
            <param name="rowSize">Размер строки сетки</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="gridRows">Строки сетки [устарело]</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DrawSkipedSpace(Intermech.Interfaces.Document.DrawContext,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean)">
            <summary>Нарисовать пропущенное пространство (строки/столбцы)</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="colIndex">Индекс столбца</param>
            <param name="gridRows">Строки сетки</param>
            <param name="rowIndex">Индекс строки</param>
            <param name="findGridParams">Искать столбец и строк если не заданы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.Draw(Intermech.Interfaces.Document.DrawContext)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DrawFrame(Intermech.Interfaces.Document.DrawContext,Intermech.Drawing.Common.UniRectangleF,Intermech.Interfaces.Document.RowColParams,Intermech.Interfaces.Document.RowColParams,System.Boolean)">
            <summary>Нарисовать границы элемента</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="properBounds">Границы элемента</param>
            <param name="gridCol">Столбец сетки</param>
            <param name="gridRow">Строка сетки</param>
            <param name="findGridParams">Искать строку и столбец сетки если null</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DrawCell(Intermech.Interfaces.Document.DrawContext,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="colIndex">Индекс столбца</param>
            <param name="gridRows">Строки сетки</param>
            <param name="rowIndex">Индекс строки</param>
            <param name="findGridParams">Искать столбец и строк если не заданы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetSnapPoints(Intermech.Drawing.Common.UniPointF,System.Single,System.Collections.Generic.List{Intermech.Interfaces.Document.SnapPoint},Intermech.Interfaces.Document.VisualNode)">
            <summary>Получить список узлов привязки</summary>
            <param name="originalPoint">Оригинальная точка</param>
            <param name="snapSize">Размер области привязки</param>
            <param name="snapPointList">Список полученных точек</param>
            <param name="excludeNode">Узел который должен исключаться из рассмотрения</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.AlignLastRows">
            <summary>Заглушка! Не используется. Подгонять размер последней строки под размер таблицы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CalcCellLocation(Intermech.Drawing.Common.UniRectangleF,Intermech.Interfaces.Document.RectangleElement)">
            <summary>Вычислить положение ячейки в таблице</summary>
            <param name="prevBounds">Границы предыдущей ячейки</param>
            <returns>Положение ячейки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CalcCellSize(Intermech.Interfaces.Document.RectangleElement,Intermech.Drawing.Common.UniSizeF,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},Intermech.Interfaces.Document.RowColParams@,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},Intermech.Interfaces.Document.RowColParams@,System.Boolean)">
            <summary>Вычислить размер заданной ячейки</summary>
            <param name="cell">Ячейка</param>
            <param name="parentSize">Размер родительской ячейки</param>
            <param name="rowsParams">Список параметров строк</param>
            <param name="thisRowParams">Параметры строки</param>
            <param name="colsParams">Список параметров столбцов</param>
            <param name="thisColParams">Параметр столбца</param>
            <param name="ignoreAfterSkipSize">Не учитывать пропущенные строки после записи</param>
            <returns>Вычисленный размер ячейки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RecalcCellLocations(Intermech.Drawing.Common.UniPointF,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Пересчитать расположение дочерних ячеек</summary>
            <param name="newLocation">Новое положение таблицы</param>
            <param name="index">Индекс элемента с которого нужно начать пересчет</param>
            <param name="count">Количество элементов которые нужно пересчитать. 
            Если count = 0, то до конца</param>
            <returns>Возвращает размер таблицы, с учетом размеров ячеек</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AdjustSizeToCell(Intermech.Interfaces.Document.RectangleElement,System.Boolean,System.Boolean)">
            <summary>Подогнать размер этой таблицы под размер заданной ячейки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CalcAdjustedCellSize(Intermech.Drawing.Common.UniSizeF,Intermech.Drawing.Common.UniSizeF)">
            <summary>Рассчитать размер ячейки подходящий под размер этой таблицы 
            (высоту строки или ширину столбца)</summary>
            <param name="cellSize">Текущий размер ячейки</param>
            <param name="size">Предполагаемый размер этой таблицы</param>
            <returns>Размер ячейки подогнанных по размер таблицы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AlignChildElements(Intermech.Interfaces.Document.VisualNode)">
            <summary>Выравнивание элементов относительно краёв</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AlignFloatChildElements(Intermech.Interfaces.Document.VisualNode)">
            <summary>Выравнивание элементов зависящих от размера - прижатые вправо, вниз и по центру</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetParentSizeForAlign(Intermech.Interfaces.Document.PageData,Intermech.Interfaces.Document.TableData)">
            <summary>Рассчитать размер таблицы для выравнивания (без элементов прижатых вправо!)</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetParentSize(Intermech.Interfaces.Document.PageData,Intermech.Interfaces.Document.TableData)">
            <summary>Рассчитать размер таблицы для выравнивания (без элементов прижатых вправо!)</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetParentLocationForAlign(Intermech.Interfaces.Document.PageData,Intermech.Interfaces.Document.TableData)">
            <summary>Рассчитать положение таблицы для выравнивания</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindLastVisibleCellIndex">
            <summary>Найти последнюю видимую ячейку в таблице</summary>
            <returns>Возвращает индекс последней видимой ячейки в таблице. 
            Если видимых ячеек нет, то возвращает -1</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetCellSizes(Intermech.Drawing.Common.UniRectangleF,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить размеры дочерних ячеек</summary>
            <param name="newBounds">Новые границы ячейки (внешние, с учётом пропусков)</param>
            <param name="lockNeedUpdateLayoutFlag">Блокировать изменение NeedUpdateLayoutFlag</param>
            <param name="saveUndo">Сохранять действие для Undo</param>
            <param name="setMinHeight">Установить значение MinHeight</param>
            <param name="setRelativeSize">Установить соответствующий относительный размер</param>
            <param name="checkLastCell">Проверять размер последней ячейки</param>
            <returns>Новые границы ячейки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindResizableLeftSide(System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement},System.Single)">
            <summary>Найти ячейки правая сторона которых имеет заданную координату X</summary>
            <param name="cells">Список найденных ячеек</param>
            <param name="x">Координата X</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindResizableRightSide(System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement},System.Single)">
            <summary>Найти ячейки правая сторона которых имеет заданную координату X</summary>
            <param name="cells">Список найденных ячеек</param>
            <param name="x">Координата X</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindResizableBottomSide(System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement},System.Single)">
            <summary>Найти ячейки нижняя сторона которых имеет заданную координату Y</summary>
            <param name="cells">Список найденных ячеек</param>
            <param name="y">Координата Y</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.DrawGridToBottom">
            <summary>Необходимо ли в динамической таблице рисовать сетку вне ячеек</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AssignDrawGridToBottom(System.Boolean,System.Boolean)">
            <summary>Установка свойства DrawGridToBottom</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Перерисовать</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.DrawParentFrames">
            <summary>Рисовать границы подтаблицы поверх границ внутренних ячеек.
            Необходимо для возможности отключать границы части внутренних ячеек</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CheckBordersStatus(Intermech.Interfaces.Document.BordersStatus,Intermech.Interfaces.Document.BordersPosition,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean)">
            <summary>Проверить статус внешних и внутренних границ таблицы</summary>
            <param name="bordersStatus">Статус границ</param>
            <param name="bordersPosition">Положение ячейки относительно границ выделения</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="colIndex">Индекс столбца</param>
            <param name="gridRows">Строки сетки</param>
            <param name="rowIndex">Индекс строки</param>
            <param name="findGridParams">Получить параметры если не заданы</param>
            <returns>true, если все границы проверены и не требуется проверка в остальных ячейках</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetLeftBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Установить стиль линии левой границы. 
            При этом настройки по умолчанию больше не будут действовать.</summary>
            <param name="borderLine">Стиль линии</param>
            <param name="setAdjoiningLine">Установить стиль смежной линии в смежной ячейке</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetLeftBorderLineForCell(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить левую границу в подчиненных ячейках</summary>
            <param name="borderLine">Стиль линии границы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetRightBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean)">
            <summary>Установить стиль линии правой границы. 
            При этом настройки по умолчанию больше не будут действовать.</summary>
            <param name="borderLine">Стиль линии</param>
            <param name="setAdjoiningLine">Установить стиль смежной линии в смежной ячейке</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetRightBorderLineForCell(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить правую границу в подчиненных ячейках</summary>
            <param name="borderLine">Стиль линии границы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetTopBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean,System.Boolean)">
            <summary>Установить стиль линии верхней границы. 
            При этом настройки по умолчанию больше не будут действовать.</summary>
            <param name="borderLine">Стиль линии</param>
            <param name="setAdjoiningLine">Установить стиль смежной линии в смежной ячейке</param>
            <param name="setChilds">Установить стиль дочерних ячеек</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetTopBorderLineForCell(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить верхнюю границу в подчиненных ячейках</summary>
            <param name="borderLine">Стиль линии границы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetBottomBorderLine(Intermech.Interfaces.Document.BorderLine,System.Boolean,System.Boolean)">
            <summary>Установить стиль линии нижней границы. 
            При этом настройки по умолчанию больше не будут действовать.</summary>
            <param name="borderLine">Стиль линии</param>
            <param name="setAdjoiningLine">Установить стиль смежной линии в смежной ячейке</param>
            <param name="setChilds">Установить стиль дочерних ячеек</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetBottomBorderLineForCell(Intermech.Interfaces.Document.BorderLine)">
            <summary>Установить нижнюю границу в подчиненных ячейках</summary>
            <param name="borderLine">Стиль линии границы</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.CanSwitchInternalCellsVisibity">
            <summary>Можно ли переключать текущую видимость внутренних ячеек, 
            чтобы не отображать одновременно все варианты шаблонов строк</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.UpdateCells_IsVisibleNow(System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement})">
            <summary>Обновить текущую видимость дочерних ячеек</summary>
            <param name="selectedNodes">Выделенные ячейки</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.UsePreviousTableTemplates">
            <summary>Использовать шаблоны подэлементов предыдущей таблицы. 
            Работает только для представления данных.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetUsePreviousTableTemplates(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить новое значение свойства UsePreviousTableTemplates</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindPreviousTableTemplate">
            <summary>Найти шаблон таблицы на шаблоне предыдущей страницы</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ApplyPreviousTableTemplate(System.Boolean,System.Boolean)">
            <summary>Применить настройки из шаблона предполагаемой предыдущей таблицы</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CanUseNodeAsTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Можно ли использовать заданный узел как шаблон</summary>
            <param name="node">Узел</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetTableStructureTemplate">
            <summary>Получить шаблон таблицы представления, который содержит шаблоны ячеек таблицы. 
            Если в шаблоне этой таблицы нет, то ищет в первой таблице</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ApplyTemplateTreeStructure(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу структуру его шаблона</summary>
            <returns>Новые элементы дерева</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ApplyTemplateTreeStructure(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить структуру шаблона к узлам сделанным по шаблону</summary>
            <param name="template">Шаблон</param>
            <param name="updateTemplateLinks">Обновить ссылки на шаблон</param>
            <param name="returnNewNodes">Вернуть созданные в результате применения узлы</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Созданные в результате применения узлы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ApplyTreeTemplates(System.Boolean,System.Boolean)">
            <summary>Применить к элементам дерева их шаблоны</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ApplyThisTemplateChanges(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить только изменения в дереве шаблона</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.OwnerTable">
            <summary>Таблица - владелец этой виртуальной таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsColumn">
            <summary>Таблица является столбцом</summary>
            <remarks>Таблица распределяет свои дочерние ячейки как строки в столбце, т.е. сверху вниз</remarks>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsFixedStructureArea">
            <summary>Таблица с фиксированной структурой ячеек. 
            Для совместимости с бланками старого формата</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AssignIsFixedStructureArea(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить новое значение свойства IsFixedStructureArea</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsRow">
            <summary>Таблица является строкой</summary>
            <remarks>Таблица распределяет свои дочерние ячейки как столбцы в строке, т.е. слева направо.</remarks>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CanAddChildElement(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Проверить можно ли добавить заданный элемент в этот элемент</summary>
            <param name="child">Вставляемый элемент</param>
            <returns>Возвращает true, если заданный элемент можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CanAddChildElement(System.Type)">
            <summary>Проверить можно ли добавить элемент заданного типа в этот элемент</summary>
            <param name="type">Тип вставляемого элемента</param>
            <returns>Возвращает true, если элемент заданного типа можно добавить в этот элемент</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.ColumnName">
            <summary>Имя столбца</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.RowName">
            <summary>Имя строки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertNewRow(System.Int32,Intermech.Interfaces.Document.RectangleElement,System.Boolean,System.Boolean)">
            <summary>Создать и вставить новую строку</summary>
            <param name="index">Индекс строки в Nodes</param>
            <param name="rowModel">Образец строки</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsTopLevelTable">
            <summary>Ячейка является таблицей верхнего уровня, 
            т.е. не принадлежит какой либо таблице</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.TopLevelTable">
            <summary>Таблица верхнего уровня в состав которой входит ячейка,
            если ячейка сама таблица верхнего уровня, то возвращает указатель на саму себя</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AssignParent(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить значение свойству Parent</summary>
            <param name="value">Новое значение Parent</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AssignPage(Intermech.Interfaces.Document.PageData,System.Boolean,System.Boolean)">
            <summary>Присвоить значение свойству Page</summary>
            <param name="value">Новое значение Page</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertChildNode(System.Int32,Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Вставить в заданную позицию дочерний узел</summary>
            <param name="index">Позиция в которую будет вставлен узел</param>
            <param name="child">Узел</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="uniteTable">Объединить распределенные ячейки перед вставкой</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isNew">Узел новый и не требуется это проверять</param>
            <returns>true, если вставка не была отменена</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertAfterCell(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.RectangleElement)">
            <summary>
            Вставить после заданной ячейки таблицы новый элемент с учётом цепочек данных разбитых по страницам
            </summary>
            <param name="curCell">Ячейка за которой необходимо вставить</param>
            <param name="newCell">Новая ячейка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertBeforeCell(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.RectangleElement)">
            <summary>
            Вставить перед заданной ячейки таблицы новый элемент с учётом цепочек данных разбитых по страницам
            </summary>
            <param name="curCell">Ячейка перед которой необходимо вставить</param>
            <param name="newCell">Новая ячейка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OnChildNodeAddedCore(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Базовая часть обработки события ChildNodeAdded
            Вспомогательный метод, чтобы можно было переопределять обработку не меняя последовательности вызова событий</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.TableData.ChildNodeAddedInFlowChain">
            <summary>Событие Добавлен дочерний узел где-то в цепочке разбития данных</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.TableData.ChildNodeRemovedInFlowChain">
            <summary>Событие Удалён дочерний узел где-то в цепочке разбития данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OnChildNodeRemovedCore(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Базовая часть обработки события ChildNodeRemoved
            Вспомогательный метод, чтобы можно было переопределять обработку не меняя последовательности вызова событий</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsResizableWidth">
            <summary>Разрешен интерфейс изменения ширины</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsResizableHeight">
            <summary>Разрешен интерфейс изменения высоты</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.PostProcessAddChildNode(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Метод вызывается после добавления дочернего элемента, но до вызова события ChildNodeAdded</summary>
            <param name="child">Дочерний элемент</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.PostExchangeChildsMethod(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Метод вызывается после того как два дочерних элемента поменяются местами</summary>
            <param name="index1">Индекс одного элемента</param>
            <param name="index2">Индекс второго элемента</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OnRemoved(Intermech.Interfaces.Document.Removed_EventArgs)">
            <summary>Генерирует событие Removed</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OnBranchRemoved(Intermech.Interfaces.Document.Removed_EventArgs)">
            <summary>Метод вызывается при удалении ветки, в которой находится этот узел</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OnChildNodeRemoved(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Генерирует событие ChildNodeRemoved</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetDataShowElementType">
            <summary>Получить тип для ячейки по умолчанию</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FlowIsEmpty(Intermech.Interfaces.Document.FlowID)">
            <summary>Проверить есть ли данные заданного потока в таблице</summary>
            <param name="flow">Идентификатор потока данных</param>
            <returns>Возвращает true, если данных потока в таблице нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AllFlowsIsEmpty">
            <summary>Таблица не содержит данных потока.
            Цепочка следующих таблиц не проверяется</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.IsEmptyData(System.Boolean,System.Boolean)">
            <summary>Элемент не содержит данных
            <remarks>
            Если emptyCellIsData - true, то ячейка считается пустой только когда является продолжением и ничего не содержит 
            (а значит её можно удалить), а одиночная пустая ячейка считается содержимым для таблицы
            Если emptyCellIsData - false, то она считается пустой когда не содержит данных либо внутренние ячейки пусты
            </remarks>
            </summary>
            <param name="emptyCellIsData">Допустимы пустые ячейки</param>
            <param name="checkNextTable">Проверять следующую ячейку</param>
            <returns></returns>        
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OnNameChanged(Intermech.Interfaces.Document.NameChanged_EventArgs)">
            <summary>Генерирует событие NameChanged</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SplitCell(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Разбить эту ячейку</summary>
            <param name="rows">Строк</param>
            <param name="cols">Столбцов</param>
            <param name="splitOne">Разбивать на таблицу 1x1</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SplitChildCell(Intermech.Interfaces.Document.RectangleElement,System.Int32,System.Int32)">
            <summary>Для внутреннего использования. Разбить дочернюю ячейку на одном уровне. 
            Вызывается из SplitCell</summary>
            <param name="cell">Дочерняя ячейка</param>
            <param name="rows">Строк</param>
            <param name="cols">Столбцов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.UserCommand_Delete(System.Boolean)">
            <summary>Команда пользователя "Удалить". В общем случае не совпадает с Remove()</summary>
            <param name="update">Обновлять внешний вид и разбивку по страницам</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ComparePosition(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.RectangleElement)">
            <summary>Сравнить положение двух ячеек</summary>
            <param name="cell1"></param>
            <param name="cell2"></param>
            <returns>Результат сравнения. 
            -1 означает cell1 меньше cell2
            0 означает cell1 равно cell2
            1 означает cell1 больше cell2
            </returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.CellsEnumerator">
            <summary>Энумератор для циклов прохода по ячейкам таблицы. Игнорирует узлы другого типа</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.TextCellsEnumerator">
            <summary>Энумератор для циклов прохода по ячейкам таблицы. Игнорирует узлы другого типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.IsAVSRowDocNode(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Узел документа является строкой спецификации</summary>
            <param name="docNode">Узел документа</param>
            <returns>true, если заданный узел документа является строкой спецификации</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InitPropertiesBeforeReadCells(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Инициализация собственных свойств, перед загрузкой ячеек из XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ConvertOldXmlElementName(System.Int32,System.String,System.Nullable{System.Boolean}@)">
            <summary>Преобразовать XML имя элемента документа для поддержки документов до 13 версии</summary>
            <param name="fileVersion">Версия файла</param>
            <param name="xmlElementName">Имя элемента документа</param>
            <param name="childIsColumn">Если возвращает не null значение, значит нужно установить флаг IsColumn.
            Если возвращает null, то игнорировать</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ConvertXmlElementNameToDataClassName(System.String)">
            <summary>Преобразовать имя XML элемента в имя класса для загрузки на серверной части</summary>
            <param name="xmlElementName">Имя элемента документа</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CreateChildCellFromXmlTypeName(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Создать экземпляр ячейки таблицы, по имени текущего элемента XML</summary>
            <param name="readArgs"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ReadNonRectangleChildNode(Intermech.Interfaces.Document.XmlReadArgs,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Загрузить узел не являющийся RectangleElement (не ячейка таблицы)</summary>
            <param name="readArgs"></param>
            <param name="childNode"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CalculatePropertiesAfterReadCells(Intermech.Interfaces.Document.XmlReadArgs,Intermech.Interfaces.Document.TableData.ReadCellContext)">
            <summary>Обработка данных после загрузки всех ячеек</summary>
            <param name="readArgs"></param>
            <param name="readContext"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ReadChildCellsFromXMLElements(Intermech.Interfaces.Document.XmlReadArgs,Intermech.Interfaces.Document.TableData.ReadCellContext)">
            <summary>Загрузка ячеек из элементов XML</summary>
            <param name="readArgs"></param>
            <param name="readContext"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ReadFromXmlOldFormats_After(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить узел из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ReadNodeFromXmlPostProcess(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Запускается после загрузки всего дерева из XML если версия до 17</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OnDeserialization(System.Object)">
            <summary>Метод вызываемый при десериализации. 
            Реализация IDeserializationCallback.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InitFields">
            <summary>Инициализировать поля объекта</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.#ctor(System.Boolean,Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="isColumn">Столбец</param>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Размеры элемента</param>
            <param name="visible">Видимый</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Размеры элемента</param>
            <param name="visible">Видимый</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать инициализацию полей</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CreateTable(System.Boolean,Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Конструктор таблицы</summary>
            <param name="parent">Родительский узел</param>
            <param name="tableParams">Параметры строк и столбцов</param>
            <param name="bounds">Границы</param>
            <param name="visible">Видимый</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CreateTable(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.CreateTableParams,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Конструктор таблицы</summary>
            <param name="parent">Родительский узел</param>
            <param name="tableParams">Параметры строк и столбцов</param>
            <param name="bounds">Границы</param>
            <param name="visible">Видимый</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetTableStruture(Intermech.Interfaces.Document.CreateTableParams)">
            <summary>Конструктор таблицы</summary>
            <param name="parent">Родительский узел</param>
            <param name="tableParams">Параметры строк и столбцов</param>
            <param name="bounds">Границы</param>
            <param name="visible">Видимый</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CreateVirtualTable(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Создать виртуальную таблицу</summary>
            <param name="parent">Родительский узел в виртуальном или реальном дереве</param>
            <param name="owner">Узел в реальном дереве, дочерние узлы которого представляет этот виртуальный узел</param>
            <returns>Виртуальная таблица</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindDataPositionInFlow(System.Int32,Intermech.Interfaces.Document.TableData@)">
            <summary>Найти позицию ячейки данных по сквозному индексу в потоке.
            Ищет начиная с этой таблицы, даже если эта таблица - продолжение!</summary>
            <param name="dataPosition">Сквозной индекс ячейки данных</param>
            <param name="dataOwner">Родитель для ячейки данных</param>
            <returns>Индекс в родительской таблице. Если индекс не найден, то вернет -1</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindFirstCellInDataFlow">
            <summary>Найти первую ячейку/строку данных в потоке</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindDataCellFromPosition(System.Int32,Intermech.Interfaces.Document.TableData@)">
            <summary>Найти ячейку данных начиная с заданной позиции.
            Используется только после FindDataPositionInFlow для поиска в цепочке пустых таблиц, 
            когда найдена позиция для вставки данных, но не найдена сама ячейка, 
            которая может находиться дальше, после удаления без разбивки.
            </summary>
            <param name="startIndex">Сквозной индекс ячейки данных</param>
            <param name="dataOwner">Родитель для ячейки данных</param>
            <returns>Индекс в родительской таблице. Если индекс не найден, то вернет -1</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindLastDataPositionInFlow(Intermech.Interfaces.Document.TableData@)">
            <summary>Найти последний элемент в потоке</summary>
            <param name="dataOwner">Владелец последнего элемента</param>
            <returns>Индекс последнего элемента</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindLastDataCellInFlow(Intermech.Interfaces.Document.TableData@)">
            <summary>Найти последний элемент в потоке</summary>
            <param name="dataOwner">Владелец последнего элемента</param>
            <returns>Индекс последнего элемента</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindNextDataPositionInFlow(System.Int32,Intermech.Interfaces.Document.TableData@)">
            <summary>Найти позицию ячейки данных по сквозному индексу в потоке.
            Если для следующей за заданной ячейкой нет следующей позиции то возвращается индекс для вставки (он равен Count списка!)</summary>
            <param name="prevCellPosition">Индекс в этой таблице предыдущей ячейки данных</param>
            <param name="dataOwner">Родитель для ячейки данных</param>
            <returns>Индекс в родительской таблице</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindPrevDataCellInFlow(System.Int32)">
            <summary>Найти предыдущую ячейку данных в потоке этой таблицы</summary>
            <param name="cellPosition">Индекс в этой таблице текущей ячейки данных</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindNextDataCellInFlow(System.Int32)">
            <summary>Найти следующую ячейку данных в потоке данных внутри этой таблицы</summary>
            <param name="cellPosition">Индекс в этой таблице текущей ячейки данных</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindNextVisibleCellInThisTable(System.Int32)">
            <summary>Найти следующую видимую ячейку в этой таблице</summary>
            <param name="currentCellIndex">Текущая ячейка</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.UpdateNodeLinks(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить ссылки на узлы</summary>
            <param name="recursive">Для всех дочерних элементов</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.TableCellType">
            <summary>Тип ячейки таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.Reference">
            <summary>Ссылка на источник данных таблицы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AssignReference(Intermech.Interfaces.Document.ReferenceBase,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству Reference</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.Page_DocumentChanged(System.Object,Intermech.Interfaces.Document.DocumentChanged_EventArgs)">
            <summary>Обработчик события DocumentChanged</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetDataEnumerator">
            <summary>Перечислитель для цикла по данным</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ConvertToHeader(System.Boolean)">
            <summary>Преобразовать в ячейку-шапку рекурсивно. Удаляет ячейки данных</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.AutoSizeHeight">
            <summary>Автоматически подбирать высоту таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.AutoSizeWidth">
            <summary>Автоматически подбирать высоту таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.FlowID">
            <summary>Идентификатор потока</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RestoreFlowId">
            <summary>Восстановить идентификаторы потоков</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.IsParentFlow(Intermech.Interfaces.Document.IParentFlow)">
            <summary>Является ли заданный поток родительским</summary>
            <param name="flow">Родительский поток</param>
            <returns>true, если заданный поток родитель для этого элемента</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetLastChaineElement(Intermech.Interfaces.Document.IParentFlow)">
            <summary>Получить последний элемент цепочки в пределах заданного потока</summary>
            <param name="baseFlow">Родительский поток</param>
            <returns>Последний элемент цепочки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetFirstChaineElement(Intermech.Interfaces.Document.IParentFlow)">
            <summary>Получить первый элемент цепочки в пределах заданного потока</summary>
            <param name="baseFlow">Родительский поток</param>
            <returns>Первый элемент цепочки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InsertNextFlowChaineElement(Intermech.Interfaces.Document.IParentFlow)">
            <summary>Вставить следующий элемент потока в цепочку</summary>
            <param name="newNextFlow">Старый следующий родительский элемент потока</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetFlowID(Intermech.Interfaces.Document.FlowID,System.Boolean,System.Boolean)">
            <summary>Назначить свойство FlowID</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsFirstInFlow">
            <summary>Таблица является первой в потоке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsLastInFlow">
            <summary>Ячейка является последней в потоке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindNotEmptyPrevTable">
            <summary>Найти предыдущую непустую таблицу потока данных</summary>
            <returns>Предыдущую непустую таблицу</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsPageFlow">
            <summary>Данные таблицы могут распределяться по страницам</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsFirstInFlowOnPage">
            <summary>Таблица является первой в потоке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsLocalFlow">
            <summary>Данные таблицы могут распределяться в пределах одного уровня</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CutFromChain">
            <summary>Вырезать из цепочки потока, не разорвав цепочки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.MinRowsForDynamicHeaderGroup">
            <summary>
            Настройка минимального количества строк для группировки с динамическим заголовком
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.DesiredPageNumber">
            <inheritdoc />
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AssignMinHeight(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству MinHeight</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Установить флаг, сбрасывающий наследование</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.UniteTable">
            <summary>Объединить распределенную таблицу в одну. Метод обратный DistributeTable</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OneStepUniteTable(System.Boolean)">
            <summary>Объединить распределенную таблицу в одну. Метод обратный DistributeTable</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CloneGridAndUpdateRefences(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams}@,System.Boolean)">
            <summary>Сделать копию сетки и обновить ссылки на нее из массива</summary>
            <param name="gridCols">Сетка, которая заменяется на свою копию</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AutoSizeCells(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams})">
            <summary>Автоматически настроить ширину ячеек по содержимому или ширину и высоту относительно владельца</summary>
            <param name="gridCols">Параметры столбцов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetNeedUpdateLayoutForColumns(System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams})">
            <summary>Установить флаг NeedUpdateLayout для столбцов</summary>
            <param name="changedGridColumns">Измененные столбцы</param>
            <param name="originalGridColumns">Оригинальные столбцы</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.MoveFlowDataToPrevTable">
            <summary>Переместить поточные данные в следующую таблицу и исключить эту таблицу из потока данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.MoveFlowDataToNextTable">
            <summary>Переместить поточные данные в предыдущую таблицу и исключить эту таблицу из потока данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetMinimalSizeForDistribute(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Только для внутреннего использования. Получить минимальный неделимый размер для разбивки</summary>
            <note>Используется для определения свободного пространства в только что созданной для переноса таблице</note>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.RealMaxHeight">
            <summary>Максимальная высота. Отличается от MaxHeight тем, что 0 заменяется на UnconstrainedSize</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.SuspendedUpdateLayoutFlag">
            <summary>Обновление представлений данных временно заблокировано</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.SuspendedUpdateUIGeometryFlag">
            <summary>Обновление геометрии интерфейса пользователя заблокировано</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.SuspendedRefreshUIFlag">
            <summary>Обновление изображения интерфейса пользователя заблокировано</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CalcFirstHeaderCount">
            <summary>Подсчитать количество ячеек заголовка в начале таблицы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindNextDataCellInThisTable(System.Int32)">
            <summary>Подсчитать количество ячеек заголовка в начале таблицы</summary>
            <param name="currentIndex">Текущая ячейка, за которой нужно искать. Если искать нужно с начала, то -1</param>
            <returns>Возвращает первую ячейку данных, или -1, если в этой таблице она не найдена (на следующую не переходит)</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CalcDataCellCount">
            <summary>Подсчитать количество ячеек данных в таблице</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.HeaderIsNeed(System.Boolean,Intermech.Interfaces.Document.HeaderShowType)">
            <summary>Для заданного значения isFirstInFlow 
            заголовок заданного типа должен присутствовать в таблице</summary>
            <param name="isFirstInFlow">Элемент является первым в потоке</param>
            <param name="showType">Тип заголовка</param>
            <returns>Возвращает true, если для заданного значения isFirstInFlow 
            заголовок заданного типа должен присутствовать в таблице</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CanVerticalDistribute">
            <summary>Может ли таблица переносить данные (распределять узлы Nodes) не помещающиеся по высоте</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CanVerticalSplit">
            <summary>Может ли таблица разбиваться для распределения данных вертикально</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CanHorizontalDistribute">
            <summary>Может ли таблица переносить данные не помещающиеся по ширине</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AddNewTableAndParentsInDataFlow">
            <summary>Создать и вставить новую таблицу для продолжения разбивки и
            последующего переноса на нее не поместившихся данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.ConnectFlowToPage">
            <summary>Связать цепочку распределения потока со страницей</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DisconnectFlowFromPage">
            <summary>Разорвать связь цепочки распределения потока со страницей</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindParentFlow">
            <summary>Найти родительский элемент цепочки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.ParentFlow">
            <summary>Родительский элемент цепочки. Для подтаблицы это родительская таблица!</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AssignParentFlow(Intermech.Interfaces.Document.IParentFlow)">
            <summary>Присвоить значение ParentFlow без вызова 
            ParentFlow.AddChildFlowElement или ParentFlow.RemoveChildFlowElement</summary>
            <param name="value">Новое значение ParentFlow</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.PrevTable">
            <summary>Предыдущая таблица цепочки распределения потока данных</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.NextTable">
            <summary>Следующая таблица цепочки распределения потока данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindFirstTable">
            <summary>Найти первую таблицу в цепочке разбивки таблицы по страницам</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.NextFlowElement">
            <summary>Следующий элемент цепочки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.PrevFlowElement">
            <summary>Предыдущий элемент цепочки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.FindLastChainElement(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Найти последний элемент заданной цепочки</summary>
            <param name="element">Элемент цепочки с которого нужно начать поиск</param>
            <returns>Последний элемент цепочки</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetLastFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить последний элемент цепочки для заданного потока данных</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Последний элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetPrevFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить предыдущий элемент цепочки для заданного потока данных</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Предыдущий элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetFirstFlowElement(Intermech.Interfaces.Document.FlowID)">
            <summary>Получить первый элемент цепочки для заданного потока данных.
            Ищет внутри и по цепочкам дочерних узлов</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Первый элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetFirstFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить первый элемент цепочки для заданного потока данных.
            Ищет внутри и по цепочкам дочерних узлов</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Первый элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetNextFlowElement(Intermech.Interfaces.Document.FlowID,Intermech.Interfaces.Document.IFlowElement@)">
            <summary>Получить следующий элемент цепочки для заданного потока данных</summary>
            <param name="flow">Идентификатор потока данных</param>
            <param name="flowElementByName">Если не найден по идентификатору, но есть одноимённый поток</param>
            <returns>Следующий элемент цепочки для заданного потока данных</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.AddChildFlowElement(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Добавить дочерний элемент цепочки</summary>
            <param name="child">Дочерний элемент цепочки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RemoveChildFlowElement(Intermech.Interfaces.Document.IFlowElement)">
            <summary>Удалить дочерний элемент цепочки</summary>
            <param name="child">Дочерний элемент цепочки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RestoreLinks(System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Восстановить сохраненные ссылки.
            Сохраняются и восстанавливаются поля [ExternalLink]</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки.
            Если объект на который есть ссылка не копировался, то ссылка остается null</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CloneFromTemplate(System.Boolean,System.Boolean)">
            <summary>Создать копию элемента используя этот узел как шаблон</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyDataNodes">Копировать узлы-данные в таблицах</param>
            <returns>Копия узла</returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.TableData.gridColumnsParams">
            <summary>Столбцы сетки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TableData.gridRowsParams">
            <summary>Строки сетки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.DistributeBuffer">
            <summary>Буфер разбивки элементов по страницам</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TableData.distributeBuffer">
            <summary>Буфер разбивки элементов по страницам</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TableData.disabledHeaders">
            <summary>Заблокированные заголовки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TableData.FreeSpace">
            <summary>Текущее свободное место для размещения потока данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.UpdateLayout(System.Boolean)">
            <summary>Обновить представление данных</summary>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.Distribute(Intermech.Interfaces.Document.DistributeContext,System.Boolean)">
            <summary>Вызывает разбивку по страницам</summary>
            <param name="context">Контекст разбивки</param>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DistributeTable(Intermech.Interfaces.Document.DistributeContext,System.Boolean)">
            <summary>Распределить данные потока таблицы</summary>
            <param name="context">Контекст разбивки</param>
            <param name="updateUI">Обновить пользовательский интерфейс после разбивки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DistributeHeaders(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Упорядочить заголовки таблицы</summary>
            <param name="context">Контекст разбивки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DistributeData(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Распределить данные по таблицам и страницам</summary>
            <param name="context">Контекст разбивки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.HandleDynamicGroupHeaderAtStartDistributeDataCell(Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.DistributeDataEnumerator)">
            <summary>Обработать динамические заголовки групп.
            Внимание, метод может добавлять и удалять ячейки со смещением текущей позиции в энумераторе dataFlow</summary>
            <param name="context"></param>
            <param name="dataFlow"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.UpdateDynamicHeaderTextForCell(Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.DistributeDataEnumerator,System.String)">
            <summary>Обновить текст для ячейки в сгруппированной записи в зависимости от результата группировки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.UpdateDynamicGroupHeaderInDistributePosition(Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.DistributeDataEnumerator,System.String)">
            <summary>Проверить нужен ли в этой точке разбивки динамический заголовок и вставить/удалить его</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.PrepareCellBoundsForDistribute(Intermech.Interfaces.Document.DistributeDataEnumerator,Intermech.Interfaces.Document.DistributeContext,System.Boolean,Intermech.Interfaces.Document.DistributeContext,System.Single@)">
            <summary>Рассчитать размер ячейки в перед запуском её разбивки.
            Меняет положение, и, возможно, размеры</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InternalDistributeHeaderCells(Intermech.Interfaces.Document.DistributeContext,System.Int32)">
            <summary>
            Распределить ячейки заголовка,  пересчитать координаты, обновить геометрию
            </summary>
            <param name="context">контекст распределения ячеек всей таблицы</param>
            <param name="headerCount">количество ячеек заголовка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.UpdateTryNotBreakFlagByDistributeDataCellContext(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Проверить флаги TryNotBreak в контексте разбивки ячеек данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.HandleLastCellDistributeResult(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.DistributeContext)">
            <summary>Уточнить результат распределения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InternalCheckDistributeDataCellResult(Intermech.Interfaces.Document.DistributeDataEnumerator,Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.DistributeContext)">
            <summary>
            Проверка результата разбивки
            </summary>
            <returns>true - если все хорошо и разбивку можно продолжать; false - выход из цикла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.UpdateBoundsSkipAfter">
            <summary>Обновить размеры с учётом пропусков строк после ячейки для этой ячейки и всех наследников в конце таблиц</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InternalDistributeDataCalcPreferredCellSize(Intermech.Interfaces.Document.DistributeDataEnumerator,Intermech.Interfaces.Document.DistributeContext,System.Single@)">
            <summary>
            Рассчитать предполагаемый размер ячейки исходя из размера таблицы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.CheckDistributeCurrentCellForThisTable(Intermech.Interfaces.Document.DistributeDataEnumerator,Intermech.Interfaces.Document.DistributeContext,System.Boolean)">
            <summary>
            Проверить условия переноса на другие страницы независимые от размера
            </summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OrderGrid(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Упорядочить сетку</summary>
            <param name="template">Шаблон</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetNeedUpdateLayoutFlag(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить флаг NeedUpdateLayoutFlag</summary>
            <param name="value">Значение флага</param>
            <param name="setInPrevCell">Установить флаг и для предыдущих ячеек</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.IsDistributing">
            <summary>Таблица распределяется в текущий момент</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TableData.AllocateOnlyHeaders">
            <summary>В таблице помещаются только заголовоки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.SetDistributingCount(System.Int32)">
            <summary>Установить значение поля distributingCount, без вызова обновлений</summary>
            <param name="value">Новое значение поля distributingCount</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.BeginDistribute">
            <summary>Начать распределение данных по таблице</summary>
            <remarks>Увеличивает значение счетчика distributeCount для таблицы всех подтаблиц</remarks>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.EndDistribute(System.Boolean)">
            <summary>Закончить распределение данных по таблице</summary>
            <remarks>Уменьшает значение счетчика distributeCount для таблицы всех подтаблиц</remarks>
            <param name="forceEnd">Обнулить все счетчики независимо от их значения</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.TableData.BeforeDistribute">
            <summary>Событие Перед добавлением дочернего узла</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OnBeforeDistribute">
            <summary>Вызывает событие BeforeDistribute</summary>
        </member>
        <member name="E:Intermech.Interfaces.Document.TableData.BeforeDistributeNextTable">
            <summary>Событие Перед разбивкой следующей таблицы в цепочке</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.OnBeforeDistributeNextTable(Intermech.Interfaces.Document.TableData)">
            <summary>Вызывает событие BeforeDistribute</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RecalcFreeSpaceForTableHierarchy(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Изменить количество свободного пространства для таблицы, если необходимо</summary>
            <param name="context"></param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetFirstCellBoundsForStartDistributeTableData(System.Int32,Intermech.Drawing.Common.UniPointF)">
            <summary>Координаты предыдущей ячейки для расчета координат текущей в контексте разбивки таблицы</summary>
            <param name="headerCount">Количество ячеек заголовка в таблице</param>
            <param name="tableLocation">Текущее положение таблицы, для распределения ячеек</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetMinRowSizeFromContext(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Получить минимальный размер строки с учётом контекста при разбивке</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DistributeTableOld(Intermech.Interfaces.Document.DistributeContext,System.Boolean)">
            <summary>Распределить данные потока таблицы</summary>
            <param name="context">Контекст разбивки</param>
            <param name="updateUI">Обновить пользовательский интерфейс после разбивки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DistributeDataOld(Intermech.Interfaces.Document.DistributeContext,System.Int32)">
            <summary>Распределить данные по таблицам и страницам</summary>
            <param name="context">Контекст разбивки</param>
            <param name="headerCount">Количество заголовочных ячеек перед данными</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.DistributeHeadersOld(Intermech.Interfaces.Document.DistributeContext,System.Int32@)">
            <summary>Упорядочить заголовки таблицы</summary>
            <param name="context">Контекст разбивки</param>
            <param name="headerCount">Количество заголовочных ячеек перед данными</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InternalDistributeHeaderCellsOld(Intermech.Interfaces.Document.DistributeContext,System.Int32)">
            <summary>
            Распределить ячейки заголовка,  пересчитать координаты, обновить геометрию
            </summary>
            <param name="context">контекст распределения ячеек всей таблицы</param>
            <param name="headerCount">количество ячеек заголовка</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InternalDistributeDataCheckDistributionResultOld(Intermech.Interfaces.Document.DistributeContext,Intermech.Interfaces.Document.DistributeDataEnumeratorOld,Intermech.Interfaces.Document.TableCellDistributeContextOld,Intermech.Interfaces.Document.TableCellDistributeContextOld)">
            <summary>
            Проверка результата разбивки
            </summary>
            <returns>true - если все хорошо и разбивку можно продолжать; false - выход из цикла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.InternalDistributeDataCalcPreferredCellSizeOld(Intermech.Interfaces.Document.DistributeDataEnumeratorOld,Intermech.Interfaces.Document.TableCellDistributeContextOld,System.Single@)">
            <summary>
            Рассчитать предполагаемый размер ячейки исходя из размера таблицы
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetFirstCellBoundsForStartDistributeTableDataOld(System.Int32,Intermech.Drawing.Common.UniPointF)">
            <summary>Координаты предыдущей ячейки для расчета координат текущей в контексте разбивки таблицы</summary>
            <param name="headerCount">Количество ячеек заголовка в таблице</param>
            <param name="tableLocation">Текущее положение таблицы, для распределения ячеек</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.GetMinRowSizeFromContextOld(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Получить минимальный размер строки с учётом контекста при разбивке</summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableData.RecalcFreeSpaceForTableHierarchyOld(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Изменить количество свободного пространства для таблицы, если необходимо</summary>
            <param name="context"></param>
        </member>
        <member name="T:Intermech.Interfaces.Document.CellNodesEnumerator">
            <summary>Enumerator для перемещения по ячейкам (RectangleElement) в таблице. 
            Пропускает все узлы не являющиеся RectangleElement</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CellNodesEnumerator.#ctor(Intermech.Interfaces.Document.TableData)">
            <summary>Конструктор</summary>
            <param name="table">Таблица, владелец данных</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.CellNodesEnumerator.CurrentCellIndex">
            <summary>Индекс текущей ячейки в родительском объекте</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CellNodesEnumerator.Table">
            <summary>Главная таблица по которой осуществляется проход</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CellNodesEnumerator.MoveNext">
            <summary>Перейти к следующему элементу.
            Если энумератор в исходном состоянии, то команда переводит его на первый элемент (DataIndex = 0)
            Если энумератор был на последнем элементе, то команда переводит энумератор на позицию в которую можно добавлять новый элемент 
            и возвращает false, при этом Current = null, а DataIndex и currentCellIndex указывают на позицию для вставки</summary>
            <returns>Возвращает true, если ещё есть текущий элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CellNodesEnumerator.Reset">
            <summary>Перевести энумератор в исходное состояние</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CellNodesEnumerator.GetEnumerator">
            <summary>Получить энумератор. Возвращает самого себя чтобы можно было использовать в foreach</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.CellNodesEnumerator.System#Collections#IEnumerable#GetEnumerator">
            <summary>Получить энумератор. Возвращает самого себя чтобы можно было использовать в foreach</summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.DataNodesEnumerator">
            <summary>Enumerator для перемещения по данным в таблице</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataNodesEnumerator.#ctor(Intermech.Interfaces.Document.TableData)">
            <summary>Конструктор</summary>
            <param name="mainTable">Таблица, владелец данных</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.DataNodesEnumerator.PrevCell">
            <summary>Только для внутреннего использования. Предыдущий элемент после вызова MoveNext()</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DataNodesEnumerator.CurrentCellIndex">
            <summary>Индекс текущей ячейки в родительском объекте</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DataNodesEnumerator.CurrentCellOwner">
            <summary>таблица </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DataNodesEnumerator.DataIndex">
            <summary>Сквозной индекс текущего элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DataNodesEnumerator.MainTable">
            <summary>Главная таблица по которой осуществляется проход</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DataNodesEnumerator.IsBeforeStart">
            <summary>Перечислитель находится в позиции перед первым элементом.
            Чтобы получить первый элемент (или перейти в первую позицию) необходимо вызвать MoveNext()</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataNodesEnumerator.SetCurrentCell(Intermech.Interfaces.Document.RectangleElement,System.Int32)">
            <summary>Установить текущую позицию</summary>
            <param name="cell">Ячейка</param>
            <param name="dataIndex">Индекс данных</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataNodesEnumerator.RemoveCurrentAndGotoPrev">
            <summary>Удалить</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataNodesEnumerator.InsertAtCurrentPos(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Вставить новый элемент в текущую позицию и сделать его текущим</summary>
            <param name="newCell">Новый элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataNodesEnumerator.AppendAfterPreviousPos(Intermech.Interfaces.Document.RectangleElement)">
            <summary>Добавить новый элемент после предыдущей позиции и сделать его текущим</summary>
            <param name="newCell">Новый элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataNodesEnumerator.MoveNext">
            <summary>Перейти к следующему элементу.
            Если энумератор в исходном состоянии, то команда переводит его на первый элемент (DataIndex = 0)
            Если энумератор был на последнем элементе, то команда переводит энумератор на позицию в которую можно добавлять новый элемент 
            и возвращает false, при этом Current = null, а DataIndex и currentCellIndex указывают на позицию для вставки</summary>
            <returns>Возвращает true, если ещё есть текущий элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataNodesEnumerator.Reset">
            <summary>Перевести энумератор в исходное состояние</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TextCellEnumerator">
            <summary>Enumerator для перемещения по Текстовым ячейкам в сложной строке</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextCellEnumerator.row">
            <summary>Таблица с текстовыми ячейками</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextCellEnumerator.currInternalIndex">
            <summary>Индекс текущего элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextCellEnumerator.#ctor(Intermech.Interfaces.Document.TableData)">
            <summary>Подтаблица содержащая текстовые ячейки</summary>
            <param name="table"></param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextCellEnumerator.Current">
            <summary>Текущий элемент</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextCellEnumerator.Index">
            <summary>Сквозной индекс текущего элемента в этом уровне энумератора</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextCellEnumerator.InnerEnumerator">
            <summary>Энумератор для подтаблиц</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextCellEnumerator.Dispose">
            <summary>Освободить ресурсы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextCellEnumerator.System#Collections#IEnumerator#Current">
            <summary>Текущий элемент для интерфейса IEnumerator</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextCellEnumerator.MoveNext">
            <summary>Перейти к следующему элементу</summary>
            <returns>Возвращает true, если переход успешен и false, если текущий элемент был последним</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextCellEnumerator.Reset">
            <summary>Сбросить энумератор в начальное состояние "перед" первым элементом</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextCellEnumerator.System#Collections#Generic#IEnumerable{Intermech#Interfaces#Document#TextData}#GetEnumerator">
            <summary>Возвращает энумератором самого себя. 
            Используется для подстановки самого энумератора в foreach вместо TableData, так как у него уже есть другой энумератор</summary>
            <returns></returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.DataCellTypeConverter">
            <summary>Конвертер для выбора типа ячеек, отображающих данные</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataCellTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Получает значение, показывающее, поддерживает ли этот объект стандартный 
            набор значений, которые можно выбрать из списка, используя заданную 
            контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <returns>true, если, чтобы найти стандартный набор значений, поддерживаемых данным объектом, следует 
            вызвать метод GetStandardValues, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataCellTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает коллекцию стандартных значений для того типа данных, 
            которым предназначен этот конвертер типа, если предоставлена контекстная 
            информация о формате</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию 
            о формате, которая может быть использована для извлечения дополнительных сведений о среде,
             из которой вызывается этот конвертер. Этот параметр или свойства этого параметра 
             могут иметь значение пустая ссылка</param>
            <returns>TypeConverter.StandardValuesCollection, содержащий стандартный 
            набор допустимых значений, или пустая ссылка, если этот тип данных не поддерживает 
            стандартный набор значений</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.DataCellTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Возвращает значение, показывающее, является ли исчерпывающим списком возможных 
            значений коллекция стандартных значений, возвращаемая методом GetStandardValues, 
            используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <returns>true, если объект TypeConverter.StandardValuesCollection, возвращенный 
            методом GetStandardValues, является исчерпывающим списком возможных значений, 
            false, если возможны другие значения</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.GridColumnsConverter">
            <summary>Конвертер класса для массива столбцов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Возвращает значение, показывающее, может ли этот конвертер преобразовать данный объект 
            в заданный тип, используя заданную контекстную информацию</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="destinationType">Type, представляющий тип, в который требуется сделать преобразование</param>
            <returns>true, если конвертер может осуществить такое преобразование, false, если нет</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Преобразует данное значение в заданный тип, используя заданные 
            контекстную информацию и информацию о культурной среде</summary>
            <param name="context">ITypeDescriptorContext, предоставляющий контекстную информацию о формате</param>
            <param name="culture">Объект CultureInfo. Если передается значение пустая ссылка, 
            то предполагается использование информации о культурной среде</param>
            <param name="value">Объект Object, который нужно преобразовать</param>
            <param name="destinationType">Type, в который требуется преобразовать параметр value</param>
            <returns>Объект Object, представляющий преобразованное значение</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnsConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Поддерживает ли класс получение свойств GetProperties()</summary>
            <param name="context">Контекст дескриптора</param>
            <returns>true, если класс получение свойств GetProperties()</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnsConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>Получить дескрипторы свойств</summary>
            <param name="context">Контекст</param>
            <param name="value">Объект</param>
            <param name="attributes">Атрибуты свойств</param>
            <returns>Коллекция дескрипторов свойств объекта</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.GridColumnDescriptor">
            <summary>Описатель атрибута из AdditionalAttributeCollection для преставления его в PropertyGrid</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnDescriptor.#ctor(System.String,System.Int32,System.Attribute[])">
            <summary>Конструктор</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.GridColumnDescriptor.Attributes">
            <summary>Атрибуты свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnDescriptor.GetValue(System.Object)">
            <summary>Получить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Значение свойства</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnDescriptor.SetValue(System.Object,System.Object)">
            <summary>Установить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <param name="value">Значение свойства</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.GridColumnDescriptor.ComponentType">
            <summary>Тип владельца свойства</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.GridColumnDescriptor.PropertyType">
            <summary>Тип свойства</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnDescriptor.CanResetValue(System.Object)">
            <summary>Можно ли сбросить значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Можно ли сбросить значение свойства</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnDescriptor.ResetValue(System.Object)">
            <summary>Сбросить значение свойства</summary>
            <param name="component">Владелец свойства</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.GridColumnDescriptor.ShouldSerializeValue(System.Object)">
            <summary>Нужно ли сохранить данное значение свойства</summary>
            <param name="component">Владелец свойства</param>
            <returns>Нужно ли сохранить данное значение свойства</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.GridColumnDescriptor.IsReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.GridColumnDescriptor.Category">
            <summary>Категория свойства</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.HeaderShowType">
            <summary>Тип отображения заголовка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.HeaderShowType.All">
            <summary>Показывать всегда</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.HeaderShowType.FirstOnly">
            <summary>Показывать только в первой таблице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.HeaderShowType.NextOnly">
            <summary>Показывать только в следующей таблице</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DistributeResult">
            <summary>Результат распределения данных по странице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeResult.None">
            <summary>Не удалось распределить</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeResult.Part">
            <summary>Удалось распределить в заданную область часть данных</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeResult.BackToPrevious">
            <summary>Распределение должно вернуться к предыдущей странице.
            <remarks> Срабатывает когда элемент на "Последней" странице, 
            или не удалось сохранить ячейку TryNotBreak целой на следующей странице</remarks>
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeResult.All">
            <summary>Удалось распределить все оставшиеся данные в заданную область</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.CellType">
            <summary>Тип ячейки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellType.DataCell">
            <summary>Ячейка данных родительской таблицы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellType.Header">
            <summary>Заголовок таблицы</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.BeforeDistribute_EventHandler">
            <summary>Обработчик события BeforeDistribute</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.CreateTableParams">
            <summary>Параметры таблицы, используется при ее создании</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CreateTableParams.FirstRowIsHeader">
            <summary>Первая строка - заголовок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CreateTableParams.StdRowCount">
            <summary>К-во однотипных строк</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CreateTableParams.RowList">
            <summary>Параметры строк</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CreateTableParams.FirstColIsHeader">
            <summary>Первый столбец - заголовок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CreateTableParams.StdColCount">
            <summary>К-во однотипных столбцов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CreateTableParams.ColumnList">
            <summary>Параметры столбцов</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DistributeDataEnumeratorOld">
            <summary>Специальный энумератор для прохода по ячейкам при разбивке таблицы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeDataEnumeratorOld.baseTable">
            <summary>Разбиваемая таблица для которой собираются ячейки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeDataEnumeratorOld.headerCellsIsAvailable">
            <summary>В этой таблице могут быть ячейки типа заголовок</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DistributeDataEnumeratorOld.canVerticalDistribute">
            <summary>Эту таблицу можно разбивать по вертикали</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DistributeDataEnumeratorOld.#ctor(Intermech.Interfaces.Document.TableData,System.Boolean,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="table">Разбиваемая таблица для которой собираются ячейки</param>
            <param name="headerCellsIsAvailable">В этой таблице могут быть ячейки типа заголовок</param>
            <param name="canVerticalDistribute">Эту таблицу можно разбивать по вертикали</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TableCellDistributeContextOld.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniSizeF,Intermech.Drawing.Common.UniSizeF,System.Boolean,System.Boolean,Intermech.Interfaces.Document.DistributeContext)">
            <inheritdoc />
        </member>
        <member name="M:Intermech.Interfaces.Document.TableCellDistributeContextOld.#ctor">
            <inheritdoc />
        </member>
        <member name="F:Intermech.Interfaces.Document.TextBoxData.TypeNameForConstructorDictionary">
            <summary>Имя типа для словаря конструкторов</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Границы элемента</param>
            <param name="visible">Видимый элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать метод инициализации полей InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignText(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Присвоить новый текст</summary>
            <param name="value">Текст</param>
            <param name="fromOriginalText">Значение устанавливается от оригинальной ячейки дубликату текста</param>
            <param name="updateActiveEditor">Обновить текстовый редактор, если он активен</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="callChain">Цепочка вызовов для защиты от циклических связей. Если null, то проверка стартует внутри</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignText(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить новый текст</summary>
            <param name="plainText">Текст без форматирования</param>
            <param name="rtfText">RTF текст</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignText(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить новый текст</summary>
            <param name="plainText">Текст без форматирования</param>
            <param name="rtfText">RTF текст</param>
            <param name="fromOriginalText">Значение устанавливается от оригинальной ячейки дубликату текста</param>
            <param name="updateActiveEditor">Обновить текстовый редактор, если он активен</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.SetDuplicateTextForAllPages(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить новое значение свойства DuplicateTextForAllPages</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.UpdateDuplicatedText(System.Boolean,System.Boolean)">
            <summary>Обновить дублированный текст</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Возвращает true, если был получен дублированный текст. false, если это оригинал</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.GetActualText(System.String@,System.String@,System.Boolean)">
            <summary>Получить полный текст цепочки с учётом редактируемого в ячейке</summary>
            <param name="planeText">Текст без форматирования</param>
            <param name="rtfText">Текст в формате RTF</param>
            <param name="onlyRtfIfExist">Получать только RTF, если он есть</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.Rtf">
            <summary>Отформатированный текст в формате RTF</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.IsEmptyText">
            <summary>В ячейке ничего не отображается</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.StartCharIndex">
            <summary>Позиция с которой начинается распределённый текст в этой ячейке</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.ProtectedFirstCharCount">
            <summary>Количество заблокированных для редактирования первых символов.
            Назначается внешними программами, например AVS. В XML не сохраняется.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignProtectedFirstCharCount(System.Int32)">
            <summary>Установить значение ProtectedFirstCharCount</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.ProtectedEndCharCount">
            <summary>Количество заблокированных для редактирования последних символов.
            Назначается внешними программами, например AVS. В XML не сохраняется.</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignProtectedEndCharCount(System.Int32)">
            <summary>Установить значение ProtectedEndCharCount</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.SetNeedUpdateLayoutFlag(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить флаг NeedUpdateLayoutFlag</summary>
            <param name="value">Значение флага</param>
            <param name="setInPrevCell">Установить флаг и для предыдущих ячеек</param>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.CanActivateInPlaceEditor">
            <summary>Можно активировать редактирование по месту</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.OnTextChanged(Intermech.Interfaces.Document.TextChanged_EventArgs)">
            <summary>Вызывает событие Текст изменен</summary>
            <param name="e">Данные события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.CopyTextAndFormatTo(Intermech.Interfaces.Document.TextData)">
            <summary>Скопировать текст и форматирование в другой элемент</summary>
            <param name="destination">Элемент приёмник</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.AutoSizeHeight">
            <summary>Автоматически подбирать размер</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignAutoSizeHeight(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить значение свойству AutoSizeHeight</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Устанавливать перекрывающий флаг</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.AutoSize">
            <summary>Автоматически подбирать размер</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.AutoSizeWidth">
            <summary>Автоматически подбирать размер</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.FontAutoSize">
            <summary>Вписывать текст в размеры полей</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.ExactLineSpacingForFixedSizeRow">
            <summary>Подгонять размеры строк текста под заданный фиксированный размер строки сетки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignExactLineSpacingForFixedSizeRow(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству ExactLineSpacingForFixedSizeRow</summary>
            <param name="value">Значение</param>
            <param name="updateDoc">Обновлять разбивку</param>
            <param name="setOverrideFlag">Перекрывать наследование параметра по шаблону</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignAutoSizeWidth(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству AutoSizeWidth</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Перекрывать наследование параметра по шаблону</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignFontAutoSize(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству FontAutoSize</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Перекрывать наследование параметра по шаблону</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignAutoSize(Intermech.Interfaces.Document.AutoSizeDirection,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству AutoSize</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Перекрывать наследование параметра по шаблону</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.GetMaximumHeight">
            <summary>Получить максимальную высоту</summary>
            <returns>Максимальную высоту</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.ContentHeight">
            <summary>Высота содержимого ячейки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.NeedUpdateMinHeight">
            <summary>Для внутреннего использования. Необходимо обновить минимальный размер</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.MaxHeight">
            <summary>Максимальная высота</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignMaxHeight(System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству MaxHeight</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
            <param name="setOverrideFlag">Перекрывать наследование параметра по шаблону</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.MinWidth">
            <summary>Минимальная ширина ячейки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.NeedUpdateMinWidth">
            <summary>Для внутреннего использования. Необходимо обновить минимальный размер</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.Distribute(Intermech.Interfaces.Document.DistributeContext,System.Boolean)">
            <summary>Вызывает разбивку по страницам</summary>
            <param name="context">Контекст разбивки</param>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.UpdateLayout(System.Boolean)">
            <summary>Обновить представление данных</summary>
            <param name="updateUI">Обновлять пользовательский интерфейс</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.CanSplitData">
            <summary>Можно ли распределять данные по страницам</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AllFlowsIsEmpty">
            <summary>Поток пустой</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.DistributeCell(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Распределить данные по ячейке представления</summary>
            <param name="context">Контекст разбивки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.DistributeText(Intermech.Interfaces.Document.DistributeContext,System.Boolean,System.Boolean)">
            <summary>Разбить текст</summary>
            <param name="context">Контекст разбивки</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.GetMinimalSizeForDistribute(Intermech.Interfaces.Document.DistributeContext)">
            <summary>Только для внутреннего использования. Получить минимальный неделимый размер для разбивки</summary>
            <note>Используется для определения свободного пространства в только что созданной для переноса таблице</note>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.IsDistributedText">
            <summary>Текст в поле может разбиваться по страницам</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.MeasureText(Intermech.Interfaces.Document.DistributeContext,System.String,System.Boolean,System.Int32,Intermech.Drawing.Common.UniSizeF,System.Int32@)">
            <summary>Отмерить текст</summary>
            <param name="text">Распределяемый текст</param>
            <param name="isRTF">Текст в формате RTF</param>
            <param name="firstTextPos">Начало разбитого текста для этой ячейки</param>
            <param name="maxSize">Максимальный размер текста в ячейке</param>
            <param name="nextCellCharPos">Возвращает позицию с которой стартует текст в следующей ячейке</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.AssignTextWidth(System.Single)">
            <summary>Установить значение textWidth</summary>
            <param name="textWidth">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.CreateEmptySingleCell(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Создать пустую ячейку таблицы</summary>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Границы элемента</param>
            <param name="visible">Видимый элемент</param>
            <returns>Ячейка таблицы</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.CreateEmptyTable(System.Boolean,Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Создать пустую таблицу</summary>
            <param name="isColumn">Столбец</param>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Размеры элемента</param>
            <param name="visible">Видимый</param>
            <returns>Таблица</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.ReadOnly">
            <summary>Пользователь не может редактировать данные элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.SetOrientation(Intermech.Interfaces.Document.TextOrientation,System.Boolean,System.Boolean)">
            <summary>Назначить значение Orientation</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextBoxData.ElementTypeName">
            <summary>Имя типа элемента</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.NodeTypeCaption">
            <summary>Наименование типа</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.GetTextLayoutArea(Intermech.Drawing.Common.UniRectangleF)">
            <summary>Получить область для вывода текста</summary>
            <param name="bounds">Границы элемента</param>
            <returns>Область вывода текста</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextBoxData.TextLayoutArea">
            <summary>Область вывода текста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.DrawCell(Intermech.Interfaces.Document.DrawContext,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Collections.Generic.List{Intermech.Interfaces.Document.RowColParams},System.Int32,System.Boolean)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
            <param name="gridCols">Столбцы сетки</param>
            <param name="colIndex">Индекс столбца</param>
            <param name="gridRows">Строки сетки</param>
            <param name="rowIndex">Индекс строки</param>
            <param name="findGridParams">Искать столбец и строк если не заданы</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextBoxData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextBoxData.nextCellCharPos">
            <summary>Первая позиция в тексте с которой отображает следующий элемент в цепочке</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TextData">
            <summary>Элемент отображения данных. 
            Может отображать как собственные данные, так и данные документа.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.ReadOnlyFormating">
            <summary>Форматирование только для чтения. 
            Запрет на форматирование</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.IsCellWithDinamicHeaderGroupedText">
            <summary>
            Ячейка выводит переменный текст для разных состояний записи при включенной динамической группировке
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.AllowFormatingForReadOnlyText">
            <summary>Разрешать форматирование для ReadOnly ячеек</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PropertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.CanCallEditor">
            <summary>Возможен вызов дополнительного редактора для элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.CalcMatrixFromTextToPage(Intermech.Drawing.Common.UniRectangleF,Intermech.Interfaces.Document.TextOrientation,Intermech.Drawing.Common.UniRectangleF@)">
            <summary>
            Матрица преобразования из локальных координат текста в координаты страницы (внутри целевого dstPageRect)
            </summary>
            <param name="dstPageRect">Положение текста на странице</param>
            <param name="txtAngle">Угол поворота</param>
            <param name="textRect">Локальная область текста</param>
            <returns></returns>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextData.DefaultCharFormat">
            <summary>Формат символов по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.CharFormatOverrided">
            <summary>Используется свой CharFormat, а не из шаблона</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.CharFormat">
            <summary>Формат символов</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.RatioOfBaseFontSize">
            <summary>Коэффициент относительно размера шрифта текстового поля в которое вставлена формула. Применимо только для формул</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.PercentOfBaseFontSize">
            <summary>Проценты от размера шрифта текстового поля в которое вставлена формула. Применимо только для формул</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.InitCharFormat(Intermech.Interfaces.Document.CharFormat)">
            <summary>Инициализировать CharFormat ячейки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.SetCharFormat(Intermech.Interfaces.Document.CharFormat,System.Boolean,System.Boolean)">
            <summary>Установить значение свойства CharFormat</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.Orientation">
            <summary>Ориентация текста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.SetOrientation(Intermech.Interfaces.Document.TextOrientation,System.Boolean,System.Boolean)">
            <summary>Назначить значение Orientation</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextData.DefaultParagraphFormat">
            <summary>Формат абзаца по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.ParagraphFormatOverrided">
            <summary>Используется свой ParagraphFormat, а не из шаблона</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.ParagraphFormat">
            <summary>Форматирование абзаца</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.SetParagraphFormat(Intermech.Interfaces.Document.ParagraphFormat,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить значение свойства ParagraphFormat</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="forceOverrideDefault">Перебивать настройку если она была взята по умолчанию и не хранится в элементе</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.ReplaceAVSMaterial">
            <summary>Заменять материалы по списку ключевых слов или спецсимволам.
            После '/S' - числитель, после '/' - знаменатель
            После '^' - верхний индекс, после '/' - нижний
            '\' - заменяется на '/'</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.SetReplaceAVSMaterial(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству ReplaceAVSMaterial с вызовом обработчиков.
            Заменять материалы по списку ключевых слов или спецсимволам.
            После '/S' - числитель, после '/' - знаменатель
            После '^' - верхний индекс, после '/' - нижний
            '\' - заменяется на '/'</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AssignReplaceAVSMaterial(System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству ReplaceAVSMaterial.
            Заменять материалы по списку ключевых слов или спецсимволам.
            После '/S' - числитель, после '/' - знаменатель
            После '^' - верхний индекс, после '/' - нижний
            '\' - заменяется на '/'</summary>
            <param name="value">Значение</param>
            <param name="setOverrideFlag">Установить флаг перекрытия шаблона</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.ReplaceOldAVSSpecChars">
            <summary>Заменять спецсимволы AVS: '~' на неразрывный пробел и '?' на разрыв строки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.SetReplaceOldAVSSpecChars(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству ReplaceOldAVSSpecChars с вызовом обработчиков.
            Заменять спецсимволы AVS: '~' на неразрывный пробел и '?' на разрыв строки</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AssignReplaceOldAVSSpecChars(System.Boolean,System.Boolean)">
            <summary>Задать новое значение свойству ReplaceOldAVSSpecChars.
            Заменять спецсимволы AVS: '~' на неразрывный пробел и '?' на разрыв строки</summary>
            <param name="value">Значение</param>
            <param name="setOverrideFlag">Установить флаг перекрытия шаблона</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.CalcTextBounds(Intermech.Drawing.Common.UniRectangleF,Intermech.Interfaces.Document.MarginsF,Intermech.Interfaces.Document.TextOrientation)">
            <summary>Вычислить размеры области редактирования в мм с учетом полей</summary>
            <returns>Размеры редактора ImRtfEditorCore в мм с учетом полей</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.#ctor(Intermech.Interfaces.Document.DocumentTreeNode,Intermech.Drawing.Common.UniRectangleF,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="parent">Родительский узел</param>
            <param name="bounds">Границы элемента</param>
            <param name="visible">Видимый элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызывать метод инициализации полей InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.CreateEmptyElement(Intermech.Interfaces.Document.DocumentTreeNode@)">
            <summary>Создать пустой экземпляр класса без инициализации полей</summary>
            <param name="element">Ссылка на новый экземпляр класса, элемент создается 
            если на входе element равен null, иначе, считается, что он был создан 
            в перекрытом методе наследника</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.EmptyConstructor">
            <summary>Создать пустой экземпляр класса с инициализацией только самых необходимых полей. 
            Используется в словаре конструкторов.</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.IsEmptyText">
            <summary>В ячейке ничего не отображается</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.DuplicateTextForAllPages">
            <summary>Дублировать текст на всех страницах</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.SetDuplicateTextForAllPages(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить новое значение свойства DuplicateTextForAllPages</summary>  
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.UpdateDuplicatedText(System.Boolean,System.Boolean)">
            <summary>Обновить дублированный текст</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <returns>Возвращает true, если был получен дублированный текст. false, если это оригинал</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.RepeatTextAsHeader">
            <summary>Повторять как заголовок на следующей странице</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.SetRepeatTextAsHeader(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить новое значение свойства RepeatTextAsHeader</summary>  
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.GetFirstTextByTemplate">
            <summary>Получить ячейку с оригиналом дублированного текста</summary>
            <returns></returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.TextFormat">
            <summary>Строка формата вывода текста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AssignTextFormat(System.String,System.Boolean)">
            <summary>Назначить значение TextFormat</summary>
            <param name="value"></param>
            <param name="updateUI"></param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.UseTextFormatForRefs">
            <summary>Использовать форматирование текста в источниках данных</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AssignUseTextFormatForRefs(System.Boolean,System.Boolean)">
            <summary>Назначить значение UseTextFormatForRefs</summary>
            <param name="value"></param>
            <param name="updateUI"></param>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.IsDistributedText">
            <summary>Текст в поле может разбиваться по страницам</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.GetText(System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить текст</summary>
            <remarks>Получает текст по следующим правилам:
            Ссылка на текст имеет наибольший приоритет, затем поле text, затем шаблон</remarks>
            <param name="callChain">Цепочка вызовов для защиты от циклических связей. Если null, то проверка стартует внутри</param>
            <returns>Возвращает текст для этого элемента. Вместо null возвращает "".</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.Text">
            <summary>Текст</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AssignText(System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить новый текст</summary>
            <param name="value">Текст</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AssignText(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить новый текст</summary>
            <param name="value">Текст</param>
            <param name="fromOriginalText">Значение устанавливается от оригинальной ячейки дубликату текста</param>
            <param name="updateActiveEditor">Обновить текстовый редактор, если он активен</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AssignText(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Присвоить новый текст</summary>
            <param name="value">Текст</param>
            <param name="fromOriginalText">Значение устанавливается от оригинальной ячейки дубликату текста</param>
            <param name="updateActiveEditor">Обновить текстовый редактор, если он активен</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="callChain">Цепочка вызовов для защиты от циклических связей. Если null, то проверка стартует внутри</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.UpdateNodeLinks(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить ссылки на узлы</summary>
            <param name="recursive">Для всех дочерних элементов</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.UpdatePrintLinks(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Обновить ссылки на узлы обновляемые при печати
            </summary>
            <param name="recursive">Для всех дочерних элементов</param>
            <param name="saveUndo">Сохранять данные для Undo</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.UpdateNodeAttributeLinks(System.Boolean,System.Boolean,System.Boolean)">
            <summary>Обновить ссылки на атрибуты</summary>
            <param name="recursive">Для всех дочерних элементов</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.UpdateDataIdCacheLinks">
            <summary>Обновить идентификаторы в ссылках на данные по установленным связям с данными</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.CopyTextAndFormatTo(Intermech.Interfaces.Document.TextData)">
            <summary>Для внутреннего использования. Скопировать текст и форматирование в другой элемент. Не производит обновлений</summary>
            <param name="destination">Элемент приёмник</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.TextData.TextChanged">
            <summary>Событие Текст изменен</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.OnTextChanged(Intermech.Interfaces.Document.TextChanged_EventArgs)">
            <summary>Вызывает событие Текст изменен</summary>
            <param name="e">Данные события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.TextData.TextValidating">
            <summary>Событие Текст изменен</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.OnTextValidating(Intermech.Interfaces.Document.TextValidating_EventArgs)">
            <summary>Вызывает событие Текст изменен</summary>
            <param name="e">Данные события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.TextData.TextReadOnly">
            <summary>Событие TextReadOnly</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.OnTextReadOnly(Intermech.Interfaces.Document.TextReadOnly_EventArgs)">
            <summary>Вызывает событие TextReadOnly</summary>
            <param name="e">Данные события</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.ConvertToHeader(System.Boolean)">
            <summary>Преобразовать в ячейку-шапку рекурсивно. Удаляет ячейки данных</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.Intermech#Interfaces#Document#INodeWithReference#Reference">
            <summary>Свойство для интерфейса INodeWithReference</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.TextData.ReferenceToTextSource">
            <summary>Ссылка на источник текста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AssignReferenceToTextSource(Intermech.Interfaces.Document.ReferenceBase,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Назначить новое значение ссылке на источник данных</summary>
            <param name="value">Новая ссылка</param>
            <param name="setOverrideFlag">Устанавливать флаг перекрытия шаблона</param>
            <param name="updateUI">Обновлять интерфейс пользователя</param>
            <param name="updateLayout">Обновлять разбивку документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.ContainsVirtualAttribute(System.String)">
            <summary>Содержит ли объект виртуальный атрибут с указанным именем</summary>
            <param name="attributeName">Имя виртуального атрибута</param>
            <returns>Возвращает true, если объект содержит виртуальный атрибут 
            с указанным именем</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.GetVirtualAttributeValue(System.String,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Получить значение виртуального атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="notNull">Вернуть пустую строку вместо значения null</param>
            <param name="callChain">Цепочка вызовов для защиты от циклических связей. Если null, то работает без проверок</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.SetVirtualAttributeValue(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.List{Intermech.Interfaces.Document.DocumentTreeNode})">
            <summary>Установить значение виртуального атрибута</summary>
            <param name="attributeName">Имя атрибута</param>
            <param name="attributeValue">Значение атрибута</param>
            <param name="callChain">Цепочка вызовов, для защиты от зацикливания</param>
            <returns>Результат выполнения</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.GetVirtualAttributeNames(System.Collections.Specialized.StringCollection,System.Boolean)">
            <summary>Получить список всех имен атрибутов</summary>
            <param name="forSaveOnly">Добавлять в список только те атрибуты, которые должны сохраниться в XML или копироваться при копировании через буфер</param>
            <returns>Список всех имен атрибутов</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.IsEmptyData(System.Boolean,System.Boolean)">
            <summary>Элемент не содержит данных
            <remarks>
            Если emptyCellIsData - true, то ячейка считается пустой только когда является продолжением и ничего не содержит 
            (а значит её можно удалить), а одиночная пустая ячейка считается содержимым для таблицы
            Если emptyCellIsData - false, то она считается пустой когда не содержит данных либо внутренние ячейки пусты
            </remarks>
            </summary>
            <param name="emptyCellIsData">Допустимы пустые ячейки</param>
            <param name="checkNextTable">Проверять следующую ячейку</param>
            <returns></returns>        
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AllFlowsIsEmpty">
            <summary>Поток пустой</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.DeleteLastEndLine(System.String,System.Boolean)">
            <summary>Удалить лишний перевод строки в последней строке</summary>
            <param name="planeText">Текст</param>
            <param name="removeAvsReservedSymbol">Удалять знак '?'</param>
            <returns>Подчищенный текст</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.CanUseNodeAsTemplate(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Можно ли использовать заданный узел как шаблон</summary>
            <param name="node">Узел</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.WriteXmlElements(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в элементы XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.OnDeserialization(System.Object)">
            <summary>Метод вызываемый при десериализации. 
            Реализация IDeserializationCallback</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.RestoreLinks(System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Восстановить сохраненные ссылки</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.CanAddChildElement(Intermech.Interfaces.Document.DocumentTreeNode)">
            <summary>Проверить можно ли добавить заданный элемент в этот элемент</summary>
            <param name="child">Вставляемый элемент</param>
            <returns>Возвращает true, если заданный элемент можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.CanAddChildElement(System.Type)">
            <summary>Проверить можно ли добавить элемент заданного типа в этот элемент</summary>
            <param name="type">Тип вставляемого элемента</param>
            <returns>Возвращает true, если элемент заданного типа можно добавить в этот элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.OnBranchRemoved(Intermech.Interfaces.Document.Removed_EventArgs)">
            <summary>Метод вызывается при удалении ветки, в которой находится этот узел</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.AssignPage(Intermech.Interfaces.Document.PageData,System.Boolean,System.Boolean)">
            <summary>Присвоить значение свойству Page</summary>
            <param name="value">Новое значение Page</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextData.Page_DocumentChanged(System.Object,Intermech.Interfaces.Document.DocumentChanged_EventArgs)">
            <summary>Обработчик события DocumentChanged</summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextData.replaceOldAVSSpecChars">
            <summary>Заменять спецсимволы AVS: '~' на неразрывный пробел и '?' на разрыв строки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextData.CellAttr_ChangedByUser">
            <summary>Имя атрибута в который вносятся данные о изменении текста пользователем</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.PlaneTextFormat">
            <summary>Формат текста</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PlaneTextFormat.HorizontalAlignment">
            <summary>выравнивание текста</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.HorzAlignToStringAlign(Intermech.Interfaces.Document.HorzAlignment)">
            <summary>Преобразовать HorzAlignment в StringAlignment</summary>
            <param name="align">Значение типа HorzAlignment</param>
            <returns>Значение типа StringAlignment</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.StringAlignToHorzAlign(Intermech.Drawing.Common.UniStringAlignment)">
            <summary>Преобразовать StringAlignment в HorzAlignment</summary>
            <param name="align">Значение типа StringAlignment</param>
            <returns>Значение типа HorzAlignment</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.PlaneTextFormat.VerticalAlignment">
            <summary>Выравнивание текста по вертикали</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.VertAlignToStringAlign(Intermech.Interfaces.Document.VertAlignment)">
            <summary>Преобразовать VertAlignment в StringAlignment</summary>
            <param name="align">Значение типа VertAlignment</param>
            <returns>Значение типа StringAlignment</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.StringAlignToVertAlign(Intermech.Drawing.Common.UniStringAlignment)">
            <summary>Преобразовать StringAlignment в VertAlignment</summary>
            <param name="align">Значение типа StringAlignment</param>
            <returns>Значение типа VertAlignment</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.PlaneTextFormat.FormatFlags">
            <summary>Флаги форматирования</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PlaneTextFormat.Trimming">
            <summary>Обрезать текст</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.PlaneTextFormat.HotkeyPrefix">
            <summary>Учитывать префикс горячих клавиш</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.#ctor(Intermech.Drawing.Common.IUniStringFormat)">
            <summary>Конструктор</summary>
            <param name="format">Образец типа StringFormat</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.ToStringFormat">
            <summary>Преобразовать в StringFormat</summary>
            <returns>StringFormat</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.Clone">
            <summary>Клонировать</summary>
            <returns>Клон</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.WriteToXml(System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать поля в XML</summary>
            <param name="elementName">Имя элемента XML, под которым нужно сохранить данные</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.PlaneTextFormat.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить узел из XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.FontXmlWrapper">
            <summary>Вспомогательный класс для XML сериализации класса Font</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FontXmlWrapper.Name">
            <summary>Имя шрифта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FontXmlWrapper.Size">
            <summary>Размер шрифта</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FontXmlWrapper.Style">
            <summary>Стиль</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FontXmlWrapper.Unit">
            <summary>Единицы измерения</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FontXmlWrapper.GdiCharSet">
            <summary>Кодовая страница</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.FontXmlWrapper.GdiVerticalFont">
            <summary>Вертикальный текст</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontXmlWrapper.#ctor(Intermech.Drawing.Common.IUniFont)">
            <summary>Конструктор</summary>
            <param name="font">Шрифт</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontXmlWrapper.ToFont">
            <summary>Преобразовать в класс Font</summary>
            <returns>Соответствующий экземпляр Font</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontXmlWrapper.WriteToXml(System.Xml.XmlWriter)">
            <summary>Сохранить в XML</summary>
            <param name="xw">XmlWriter</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.FontXmlWrapper.ReadFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить из файла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Загруженный экземпляр Font</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.AfterChangeValue_EventHandler">
            <summary>Делегат обработчика события AfterChangeValue</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.AfterChangeValue_EventArgs">
            <summary>Аргументы события AfterChangeValue</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.AfterChangeValue_EventArgs.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TextChanged_EventHandler">
            <summary>Делегат обработчика события TextChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TextChanged_EventArgs">
            <summary>Данные события TextChanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextChanged_EventArgs.SaveModificationDate">
            <summary>Изменения не влияющие на дату модификации документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextChanged_EventArgs.UpdateActiveEditor">
            <summary>Обновить редактор если он активен</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextChanged_EventArgs.NewText">
            <summary>Новый текст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextChanged_EventArgs.OldText">
            <summary>Старый текст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextChanged_EventArgs.ClearRTF">
            <summary>Сбросить RTF</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextChanged_EventArgs.UpdateUI">
            <summary>Обновить интерфейс</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextChanged_EventArgs.UpdateLayout">
            <summary>Обновить разбивку</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextChanged_EventArgs.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="newText">Новый текст</param>
            <param name="clearRTF">Сбросить RTF</param>
            <param name="updateActiveEditor">Обновить редактор если он активен</param>
            <param name="saveModificationDate">Изменения не влияющие на дату модификации документа</param>
            <param name="updateUI">Обновить интерфейс</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.TextValidating_EventHandler">
            <summary>Делегат обработчика события TextChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TextValidating_EventArgs">
            <summary>Данные события TextChanged</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextValidating_EventArgs.Text">
            <summary>Текст</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextValidating_EventArgs.Cancel">
            <summary>Отменить</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextValidating_EventArgs.#ctor(System.String)">
            <summary>Конструктор</summary>
            <param name="newText">Текст</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.TextReadOnly_EventHandler">
            <summary>Делегат обработчика события TextReadOnly</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.TextReadOnly_EventArgs">
            <summary>Данные события TextReadOnly</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.TextReadOnly_EventArgs.ReadOnly">
            <summary>Только для чтения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TextReadOnly_EventArgs.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.UniqueIdGenerator">
            <summary>Генератор уникальных идентификаторов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UniqueIdGenerator.IdFormat">
            <summary>Формат идентификатора</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UniqueIdGenerator.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UniqueIdGenerator.#ctor(System.String)">
            <summary>Конструктор</summary>
            <param name="idFormat">Формат идентификатора</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.UniqueIdGenerator.Item(System.Object)">
            <summary>Возвращает объект по идентификатору</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.UniqueIdGenerator.GenerateUniqueId">
            <summary>Сгеренировать уникальный идентификатор (сам факт генерации не резервирует ид)</summary>
            <returns>Уникальный идентификатор</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.UniqueIdGenerator.GenerateUniqueId(System.Object)">
            <summary>Сгеренировать уникальный идентификатор (сам факт генерации не резервирует ид)</summary>
            <param name="prototypeID">Заготовка идентификатора</param>
            <returns>Уникальный идентификатор</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.UniqueIdGenerator.ContainsId(System.Object)">
            <summary>Используется ли заданный идентификатор</summary>
            <param name="id">Идентификатор</param>
            <returns>Идентификатор уже используется</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.UniqueIdGenerator.AddId(System.Object,System.Object)">
            <summary>Добавить (зарезервировать) объект с идентификатором</summary>
            <param name="id">Идентификатор</param>
            <param name="value">Объект, которому принадлежит идентификатор</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.UniqueIdGenerator.RemoveId(System.Object)">
            <summary>Удалить (освободить) идентификатор</summary>
            <param name="id">Идентификатор</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.UniqueIdGenerator.Clear">
            <summary>
            Очистить словарь идентификаторов
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.UniqueIdGenerator.idCollection">
            <summary>Словарь идентификаторов</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.VisualNode">
            <summary>Визуальный узел документа</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.VisualNode.NoClipRectangle">
            <summary>Прямоугольник охватывающий все допустимое пространство</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.#ctor(System.Boolean)">
            <summary>Конструктор</summary>
            <param name="initFields">Вызвать метод InitFields()</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Конструктор необходимый для десериализации (ISerializable)</summary>
            <param name="info">Заполненный данными SerializationInfo</param>
            <param name="context">Контекст десериализации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.GetSnapPoints(Intermech.Drawing.Common.UniPointF,System.Single,System.Collections.Generic.List{Intermech.Interfaces.Document.SnapPoint},Intermech.Interfaces.Document.VisualNode)">
            <summary>Получить список узлов привязки</summary>
            <param name="originalPoint">Оригинальная точка</param>
            <param name="snapSize">Размер области привязки</param>
            <param name="snapPointList">Список полученных точек</param>
            <param name="excludeNode">Узел который должен исключаться из рассмотрения</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.ShowSelected">
            <summary>Показывать на экране, что узел выбран</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.ShowFocused">
            <summary>Отображать фокус элемента</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.InvertColor(Intermech.Drawing.Common.UniColor)">
            <summary>Инвертировать цвет</summary>
            <param name="c">Исходный цвет</param>
            <returns>Инвертированный цвет</returns>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.NegativeImageAttributes">
            <summary>Атрибуты рисунка для негативного изображения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.NegativeColorMatrix">
            <summary>Матрица преобразования цвета для негативного изображения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.SetNeedUIRecursive(System.Boolean,System.Boolean)">
            <summary>Установить значение свойства NeedUI узлу и всем подузлам</summary>
            <param name="needUI">Значение свойства NeedUI</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.NeedUI">
            <summary>Объекты интерфейса пользователя нужны</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.IsVisibleNow">
            <summary>Видимый в данный момент.
            В некоторых условиях элемент может не отобрнажаться в текущий момент. 
            Например, невыбранные варианты строк данных в шаблоне таблицы</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.Visible">
            <summary>Видимый</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.AssingVisible(System.Boolean)">
            <summary>Установить значение свойства Visible</summary>
            <param name="value">Значение</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.SetVisible(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Установить свойство Visible</summary>
            <param name="value">Значение</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="recursive">Назначить рекурсивно всем нижележащим узлам</param>
            <param name="setOverride">Устанавливать флаг перекрытия свойства шаблона</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.CreateUI">
            <summary>Создать объекты интерфейса пользователя. Должен быть перекрыт в наследнике</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.DestroyUI">
            <summary>Удалить объекты интерфейса пользователя</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.AddChildUI(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean)">
            <summary>Добавить и связать объекты интерфейса пользователя</summary>
            <param name="child">Дочерний узел</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.Draw(Intermech.Interfaces.Document.DrawContext)">
            <summary>Отобразить на объекте Graphics</summary>
            <param name="context">Данные для отрисовки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.UpdateWorldCoor">
            <summary>Обновить мировые координаты элемента преобразовав экранные координаты</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.NeedUpdateUIGeometry">
            <summary>Флаг отложенной необходимости обновить интерфейс</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.SetNeedUpdateUIGeometryRecursive(System.Boolean,System.Boolean)">
            <summary>Установить значение NeedUpdateUIGeometry для узла и всех дочерних узлов</summary>
            <param name="value">Значение NeedUpdateUIGeometry</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.SuspendUpdateUIGeometry">
            <summary>Заблокировать обновление геометрии интерфейса пользователя
            <remarks>Блокировка увеличивает значение счетчика. Разблокировка соответственно уменьшает значение счетчика. При нулевом значении счетчика обновление разрешено.</remarks>>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.ResumeUpdateUIGeometry(System.Boolean,System.Boolean)">
            <summary>Разблокировать обновление геометрии интерфейса пользователя</summary>
            <param name="update">Обновить геометрию</param>
            <param name="refresh">Обновить изображение</param>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.SuspendedUpdateUIGeometryFlag">
            <summary>Обновление геометрии интерфейса пользователя заблокировано</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.SuspendRefreshUI">
            <summary>Заблокировать обновление изображения
            <remarks>Блокировка увеличивает значение счетчика. Разблокировка соответственно уменьшает значение счетчика. При нулевом значении счетчика обновление разрешено.</remarks>>
            </summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.ResumeRefreshUI(System.Boolean)">
            <summary>Разблокировать обновление изображения</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.VisualNode.SuspendedRefreshUIFlag">
            <summary>Обновление изображения интерфейса пользователя заблокировано</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.UpdateUIGeometry(System.Boolean)">
            <summary>Обновить геометрию интерфейса пользователя</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.RefreshUI">
            <summary>Обновить изображение на экране</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.InvalidateUI(Intermech.Drawing.Common.UniRectangle)">
            <summary>Обновить изображение на экране</summary>
            <param name="clipRectangle">Область которую нужно обновить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.InvalidateUI(System.Boolean)">
            <summary>Обновить изображение на экране</summary>
            <param name="force">Обновить даже если заблокировано обновление</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.InvalidateUI(Intermech.Drawing.Common.UniRectangle,System.Boolean)">
            <summary>Обновить изображение на экране</summary>
            <param name="clipRectangle">Область которую нужно обновить</param>
            <param name="force">Обновить даже если заблокировано обновление</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.InvalidateUI(System.Object)">
            <summary>Обновить изображение на экране</summary>
            <param name="region">Область которую нужно обновить</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.SuspendUpdateGeometryRefreshUI">
            <summary>Заблокировать обновление геометрии интерфейса и изображения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.ResumeUpdateRefreshUI(System.Boolean,System.Boolean)">
            <summary>Разблокировать и провести обновление геометрии интерфейса и изображения</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.FilterProperties(System.Collections.IDictionary,System.Attribute[])">
            <summary>Отфильтровать свойства элемента для показа в PopertyGrid</summary>
            <param name="properties">Список PropertyDescriptor свойств</param>
            <param name="attributes">Массив атрибутов элемента</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.WriteXmlAttributes(System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить данные в атрибуты XML</summary>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.ReadFieldFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить поле из текущего узла XML</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Возвращает true, если поле загружено</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.CopyFields(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.IDictionary)">
            <summary>Копировать поля из src</summary>
            <param name="src">Источник</param>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyData">Копировать данные</param>
            <param name="copyDataNodes">Копировать узлы являющиеся ячейками данных для таблиц</param>
            <param name="templateClone">Копирование по шаблону</param>
            <param name="externalLink">Копировать внешние ссылки</param>
            <param name="links">Словарь скопированных ссылок</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.ApplyTreeTemplates(System.Boolean,System.Boolean)">
            <summary>Применить к элементам дерева их шаблоны</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.ApplyTemplateProperties(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Применить к элементу свойства шаблона</summary>
            <param name="template">Шаблон</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Вызов в процессе загрузки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.CloneFromTemplate(System.Boolean,System.Boolean)">
            <summary>Создать копию элемента используя этот узел как шаблон</summary>
            <param name="copyChildren">Копировать дочерние узлы</param>
            <param name="copyDataNodes">Копировать узлы-данные в таблицах</param>
            <returns>Копия узла</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.FindPageElementAtPoint(Intermech.Drawing.Common.UniPointF,System.Int32@,System.Boolean)">
            <summary>Найти элемент страницы под данной точкой</summary>
            <param name="point">Точка</param>
            <param name="layer">Слой</param>
            <param name="firstOnly">Найти первый попавшийся элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.FindPageElementsInRectangle(Intermech.Drawing.Common.UniRectangleF,System.Collections.Generic.List{Intermech.Interfaces.Document.VisualNode},System.Boolean,System.Boolean)">
            <summary>Получить элементы страницы в заданном прямоугольнике</summary>
            <param name="rect">Прямоугольник</param>
            <param name="elements">Возвращает элементы</param>
            <param name="containsOnly">Выбирать только те элементы, которые полностью попадают в прямоугольник</param>
            <param name="childOnly">Не учитывать родительский элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.FindMinSize(Intermech.Drawing.Common.UniSizeF,System.Boolean)">
            <summary>Определить занимаемый размер для AutoSize родителя</summary>
            <param name="currSize">Текущий размер (начальное значение 0)</param>
            <param name="childOnly">Не учитывать родительский элемент</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.FindAlignElements(System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement}@,System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement}@,System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement}@,System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement}@,System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement}@,System.Collections.Generic.List{Intermech.Interfaces.Document.RectangleElement}@,System.Boolean)">
            <param name="alignTop">Список элементов, прижимаемых вверх</param>
            <param name="alignVertCenter">Список центрируемых по вертикали элементов</param>
            <param name="alignBottom">Список элементов, прижимаемых вниз</param>
            <param name="sort">Сортировать списки</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.LessOrEqualWithMiscalculation(System.Single,System.Single,System.Single)">
            <summary>
            Сравнить 2 значения с погрешностью
            </summary>
            <param name="value1">Значение 1</param>
            <param name="value2">Значение 2</param>
            <param name="calcPricision">Погрешность вычислений</param>
            <returns>Возвращает true, если value1 меньше или равно value2 с учётом погрешности calcPricision</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.LessOrEqualWithMiscalculation(System.Single,System.Single)">
            <summary>
            Сравнить 2 значения с погрешностью CoorCalcPrecision
            </summary>
            <param name="value1">Значение 1</param>
            <param name="value2">Значение 2</param>
            <returns>Возвращает true, если value1 меньше или равно value2 с учётом погрешности CoorCalcPrecision</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.LessWithMiscalculation(System.Single,System.Single,System.Single)">
            <summary>
            Сравнить 2 значения с погрешностью
            </summary>
            <param name="value1">Значение 1</param>
            <param name="value2">Значение 2</param>
            <param name="calcPricision">Погрешность вычислений</param>
            <returns>Возвращает true, если value1 меньше value2 с учётом погрешности calcPricision</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.LessWithMiscalculation(System.Single,System.Single)">
            <summary>
            Сравнить 2 значения с погрешностью CoorCalcPrecision
            </summary>
            <param name="value1">Значение 1</param>
            <param name="value2">Значение 2</param>
            <returns>Возвращает true, если value1 меньше value2 с учётом погрешности CoorCalcPrecision</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.MoreWithMiscalculation(System.Single,System.Single,System.Single)">
            <summary>
            Сравнить 2 значения с погрешностью
            </summary>
            <param name="value1">Значение 1</param>
            <param name="value2">Значение 2</param>
            <param name="calcPricision">Погрешность вычислений</param>
            <returns>Возвращает true, если value1 больше value2 с учётом погрешности calcPricision</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.MoreWithMiscalculation(System.Single,System.Single)">
            <summary>
            Сравнить 2 значения с погрешностью CoorCalcPrecision
            </summary>
            <param name="value1">Значение 1</param>
            <param name="value2">Значение 2</param>
            <returns>Возвращает true, если value1 больше value2 с учётом погрешности CoorCalcPrecision</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.MoreOrEqualWithMiscalculation(System.Single,System.Single,System.Single)">
            <summary>
            Сравнить 2 значения с погрешностью
            </summary>
            <param name="value1">Значение 1</param>
            <param name="value2">Значение 2</param>
            <param name="calcPricision">Погрешность вычислений</param>
            <returns>Возвращает true, если value1 больше или равно value2 с учётом погрешности calcPricision</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.MoreOrEqualWithMiscalculation(System.Single,System.Single)">
            <summary>
            Сравнить 2 значения с погрешностью CoorCalcPrecision
            </summary>
            <param name="value1">Значение 1</param>
            <param name="value2">Значение 2</param>
            <returns>Возвращает true, если value1 больше или равно value2 с учётом погрешности CoorCalcPrecision</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.EqualWithMiscalculation(System.Single,System.Single,System.Single)">
            <summary>
            Значения равны с погрешностью
            </summary>
            <param name="value1">Значение 1</param>
            <param name="value2">Значение 2</param>
            <param name="calcPricision">Погрешность вычислений</param>
            <returns>Возвращает true, если value1 меньше или равно value2 с учётом погрешности calcPricision</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.AssignParent(Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Присвоить значение свойству Parent</summary>
            <param name="value">Новое значение Parent</param>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isLoading">Действие в контексте загрузки документа</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.InsertChildNode(System.Int32,Intermech.Interfaces.Document.DocumentTreeNode,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Вставить в заданную позицию дочерний узел</summary>
            <param name="index">Позиция в которую будет вставлен узел</param>
            <param name="child">Узел</param>
            <param name="insertByShift">Узел перемещается в пределах таблицы</param>
            <param name="uniteTable">Объединить распределенные ячейки перед вставкой</param>
            <param name="updateUI">Обновить элементы управления</param>
            <param name="updateLayout">Обновить разбивку</param>
            <param name="isNew">Узел новый и не требуется это проверять</param>
            <returns>true, если вставка не была отменена</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.PreProcessEndChangingStructure(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Выполнить предварительные действия перед окончанием изменения структуры</summary>
            <param name="updateUI">Обновить интерфейс пользователя</param>
            <param name="refreshUI">Обновить изображение в интерфейсе пользователя</param>
            <param name="updateTemplateLinks">Обновить ссылки на шаблоны</param>
            <param name="updateLayout">Обновить разбивку</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.SetReadOnlyForTextRecursive(System.Boolean)">
            <summary>Назначить значение ReadOnly для текстовых ячеек рекурсивно</summary>
            <param name="readOnly">Значение ReadOnly</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.OnChildNodeAdded(Intermech.Interfaces.Document.ChildNode_EventArgs)">
            <summary>Вызывает событие ChildNodeAdded</summary>
            <param name="e">Аргумент события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.VisualNode.VisibleChanged">
            <summary>Генерируется после изменения свойства Visible</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.OnVisibleChanged(Intermech.Interfaces.Document.VisibleChanged_EventArgs)">
            <summary>Вызывает событие VisibleChanged</summary>
            <param name="e">Аргументы события</param>
        </member>
        <member name="E:Intermech.Interfaces.Document.VisualNode.UIGeometryChanged">
            <summary>Генерируется после обновления геометрии интерфейса</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.VisualNode.OnUIGeometryChanged(Intermech.Interfaces.Document.UIGeometryChanged_EventArgs)">
            <summary>Вызывает событие UIGeometryChanged</summary>
            <param name="e">Аргументы события</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.VisualNode.needUpdateUIGeometry">
            <summary>Необходимо обновить геометрию. Метод UpdateUIGeometry</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.VisibleChanged_EventArgs">
            <summary>Аргументы события VisibleChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.VisibleChanged_EventHandler">
            <summary>Обработчик события VisibleChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.UIGeometryChanged_EventArgs">
            <summary>Аргументы события VisibleChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.UIGeometryChanged_EventHandler">
            <summary>Обработчик события VisibleChanged</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.DrawContext">
            <summary>Контекст отрисовки. Данные необходимые для отрисовки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.Graphics">
            <summary>Объект на котором нужно отобразить</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.IsPaint">
            <summary>Отрисовка вызвана событием Paint</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.IsMetafile">
            <summary>Отрисовка в метафайл</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DrawContext.IsDoubleStrikedFormula">
            <summary>
            Обеспечить двойное перечеркивание при рисовании содержимого формулы
            </summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DrawContext.IsStrikedFormula">
            <summary>
            Обеспечить простое перечеркивание при рисовании содержимого формулы
            </summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.IsPdf">
            <summary>Отрисовка в PDF</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.IsPdfSkia">
            <summary>Отрисовка в PDF</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.IsSelected">
            <summary>Элемент выбран</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.IsFocused">
            <summary>Фокус принадлежит элементу</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.DrawInCurrentEditor">
            <summary>Отрисовывать текст используя текущий редактор в RtfInSiteEditorWrapper</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.ClipRectangle">
            <summary>Область в которой нужно отрисовать. Все что вне области не рисуется</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.Layer">
            <summary>Номер слоя. -1 невидимые линии (только для isPaint==true), 0 основной слой фона и данных, 1 слой линий для границ элемента</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.WithoutData">
            <summary>Не отображать данные, только границы и фон</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.IsSkipedSpace">
            <summary>Отрисовка пропущенных строк</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.FirstChildLevel">
            <summary>Рисовать только один уровень дочерних узлов</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.SkipedSpaceSize">
            <summary>Размер для пропущенных строк</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.PixelMode">
            <summary>Рисовать, преобразуя координаты в пикселы самому</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.PixelBounds">
            <summary>Заранее рассчитанные границы в пикселах</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.ShowInvisibleLines">
            <summary>Показывать невидимые линии</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.TransformMatrix">
            <summary>Матрица преобразования координат</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.IsTopRow">
            <summary>Верхняя строка в таблице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.IsBottomRow">
            <summary>Нижняя строка в таблице</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.Borders">
            <summary>Границы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.ParentBorders">
            <summary>Границы родительской таблицы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.displayDPI">
            <summary>DPI монитора</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DrawContext.DisplayDPI">
            <summary>DPI монитора</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.defaultDisplayDPI">
            <summary>Значение DisplayDPI по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DrawContext.DefaultDisplayDPI">
            <summary>Значение DisplayDPI по умолчанию</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DrawContext.GraphicsDPI">
            <summary>DPI Graphics</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.DrawContext.Scale">
            <summary>Масштаб на экране</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.TernPaintBuffer">
            <summary>Буферный экземпляр ImRtfEditor для рисования</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.DrawContext.TernPrintBuffer">
            <summary>Буферный экземпляр ImRtfEditor для печати</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.DrawContext.#ctor(Intermech.Drawing.Common.IUniGraphics,System.Boolean,Intermech.Drawing.Common.UniRectangleF,System.Int32,System.Boolean,System.Boolean,Intermech.Interfaces.Document.ImDocumentData)">
            <summary>Конструктор</summary>
            <param name="g">Объект на котором нужно отобразить</param>
            <param name="isPaint">Отрисовка вызвана событием Paint</param>
            <param name="clipRectangle">Область в которой нужно отрисовать. Все что вне области не рисуется</param>
            <param name="layer">Номер слоя. -1 невидимые линии (только для isPaint==true), 0 основной слой</param>
            <param name="withoutData">Не отображать данные, только границы и фон</param>
            <param name="showInvisibleLines">Отображать невидимые линии</param>
            <param name="transformMatrix">Матрица трансформации</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.DrawContext.#ctor(Intermech.Interfaces.Document.DrawContext)">
            <summary>Конструктор копии контекста</summary>
            <param name="src">Оригинальный контекст</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.CellContext">
            <summary>Контекст ячейки таблицы</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CellContext.#ctor">
            <summary>Конструктор</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.CellContext.#ctor(Intermech.Interfaces.Document.CellContext)">
            <summary>Конструктор копии контекста</summary>
            <param name="src">Оригинальный контекст</param>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellContext.document">
            <summary>Документ</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellContext.Template">
            <summary>Шаблон ячейки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellContext.IsFixedSizeRow">
            <summary>Кратный размер строки, null если не инициализирован</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CellContext.IsFixedSizeRow_NN">
            <summary>Кратный размер строки, не может быть null</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellContext.RowSize">
            <summary>Базовый размер строки</summary>
        </member>
        <member name="P:Intermech.Interfaces.Document.CellContext.RowSize_NN">
            <summary>Базовый размер строки. Non null - вместо null вернёт 0</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellContext.DrawGrid">
            <summary>Требуется отрисовка сетки таблицы</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellContext.margins">
            <summary>Поля ячеек</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellContext.MultiCalcPrecision">
            <summary>Погрешность накапливающаяся после нескольких вычислений</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.CellContext.CalcPrecision0">
            <summary>Погрешность накапливающаяся после нескольких вычислений. 
            Костыль для сохранения поведения страрых документов в местах где не было учёта погрешности</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.SnapPoint">
            <summary>Класс с информацией о точке привязки в объекте</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SnapPoint.Point">
            <summary>Координаты точки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SnapPoint.PointType">
            <summary>Тип точки</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.SnapPoint.#ctor(Intermech.Drawing.Common.UniPointF,Intermech.Interfaces.Document.SnapPointType)">
            <summary>Конструктор</summary>
            <param name="point">Координаты точки</param>
            <param name="pointType">Тип точки</param>
            <param name="snapX">Координата X привязана</param>
            <param name="snapY">Координата Y привязана</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.SnapPoint.SetPoint(Intermech.Drawing.Common.UniPointF,Intermech.Interfaces.Document.SnapPointType)">
            <summary>Назначить точку</summary>
            <param name="point">Точка</param>
            <param name="pointType">Тип точки</param>
            <param name="snapX">Координата X привязана</param>
            <param name="snapY">Координата Y привязана</param>
        </member>
        <member name="T:Intermech.Interfaces.Document.SnapPointType">
            <summary>Тип точки привязки</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SnapPointType.Node">
            <summary>Узловая точка</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SnapPointType.LineX">
            <summary>Привязка к линии по координате X</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SnapPointType.LineY">
            <summary>Привязка к линии по координате X</summary>
        </member>
        <member name="F:Intermech.Interfaces.Document.SnapPointType.LineXY">
            <summary>Привязка к линии по обоим координатам</summary>
        </member>
        <member name="T:Intermech.Interfaces.Document.LeftCoorComparer">
            <summary>Вспомогательный класс для сортировки по левой границе</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.LeftCoorComparer.Compare(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.RectangleElement)">
            <summary>Сравнить объекты X и Y</summary>
            <param name="x">Объект для сравнения</param>
            <param name="y">Объект для сравнения</param>
            <returns>Значение меньше нуля - X меньше Y. 0 - X равен Y. Больше 0 - X больше Y</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.RightCoorComparer">
            <summary>Вспомогательный класс для сортировки по правой границе</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.RightCoorComparer.Compare(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.RectangleElement)">
            <summary>Сравнить объекты X и Y</summary>
            <param name="x">Объект для сравнения</param>
            <param name="y">Объект для сравнения</param>
            <returns>Значение меньше нуля - X ближе Y к правому краю страницы. 
            0 - X равен Y. 
            Больше 0 - X дальше Y от правого края страницы</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.TopCoorComparer">
            <summary>Вспомогательный класс для сортировки по левой границе</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.TopCoorComparer.Compare(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.RectangleElement)">
            <summary>Сравнить объекты X и Y</summary>
            <param name="x">Объект для сравнения</param>
            <param name="y">Объект для сравнения</param>
            <returns>Значение меньше нуля - X меньше Y. 0 - X равен Y. Больше 0 - X больше Y</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.BottomCoorComparer">
            <summary>Вспомогательный класс для сортировки по правой границе</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.BottomCoorComparer.Compare(Intermech.Interfaces.Document.RectangleElement,Intermech.Interfaces.Document.RectangleElement)">
            <summary>Сравнить объекты X и Y</summary>
            <param name="x">Объект для сравнения</param>
            <param name="y">Объект для сравнения</param>
            <returns>Значение меньше нуля - X ближе Y к правому краю страницы. 
            0 - X равен Y. 
            Больше 0 - X дальше Y от правого края страницы</returns>
        </member>
        <member name="T:Intermech.Interfaces.Document.WriteReadXmlHelper">
            <summary>Вспомогательный класс для чтения/записи XML</summary>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadFromXml(Intermech.Interfaces.Document.IWriteReadXml,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить элемент из XML</summary>
            <param name="element">Элемент данные которого нужно загрузить</param>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadTypedElementFromXml(Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Прочитать типизированный XML элемент</summary>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Загруженный элемент</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteXmlElement(System.String,Intermech.Interfaces.Document.IWriteReadXml,System.Boolean,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Сохранить IWriteReadXml element как элемент XML</summary>
            <param name="name">Имя элемента XML</param>
            <param name="element">Сохраняемый объект</param>
            <param name="skipNull">Не записывать тэг, если element == null</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteStringDictionaryToXml(System.String,System.Collections.IDictionary,System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать текстовый словарь в XML</summary>
            <param name="elementName">Имя элемента XML</param>
            <param name="dictionary">Словарь</param>
            <param name="dicItemName">Имя элемента XML для записи словаря</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadStringDictionaryFromXml(System.Collections.IDictionary,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить текстовый словарь из XML</summary>
            <param name="dictionary">Словарь</param>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadStringDictionaryElementFromXml(System.Collections.IDictionary,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить элемент строкового словаря из XML</summary>
            <param name="dictionary">Словарь</param>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteDictionaryToXml(System.String,System.Collections.IDictionary,System.String,System.String,System.Type,System.Type,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать словарь в XML</summary>
            <param name="elementName">Имя элемента XML</param>
            <param name="dictionary">Словарь</param>
            <param name="dicItemName">Имя элемента XML для записи словаря</param>
            <param name="dicValueName">Имя элемента XML для значений записи словаря</param>
            <param name="dicKeyType">Тип ключа словаря</param>
            <param name="dicValueType">Тип значения словаря</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteDictionaryToXml(System.String,System.Collections.IDictionary,System.String,System.String,System.String,System.Collections.Generic.IList{System.Type},System.Collections.Generic.IList{System.Type},System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать словарь в XML</summary>
            <param name="elementName">Имя элемента XML</param>
            <param name="dictionary">Словарь</param>
            <param name="dicItemName">Имя элемента XML для записи словаря</param>
            <param name="dicValueName">Имя элемента XML для значений записи словаря</param>
            <param name="parentKey">Ключ в родительском словаре, если он есть</param>
            <param name="dicKeyTypes">Список типов ключей для этого и вложенных словарей. В порядке вложенности - 0 самый нижний уровень</param>
            <param name="dicValueTypes">Список типов значений для этого и вложенных словарей. В порядке вложенности - 0 самый нижний уровень</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadDictionaryFromXml(System.Collections.IDictionary,System.Type,System.Type,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить словарь из XML</summary>
            <param name="dictionary">Словарь</param>
            <param name="keyType">Тип ключа</param>
            <param name="elementType">Тип значения</param>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadDictionaryElementFromXml(System.Collections.IDictionary,System.Type,System.Type,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить элемент словаря из XML</summary>
            <param name="dictionary">Словарь</param>
            <param name="keyType">Тип ключа</param>
            <param name="elementType">Тип значения</param>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteArrayToXml(System.String,System.Collections.IList,System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать массив в XML</summary>
            <param name="elementName">Имя элемента XML</param>
            <param name="array">Массив</param>
            <param name="arrayItemName">Имя элемента массива</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadItemFromXml(System.Type,System.Boolean,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить элемент массива, списка или словаря</summary>
            <param name="itemType">Тип элемента</param>
            <param name="elementIsIWriteReadXml">Элемент типа IWriteReadXml</param>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadArrayFromXml(System.Type,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить массив из XML</summary>
            <param name="itemType">Тип элемента</param>
            <param name="readArgs">Аргументы чтения из XML</param>
            <returns>Массив</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteListToXml(System.String,System.Collections.IList,System.String,System.Xml.XmlWriter,System.Runtime.Serialization.ObjectIDGenerator)">
            <summary>Записать список в XML</summary>
            <param name="elementName">Имя элемента XML</param>
            <param name="list">Массив</param>
            <param name="listItemName">Имя элемента массива</param>
            <param name="xw">XmlWriter</param>
            <param name="objectRefId">Генератор идентификаторов</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadListFromXml(System.Collections.IList,System.Type,Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить типизированый список из XML</summary>
            <param name="list">Список</param>
            <param name="itemType">Тип значения</param>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteStringListToXml(System.String,System.Collections.Generic.List{System.String},System.String,System.Xml.XmlWriter)">
            <summary>Записать список в XML</summary>
            <param name="elementName">Имя элемента XML</param>
            <param name="list">Массив</param>
            <param name="listItemName">Имя элемента массива</param>
            <param name="xw">XmlWriter</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadStringListFromXml(System.Collections.Generic.List{System.String},Intermech.Interfaces.Document.XmlReadArgs)">
            <summary>Загрузить типизированный список из XML</summary>
            <param name="list">Список</param>
            <param name="readArgs">Аргументы чтения из XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteBase64ToCurrentXmlElement(System.IO.Stream,System.Xml.XmlWriter)">
            <summary>Записать поток как Base64 в текущий XML элемент</summary>
            <param name="stream">Поток данных</param>
            <param name="xw">XmlWriter</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.ReadBase64FromCurrentXmlElement(System.IO.Stream,System.Xml.XmlReader,System.Int32)">
            <summary>Записать поток как Base64 в текущий XML элемент</summary>
            <param name="stream">Поток данных</param>
            <param name="xw">XmlWriter</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteXmlDocument(System.String,Intermech.Interfaces.Document.IWriteReadXml,System.String)">
            <summary>Записать rootObject в XML документ</summary>
            <param name="fileName">Имя файла</param>
            <param name="rootObject">Корневой объект, который сохраняется в XML</param>
            <param name="rootElementName">Имя корневого объекта в XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteXmlDocument(System.IO.Stream,Intermech.Interfaces.Document.IWriteReadXml,System.String)">
            <summary>Записать rootObject в XML документ</summary>
            <param name="stream">Поток документа</param>
            <param name="rootObject">Корневой объект, который сохраняется в XML</param>
            <param name="rootElementName">Имя корневого объекта в XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteXmlObjectStateToBase64String(Intermech.Interfaces.Document.IWriteReadXml,System.String)">
            <summary> Записать состояние объекта, способного сохраняться в XML в строку base64 </summary>
            <param name="rootObject">Корневой объект, который сохраняется в XML</param>
            <param name="rootElementName">Имя корневого объекта в XML</param>
            <returns> Состояние объекта в виде строки содержащей xml документ преобразованый к Base64 строке </returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.WriteXmlDocument(System.Xml.XmlWriter,Intermech.Interfaces.Document.IWriteReadXml,System.String)">
            <summary>Записать rootObject в XML документ</summary>
            <param name="xw">XmlTextWriter</param>
            <param name="rootObject">Корневой объект, который сохраняется в XML</param>
            <param name="rootElementName">Имя корневого объекта в XML</param>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.LoadFromXmlDocument(Intermech.Interfaces.IUserSession,Intermech.Interfaces.Document.XmlReadArgs,System.String,Intermech.Interfaces.Document.IWriteReadXml,System.String)">
            <summary>Загрузить объект из XML документа</summary>
            <param name="fileName">Имя файла</param>
            <param name="rootObject">Экземпляр объекта</param>
            <param name="rootElementName">Имя объекта в XML</param>
            <returns>true, если объект был найден в документе</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.LoadFromXmlDocument(Intermech.Interfaces.IUserSession,System.IO.Stream,Intermech.Interfaces.Document.IWriteReadXml,System.String)">
            <summary>Загрузить объект из XML документа</summary>
            <param name="stream">Поток документа</param>
            <param name="rootObject">Экземпляр объекта</param>
            <param name="rootElementName">Имя объекта в XML</param>
            <returns>true, если объект был найден в документе</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.LoadFromXmlDocument(Intermech.Interfaces.IUserSession,System.Xml.XmlReader,Intermech.Interfaces.Document.IWriteReadXml,System.String)">
            <summary>Загрузить объект из XML документа</summary>
            <param name="xr">XmlReader</param>
            <param name="iUserSession">пользовательская сессия ддля подгрузки данных</param>
            <param name="rootObject">Экземпляр объекта</param>
            <param name="rootElementName">Имя объекта в XML</param>
            <returns>true, если объект был найден в документе</returns>
        </member>
        <member name="M:Intermech.Interfaces.Document.WriteReadXmlHelper.LoadXmlObjectStateFromBase64String(Intermech.Interfaces.IUserSession,Intermech.Interfaces.Document.IWriteReadXml,System.String,System.String)">
            <summary> Прочитать состояние объекта, способного читать совоё состояние из xml, из строки base64 </summary>
            <param name="rootObject">Корневой объект, состояние которого читается из строки </param>
            <param name="rootElementName">Имя корневого объекта в XML</param>
            <returns> Состояние объекта в виде строки содержащей xml документ преобразованый к Base64 строке </returns>
        </member>
        <member name="P:Intermech.Document.RtfEditorCore.CBlk.CurCharIsStrikedOut">
            <summary>Имеет ли позиция вставки стиль перечеркнутого текста</summary>
        </member>
        <member name="P:Intermech.Document.RtfEditorCore.CBlk.CurCharIsDoubleStrikedOut">
            <summary>Имеет ли текущая позиция стиль перечеркнутого двойной линией текста</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CBlk.TerDeleteAll(System.Boolean)">
            <summary>Удалить весь текст</summary>
            <param name="repaint">Перерисовать (НЕ ИСПОЛЬЗУЕТСЯ)</param>
            <returns>true, если успешно</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.PaintTer">
            <summary>Общий метод отрисовки документа</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.TerQuickRepaint">
            <summary>Быстро обновить изображение</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.TerRepaint(System.Boolean)">
            <summary>Перерисовать</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.RepaintTer(System.Nullable{Intermech.Drawing.Common.UniRectangle})">
            <summary>Перерисовать</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.SetTerWindowOrg">
            <summary>Установить положение контрола редактора</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.SetYOrigin(System.Int32)">
            <summary>Установить положение по Y контрола редактора</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.GetWinDimension">
            <summary>Обновить размеры окна</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.RotateRectangle(Intermech.Drawing.Common.UniRectangle,System.Int32)">
            <summary>Повернуть прямоугольник с текстом</summary>
            <param name="rect"></param>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.ResetTransform(Intermech.Drawing.Common.IUniGraphics)">
            <summary>Сбросить матрицу трансформации</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.PaintFrames(Intermech.Drawing.Common.IUniGraphics,System.Int32)">
            <summary>Нарисовать фреймы</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.PaintRows(Intermech.Drawing.Common.IUniGraphics,System.Int32,System.Int32)">
            <summary>Нарисовать строки</summary>
            <param name="gr"></param>
            <param name="FirstRow"></param>
            <param name="LastRow"></param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.TerTextOut(Intermech.Drawing.Common.IUniGraphics,System.Int32,System.Int32,Intermech.Drawing.Common.RECT,System.Char[],System.Int32,System.UInt16[],System.Int32)">
            <summary>Нарисовать текст</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.DisplayText(Intermech.Drawing.Common.IUniGraphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Char)">
            <summary>Нарисовать текст</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.OurExtTextOut(Intermech.Drawing.Common.IUniGraphics,System.Int32,System.Int32,System.Int32,Intermech.Drawing.Common.RECT,System.Char[],System.Int32,System.Int32,System.Int32[])">
            <summary>Нарисовать текст</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.SetColor(Intermech.Drawing.Common.IUniGraphics,System.Char,System.Int32)">
            <summary>Установить текущий цвет для отрисовки</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.SetFont(Intermech.Drawing.Common.IUniGraphics,System.UInt16,System.Char)">
            <summary>Установить текущий фонт для отрисовки</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.DrawImageOnBufferImage(Intermech.Drawing.Common.IUniGraphics,Intermech.Drawing.Common.IUniImage,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Метод копирования битмапа через GDI WIN32 
            </summary>
            <param name="gr"></param>
            <param name="bufBitmap"></param>
            <param name="scrX"></param>
            <param name="scrY"></param>
            <param name="srcWidth"></param>
            <param name="scrHeight"></param>
            <param name="destX"></param>
            <param name="destY"></param>
            <param name="destWidth"></param>
            <param name="destHeight"></param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CDraw.SelectTerTextLines(System.Int32,System.Int32,System.Boolean)">
            <summary>Выделить строки</summary>
            <param name="FirstLine">Первая строка</param>
            <param name="LastLine">Последняя строка</param>
            <param name="repaint">Перерисовать</param>
            <returns>true, если без ошибок</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CFct.AbsToRowCol(System.Int32,System.Int32@,System.Int32@,System.Boolean,System.Boolean)">
            <summary>Преобразовать абсолютную (сквозную) позицию в строке текста в строку и столбец текста</summary>
            <param name="abs">Абсолютная позиция в строке текста</param>
            <param name="row">Строка</param>
            <param name="col">Столбец</param>
            <param name="internalPos">Преобразовать в позицию внутреннего представления строки с учётом замен. 
            Иначе в позицию в оригинальной строке до замен формул и спецсимволов</param>
            <param name="scanAllChars">Принудительно проверять весь текст, 
            для поиска переносов строки, которые находятся не в конце строки</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CFct.RowColToAbs(System.Int32,System.Int32,System.Boolean)">
            <summary>Преобразовать строку столбец в абсолютные координаты в строке</summary>
            <param name="row">Строка</param>
            <param name="col">Столбец</param>
            <param name="internalPos">Преобразовать в позицию внутреннего представления строки с учётом замен. 
            Иначе в позицию в оригинальной строке до замен формул и спецсимволов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CFnt.CreateGlbFont(Intermech.Drawing.Common.LOGFONT,Intermech.Drawing.Common.IUniGraphics)">
            <summary>
            Создать шрифт в глобальном статическом кэше, доступном между экзеплярами класса
            </summary>
            <param name="lFont"></param>
            <param name="gr"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CFnt.DeletePrtFont(System.Int32)">
            <summary>очистка e.PrtFont[idx]</summary>
            <param name="idx">индекс в массиве</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CFnt.DeleteTerFont(System.Int32)">
            <summary>очистка e.PrtFont[idx]</summary>
            <param name="idx">индекс в массиве</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CFnt.TerCreateFont3(System.Int32,System.Boolean,System.String,System.Int32,System.Int32,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniColor,Intermech.Drawing.Common.UniColor,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Создать шрифт</summary>
            <param name="ReuseId">Использовать существующий id с новой информацией. -1 чтобы создать новый id.</param>
            <param name="shared">Если true, редактор пытается найти шрифт с теми же параметрами и вернёт его id, иначе создаст новый. true допустимо только при отрицательном ReuseId</param>
            <param name="NewTypeFace">Гарнитура шрифта</param>
            <param name="NewPointSize">Размер в поинтах для положительного значения и twips для отрицательного</param>
            <param name="NewStyle">Флаги стиль</param>
            <param name="NewTextColor">Цвет текста</param>
            <param name="NewTextBkColor">Цвет фона</param>
            <param name="NewULineColor">Цвет подчёркивания</param>
            <param name="NewFieldId">Идентификатор поля. 0 для значения по умолчанию</param>
            <param name="NewAuxId">Идентификатор назначенный приложением. 0 для значения по умолчанию</param>
            <param name="NewCharStyId">Идентификатор стиля шрифта. 0 для стиля "Обычный". 1 для значения по умолчанию</param>
            <param name="NewParaStyId">Идентификатор стиля параграфа. 0 для значения по умолчанию</param>
            <param name="NewExpand">Расширение ширины символов в twips. 0 для значения по умолчанию</param>
            <param name="NewCharSet">Кодировка символов</param>
            <param name="NewLang">Язык</param>
            <param name="NewTextAngle">Угол поворота текста</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CFnt.TerGetTextColor(System.Int32,Intermech.Drawing.Common.UniColor@,Intermech.Drawing.Common.UniColor@,Intermech.Drawing.Common.UniColor@)">
            <summary>
            CHANGED Добавил ULineColor
            </summary>
            <param name="FontId"></param>
            <param name="TextColor"></param>
            <param name="TextBackColor"></param>
            <param name="ULineColor"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPage.Repaginate(System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>Разбивка по страницам</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPar.ApplyParaStyles(System.Int32,System.Boolean)">
            <summary>Применить стиль параграфа</summary>
            <param name="CurStyle"></param>
            <param name="applyCharStyle">Применить стиль символов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPar.GetParaRange2(System.Int32@,System.Int32@)">
            <summary>Возвращает диапазон выделенных параграфов в строках. 
            В отличии от GetParaRange не сбрасывает выделение нормализацией</summary>
            <param name="StartLine"></param>
            <param name="EndLine"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPar.EditStyle(System.Boolean,System.Int32,System.String,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Редактировать стиль</summary>
            <param name="start"></param>
            <param name="name"></param>
            <param name="CreateNew"></param>
            <param name="type"></param>
            <param name="paragraphStyleOnly">Редактировать только стиль параграфа</param>
            <param name="repaint"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPar.SetStyleParamsFromFont(System.Int32,System.Int32)">
            <summary>Установить параметры стиля в соответствии со шрифтом</summary>
            <param name="styleID">Идентификатор стиля</param>
            <param name="fontID">Идентификатор шрифта</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPar.ScaleEditorFontSize(System.Int32,System.Single)">
            <summary>
            Пропорционально изменить размер шрифта выбранного шрифта редактора или во всех шрифтах
            </summary>
            <param name="fontID">id шрифта или -1 для всех</param>
            <param name="scaleFactor">коэффициент</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPos.AbsToRowCol(System.Int32,System.Int32@,System.Int32@,System.Boolean,System.Boolean)">
            <summary>Преобразовать абсолютную (сквозную) позицию в строке текста в строку и столбец текста</summary>
            <param name="abs">Абсолютная позиция в строке текста</param>
            <param name="row">Строка</param>
            <param name="col">Столбец</param>
            <param name="internalPos">Преобразовать в позицию внутреннего представления строки с учётом замен. 
            Иначе в позицию в оригинальной строке до замен формул и спецсимволов</param>
            <param name="scanAllChars">Принудительно проверять весь текст, 
            для поиска переносов строки, которые находятся не в конце строки</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPos.RowColToAbs(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Преобразовать строку столбец в абсолютные координаты в строке</summary>
            <param name="row">Строка</param>
            <param name="col">Столбец</param>
            <param name="internalPos">Преобразовать в позицию внутреннего представления строки с учётом замен. 
            Иначе в позицию в оригинальной строке до замен формул и спецсимволов</param>
            <param name="scanAllChars">Принудительно проверять весь текст, 
            для поиска переносов строки, которые находятся не в конце строки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPos.TerAbsToRowCol(System.Int32,System.Int32@,System.Int32@,System.Boolean,System.Boolean)">
            <summary>Преобразовать абсолютную (сквозную) позицию в строке текста в строку и столбец текста</summary>
            <param name="abs">Абсолютная позиция в строке текста</param>
            <param name="row">Строка</param>
            <param name="col">Столбец</param>
            <param name="internalPos">Преобразовать в позицию внутреннего представления строки с учётом замен. 
            Иначе в позицию в оригинальной строке до замен формул и спецсимволов</param>
            <param name="scanAllChars">Принудительно проверять весь текст, 
            для поиска переносов строки, которые находятся не в конце строки</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CPos.TerRowColToAbs(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Преобразовать строку столбец в абсолютные координаты в строке</summary>
            <param name="row">Строка</param>
            <param name="col">Столбец</param>
            <param name="internalPos">Преобразовать в позицию внутреннего представления строки с учётом замен. 
            Иначе в позицию в оригинальной строке до замен формул и спецсимволов</param>
            <param name="scanAllChars">Принудительно проверять весь текст, 
            для поиска переносов строки, которые находятся не в конце строки</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CSec.TerSetSectPageSize(System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>Установить размер страницы</summary>
            <param name="sect">Раздел (-1 - все разделы, -2 - текущий раздел)</param>
            <param name="pageWidth">Ширина страницы в дюймах</param>
            <param name="pageHeight">Высота страницы в дюймах</param>
            <param name="repaint">Перерисовать</param>
            <returns>false, если возникли ошибки</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.CWrap.WrapParseBuffer(System.Int32)">
            <summary>Разбор буфера при переносе</summary>
            <param name="StartLine"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.Reset">
            <summary>
            ADDED Сбрасывание настроек для повторной печати
            </summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.TerAbsToRowCol(System.Int32,System.Int32@,System.Int32@,System.Boolean,System.Boolean)">
            <summary>Преобразовать абсолютную (сквозную) позицию в строке текста в строку и столбец текста</summary>
            <param name="abs">Абсолютная позиция в строке текста</param>
            <param name="row">Строка</param>
            <param name="col">Столбец</param>
            <param name="internalPos">Преобразовать в позицию внутреннего представления строки с учётом замен. 
            Иначе в позицию в оригинальной строке до замен формул и спецсимволов</param>
            <param name="scanAllChars">Принудительно проверять весь текст, 
            для поиска переносов строки, которые находятся не в конце строки</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.TerGetTextColor(System.Int32,Intermech.Drawing.Common.UniColor@,Intermech.Drawing.Common.UniColor@,Intermech.Drawing.Common.UniColor@)">
            <summary>
            CHANGED Добавил ULineColor
            </summary>
            <param name="FontId"></param>
            <param name="TextColor"></param>
            <param name="TextBackColor"></param>
            <param name="ulineColor"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.TerRowColToAbs(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Преобразовать строку столбец в абсолютные координаты в строке</summary>
            <param name="row">Строка</param>
            <param name="col">Столбец</param>
            <param name="internalPos">Преобразовать в позицию внутреннего представления строки с учётом замен. 
            Иначе в позицию в оригинальной строке до замен формул и спецсимволов</param>
            <param name="scanAllChars">Принудительно проверять весь текст, 
            для поиска переносов строки, которые находятся не в конце строки</param>
            <returns></returns>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.AllTextAngle">
            <summary>Замороженный вариант поворота текста</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.IsPlaneText">
            <summary>Только для внутреннего пользования! Текстбокс содержит только простой текст</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.ProtectedFirstCharCount">
            <summary>Количество заблокированных для редактирования первых символов</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.ProtectedFirstRealCharCount">
            <summary>Количество заблокированных для редактирования первых символов с учётом замен формул</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.ProtectedEndCharCount">
            <summary>Количество заблокированных для редактирования последних символов</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.ProtectedEndRealCharCount">
            <summary>Количество заблокированных для редактирования последних символов с учётом замен формул</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.HasTextReplaces">
            <summary>В тексте были произведены замены спецсимволов и формул</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.ReplaceDefaultFont(System.Int32)">
            <summary>Заменить шрифт по умолчанию. Пользоваться только в режиме CellRenderMode!</summary>
            <param name="fontID">Шрифт по умолчанию</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.SuspendWordWrap">
            <summary>Приостановить разбивку по строкам</summary>
            <returns>Старое значение WordWrap</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.ResumeWordWrap">
            <summary>Включить разбиение</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.SetStyleParamsFromFont(System.Int32,System.Int32)">
            <summary>Установить параметры стиля в соответсвии со шрифтом</summary>
            <param name="styleID">Идентификатор стиля</param>
            <param name="fontID">Идентификатор шрифта</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.ScaleEditorFontSize(System.Int32,System.Single)">
            <summary>
            Пропорционально изменить размер шрифта редактора или во всех шрифтах
            </summary>
            <param name="styleID">id шрифта или -1 для всех</param>
            <param name="scaleFactor">коэффициент</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.SelectAll(System.Boolean)">
            <summary>Выделить весь текст</summary>
            <param name="repaint">Перерисовать</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.TerDeleteAll(System.Boolean)">
            <summary>Удалить весь текст</summary>
            <param name="repaint">Перерисовать</param>
            <returns>true, если успешно</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.SelectTerTextLines(System.Int32,System.Int32,System.Boolean)">
            <summary>Выделить строки</summary>
            <param name="FirstLine">Первая строка</param>
            <param name="LastLine">Последняя строка</param>
            <param name="repaint">Перерисовать</param>
            <returns>true, если без ошибок</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.IsProtectedZone(System.Int32,System.Boolean)">
            <summary>Указанная позиция находится в защищенной зоне</summary>
            <param name="absPosition">Позиция</param>
            <param name="inclusive">Включая позицию перед блоком</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.IsProtectedZone(System.Int32,System.Boolean,System.Boolean@)">
            <summary>Указанная позиция находится в защищенной зоне</summary>
            <param name="absPosition">Позиция</param>
            <param name="inclusive">Включая позицию перед блоком</param>
            <returns></returns>
        </member>
        <member name="P:Intermech.Document.RtfEditorCore.ImRtfEditorCore.SelectionInProtectedZone">
            <summary>Выделение попадает в защищенную от редактирования зону</summary>
        </member>
        <member name="P:Intermech.Document.RtfEditorCore.ImRtfEditorCore.CurPositionInProtectedZone">
            <summary>Текущая позиция в защищённой от редактирования зоне</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.SetTextTags(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>Назначить тэги на все символы заданного диапазона</summary>
            <param name="startLine">Первая строка. Если значение меньше 0, то с текущей позиции</param>
            <param name="startCol">Первый столбец</param>
            <param name="endLine">Последняя строка</param>
            <param name="endCol">Последний столбец</param>
            <param name="type">Тип тэга</param>
            <param name="name">Имя тэга</param>
            <param name="AuxText">Дополнительный текст тэга</param>
            <param name="AuxInt">Дополнительное целое число тэга</param>
            <returns>Возвращает идентификатор тэга</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.SetTextTags(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Boolean,System.Int32@)">
            <summary>Назначить тэги на все символы заданного диапазона</summary>
            <param name="startLine">Первая строка. Если значение меньше 0, то с текущей позиции</param>
            <param name="startCol">Первый столбец</param>
            <param name="count">Количество символов (абзац считается за 2!). Если значение -1, то до конца текста</param>
            <param name="type">Тип тэга</param>
            <param name="name">Имя тэга</param>
            <param name="AuxText">Дополнительный текст тэга</param>
            <param name="AuxInt">Дополнительное целое число тэга</param>
            <param name="expandReplacedChar">Проверять тэг TERTAG_REPLACEDCHAR и учитывать замену</param>
            <param name="realCharTagCount">Количество символов с учётом тэга TERTAG_REPLACEDCHAR и замены</param>
            <returns>Возвращает идентификатор тэга</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.HasTextTags(System.Int32,System.String)">
            <summary>Есть ли в тексте заданые тэг</summary>
            <param name="type">Тип тэга</param>
            <param name="name">Имя тэга</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.DeleteTextTags(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Удалить тэги со всех символов заданного диапазона</summary>
            <param name="startLine">Первая строка. Если значение меньше 0, то с текущей позиции</param>
            <param name="startCol">Первый столбец</param>
            <param name="endLine">Последняя строка</param>
            <param name="endCol">Последний столбец</param>
            <param name="type">Тип тэга</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.DeleteTextTags(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>Удалить тэги со всех символов заданного диапазона</summary>
            <param name="startLine">Первая строка. Если значение меньше 0, то с текущей позиции</param>
            <param name="startCol">Первый столбец</param>
            <param name="count">Количество символов (абзац считается за 2!). Если значение -1, то до конца текста</param>
            <param name="type">Тип тэга</param>
            <param name="expandReplacedChar">Проверять тэг TERTAG_REPLACEDCHAR и учитывать замену</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.CheckTextTag(System.Int32,System.Int32,System.Int32)">
            <summary>Проверить, назначен ли тэг данного типа на позицию текста</summary>
            <param name="line">Строка</param>
            <param name="col">Столбец</param>
            <param name="type">Тип тэга</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.CheckTextTag(System.Int32,System.Int32,System.Collections.Generic.IList{System.Int32})">
            <summary>Проверить, назначен ли тэг данного типа на позицию текста</summary>
            <param name="line">Строка</param>
            <param name="col">Столбец</param>
            <param name="types">Типы тэгов</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.GetTextTag(System.Int32,System.Int32,System.Int32)">
            <summary>Получить тэг данного типа для данной позиции текста</summary>
            <param name="line">Строка, если -1, то берётся текущая позиция редактора</param>
            <param name="col">Столбец</param>
            <param name="type">Тип тэга</param>
            <returns>Возвращает id тэга, если он есть, или -1 если тэга заданного типа нет</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.GetTextTag(System.Int32,System.Int32,System.Collections.Generic.IList{System.Int32})">
            <summary>Получить тэг из данного списка типов для данной позиции текста</summary>
            <param name="line">Строка, если -1, то берётся текущая позиция редактора</param>
            <param name="col">Столбец</param>
            <param name="types">Типы тэгов</param>
            <returns>Возвращает id тэга, если он есть, или -1 если тэга заданного типа нет</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.CheckEndlessLoopTags(System.Int32)">
            <summary>Вспомогательный метод для отлова зацикленных ссылок в тагах</summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.GetTotalChars(System.Boolean)">
            <summary>Получить общее количество символов в документе</summary>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.DeleteLastEndLine(System.String)">
            <summary>Удалить лишний перевод строки в конце текста</summary>
            <param name="txt">Простой текст (не RTF!)</param>
            <returns>Подчищенный текст</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.DeleteLastEndLineInRTF(System.String)">
            <summary>Удалить лишний перевод строки в конце текста</summary>
            <param name="">Текст</param>
            <returns>Подчищенный текст</returns>
        </member>
        <member name="P:Intermech.Document.RtfEditorCore.ImRtfEditorCore.RtfText">
            <summary>Текст редактора с форматированием в формате RTF</summary>
        </member>
        <member name="P:Intermech.Document.RtfEditorCore.ImRtfEditorCore.PlaneText">
            <summary>Текст редактора без форматирования</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.GetPageLastLine(System.Int32)">
            <summary>Получить последнюю строку страницы</summary>
            <param name="page">Номер страницы</param>
            <returns>Номер последней строки страницы</returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.GetTextWidth(System.Int32)">
            <summary>Получить ширину (twips) текста на странице</summary>
            <param name="page">Номер страницы. Если -1, то для всего текста</param>
            <returns></returns>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.ImPrintOnePage(Intermech.Drawing.Common.IUniGraphics,Intermech.Drawing.Common.UniRectangleF)">
            <summary>
            Печать страницы
            </summary>
            <param name="gr">UniGraphics</param>
            <param name="rect">Область печати в Twips</param>
        </member>
        <member name="E:Intermech.Document.RtfEditorCore.ImRtfEditorCore.UndoSaved">
            <summary>Событие возникает при сохранение в Undo информации</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.ImRtfEditorCore.OnUndoSaved(System.EventArgs)">
            <summary>Обработка события UndoSaved</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.PvExtHeight">
            <summary>Размер области печати в Twips</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.PvExtWidth">
            <summary>Размер области печати в Twips</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.PvVpHeight">
            <summary>Размер области печати в пикселах</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.PvVpWidth">
            <summary>Размер области печати в пикселах</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.PvX">
            <summary>Координаты области печати в пикселах</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.ImRtfEditorCore.PvY">
            <summary>Координаты области печати в пикселах</summary>
        </member>
        <member name="T:Intermech.Document.RtfEditorCore.DisposeInvoker">
            <summary>Вспомогательный делегат для вызова Dispose из других потоков</summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Intermech.Document.RtfEditorCore.PreprocessEventHandler">
            <summary>Делегат предварительной обработки простого события</summary>
            <param name="sender">Отправитель события</param>
            <param name="e">Аргументы события</param>
            <param name="cancelEventArgs">Аргументы предварительной обработки</param>
        </member>
        <member name="T:Intermech.Document.RtfEditorCore.SelectionBlock">
            <summary>Координаты блока текста для выделения</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.SelectionBlock.DistributedTextStartPos">
            <summary>Старт фрагмента в потоке разбитого по страницам текста</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.SelectionBlock.StartPos">
            <summary>Первый символ</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.SelectionBlock.EndPos">
            <summary>Последний символ</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.SelectionBlock.CurPos">
            <summary>Положение каретки</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.SelectionBlock.HilightType">
            <summary>Тип выделения</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.SelectionBlock.PictureClicked">
            <summary>Выбрана картинка</summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.SelectionBlock.InternalEditorPos">
            <summary>Внутренняя позиция для редактора, или внешняя для текста в документе (без учёта замен формул на картинки в редакторе)</summary>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.SelectionBlock.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>Конструктор</summary>
            <param name="distributedTextStartPos">Старт фрагмента в потоке разбитого по страницам текста</param>
            <param name="startPos">Первый символ выделения</param>
            <param name="endPos">Последний символ выделения</param>
            <param name="curPos">Положение каретки</param>
            <param name="hilightType">Тип выделения</param>
            <param name="pictureClicked">Выбрана картинка</param>
            <param name="internalEditorPos">Внутренняя позиция для редактора, или внешняя для текста в документе (без учёта замен формул на картинки в редакторе)</param>
        </member>
        <member name="M:Intermech.Document.RtfEditorCore.TextPosition.CompareTo(Intermech.Document.RtfEditorCore.TextPosition)">
            <summary>Сравнить эту позицию с другой позицией</summary>
            <param name="other">Другая позиция</param>
            <returns>Возвращает значение меньше нуля, если этот экземпляр меньше, чем аргумент.
            Возвращает значение равное нулю, если этот экземпляр равен аргументу.
            Возвращает значение больше нуля, если этот экземпляр больше, чем аргумент.</returns>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.tc.HYPH_CHAR">
            <summary>
            Символ мягкого переноса
            Используется управляющий код ASCII 06 - "ACKNOWLEDGE" вышедший из употребления.
            </summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.tc.TERTAG_PROTECTED">
            <summary>
            Защищённый текст
            </summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.tc.TERTAG_REPLACEDCHAR">
            <summary>
            Заменённый символ
            </summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.tc.TERTAG_AUTOREPLACEDCHAR">
            <summary>
            Автоматически заменённый символ
            </summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.tc.TERTAG_MANUALREPLACEDCHAR">
            <summary>
            Вручную заменённый символ
            </summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.tc.TERTAG_FORMULAFORMAT">
            <summary>
            Стиль формулы
            </summary>
        </member>
        <member name="F:Intermech.Document.RtfEditorCore.tc.StrFont.ExtLead">
            <summary>
            tmExternalLeading
            </summary>
        </member>
    </members>
</doc>
